{"sample_id": 6019740, "full_name": "lessthanoptimal/BoofCV", "commit_id": "ffb204fd753b92df3a82d37720561e9c89e019d2", "src_method": "public void process(T gray, GrayU8 binary) {\n\t\tif( verbose ) System.out.println(\"ENTER  DetectPolygonFromContour.process()\");\n\t\tInputSanityCheck.checkSameShape(binary, gray);\n\n\t\tif( imageWidth != gray.width || imageHeight != gray.height )\n\t\t\tconfigure(gray.width,gray.height);\n\n\t\t// reset storage for output. Call reset individually here to ensure that all references\n\t\t// are nulled from last time\n\t\tfor (int i = 0; i < foundInfo.size; i++) {\n\t\t\tfoundInfo.get(i).reset();\n\t\t}\n\t\tfoundInfo.reset();\n\n\t\tif( contourEdgeIntensity != null )\n\t\t\tcontourEdgeIntensity.setImage(gray);\n\n\t\tlong time0 = System.nanoTime();\n\n\t\t// find all the contours\n\t\tcontourFinder.process(binary);\n\n\t\tlong time1 = System.nanoTime();\n\n\t\t// Using the contours find the polygons\n\t\tfindCandidateShapes();\n\n\t\tlong time2 = System.nanoTime();\n\n\t\tdouble a = (time1-time0)*1e-6;\n\t\tdouble b = (time2-time1)*1e-6;\n\n\t\tmilliContour.update(a);\n\t\tmilliShapes.update(b);\n\n\t\tif( verbose ) System.out.println(\"EXIT  DetectPolygonFromContour.process()\");\n\t}", "dst_method": "public void process(T gray, GrayU8 binary) {\n\t\tif( verbose ) System.out.println(\"ENTER  DetectPolygonFromContour.process()\");\n\n\t\tif( contourPadded != null && !contourPadded.isCreatePaddedCopy() ) {\n\t\t\tint padding = 2;\n\t\t\tif( gray.width+padding != binary.width || gray.height+padding != binary.height ) {\n\t\t\t\tthrow new IllegalArgumentException(\"Including padding, expected a binary image with shape \"\n\t\t\t\t+ (gray.width+padding)+\"x\"+(gray.height+padding));\n\t\t\t}\n\t\t} else {\n\t\t\tInputSanityCheck.checkSameShape(binary, gray);\n\t\t}\n\t\tif( imageWidth != gray.width || imageHeight != gray.height )\n\t\t\tconfigure(gray.width,gray.height);\n\n\t\t// reset storage for output. Call reset individually here to ensure that all references\n\t\t// are nulled from last time\n\t\tfor (int i = 0; i < foundInfo.size; i++) {\n\t\t\tfoundInfo.get(i).reset();\n\t\t}\n\t\tfoundInfo.reset();\n\n\t\tif( contourEdgeIntensity != null )\n\t\t\tcontourEdgeIntensity.setImage(gray);\n\n\t\tlong time0 = System.nanoTime();\n\n\t\t// find all the contours\n\t\tcontourFinder.process(binary);\n\n\t\tlong time1 = System.nanoTime();\n\n\t\t// Using the contours find the polygons\n\t\tfindCandidateShapes();\n\n\t\tlong time2 = System.nanoTime();\n\n\t\tdouble a = (time1-time0)*1e-6;\n\t\tdouble b = (time2-time1)*1e-6;\n\n\t\tmilliContour.update(a);\n\t\tmilliShapes.update(b);\n\n\t\tif( verbose ) System.out.println(\"EXIT  DetectPolygonFromContour.process()\");\n\t}", "src_javadoc": "Examines the undistorted gray scake input image for squares.", "dst_javadoc": "Examines the undistorted gray scale input image for squares. If p", "act_javadoc": "Examines the undistorted gray scale input image for squares and checks for padding in the binary image before processing it. Then, it finds all the contours and uses them to identify candidate shapes within the input image."}
{"sample_id": 5075805, "full_name": "gridgain/gridgain", "commit_id": "45498109a47d740a4a4ee8aa9b312e53d095a16f", "src_method": "@ApiOperation(value = \"Save cluster basic configuration.\")\n    @PutMapping(path = \"/clusters/basic\", consumes = APPLICATION_JSON_VALUE)\n    public ResponseEntity<Void> saveBasicCluster(\n        @AuthenticationPrincipal Account acc,\n        @RequestHeader(value = \"demoMode\", defaultValue = \"false\") boolean demo,\n        @RequestBody JsonObject changedItems\n    ) {\n        cfgsSrv.saveBasicCluster(new ConfigurationKey(acc.getId(), demo), changedItems);\n\n        return ResponseEntity.ok().build();\n    }", "dst_method": "@PutMapping(path = \"/clusters/basic\", consumes = APPLICATION_JSON_VALUE)\n    public ResponseEntity<Void> saveBasicCluster(\n        @AuthenticationPrincipal Account acc,\n        @RequestHeader(value = \"demoMode\", defaultValue = \"false\") boolean demo,\n        @RequestBody JsonObject changedItems\n    ) {\n        cfgsSrv.saveBasicCluster(new ConfigurationKey(acc.getId(), demo), changedItems);\n\n        return ResponseEntity.ok().build();\n    }", "src_javadoc": "Save basic clusters.", "dst_javadoc": "Save cluster basic configuration.", "act_javadoc": "Save cluster basic configuration."}
