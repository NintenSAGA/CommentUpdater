{"SampleId": 5075805, "Origin": "Save basic clusters.", "Reference": "Save cluster basic configuration.", "LLMCandidates": ["Saves the basic configuration of a cluster.", "Saves basic cluster configuration.", "Saves basic cluster configuration.", "Saves basic cluster configuration.", "Saves basic cluster configuration."]}
{"SampleId": 668963, "Origin": "Configure a sslConfig for the server using the legacy configuration", "Reference": "Configure a SSLConfig.Builder for the server using the legacy configuration", "LLMCandidates": ["Configures an SSLConfig.Builder for the server using the legacy configuration.", "Configures an SSLConfig.Builder for the server using the legacy configuration.", "Configures an SSLConfig.Builder for the server using the legacy configuration.", "Configures an SSLConfig.Builder for the server using the legacy configuration.", "Configures an SSLConfig.Builder object for the server using the legacy configuration."]}
{"SampleId": 5425047, "Origin": "If the wrapping fails,\nthen null is returned.", "Reference": "If wrapping fails, returns null.", "LLMCandidates": ["If the wrapping fails, or an exception occurs, null is returned.", "If the wrapping fails, null is returned if an exception is encountered during the process.", "If the wrapping fails, null is returned if an exception is encountered during the process.", "If the wrapping fails, null is returned if the object is not a JSONObject, JSONArray, or NULL.", "If the wrapping fails, null is returned if an exception is encountered during the process."]}
{"SampleId": 2217833, "Origin": "Test of npara method, of class GeometricDistribution.", "Reference": "Test of length method, of class GeometricDistribution.", "LLMCandidates": ["Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution."]}
{"SampleId": 4708521, "Origin": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL", "Reference": "Bui (2015) \"CacheDiff: Fast Random Sampling\" URL", "LLMCandidates": ["Fixed comparison issue in the conditional statement for swapping values based on index_rand being equal to iObj.", "Modified loop condition to ensure correct comparison of the randomly selected index with the last element index.", "Modified loop condition to ensure correct comparison of the randomly selected index with the last element index.", "Fixed typo in comparison operator (equals instead of ==), and added clarification regarding the handling of the last element during shuffling.", "Adjusted comparison operator for last element selection in the Fisher-Yates shuffle."]}
{"SampleId": 339279, "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the search\nresult.", "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search\nresult.", "LLMCandidates": ["If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, the returned value of\n{@link LibraryResult#getMediaItems()} will contain the search result.", "If it's successfully completed,  {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed,  {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, the returned value will be a\n{@link LibraryResult} containing the search result."]}
{"SampleId": 5629914, "Origin": "Sets the options.", "Reference": "Set the options.", "LLMCandidates": ["Sets the options using the provided list.", "Sets the options on the Builder instance.", "Sets the options using the provided list.", "Sets the options using the provided list.", "Sets the options through the provided list."]}
{"SampleId": 2996629, "Origin": "Convenience method to get custom install file", "Reference": "Convenience method to get custom installation script", "LLMCandidates": ["Convenience method to load installation script from either absolute path or classpath.", "Convenience method to load installation script from either absolute path or classpath.", "Convenience method to load installation script from either the absolute path or classpath.", "Convenience method to load the installation script from either the classpath or an absolute path.", "Convenience method to load the installation script from either the classpath or an absolute path."]}
{"SampleId": 5629994, "Origin": "Sets the confidence.", "Reference": "Set the confidence.", "LLMCandidates": ["Sets the confidence value on the Builder instance.", "Sets the confidence value for the Builder instance.", "Sets the confidence value for the Builder instance.", "Sets the confidence value for the Builder instance.", "Sets the confidence value for the Builder instance."]}
{"SampleId": 3992375, "Origin": "Request an update of the current cluster metadata info, return the current version before the update", "Reference": "Request an update of the current cluster metadata info, return the current updateVersion before the update", "LLMCandidates": ["Requests an update of the current cluster metadata info, return the updated version after the update.", "Returns the updated version of the cluster metadata info after triggering an update request.", "Requests an update of the current cluster metadata info, return the updated version after the update.", "Requests an update of the current cluster metadata info, return the updated version after the update.", "Request an update of the current cluster metadata info, return the updated version after the update."]}
{"SampleId": 570076, "Origin": "Gets the full path from a full filename, which is the prefix + path.", "Reference": "Gets the full path from a full fileName, which is the prefix + path.", "LLMCandidates": ["Retrieves the full path from a filename, including the prefix.", "Gets the full path from a filename, which is the prefix combined with the path.", "Gets the full path from a filename, which is the prefix plus path.", "Gets the full path from a file name, which is the prefix + path.", "Retrieves the full path from a filename, including the prefix."]}
{"SampleId": 5455336, "Origin": "Unlinks interior Node p with predecessor trail.", "Reference": "Unlinks interior Node p with predecessor pred.", "LLMCandidates": ["Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred."]}
{"SampleId": 6165700, "Origin": "Create a new client with the given connection string.", "Reference": "Create a new client with the given client settings.", "LLMCandidates": ["Creates a new client using the provided settings.", "Creates a MongoClient instance using the provided settings object.", "Creates a MongoClient instance using the provided settings object.", "Creates a MongoClient instance using the provided settings.", "Creates a MongoClient instance using the provided settings."]}
{"SampleId": 5062276, "Origin": "The buffer resets\nafter this method is called, so this method should only be called once per BlobDescriptor.", "Reference": "The buffer\nresets after this method is called, so this method should only be called once per computation.", "LLMCandidates": ["The buffer is reset after this method is called, so this method should only be called once per BlobDescriptor.", "The buffer is reset after this method is called, so this method should only be called once per BlobDescriptor.", "The digest is computed after this method is called, so it should only be called once per BlobDescriptor.", "This method now computes the digest and updates internal state, but does not produce a BlobDescriptor.", "This method now computes the digest and updates internal state variables."]}
{"SampleId": 336204, "Origin": "Sets the host's {@link OnBackPressedDispatcherOwner}.", "Reference": "Sets the host's {@link OnBackPressedDispatcher}.", "LLMCandidates": ["Sets the host's `OnBackPressedDispatcher`.", "Sets the host's `OnBackPressedDispatcher`.", "Sets the host's `OnBackPressedDispatcher`.", "Sets the host's `OnBackPressedDispatcher`.", "Sets the host's `OnBackPressedDispatcher`."]}
{"SampleId": 1922872, "Origin": "Creates a {@link NativeLinkable} using sources compiled by the D compiler.", "Reference": "Creates a {@link NativeLinkableGroup} using sources compiled by the D compiler.", "LLMCandidates": ["Creates a `NativeLinkable` using sources compiled by the D compiler, updated to handle `NativeLinkableGroup` instead of `NativeLinkable`.", "Creates a `NativeLinkable` using sources compiled by the D compiler, with changes to the `NativeLinkableGroup` class filter.", "Creates a `NativeLinkable` using sources compiled by the D compiler, with the enhancement that it now handles `NativeLinkableGroup` instead of `NativeLinkable`.", "Creates a `NativeLinkable` using sources compiled by the D compiler, now considering `NativeLinkableGroup` instead of `NativeLinkable`.", "Creates a `NativeLinkable` using sources compiled by the D compiler, now considering `NativeLinkableGroup` instead of `NativeLinkable`."]}
{"SampleId": 3037028, "Origin": "Sets the CPU status (free or busy).", "Reference": "Sets the CPU status (free or busy since some ms).", "LLMCandidates": ["Sets the time when the CPU became busy.", "Sets the CPU status by specifying the time (in milliseconds) when the CPU became busy.", "Sets the CPU status by specifying the time (in milliseconds) when the CPU became busy.", "Sets the time when the CPU became busy.", "Sets the time since the CPU became busy."]}
{"SampleId": 6017988, "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the maximum for each pixel across all bands in the input image and reshapes the output image to match the input image's dimensions.", "Computes the maximum for each pixel across all bands in the input image and writes the result to the provided output image. The output image is first resized to match the input image's dimensions.", "Computes the maximum for each pixel across all bands in the provided Planar image and writes the result to the output image. Additionally, the output image is resized to match the dimensions of the input image.", "Computes the maximum for each pixel across all bands in the provided Planar image, and also reshapes the output image to match the input image's dimensions.", "Computes the maximum for each pixel across all bands in the input image and writes the result to the provided output image."]}
{"SampleId": 4396494, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive access token information redacted for security.", "Returns a string representation of this object; useful for testing and debugging, omitting sensitive data for security.", "Returns a string representation of this object, omitting sensitive data for security.", "Returns a string representation of this object, omitting sensitive data for security.", "Returns a string representation of this object, omitting sensitive data for security."]}
{"SampleId": 4617099, "Origin": "Closes the Websocket-Connection.", "Reference": "Closes the WebSocket connection.", "LLMCandidates": ["Closes the established Websocket connection.", "Closes the WebSocket connection.", "Closes the WebSocket connection.", "Closes the WebSocket connection.", "Closes the established Websocket connection."]}
{"SampleId": 3676014, "Origin": "For example, the period in hours between two times can be calculated\nusing {@code startTime.periodUntil(endTime, HOURS)}.", "Reference": "For example, the period in hours between two times can be calculated\nusing {@code startTime.until(endTime, HOURS)}.", "LLMCandidates": ["Calculates the period between two times until the given unit.", "Calculates the period between two times in the specified unit.", "Calculates the period between two temporals using the specified unit.", "Calculates the period between two temporals using the specified unit.", "Calculates the period between two times in the specified unit."]}
{"SampleId": 5724303, "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 character bytes - each byte is a truncated\nchar.", "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated\nchar.", "LLMCandidates": ["Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char."]}
{"SampleId": 2050129, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses downloads if not already paused. Increments pending messages and sends a message to indicate downloads are paused.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing."]}
{"SampleId": 6190739, "Origin": "Loads the {@link Class} using the application {@link ArtifactClassLoader}.", "Reference": "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "LLMCandidates": ["Loads the `Class` using the `ArtifactClassLoader` retrieved from the test runner plugin.", "Loads the `Class` using the `ArtifactClassLoader` retrieved from the test runner plugin.", "Loads the `Class` using the `ArtifactClassLoader` retrieved from the test runner plugin.", "Loads the `Class` using the `ArtifactClassLoader` retrieved from the test runner plugin.", "Loads the `Class` using the `ArtifactClassLoader` retrieved from the test runner plugin."]}
{"SampleId": 440280, "Origin": "Convenient way to build a {@code BeamSqlRowType}.", "Reference": "Convenient way to build a {@link Schema}.", "LLMCandidates": ["Convenient way to build a `BeamSqlSchema`.", "Creates a BeamSqlSchema based on the provided arguments.", "Creates a BeamSqlSchema based on the provided arguments.", "Creates a BeamSqlSchema from the provided arguments.", "Creates a BeamSqlSchema from the provided arguments."]}
{"SampleId": 2357146, "Origin": "Calculates intersection of the image and the render filter region in the coordinate system relative to image.", "Reference": "Calculates intersection of the image and the render filter region in the coordinate system relative to the image.", "LLMCandidates": ["Calculates intersection of the image and the render filter region in the coordinate system relative to the image, using the provided image transform matrix.", "Calculates intersection of the image and the render filter region in the coordinate system relative to the image, using the provided image transform matrix.", "Calculates intersection of the image and the render filter region in the coordinate system relative to the image, using the provided image transform matrix.", "Calculates intersection of the image and the render filter region in the coordinate system relative to the image, using the provided render information.", "Calculates the intersection of the image and the render filter region in the coordinate system relative to the image, using the provided render information."]}
{"SampleId": 4471751, "Origin": "If keys = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "Reference": "If {@code keyFilter = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.", "LLMCandidates": ["The method name has been changed to getKeyFilter() and now returns the value of the keyFilter field.", "Returns the value associated with the key 'keyFilter', which replaces the previously used 'keys'.", "The method name has been changed to `getKeyFilter` and it now returns `keyFilter` instead of `keys`.", "Retrieves the value associated with the key.", "Retrieves the value associated with the key."]}
{"SampleId": 6100158, "Origin": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "Reference": "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "LLMCandidates": ["Checks if the given ISO date string represents only the time (without timezone information).", "Checks if the ISO date represents only the time, either in the specified format or in the 'now or today' format.", "Checks if the ISO date string represents only the time, either in the format 'HH:mm:ss' or in the 'now/today' format.", "Checks if the ISO date string represents only the time (without timezone information).", "Checks if the ISO date string represents only the time (without timezone information)."]}
{"SampleId": 3403203, "Origin": "generic method for untyped messages.", "Reference": "generic method for untyped remoting.", "LLMCandidates": ["Generic method for sending typed messages to actors.", "Generic method for sending typed messages asynchronously.", "Generic method for sending typed messages asynchronously.", "Generic method for sending typed messages to actors.", "Generic method for sending typed messages to actors."]}
{"SampleId": 2912053, "Origin": "Sets the additional trade information, defaulted to an empty instance.", "Reference": "Sets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Sets the additional portfolio information, defaulted to an empty instance.", "Sets the additional portfolio information, defaulted to a non-null instance.", "Sets the additional portfolio information, defaulted to a non-null instance.", "Sets the additional portfolio information, defaulted to an empty instance.", "Sets the additional portfolio information, defaulted to an empty instance."]}
{"SampleId": 6045146, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["The method remains the same as the original, fetching a CalendarResource by class name ID and class PK.", "The method remains the same as it originally did. It fetches a CalendarResource instance using the provided classNameId and classPK values from the persistence layer.", "Remains the same as the original comment.", "The method remains the same as the original version. It retrieves a CalendarResource using the given classNameId and classPK. If the resource is not found, a {@link com.liferay.calendar.NoSuchResourceException} is thrown.", "The method remains the same as the original, fetching a CalendarResource by classNameId and classPK."]}
{"SampleId": 113779, "Origin": "Initializes and returns the hashtable of all permissions known in the system.", "Reference": "Initializes and returns the linked hash map of all permissions known in the system.", "LLMCandidates": ["Initializes and returns a read-only hashtable of all permissions known in the system.", "Initializes and returns an unmodifiable hashtable of all permissions known in the system.", "Initializes and returns an unmodifiable hashtable of all permissions known in the system.", "Initializes and returns an unmodifiable map of all permissions known in the system.", "Initializes and returns an unmodifiable hashtable of all permissions known in the system."]}
{"SampleId": 4474377, "Origin": "Grants the role read permissions on the resource.", "Reference": "Sets the read permission status.", "LLMCandidates": ["Sets the read permission on the resource.", "Sets the read permission on the resource.", "Sets the read permission on the resource.", "Sets the read permission on the resource.", "Sets the read permission on the resource."]}
{"SampleId": 1843363, "Origin": "Waits during {@code timeout} until text extracted from specified {@code webElement} by {@link", "Reference": "Waits during {@code timeout} until value extracted from specified {@code element} by {@link", "LLMCandidates": ["Waits during `timeout` until the text extracted from the specified `element` by `waitVisibilityAndGetValue` is equal to the provided `expected` value.", "Waits during `timeout` until the text extracted from the specified `element` by `waitVisibilityAndGetValue` is equal to the given `expected` value.", "Waits during `timeout` until the text extracted from the specified `element` by `waitVisibilityAndGetValue` is equal to the provided `expected` value.", "Waits until the text extracted from the specified element by the given timeout is equal to the expected value.", "Waits during `timeout` until the text extracted from the specified `element` by `waitVisibilityAndGetValue` is equal to the given `expected` value."]}
{"SampleId": 1311563, "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate", "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate", "LLMCandidates": ["Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate.\n\n  - Updated connector and response types to IApiConnector and IApiConnection.", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate.\n\n  - Updated connector type to IApiConnector and IApiConnection.", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate.\n\n  - Updated connector and connection interfaces to IApiConnector and IApiConnection.", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate."]}
{"SampleId": 1878506, "Origin": "Check if there is any negative cost (= improvement).", "Reference": "Find the smallest (most negative) value.", "LLMCandidates": ["Calculates the index of the smallest non-positive value in the 'best' array.", "Calculates the index of the smallest (non-negative) element in the 'best' array.", "Finds the index of the smallest element in the 'best' array, replacing the previous logic which checked for negativity.", "Calculates the index of the smallest non-negative element in the 'best' array.", "Checks if there is any value less than infinity (representing negative cost) in the provided array."]}
{"SampleId": 302612, "Origin": "see\nURL\nhtml", "Reference": "see\nURL", "LLMCandidates": ["Calling `inspect` now includes conditional handling to gracefully exit the visualization process if in non-interactive mode.", "Calling `inspect` may lead to an `ArrayIndexOutOfBoundsException` in version 4.0.2. An optional check has been added to handle the interactive mode appropriately.", "The `inspect` method now includes conditional handling to gracefully exit if in non-interactive mode.", "Calling `inspect` now includes conditional handling to gracefully exit in non-interactive mode.", "Calling inspect led to an java.lang.ArrayIndexOutOfBoundsException in 4.0.2. Added conditional handling based on a new `interactive` flag."]}
{"SampleId": 6192460, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "LLMCandidates": ["Creates a new `Builder` based on a given `CoreEvent` instance.", "Creates a new `Builder` instance based on a given `CoreEvent` instance.", "Creates a new `Builder` based on an existing `CoreEvent` instance.", "Creates a new `Builder` based on an existing `CoreEvent` instance.", "Creates a new `Builder` based on an existing `CoreEvent` instance."]}
{"SampleId": 2337369, "Origin": "User / Group may update meta data of nodes: rename files and folders, change classification, etc.", "Reference": "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "LLMCandidates": ["User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc."]}
{"SampleId": 4396481, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data values redacted for security.", "Returns a string representation of this object, with sensitive data values redacted for security.", "Returns a string representation of this object, with sensitive data values redacted for security.", "Returns a string representation of this object, omitting sensitive data values for privacy.", "Returns a string representation of this object, with sensitive data values redacted for security."]}
{"SampleId": 1118960, "Origin": "See {@link SyslogConstants} and RFC 3164 for more information about the", "Reference": "See RFC 3164 for more information about the", "LLMCandidates": ["Sets the facility string based on the given parameter. If the facility is not null, it retrieves the syslog facility code from the given name and assigns it to the internal `syslogFacility` variable. If the facility is unknown, it prints an error message and defaults to the `LOG_USER` facility.", "Sets the facility string based on the given value. If the facility is unknown, it defaults to [USER] and logs a warning message.", "Sets the facility string based on the provided value. If the facility is unknown, it defaults to [USER] and logs a warning message.", "Sets the facility string based on the provided value. If the facility is not recognized, it defaults to [USER] and logs a warning message.", "Sets the facility string based on the given value. If the facility is unknown, defaults to [USER] and logs a warning message."]}
{"SampleId": 4388500, "Origin": "Once you've created\na DB parameter group, you need to associate it with your DB instance\nusing ModifyDBInstance .", "Reference": "Once you've created a DB parameter group,\nyou need to associate it with your DB instance using", "LLMCandidates": ["Creates a DB parameter group using the provided request.", "Creates a DB parameter group using the provided request and associates it with the DB instance.", "Creates a DB parameter group using the provided request.", "Creates and associates a DB parameter group with the specified request.", "Creates and associates a DB parameter group with the specified request."]}
{"SampleId": 2231080, "Origin": "Returns the list of configured WAN publisher targets for this WAN\nreplication.", "Reference": "Returns the list of custom WAN publisher implementations for this WAN\nreplication.", "LLMCandidates": ["Returns a list of configured CustomWANPublisherConfig targets for this WAN replication.", "Returns a list of configured custom WAN publisher targets for this WAN replication.", "Returns a list of configured `CustomWanPublisherConfig` targets for this WAN replication.", "Returns a list of configured CustomWANPublisherConfig targets for this WAN replication.", "Returns a list of configured CustomWANPublisherConfig targets for this WAN replication."]}
{"SampleId": 3143529, "Origin": "RemoveAxiom change objects are automatically generated.", "Reference": "The appropriate RemoveAxiom change objects are automatically\ngenerated.", "LLMCandidates": ["The method signature has been updated to accept an array of OWLAxioms instead of a stream of axioms.", "The method signature has been updated to accept an array of OWLAxiom objects instead of a stream. The change objects are automatically generated.", "The method now accepts an array of OWLAxiom objects and uses the Arrays.stream() method to iterate over them.", "The method signature has been updated to accept an array of OWLAxiom objects instead of a stream of axioms.", "The deprecated `removeAxioms` method has been replaced with a new version that accepts an array of `OWLAxiom` objects."]}
{"SampleId": 2973497, "Origin": "Return a signature object containing the current signature state.", "Reference": "Return the signature.", "LLMCandidates": ["Returns the raw signature bytes obtained from the content signer. Note that this method supports RSA, RSA-GENERAL, EDDSA, ECDSA, and DSA algorithms.", "Returns the raw signature bytes retrieved from the content signer, supporting RSA, RSA-GENERAL, EDDSA, ECDSA, and DSA algorithms.", "Returns the raw signature bytes retrieved from the content signer.", "Returns the raw signature bytes obtained from the content signer.", "Returns the raw signature bytes obtained from the content signer."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "Reference": "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "LLMCandidates": ["If `labelFilter = \"*abc*\"`, settings with a label containing \"abc\" are returned.", "If `labelFilter = \"*abc*\"`, settings with a label containing \"abc\" are returned.", "If `labelFilter = \"*abc*\"`, settings with a label containing \"abc\" are returned.", "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "If `labelFilter = \"*abc*\"`, settings with a label containing \"abc\" are returned."]}
{"SampleId": 5724604, "Origin": "Adds a new URI to the list of redirects.", "Reference": "Adds a new URI to the collection.", "LLMCandidates": ["Adds a new URI to both the list of unique redirects and the list of all redirects.", "Adds a new URI to both the unique and all lists of redirects.", "Adds a new URI to both the unique and all lists of redirects.", "Adds a new URI to both the unique and all lists of redirects.", "Adds a new URI to both the list of unique redirects and the list of all redirects."]}
{"SampleId": 2312746, "Origin": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.", "Reference": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link PointSet} region of a {@link Dataset}", "LLMCandidates": ["Returns the (biased) estimate of the sample kurtosis excess of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a given point set region of a dataset.", "Returns the biased estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset."]}
{"SampleId": 2842886, "Origin": "ArchaiusModule however is stateful in that much of its configuration\nis supplied externally to the Guice injector.", "Reference": "ArchaiusModule however is stateful in\nthat it is initially set up outside of Guice.", "LLMCandidates": ["ArchaiusModule is stateless as its configuration is not supplied externally to the Guice injector.", "ArchaiusModule is stateless as its configuration is not supplied externally.", "ArchaiusModule is stateless as its configuration is not supplied externally to the Guice injector.", "ArchaiusModule is stateless as its configuration is not supplied externally to the Guice injector.", "ArchaiusModule is stateless as its configuration is not supplied externally to the Guice injector."]}
{"SampleId": 3511327, "Origin": "The {@link EventContextKeys#MESSAGE_TARGET}, if any", "Reference": "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "LLMCandidates": ["Retrieves the message channel associated with the event context, using the key `EventContextKeys#MESSAGE_CHANNEL`.", "Retrieves the message channel from the event context, or fallback to the first registered MessageReceiver or the system subject.", "Retrieves the message channel associated with the event context, falling back to the system subject if not explicitly configured.", "Retrieves the message channel from the event context, using the key `EventContextKeys#MESSAGE_CHANNEL`. If not found, it defaults to the first registered `MessageReceiver` or the system subject.", "Retrieves the message channel associated with the event context, falling back to the system subject if not explicitly configured."]}
{"SampleId": 3349712, "Origin": "Create a new empty {@link Sequential} with atomic guarantees on all mutative\noperations.", "Reference": "Create a new empty {@link Swap} with atomic guarantees on all mutative\noperations.", "LLMCandidates": ["Creates a new empty `Swap` with atomic guarantees on all mutative operations.", "Creates a new empty `Swap` with atomic guarantees on all mutative operations.", "Creates a new empty `Swap` with atomic guarantees on all mutative operations.", "Creates a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Creates a new empty {@link Swap} with atomic guarantees on all mutative operations."]}
{"SampleId": 2535867, "Origin": "Extract the values from the array's elements by applying an extracting function on them.", "Reference": "Extract the values from the array's elements by applying an extracting function on them, the resulting list becomes\nthe new object under test.", "LLMCandidates": ["Extracts the values from the array's elements by applying an extracting function on them and returns an assertion for the resulting list.", "Extracts the values from the array's elements by applying an extracting function on them and returns an assertion on the extracted values.", "Extracts the values from the array's elements by applying an extracting function on them and returns an assertion for the resulting list.", "Extracts values from the array's elements using the provided extractor function and returns an Assert instance for the extracted values.", "Extracts the values from the array's elements by applying an extracting function on them and returns an assertion on the resulting list."]}
{"SampleId": 4117678, "Origin": "Sets the {@code Cipher} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "Reference": "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "LLMCandidates": ["Sets the `CipherService` to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the `CipherService` to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the `CipherService` to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the `CipherService` to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data."]}
{"SampleId": 4829574, "Origin": "This method allows you to specify IterationListeners for this model.", "Reference": "This method allows you to specify trainingListeners for this model.", "LLMCandidates": ["Allows you to specify TrainingListeners for this model.", "Allows you to specify TrainingListeners for this model.", "Allows you to specify TrainingListeners for this model.", "Specifies TrainingListeners for this model.", "Specifies TrainingListeners for this model."]}
{"SampleId": 2049560, "Origin": "Sets data to be parsed by libflac.", "Reference": "Sets the data to be parsed.", "LLMCandidates": ["Sets data to be parsed by libflac. The extractor input and temporary buffer are cleared.", "Sets data to be parsed by libflac.", "Sets data to be parsed by libflac. The extractorInput and tempBuffer variables are no longer used in this method.", "Sets data to be parsed by libflac.", "Sets data to be parsed by libflac."]}
{"SampleId": 3677760, "Origin": "Returns the next day-of-week adjuster, which adjusts the date to be\nthe next of the specified day-of-week after the specified date.", "Reference": "Returns the next day-of-week adjuster, which adjusts the date to the\nfirst occurrence of the specified day-of-week after the date being adjusted.", "LLMCandidates": ["Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week."]}
{"SampleId": 4476347, "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addSettingWithResponse#ConfigurationSetting}", "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}", "LLMCandidates": ["Updated method name to \"addConfigurationSettingWithResponse\" in the Javadoc comment.", "Updated method name from `addSettingWithResponse` to `addConfigurationSettingWithResponse` in the Javadoc comment.", "Added 'ConfigurationSetting' argument to the method name and changed the method call to 'addConfigurationSetting'.", "Added \"ConfigurationSetting\" argument to the method name and updated the method signature in the comment.", "Method name updated to \"addConfigurationSettingWithResponse\" in the signature and comment."]}
{"SampleId": 2706903, "Origin": "Set Account Element.", "Reference": "Set Kontenart.", "LLMCandidates": ["Sets the Account Element value based on the provided ID.", "Set the Account Element value based on the provided ID.", "Set the Account Element value based on the provided ID.", "Set the Account Element value based on the provided ID.", "Set Account Element value based on the provided ID."]}
{"SampleId": 5458940, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning the result as a byte array.", "Calculates the hash of this module, returning the result as a byte array.", "Calculates the hash of this module, returning it as a byte array."]}
{"SampleId": 3506207, "Origin": "The\n{@code orderType} is an enum value located under the {@link #ORDER_TYPE}\nkey.", "Reference": "The\n{@code orderType} is an enum value located under the {@link HasOrderTypeUtil#ORDER_TYPE}\nkey.", "LLMCandidates": ["The `orderType` is an enum value located under the `{@link #HasOrderTypeUtil.ORDER_TYPE}` key.", "The ordinal value is now retrieved from the key `${@link #HasOrderTypeUtil.ORDER_TYPE}`.", "The `orderType` enum value is located under the `{@link #HasOrderTypeUtil.ORDER_TYPE}` key.", "The `orderType` is an enum value located under the `#HasOrderTypeUtil.ORDER_TYPE` key.", "The `orderType` is an enum value located under the `HasOrderTypeUtil.ORDER_TYPE` key."]}
{"SampleId": 105839, "Origin": "Read an optional Long value (stored as string) form a JSON Object.", "Reference": "Read an optional Date value (stored as string) form a JSON Object.", "LLMCandidates": ["Reads an optional Date value (stored as string) from a JSON Object.", "Reads an optional Date value (stored as string) from a JSON Object.", "Reads an optional Date value (stored as string) from a JSON Object.", "Reads an optional Date value (stored as string) from a JSON Object.", "Reads an optional Date value (stored as string) from a JSON Object."]}
{"SampleId": 3241612, "Origin": "Gets the parent object in the object tree representing the unmarshalled xml document.", "Reference": "Gets the value of the anchorId property.", "LLMCandidates": ["Gets the anchor ID of the element represented by this object.", "Gets the anchor ID of the element representing the unmarshalled XML document.", "Gets the anchor ID of the element in the DOM tree representing the unmarshalled XML document.", "Retrieves the anchor ID of the element.", "Retrieves the anchor ID of the element."]}
{"SampleId": 1352302, "Origin": "If modified and not discarded, sheet material will be stored before being disposed of.", "Reference": "If modified or upgraded, sheet material will be stored before being disposed of.", "LLMCandidates": ["If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of."]}
{"SampleId": 5454975, "Origin": "Get the value of the {@code accessible} flag for this object.", "Reference": "Get the value of the {@code accessible} flag for this reflected object.", "LLMCandidates": ["Indicates that this method is deprecated since version 9.", "Indicates that this method is deprecated since version 9.", "Indicates that this method is deprecated since version 9.", "Indicates that this method is deprecated since version 9.", "Indicates that this method is deprecated since version 9."]}
{"SampleId": 2248673, "Origin": "Get icon img and append to buf", "Reference": "Get 16x16 icon img and append to buf", "LLMCandidates": ["Gets the icon image based on the given name and iconpath, and appends it to the buffer.", "Retrieves and displays the client application icon image based on the specified name and optionally iconpath parameter.", "Retrieves and displays the client application icon based on the given name and optional iconpath.", "Gets the icon image based on the given name and iconpath parameter.", "Retrieves and displays the client application icon based on the given name and optional iconpath."]}
{"SampleId": 1879787, "Origin": "Testing the timesTranspose(vector, vector) method of VMath class.", "Reference": "Testing the timesTranspose(vector, vector) method of {@link VMath} class.", "LLMCandidates": ["Testing the timesTranspose(vector, vector) method of VMath class.", "Testing the timesTranspose(vector, vector) method of VMath class.\n\nSpecifically testing the behavior when timesTranspose is used to multiply a vector with its transpose. This also indirectly verifies the correctness of the transpose operation itself.", "Testing the timesTranspose(vector, vector) method of VMath class.\n\nSpecifically testing the functionality of multiplying a vector with its transpose, which should result in a matrix.\n\nThe test also indirectly verifies the correctness of the transpose operation by comparing the results of timesTranspose with the multiplication of the transposed vectors.", "Testing the timesTranspose(vector, vector) method of VMath class.", "Testing the timesTranspose(vector, vector) method of VMath class.\n\nSpecifically testing the behavior when timesTranspose is used to multiply two transposed vectors."]}
{"SampleId": 4396558, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive plaintext data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive plaintext data redacted for security.", "Returns a string representation of this object, with sensitive plaintext data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 3734015, "Origin": "Otherwise, this qualifier must contain all the arrays in superType.", "Reference": "Otherwise, this qualifier must contain all the sequences in superType.", "LLMCandidates": ["Otherwise, this qualifier must contain all the arrays in superTypeLTL.", "Otherwise, this qualifier must contain all the arrays in superType, and their corresponding offset equations must also be subtype relationships.", "Otherwise, this qualifier must contain all the arrays in superType, and their corresponding offsets must also be subtype relationships.", "Otherwise, this qualifier must contain all the arrays in superTypeLTL.", "Otherwise, this qualifier must contain all the arrays in superType, and their corresponding offset equations must also be subtype relationships."]}
{"SampleId": 2735158, "Origin": "Returns bounds of the split button part.", "Reference": "Returns bounds of the menu button part.", "LLMCandidates": ["Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part."]}
{"SampleId": 1309912, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously retrieves an API.", "Asynchronously retrieves an API.", "Asynchronously retrieves an API.", "Asynchronously retrieves an API.", "Asynchronously gets an API."]}
{"SampleId": 2137945, "Origin": "Returns true if the constructor method is locally empty (allows calls to empty init and super\nconstructor).", "Reference": "Returns true if the constructor method is locally empty (allows calls to init and super\nconstructor).", "LLMCandidates": ["Returns true if the constructor method is empty (allows calls to non-empty init and super constructor).", "Returns true if the constructor method is empty (allows calls to non-empty init and super constructors).", "Returns true if the constructor method is empty (allows calls to non-empty init and super constructors).", "Returns true if the constructor method is empty (allows calls to non-empty init and super constructor).", "Returns true if the constructor method is empty (allows calls to empty super and constructor initialization methods)."]}
{"SampleId": 6018465, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, and also adds a value val to the result.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, and also adds a value val to the result.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional scalar value."]}
{"SampleId": 1401991, "Origin": "Creates a schemaless instance of a provider with the given values for fields f1 and f2.", "Reference": "Creates an instance of a provider with the given values for fields f1 and f2.", "LLMCandidates": ["Creates an instance of a provider without a schema definition, using the given values for fields f1 and f2.", "Creates a schemaless instance of a provider with the given values for fields f1 and f2.", "Creates an instance of a provider without a predefined schema, using the given values for fields f1 and f2.", "Creates an instance of a provider without a schema definition, using the given values for fields f1 and f2.", "Creates an instance of a provider with the given values for fields f1 and f2."]}
{"SampleId": 4866566, "Origin": "Add two URI path segments.", "Reference": "Add two Decoded URI path segments.", "LLMCandidates": ["Adds two URI path segments, handling cases where either path starts or ends with a '/' character.", "Adds two URI path segments, handling cases where either path ends with or starts with a '/'.", "Adds two URI path segments, handling cases where the first path ends with a slash and the second path starts with a slash.", "Adds two URI path segments, handling cases where either path ends with or starts with a '/'.", "Adds two URI path segments while handling cases where the first path ends with a slash and the second path starts with a slash."]}
{"SampleId": 1052994, "Origin": "In alarm, only minute dimensionality\nindicators are expected to process.", "Reference": "In alarm, only minute dimensionality\nmetrics are expected to process.", "LLMCandidates": ["In alarm, only minute dimensionality metrics are expected to process.", "In alarm, only minute-dimensionality indicators are expected to process.", "In alarm, only minute-dimensionality indicators are expected to process.", "In alarm, only minute-dimensionality indicators are expected to process.", "In alarm, only minute-dimensionality indicators are expected to process."]}
{"SampleId": 1402632, "Origin": "If {@code thread} is null, the list\nis immutable.", "Reference": "Equivalent to {@code copyOf(null, elems)}.", "LLMCandidates": ["The thread argument is now omitted, as the resulting list is always immutable.", "If the provided thread is null, the resulting list is immutable.", "If the provided thread is null, the resulting list is immutable.", "The thread is not used to determine the mutability of the resulting list. The list is always immutable if the provided thread is null.", "The thread argument is no longer required as the resulting list is immutable."]}
{"SampleId": 5652502, "Origin": "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "Reference": "Creates a callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "LLMCandidates": ["Creates callable for executing the `doubleWhoAmI` method of the `Entry` bean, as given user.", "Creates callable for executing the `doubleWhoAmI` method on the `Entry` bean as given user.", "Creates callable for executing `Entry#doubleWhoAmI(String, String, ReAuthnType, String)` as given user, with the server URL argument being optional.", "Creates callable for executing `Entry#doubleWhoAmI(String, String, ReAuthnType, String)` as given user, with the server URL argument being optional.", "Creates callable for executing `Entry#doubleWhoAmI(String, String, ReAuthnType, String)` as given user, with the server URL parameter automatically retrieved."]}
{"SampleId": 3105766, "Origin": "Validate that I have a Exuberant ctags program I may use", "Reference": "Validate that there is a Universal ctags program.", "LLMCandidates": ["Validate that I have a Universal Ctags program available for indexing.", "Validate that I have a Universal Ctags program available for indexing.", "Validate that I have a Universal Ctags program available for indexing.", "Validate that I have a Universal Ctags program I may use.", "Validate that I have a Universal Ctags program available for indexing."]}
{"SampleId": 236993, "Origin": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.", "Reference": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "LLMCandidates": ["Tests for the `BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)` method.", "Tests for the `BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)` method.", "Tests for the `BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)` method.", "Tests for the `BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)` method.", "Tests for the `BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)` method."]}
{"SampleId": 2336970, "Origin": "### Effects: Provided user receives email with reset token.", "Reference": "### Effects: Provided user receives email with password reset token.", "LLMCandidates": ["The provided method now delegates the request processing to the `requestPasswordResetWithHttpInfo` method.", "Delegate password reset process to `requestPasswordResetWithHttpInfo` method.", "The provided code simply calls the `requestPasswordResetWithHttpInfo` method with the given `body` parameter.", "This method now delegates the request processing to the `requestPasswordResetWithHttpInfo` method.", "The provided code now calls the `requestPasswordResetWithHttpInfo` method internally."]}
{"SampleId": 5082490, "Origin": "Performs thread dump and prints all available info to the given log.", "Reference": "Performs thread dump and prints all available info to the given log with WARN logging level.", "LLMCandidates": ["Performs thread dump using the provided logger with an optional synchronization analysis flag.", "Performs thread dump using the provided logger, optionally including detailed information about deadlocked threads.", "Performs thread dump using the provided logger with an optional flag to suppress the synchronization information.", "Performs thread dump using the provided logger and an optional flag to control additional information retrieval.", "Performs thread dump using the provided logger, with an optional parameter to skip synchronization information."]}
{"SampleId": 1721041, "Origin": "If the columnIdent doesn't have a path the return value is null", "Reference": "If the columnName doesn't have a path the return value is null", "LLMCandidates": ["The method now uses a switch statement to handle different path sizes, returning null if the path is empty, creating a new ColumnIdent with just the first element if the path has only one element, or creating a new ColumnIdent with the first element and the remaining elements otherwise.", "If the path is empty, the return value is null. Otherwise, the method builds a new ColumnIdent based on the path size: a single element path results in a new ColumnIdent with just that element, while multiple elements result in a new ColumnIdent containing the first element and the remaining elements as a sublist.", "If the path is empty, the return value is null. Otherwise, the method creates a new ColumnIdent object based on the path size. For paths with more than one element, the sublist is used to create the new ColumnIdent.", "If the path is empty, the return value is null. Otherwise, the method uses a switch statement to handle different path lengths and construct a new ColumnIdent object accordingly.", "If the path is empty, the return value is null. Otherwise, the method creates a new ColumnIdent object based on the path size."]}
{"SampleId": 1612088, "Origin": "Checks if the given {@code DetailAST} node is matching line and column number.", "Reference": "Checks if the given {@code DetailAST} node is matching line number, column number and token\ntype.", "LLMCandidates": ["Checks if the given `DetailAST` node is matching line and column number, and also verifies that the token type matches the expected type.", "Checks if the given `DetailAST` node is matching line and column number, and also verifies the token type.", "Checks if the given `DetailAST` node is matching line and column number, and also verifies the token type.", "Checks if the given `DetailAST` node is matching line and column number, and also verifies the token type.", "Checks if the given `DetailAST` node is matching line and column number, and also verifies the token type."]}
{"SampleId": 1575389, "Origin": "Persists running state to the {@link RemoteRuntimeDataset}.", "Reference": "Persists running state to the {@link RemoteRuntimeTable}.", "LLMCandidates": ["Persists running state to the `RemoteRuntimeTable`.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the `RemoteRuntimeTable`.", "Persists running state to the `RemoteRuntimeTable`.", "Persists running state to the `RemoteRuntimeTable`."]}
{"SampleId": 5631500, "Origin": "An array of objects defining the nodes in the dialog.", "Reference": "An array of objects describing the dialog nodes in the workspace.", "LLMCandidates": ["Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog."]}
{"SampleId": 471868, "Origin": "The amount of time (in millisecond) which adds to waiting time when\nusing Linear back off strategy.", "Reference": "Maximum amount of time (in millisecond) a thread wait before retrying\nfailed request.", "LLMCandidates": ["Specifies the maximum time (in millisecond) to wait before retrying when using the Linear back off strategy.", "Specifies the maximum time (in millisecond) to wait when using linear back off strategy.", "Specifies the maximum time (in millisecond) to wait when using linear back off strategy.", "Specifies the maximum amount of time to wait when using linear back off strategy.", "Specifies the maximum amount of time (in millisecond) to wait before retrying when using Linear back off strategy."]}
{"SampleId": 5323489, "Origin": "Specify charsets associated with the configured {@link #setLocations(List)\nlocations}.", "Reference": "An alternative to {@link #setLocations(List)} that accepts a list of", "LLMCandidates": ["Specify values associated with the configured `#setLocationValues(List<String>) locations.", "Specify values associated with the configured  {@link #setLocationValues(List) location values}.", "Specify values associated with the configured `#setLocationValues(List<String>)` locations.", "Specify values associated with the configured `#setLocationValues(List<String>) locations`.", "Specify values associated with the configured `#setLocationValues(List<String>) locations`."]}
{"SampleId": 5244566, "Origin": "Builds maps of obj id to\nmd5 and case.", "Reference": "Builds maps of obj id to\nvalue and case.", "LLMCandidates": ["Builds maps of obj id to MD5 and case values.", "Builds maps of object ID to MD5 and case values from the CaseInstancesTable.", "Builds maps of obj id to\nmd5 and case values based on the correlation type.", "Builds maps of object ID to MD5 and case values based on correlation type.", "Builds maps of object ID to MD5 and case values."]}
{"SampleId": 2081192, "Origin": "Moves on to next top level domain in {@code topLevelDomainsList}.", "Reference": "Moves on to next top level domain in {@code tldCycleIterator}.", "LLMCandidates": ["Iterates over the next element in the {@code tldCycleIterator}.", "Moves on to next top level domain in the cycle iterator.", "Moves on to next top level domain in the cycle iterator.", "Moves on to next top level domain in the cycle iterator.", "Moves on to next top level domain in the cycle iterator."]}
{"SampleId": 5316049, "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.", "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.", "LLMCandidates": ["Added the given handler argument resolvers to the internal list.", "Added the given `HandlerMethodArgumentResolver`s to this.argumentResolvers list.", "Added the given `HandlerMethodArgumentResolver`s using the `addAll` method.", "Added the given `HandlerMethodArgumentResolver`s to the internal list.", "Added the given `HandlerMethodArgumentResolver`s to this.argumentResolvers list."]}
{"SampleId": 80067, "Origin": "Gets the Chemical Dissolution Chamber of the ItemStackInput in the parameters", "Reference": "Gets the Chemical Dissolution Chamber of the ItemStack in the parameters", "LLMCandidates": ["Retrieves the Chemical Dissolution Chamber recipe from the ItemStackInput using the provided Recipe object.", "Gets the Chemical Dissolution Chamber recipe for the given ItemStack input using the first matching recipe from Recipe.CHEMICAL_DISSOLUTION_CHAMBER.", "Gets the Chemical Dissolution Chamber recipe from the ItemStackInput in the parameters using the first matching recipe from Chemical Dissolution Chamber.", "Gets the Chemical Dissolution Chamber recipe from the ItemStackInput in the parameters.", "Gets the Chemical Dissolution Chamber recipe from the ItemStackInput in the parameters using a test-based approach."]}
{"SampleId": 1346635, "Origin": "Runs operations for a single client.", "Reference": "Runs operations for a single session.", "LLMCandidates": ["Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session."]}
{"SampleId": 2318037, "Origin": "inverse of {@link #jacksonBson(String)}", "Reference": "inverse of {@link #jacksonThenBson(String)}", "LLMCandidates": ["Inverse of the `bsonJackson` method.", "Inverse of `#bsonThenJackson(String)`.", "Inverse of the previously defined #bsonJackson(String) method.", "Inverse of the previously defined #bsonJackson(String) method.", "Inverse of `#bsonThenJackson(String)`."]}
{"SampleId": 5720694, "Origin": "are specifically excluded\nexcept for carriage return, linefeed, and the horizontal tab.", "Reference": "are specifically excluded\nexcept for carriage return, line-feed, and the horizontal tab.", "LLMCandidates": ["The method now handles surrogate pairs, which are sequences of two characters representing a single Unicode character. If a high surrogate character is encountered without its corresponding low surrogate, an error is thrown. Otherwise, the surrogate pair is decoded and validated against the XML character set.", "The method now handles surrogate pairs by checking and decoding them appropriately. Characters that are not valid XML characters are identified and reported in their hexadecimal representation. Surrogates pairs that are truncated are also identified and reported.", "The code now checks for surrogate pairs, which are sequences of two high and low surrogates that represent a single Unicode character. If a surrogate pair is detected, it is decoded and validated as a single character. Otherwise, any character that is not a valid XML character is represented in its hexadecimal form.", "The method checks each character in the input string to ensure it is a valid XML character. Surrogates pairs are validated and if an invalid character is detected, an appropriate error message is returned. The method also handles truncated surrogate pairs.", "The method checks each character in the input string to ensure it is a valid XML character. Surrogates pairs are validated and illegal ones are flagged. If the end of the string is reached while expecting a low surrogate, a truncated surrogate pair message is returned."]}
{"SampleId": 5459533, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning it as a byte array.", "Calculates the hash of this module, returning the result as a byte array."]}
{"SampleId": 6330488, "Origin": "Calls the specified converter function with the current Single instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Calls the specified converter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result."]}
{"SampleId": 6047536, "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Reference": "or throws a {@link NoSuchArticleException} if it could not be found.", "LLMCandidates": ["The method retrieves a KBArticle instance based on the given resourcePrimKey and version, or throws a com.liferay.knowledgebase.NoSuchArticleException if it could not be found.", "The method fetches the KBArticle instance by resourcePrimKey and version from the persistence layer.", "The article was retrieved from the persistence layer using the given resourcePrimKey and version.", "The article was retrieved from the persistence layer using the given resourcePrimKey and version.", "The article was retrieved using the provided resource primary key and version."]}
{"SampleId": 2250226, "Origin": "Comments in the same 10-minute bucket and otherwise equal\n are considered equal.", "Reference": "Comments within 10 minutes (not necessarily in same bucket)\n and otherwise equal are considered equal.", "LLMCandidates": ["Comments within the same 10-minute time bucket, but otherwise equal, are considered equal. Additionally, comments with a time difference exceeding the maximum skew or preceding it are deemed unequal.", "Equal comments within a 10-minute window are considered equal, regardless of timestamp.", "Comments within the same 10-minute time bucket and otherwise equal are considered equal, except for cases where the time difference between the comments exceeds the maximum allowable skew of {MAX_SKEW} minutes.", "Comments within the same 10-minute time bucket are considered equal, regardless of timestamp. Otherwise, two comments are equal if they are equal in every other aspect.", "Comments within the same 10-minute time bucket but otherwise equal are considered equal, considering the time skew of up to +/- MAX_SKEW minutes."]}
{"SampleId": 1721041, "Origin": "creates a new columnIdent which just consists of the path of the given columnIdent\ne.g.", "Reference": "creates a new columnName which just consists of the path of the given columnName\ne.g.", "LLMCandidates": ["Creates a new ColumnIdent based on the path of the given ColumnIdent.\n\n- If the path is empty, returns null.\n- If the path has more than one element, constructs a new ColumnIdent using the first element and the remaining elements as the path.\n- Otherwise, constructs a new ColumnIdent using the first element as the path.", "Creates a new ColumnIdent based on the path of the given ColumnIdent. If the path is empty, returns null. Otherwise, creates a new ColumnIdent with the first path element and the remaining path elements.", "Creates a new ColumnIdent based on the path of the given ColumnIdent. The method handles cases with 0, 1, or multiple path elements.", "Creates a new ColumnIdent based on the path of the given ColumnIdent.\n\nThe path is used to construct a new ColumnIdent object representing the shifted column.", "Creates a new `ColumnIdent` based on the path of the given `ColumnIdent`, handling cases with 0 or 1 path elements."]}
{"SampleId": 3833366, "Origin": "Returns the capacity specified for each node, or empty to leave this decision to provisioning", "Reference": "Returns the resources requested for each node, or empty to leave this decision to provisioning", "LLMCandidates": ["Returns the node resources associated with the flavor, or empty if not specified.", "Returns the resources associated with each node, or empty to leave this decision to provisioning.", "Returns the resources associated with each node, or empty to leave this decision to provisioning.", "Returns the resource allocation specified for each node, or empty to leave this decision to provisioning.", "Returns the node resources associated with the flavor, or empty to leave this decision to provisioning."]}
{"SampleId": 2906488, "Origin": "Returns an immutable copy of the current headers.", "Reference": "Returns an immutable copy of the Headers for this request.", "LLMCandidates": ["Returns an immutable map containing the values associated with non-empty header keys from the underlying headers map.", "Returns an immutable copy of the current headers, where values are replaced with unmodifiable lists if they are not empty.", "Returns an immutable copy of the current headers, populated with values from the original headers map based on non-empty values.", "Returns an immutable map containing only those headers with non-empty values.", "Returns an immutable map containing only those headers with non-empty values."]}
{"SampleId": 1357584, "Origin": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential.", "Reference": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is exponential.", "LLMCandidates": ["Purges parts candidates whose weight is below the threshold or which do not intersect the core rectangle. Additionally, limits the number of remaining parts to the specified maximum count.", "Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. Additionally, if the number of remaining parts exceeds the maximum allowed count, retain only the heaviest parts until the limit is reached.", "Purges parts candidates whose weight is below the threshold or does not intersect the core rectangle. Additionally, limits the number of remaining parts to the specified maximum count.", "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential. Additionally, if the number of remaining parts exceeds the specified maximum count, retain only the heaviest parts.", "Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. Additionally, if the remaining parts exceed the maximum allowed count, prioritize them by weight and retain only the best ones."]}
{"SampleId": 6043600, "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where parentFolderId = ?.", "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?", "LLMCandidates": ["Returns the sync d l objects before and after the given modified time in the ordered set where modifiedTime = ?.", "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime = ?, repositoryId = ?.", "Returns the sync d l objects before, during, and after the current sync d l object in the ordered set where modifiedTime = ?, repositoryId = ?, and orderByComparator is specified.", "Returns the sync d l objects before and after the given modified time in the ordered set where modifiedTime = ?.", "Returns the sync d l objects before and after the given modified time, repository ID, and order comparator in the ordered set."]}
{"SampleId": 3646276, "Origin": "Calculates the cash flow for a single trade.", "Reference": "Calculates the cash flow for a single closed trade.", "LLMCandidates": ["Calculates the cash flow for a closed trade. The method now checks if the trade is opened and throws an exception if necessary.", "Calculates the cash flow for a closed trade. If the trade is still open, an IllegalArgumentException is thrown.", "Calculates the cash flow for a closed trade, given the final index of observation.", "Calculates the cash flow for a closed trade, given the final index of observation.", "Calculates the cash flow for a closed trade, based on the provided exit index."]}
{"SampleId": 3073837, "Origin": "Assigns a native mirror object to the given RBaseObject object.", "Reference": "Assigns a native mirror object ID to the given RBaseObject object.", "LLMCandidates": ["Creates a native mirror object for the given RBaseObject object if not already exists, and then executes the ToNativeNodeGen operation on the mirror.", "Creates a native mirror object for the given RBaseObject object if it doesn't exist, and then executes the ToNativeNodeGen operation on the mirror.", "Creates a native mirror object for the given RBaseObject object if not already created, and then executes the ToNativeNodeGen operation on the mirror object.", "Creates a native mirror object for the given RBaseObject object if it doesn't exist, and then executes the ToNativeNodeGen process on the mirror object.", "Creates a native mirror object for the given RBaseObject object if not already exists, then executes the ToNativeNodeGen task with the mirror object."]}
{"SampleId": 1314727, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name."]}
{"SampleId": 5440430, "Origin": "Appends a quoted string to a given buffer.", "Reference": "Appends a quoted string to the given string buffer.", "LLMCandidates": ["Appends a quoted string to a given buffer using an intermediate `StringBuilder` for efficient escaping.", "Appends a quoted string to a given buffer using an intermediate `StringBuilder` to handle escaping characters.", "Appends a quoted string to a given buffer using a new intermediate `StringBuilder` object.", "Appends a quoted string to a given buffer using an intermediate StringBuilder for escaping special characters.", "Appends a quoted string to a new intermediate buffer, then adds the resulting string to the original buffer."]}
{"SampleId": 296746, "Origin": "Return -1 if there are no tokens\n on channel between i and 0.", "Reference": "Return -1\nif there are no tokens on channel between {@code i} and 0.", "LLMCandidates": ["Returns the index of the previous token on the given channel, or size() if the EOF token is on that channel.", "Finds the index of the previous token on the given channel, or size() - 1 if the EOF token is on that channel.", "Finds the index of the previous token on the given channel, or the index of the EOF token if no previous token is on that channel. The method now handles the case where i is greater than or equal to the size of the token list, and returns the index of the EOF token in such a case.", "Returns the index of the previous token on the given channel, or size() if the channel's EOF token is the previous token.\n\nIf the given index i is out of bounds, the method returns size() - 1.\n\nNote: This method assumes the list is properly synchronized to avoid concurrent modifications.", "Returns the index of the previous token on the given channel, or size() if the EOF token is on that channel."]}
{"SampleId": 585425, "Origin": "Construct the default web view object.", "Reference": "Construct the CordovaWebView object.", "LLMCandidates": ["Constructs the default web view object based on the user preference for the web view class name.", "Constructs the default web view object based on the specified class name stored in preferences.", "Constructs the default web view object based on the configured class name.", "Constructs the default web view object based on the configured class name.", "Constructs the default web view object based on the class name stored in preferences."]}
{"SampleId": 6018468, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional constant value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional multiplication factor of val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image, with an additional constant value val."]}
{"SampleId": 1402019, "Origin": "This returns false for unstampable rule classes and for rules in the\nhost configuration.", "Reference": "This returns false for unstampable rule classes and for rules used to build tools.", "LLMCandidates": ["Returns false for unstampable rule classes and for rules in the tool configuration.", "Returns false for unstampable rule classes and for rules in the tool configuration.", "Returns false for unstampable rule classes and for rules in the tool configuration.", "Returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration."]}
{"SampleId": 6018004, "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all bands in the input image and writes the result to the provided output image. The output image is first reshaped to match the dimensions of the input image.", "Computes the median for each pixel across all bands in the provided Planar image and writes the result to the specified output image.", "Computes the median for each pixel across all bands in the provided Planar image, and writes the result to the output image. The output image is first resized to match the dimensions of the input image.", "Computes the median for each pixel across all bands in the given Planar image. Additionally, reshapes the output image to match the input image's dimensions.", "Computes the median for each pixel across all bands in the input image and writes the result to the provided output image. The output image is first resized to match the dimensions of the input image."]}
{"SampleId": 6235497, "Origin": "In this test, we close an internal stream in the priority tree but tree should not change.", "Reference": "In this test, we close an internal stream in the priority tree.", "LLMCandidates": ["In this test, we close an internal stream in the priority tree and verify that the tree structure remains unchanged.", "Test case updated to verify that the stream closure correctly maintains the priority tree integrity.", "Test case updated to verify that the stream closure correctly maintains the priority tree integrity.", "The test verifies that closing an internal stream does not affect the tree structure.", "In this test, we close an internal stream in the priority tree and verify that the tree state remains unchanged."]}
{"SampleId": 1462784, "Origin": "Adds a (non-optional non-minus) node to a join group partition.", "Reference": "Adds a (non-optional non-minus) node to a join group partition and\nupdates the set of definitely produced variables accordingly.", "LLMCandidates": ["Adds a non-optional non-minus node to the join group partition.", "Adds a non-optional non-minus node to the join group partition.", "Adds a non-optional non-minus node to the join group partition.", "Adds a non-optional non-minus node to the join group partition.", "Adds a non-optional non-minus node to the join group partition."]}
{"SampleId": 4788910, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown."]}
{"SampleId": 2568441, "Origin": "Gets the value of the 'ValueType' field.", "Reference": "Gets the value of the 'valueType' field.", "LLMCandidates": ["Retrieves the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field."]}
{"SampleId": 3643555, "Origin": "Adds remote file attributes to this remote file class.", "Reference": "Sets remote file attributes to this remote file class.", "LLMCandidates": ["Sets remote file attributes on this remote file class based on the class of the provided attribute.", "Sets the attributes of the remote file class based on the class of the provided RemoteFileAttributes object.", "Sets remote file attributes for the specified class type.", "Sets remote file attributes for the specified class type.", "Sets remote file attributes to this remote file class based on the class of the provided attribute."]}
{"SampleId": 1947847, "Origin": "Increment the count of triggered synchronous state updates (by one).", "Reference": "Increment the count of triggered synchronous state updates in Litho components (by one).", "LLMCandidates": ["Increments the count of triggered synchronous component state updates (by one).", "Increments the count of triggered synchronous component state updates (by one).", "Increments the count of triggered synchronous component state updates (by one).", "Increments the count of triggered synchronous component state updates (by one).", "Increments the count of triggered synchronous component state updates (by one)."]}
{"SampleId": 4625642, "Origin": "Extracts options from the specified item.", "Reference": "Assigns options to the specified options.", "LLMCandidates": ["Extracts options from the specified item and assigns them to the given options object.", "Extracts options from the specified item.", "Extracts options from the specified item.", "Extracts options from the specified item.", "Extracts options from the specified item."]}
{"SampleId": 1560718, "Origin": "Check whether we are executed on an expired entry before the\ntimer event for expiry was received.", "Reference": "Check whether we are executed on an expired entry before the\ntimer event for the expiry was received.", "LLMCandidates": ["Check if the entry is expired based on the next refresh time and timer, and handle expiry events accordingly.", "Check if the cached entry is expired based on its next refresh time, and handle the expiry event if necessary.", "Check if the entry is expired based on its next refresh time and timer status, and handle expiry events accordingly.", "Check if the entry is expired based on its next refresh time, and handle the expiry event if necessary.", "Check if the entry is expired based on its next refresh time and timer status, and handle expiry events if necessary."]}
{"SampleId": 2913751, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a new internal parsing mechanism.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 5454839, "Origin": "Checks if the given name is a legal binary name.", "Reference": "Checks if the given name is a legal type name.", "LLMCandidates": ["Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name."]}
{"SampleId": 4003873, "Origin": "StringMap\n      is created for the configuration property file and is passed\n      into the framework.", "Reference": "A case\ninsensitive StringMap is\ncreated for the configuration property file and is passed into the\nframework.", "LLMCandidates": ["The configuration property file is passed into the framework.", "The configuration property file is passed into the framework via a StringMap object.", "The configuration property file is passed into the framework through a LifecycleManager instance.", "The configuration property file is passed into the framework through a LifecycleManager instance.", "The configuration property file is passed into the framework."]}
{"SampleId": 4903011, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if the deletion policy can release index commits whose sequence numbers are less than or equal to the latest global checkpoint.", "Checks if the deletion policy can release index commits with the latest checkpoint based on the maximum sequence number from the last commit.", "Checks if the deletion policy can release index commits whose sequence numbers are less than or equal to the latest global checkpoint.", "Checks if the deletion policy can release index commits that are older than the latest global checkpoint.", "Checks if the deletion policy can release index commits that are older than the latest global checkpoint."]}
{"SampleId": 236975, "Origin": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenameOptions)}\nmethod.", "Reference": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)}\nmethod.", "LLMCandidates": ["Tests for the `BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)` method.", "Tests for the `BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)` method.", "Tests for the `BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)` method, which now uses `RenamePOptions` instead of `RenameOptions`.", "Tests for the `BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)` method.", "Tests for the `BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)` method."]}
{"SampleId": 5454963, "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.", "Reference": "Resolves a collection of root modules to create a configuration.", "LLMCandidates": ["Resolves a collection of root modules, with service binding, to create configuration.", "Resolves a collection of root modules to create configuration, without service binding.", "Resolves a collection of root modules to create configuration, with service binding.", "Resolves a collection of root modules to create a configuration, with service binding.", "Resolves a collection of root modules to create a configuration with service binding."]}
{"SampleId": 2887717, "Origin": "Returns the Java type corresponding to the given method descriptor.", "Reference": "Returns the {@link Type} corresponding to the given method descriptor.", "LLMCandidates": ["Returns the Type object corresponding to the given method descriptor.", "Returns the Type object corresponding to the given method descriptor, constructed from the provided characters and position.", "Returns the Type object corresponding to the given method descriptor.", "Returns the Java type corresponding to the given method descriptor, using a new internal constructor.", "Returns the Type object corresponding to the given method descriptor."]}
{"SampleId": 4386726, "Origin": "SHA256 tree hash does not match To ensure that part data is\nnot corrupted in transmission, you compute a SHA256 tree hash of the\npart and include it in your request.", "Reference": "SHA256 tree hash does not matchTo ensure that part data is not\ncorrupted in transmission, you compute a SHA256 tree hash of the part and\ninclude it in your request.", "LLMCandidates": ["SHA256 tree hash is used to ensure that part data is not corrupted in transmission. The request includes the computed SHA256 tree hash to verify integrity during processing.", "SHA256 tree hash is used to ensure that part data is not corrupted in transmission. The request includes a computed SHA256 tree hash of the part to verify integrity during upload.", "SHA256 tree hash is used to ensure that part data is not corrupted in transmission. The request includes the computed SHA256 tree hash for verification.", "SHA256 tree hash ensures that part data is not corrupted in transmission. The request includes the computed SHA256 tree hash to verify integrity upon reception.", "To ensure that part data is not corrupted in transmission, you compute a SHA256 tree hash of the part and include it in your request. The updated code includes a protocol factory for improved compatibility."]}
{"SampleId": 6326658, "Origin": "Returns an instance of a GLSL data type for the given {@link DataType}.", "Reference": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "LLMCandidates": ["Returns an instance of a GLSL data type for the given ShaderVariable.", "Returns an instance of a GLSL data type for the given `ShaderVariable`.", "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "Returns an instance of a GLSL data type for the given `ShaderVariable`.", "Returns an instance of a GLSL data type for the given `ShaderVariable`."]}
{"SampleId": 4615504, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["If nodes returned are to be further used, they must be finalized via `ANode#finish()`.", "If nodes returned are to be further used, they must be finalized via `ANode#finish()`.", "The iteration over children is now performed using the provided `childIter()` method.", "If nodes returned are to be further utilized, they must be finalized via `ANode#finish()`.", "The iter method now uses the childIter() method to traverse the children of the parent node."]}
{"SampleId": 711380, "Origin": "Tests if this string starts with any specified prefixes.", "Reference": "Tests if this CharSequence starts with any specified prefixes.", "LLMCandidates": ["Tests if this string starts with any specified prefixes, now supports CharSequence type for self and prefixes arguments.", "Tests if the given CharSequence starts with any of the specified prefixes.", "Tests if this string starts with any specified prefixes, now supports CharSequence for self and prefixes arguments.", "Tests if this CharSequence starts with any specified prefixes.", "Tests if this CharSequence starts with any specified prefixes."]}
{"SampleId": 6049196, "Origin": "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Reference": "Returns the user thread with the primary key or throws a {@link NoSuchUserThreadException} if it could not be found.", "LLMCandidates": ["Returns the user thread with the primary key or throws a `com.liferay.privatemessaging.NoSuchUserThreadException` if it could not be found.", "Returns the user thread with the primary key or throws a `com.liferay.privatemessaging.NoSuchUserThreadException` if it could not be found.", "Returns the user thread with the primary key or throws a `com.liferay.privatemessaging.NoSuchUserThreadException` if it could not be found.", "Returns the user thread with the primary key or throws a `com.liferay.privatemessaging.NoSuchUserThreadException` if it cannot be found.", "Returns the user thread with the primary key or throws a `com.liferay.privatemessaging.NoSuchUserThreadException` if it could not be found."]}
{"SampleId": 3892009, "Origin": "Stub of {@link Plugin#willDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "Reference": "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "LLMCandidates": ["Stub of `Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)` for subclasses to override.", "Stub of `Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)` for subclasses to override.", "Stub of `@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)` for subclasses to override.", "Stub of `Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)` for subclasses to override.", "Stub of `Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)` for subclasses to override"]}
{"SampleId": 5640472, "Origin": "Observer methods with other transaction phase\nare scheduled for the corresponding transaction phase.", "Reference": "Transactional observer methods are scheduled to be executed in the corresponding transaction phase.", "LLMCandidates": ["Observer methods with other transaction phase are scheduled with an additional exception handler for asynchronous notifications.", "Observer methods with other transaction phase now handle exceptions using a CollectingExceptionHandler.", "Observer methods with other transaction phase are scheduled for the corresponding transaction phase, with an additional exception handler for observed events.", "Observer methods with other transaction phase are scheduled for the corresponding transaction phase, with additional handling of exceptions via a CollectingExceptionHandler.", "Observer methods with other transaction phase are scheduled with an additional exception handler for any errors encountered during notification."]}
{"SampleId": 5246023, "Origin": "Use the given SleuthkitCase to update the data used to determine the\navailable filters.", "Reference": "Update the data used to determine the available filters.", "LLMCandidates": ["Use the given SleuthkitCase to update the data used to determine the available filters, including datasource information.", "Uses the given SleuthkitCase to update the data used to determine the available filters, handling potential data exceptions.", "Use the given SleuthkitCase to update the data used to determine the available filters, handling potential data errors.", "Use the given SleuthkitCase to update the data used to determine the available filters, including datasources. The method now includes exception handling for datasource lookups.", "Use the given SleuthkitCase to update the data used to determine the available filters, including datasources. An exception is thrown if there is an error looking up a datasource."]}
{"SampleId": 2609132, "Origin": "Extract a user rating vector from a rating cursor.", "Reference": "Extract a user rating vector from a rating stream.", "LLMCandidates": ["Extracts a user rating vector from an object stream of ratings.", "Extract a user rating vector from an object stream of ratings.", "Extract a user rating vector from an object stream of ratings.", "Extracts a user rating vector from an object stream of ratings.", "Extracts a user rating vector from an object stream of ratings."]}
{"SampleId": 1644557, "Origin": "Adds a  to a buffer, with each  being separated by a \":\".", "Reference": "Adds a  to a ,\nwith each  being separated by a \":\".", "LLMCandidates": ["Adds a character to a buffer, with each character being separated by a \":\".", "Adds a  to a buffer, with each  being separated by a \":\".", "Appends a string to a buffer, with each string being separated by a ':'. The parameter type is now `StringBuilder` instead of `StringBuffer`.", "Appends a string to a buffer, with each string being separated by a ':'.", "Appends a string to a buffer, with each string being separated by a \":\"."]}
{"SampleId": 5433548, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if\n{@link Options#noComment} is set to true.", "Do nothing if\n{@link Options#noComment} is set to true.", "Do nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Do nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Do nothing if\n{@link BaseConfiguration#noComment} is set to true."]}
{"SampleId": 1806089, "Origin": "Standard setter for the leftwardLabel String for this RelationshipType", "Reference": "Standard setter for the leftwardType String for this RelationshipType", "LLMCandidates": ["Setter for the leftwardType String for this RelationshipType.", "Setter for the leftwardType String for this RelationshipType.", "Setter for the leftwardType String for this RelationshipType.", "Setter for the leftwardType String for this RelationshipType", "Setter for the leftwardType String for this RelationshipType"]}
{"SampleId": 2444053, "Origin": "Create a {@link ServiceLocator}.", "Reference": "Create a {@link InstanceManager}.", "LLMCandidates": ["Creates an {@link InstanceManager}.", "Creates an {@link InstanceManager} instance.", "Creates an {@link InstanceManager} instance.", "Creates an {@link InstanceManager}.", "Creates an {@link InstanceManager}."]}
{"SampleId": 3490831, "Origin": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType, Module)}.", "Reference": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, Module)}.", "LLMCandidates": ["The initial exclusion check now occurs before calling the `canAnalyze` method.", "It will also exclude files that cannot be analyzed by the `canAnalyze` method.", "The initial exclusion check now occurs before calling the `canAnalyze` method.", "The method now skips the initial check of file analysis eligibility performed by the `canAnalyze` method.", "The initial result is determined by calling the `canAnalyze` method."]}
{"SampleId": 3270265, "Origin": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableReference}", "Reference": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableAccess}", "LLMCandidates": ["If the name is a single identifier, then this can be reclassified as an `ASTVariableAccess`.", "If the name is a single identifier, then this can be reclassified as an `ASTVariableAccess`.", "If the name is a single identifier, then this can be reclassified as an `ASTVariableAccess`.", "If the name is a single identifier, then this can be reclassified as an `ASTVariableAccess`.", "If the name is a single identifier, then this can be reclassified as an `ASTVariableAccess`."]}
{"SampleId": 2706941, "Origin": "Set Account Type.", "Reference": "Set Kontenart.", "LLMCandidates": ["Sets the Account Type value.", "Sets the Account Type value.", "Sets the Account Type value.", "Sets the Account Type value.", "Sets the Account Type value."]}
{"SampleId": 5051650, "Origin": "Returns the object with the settings used for calls to labelAudio.", "Reference": "Returns the object with the settings used for calls to getEvaluation.", "LLMCandidates": ["Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation."]}
{"SampleId": 3991859, "Origin": "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)}\nwith default options.", "Reference": "This is a convenience method for {@link #electLeaders(ElectionType, Set, ElectLeadersOptions)}\nwith preferred election type and default options.", "LLMCandidates": ["This method is deprecated. Please refer to the overloaded method that allows customization of the options.", "This method is deprecated. Use  {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with custom options instead.", "Deprecated: This method has been deprecated. Please use `electPreferredLeaders(Collection<TopicPartition>, ElectPreferredLeadersOptions)` with custom options.", "This method is deprecated. Please use the overloaded version that allows customization of the options.", "This method is deprecated. Please refer to the overloaded method `electPreferredLeaders(Collection, ElectPreferredLeadersOptions)` for the deprecated behavior."]}
{"SampleId": 615862, "Origin": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't contain the param.", "Reference": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't have a value set for the parameter.", "LLMCandidates": ["Returns the value of the specific parameter from the provided `ParamInfo` object, or the default value if the parameter is not found. If the parameter is required and has no default value, an `IllegalArgumentException` is thrown.", "Returns the value of the specific parameter from the provided list of aliases or the default value defined in the `info` if the parameter is not found.", "Returns the value of the specific parameter from the provided map, or the default value if not found. The method checks for duplicate parameter names and throws an exception if encountered.", "Returns the value of the specific parameter from the given set of param names and aliases, or default value defined in the provided `ParamInfo` object if the parameter is not found. If the parameter is duplicated, an `IllegalArgumentException` is thrown.", "Returns the value of the specific parameter from the given set of param names and aliases, or default value defined in the provided `ParamInfo` if the parameter is not found."]}
{"SampleId": 3241790, "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}", "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}", "LLMCandidates": ["Creates an instance of `{@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}` representing the `moveFromRangeEnd` element.", "Create an instance of `{@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}`.", "Creates an instance of `{@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}`.", "Create an instance of `{@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}`.", "Creates an instance of `{@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}`."]}
{"SampleId": 3734028, "Origin": "Is the value with this qualifier less than the length of any of the arrays?", "Reference": "Is the value with this qualifier less than the length of any of the sequences?", "LLMCandidates": ["Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?"]}
{"SampleId": 241096, "Origin": "Clears the given persisted files stored in {@link #mPersistedFiles}.", "Reference": "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.", "LLMCandidates": ["Clears the given persisted file IDs from the associated persistent files map.", "Clears the given persisted files identified by their IDs from the associated persistent file information map.", "Clears the given persisted file IDs stored in the associated map.", "Clears the given persisted file IDs stored in the associated map.", "Clears the given persisted file IDs from the associated cached information stored in `mPersistedFilesInfo`."]}
{"SampleId": 3679705, "Origin": "Compares this {@code LocalDateTime} to another date-time.", "Reference": "Compares this date-time to another date-time.", "LLMCandidates": ["Compares this `ChronoLocalDateTime` to another date-time, handling `LocalDateTime` explicitly for improved performance.", "Compares this `ChronoLocalDateTime` to another date-time, handling `LocalDateTime` explicitly for performance.", "Compares this `ChronoLocalDateTime` to another date-time, handling `LocalDateTime` explicitly for improved performance.", "Compares this `ChronoLocalDateTime` to another date-time, optionally handling `LocalDateTime` values.", "Compares this `ChronoLocalDateTime` to another date-time, handling `LocalDateTime` explicitly."]}
{"SampleId": 2915631, "Origin": "This returns a trade based on the specified trade date.", "Reference": "This returns a trade based on the specified trade date and upfront fee.", "LLMCandidates": ["Creates a trade based on the specified trade date, adjusting for accrual start date if necessary.", "Creates a trade based on the specified trade date, adjusting the accrual start date if necessary.", "Creates a trade based on the specified trade date, adjusting the accrual start date if necessary.", "Creates a trade based on the specified trade date, adjusting the accrual start date if necessary.", "Creates a trade based on the specified trade date, adjusting the accrual start date if necessary."]}
{"SampleId": 2247229, "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied function.", "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "LLMCandidates": ["Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function."]}
{"SampleId": 2911098, "Origin": "This parses the specified byte source to determine if it appears to be FpML.", "Reference": "This checks the first part of the byte source to see if it appears to be FpML.", "LLMCandidates": ["This method reads the first 2000 bytes of the specified byte source and checks if it contains specific ASCII sequences indicative of FpML format.", "This method checks the first 2000 bytes of the specified byte source to determine if it contains specific ASCII sequences indicative of FpML format.", "Checks the first 2000 bytes of the source to identify potential FpML format based on specific byte sequences.", "This method checks a portion of the specified byte source to identify potential FpML data based on specific byte sequences. The process involves checking UTF-8 and UTF-16 encodings for the FpML signature.", "Checks the first 2000 bytes of the source to detect potential FpML format based on specific UTF-8 and UTF-16 byte sequences."]}
{"SampleId": 4476807, "Origin": "The {@link KeyCreateOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateKeyOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The field `{@link CreateKeyOptions#isEnabled()}` is set to true by Azure Key Vault if not specified.", "The `CreateKeyOptions#isEnabled()` enabled field is set to true by Azure Key Vault if not specified.", "The field `{@link CreateKeyOptions#isEnabled()}` is set to true by Azure Key Vault, if not specified.", "The `CreateKeyOptions#isEnabled()` enabled field is set to true by Azure Key Vault if not specified.", "The input parameter type has been changed to `CreateKeyOptions`."]}
{"SampleId": 3629279, "Origin": "See Immutable List Static Factory Methods for details.", "Reference": "See Unmodifiable Lists for details.", "LLMCandidates": ["See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details."]}
{"SampleId": 3428160, "Origin": "Helper to parse the imported file into an {@link ImportedGradeWrapper} depending on its type", "Reference": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "LLMCandidates": ["Helper to parse the imported file into an `ImportedSpreadsheetWrapper` depending on its type.", "Helper to parse the imported file into an ImportedSpreadsheetWrapper depending on its type.", "Helper to parse the imported file into an `ImportedSpreadsheetWrapper` depending on its type.", "Helper to parse the imported file into an `ImportedSpreadsheetWrapper` depending on its type.", "Helper to parse the imported file into an `ImportedSpreadsheetWrapper` depending on its type."]}
{"SampleId": 4715193, "Origin": "Fixes a bug with the Swing JFileChooser: if you entered a new\nfilename in the save dialog and press Enter the \nmethod returns  instead of the filename.", "Reference": "Swing JFileChooser: if you entered a new filename in the save dialog and\npress Enter the  method returns\n instead of the filename.", "LLMCandidates": ["Fixed a bug that caused the method to return prematurely if a new filename was entered in the save dialog and Enter was pressed.", "Fixes a bug with the Swing JFileChooser: if you enter a new filename in the save dialog and press Enter, the method now properly returns the filename.", "Fixed a bug where the method would return without a filename if a new filename was entered in the save dialog and Enter was pressed.", "Fixes a bug where the method would return without a filename if a new filename was entered in the save dialog and Enter was pressed.", "Fixed a bug where entering a new filename in the save dialog and pressing Enter would result in the method returning instead of the filename."]}
{"SampleId": 1326993, "Origin": "Returns the operation enum value.", "Reference": "Returns the operation constant name.", "LLMCandidates": ["Returns the operation constant value in uppercase, using CamelCase to UnderScore conversion.", "Returns the operation constant value, converted to uppercase and with hyphens replaced by underscores.", "Returns the operation constant value in uppercase underscore format.", "Returns the operation constant value in uppercase, using CamelCase to Underscore conversion.", "Returns the operation constant value in uppercase, using CamelCase to Underscore conversion."]}
{"SampleId": 3937267, "Origin": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "Reference": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "LLMCandidates": ["Saves all dictionary entries where the count is greater than the threshold. Note: The order of indices has been changed to be contiguous, starting from 0.", "Saves all dictionary entries with count > threshold. Note: Feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries with count > threshold. Note: feature indices are now iterated over using entry set.", "Saves all dictionary entries with count > threshold. Note: Feature indices are now based on contiguous values starting at 0.", "Saves all dictionary entries with count > threshold. Note: Feature indices are changed to contiguous values starting at 0."]}
{"SampleId": 3036919, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["The supported network tunnel types have been expanded to include GRE in addition to VXLAN and VLAN modes.", "SONA now supports VXLAN, GRE and VLAN modes.", "Supported network tunnel types now include GRE in addition to VXLAN and VLAN modes.", "SONA now supports VXLAN, GRE and VLAN modes.", "SONA now supports VXLAN, GRE and VLAN modes."]}
{"SampleId": 2443799, "Origin": "Create new instance of {@link InstanceManagerStore}.", "Reference": "Create new instance of {@link InjectionManagerStore}.", "LLMCandidates": ["Creates a new instance of InjectionManagerStore using dependency injection.", "Creates a new instance of `InjectionManagerStore`.", "Creates a new instance of InjectionManagerStore.", "Creates a new instance of InjectionManagerStore.", "Creates a new instance of InjectionManagerStore using dependency injection."]}
{"SampleId": 2018806, "Origin": "Sets dependency options.", "Reference": "Sets the dependency management options.", "LLMCandidates": ["Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options."]}
{"SampleId": 1611711, "Origin": "Setter for comment format.", "Reference": "Setter for comment pattern.", "LLMCandidates": ["Sets the comment format to the provided pattern.", "Sets the comment format using the provided pattern.", "Sets the comment format using the provided pattern.", "Setter for comment pattern.", "Setter for comment pattern."]}
{"SampleId": 2484705, "Origin": "Sets the entity attribute of this User to\nentity", "Reference": "Sets the entity attribute of this User's element\nto entity", "LLMCandidates": ["Sets the entity attribute of this User to entity, now assigned to the userElement element instead of user.", "Sets the entity attribute of this User to entity, now targeting the userElement element.", "Sets the entity attribute of this User to entity, now referencing userElement instead of user.", "Sets the entity attribute of this User to entity, now targeting the userElement element.", "Sets the entity attribute of this User to entity, now targeting the userElement element."]}
{"SampleId": 5456635, "Origin": "More specifically, the root modules are resolved as if by calling\n{@code resolveRequires}.", "Reference": "More specifically, the root modules are resolved as if by calling\n{@code resolve}.", "LLMCandidates": ["Root modules are resolved using the `resolve` method followed by `bind()`.", "Root modules are resolved using the `resolve` method and then bound with the `bind` operation.", "Root modules are resolved using the `resolve` method and then bound with the `bind` operation.", "Root modules are resolved and bound as if by calling `resolve` followed by `bind`.", "Root modules are resolved using the new `resolve` and `bind` methods of the `Resolver` class."]}
{"SampleId": 2443742, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.", "LLMCandidates": ["Get the set of all custom providers registered for the given service provider contract in the underlying `InjectionManager` container.", "Get the set of all custom providers registered for the given service provider contract in the underlying `InjectionManager injection manager` container.", "Get the set of all custom providers registered for the given service provider contract in the underlying `InjectionManager` container.", "Get the set of all custom providers registered for the given service provider contract in the underlying `InjectionManager injection manager` container.", "Retrieves the set of custom providers registered for the given service provider contract in the underlying `InjectionManager` container."]}
{"SampleId": 132533, "Origin": "Generates the form to post to the dialog frame.", "Reference": "Generates the dialog parameters.", "LLMCandidates": ["Generates the form parameters to submit a post request to the dialog frame.", "Generates the form parameters to submit a post request to the dialog frame.", "Generates the form parameters to submit a post request to the dialog frame.", "Generates the form parameters to submit a post request to the dialog frame.", "Generates the form parameters for the dialog frame."]}
{"SampleId": 1042147, "Origin": "Returns  If the\n is greater than the .", "Reference": "Returns  If the\n is greater than the  and \n is not used.", "LLMCandidates": ["Returns true if the update time is after the specified watermark, or false if the update time is before the maximum lookback time.", "Checks if the update time is after the watermark value, or before the maximum lookback time.", "Returns  true if the current update time is after the watermark value, or false if the update time is within the maximum lookback time.", "Returns true if the update time is after the watermark threshold, otherwise false if the update time is within the max lookback time.", "Checks if the update time is after the watermark value, or before the maximum lookback time."]}
{"SampleId": 2048399, "Origin": "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate.", "Reference": "After calling this method, call {@link\n#configure(AudioFormat)} to start using the new sample rate.", "LLMCandidates": ["The pending output sample rate is now stored in `pendingOutputSampleRate` instead of `pendingOutputSampleRateHz`. Remember to call `#configure(int, int, int)` afterwards to activate the new sample rate.", "The pending output sample rate is now assigned to `pendingOutputSampleRate` instead of `pendingOutputSampleRateHz`. Call `#configure(int, int, int)` to start using the new sample rate.", "The pending output sample rate is now assigned to `pendingOutputSampleRate` instead of `pendingOutputSampleRateHz`. Call `#configure(int, int, int)` to start using the new sample rate.", "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate.", "The pending output sample rate is now stored in `pendingOutputSampleRate` instead of `pendingOutputSampleRateHz`."]}
{"SampleId": 3846374, "Origin": "Move this TouchDisplay to a new x-y position and bounds.", "Reference": "Move this TouchDisplay to a new x-y position.", "LLMCandidates": ["Move the TouchDisplay to a new x-y position.", "Move the TouchDisplay to a new x-y position.", "Move the TouchDisplay to a new x-y position.", "Move this TouchDisplay to a new x-y position.", "Move the TouchDisplay to a new x-y position."]}
{"SampleId": 6019207, "Origin": "Triangulate two view using the Discrete Linear Transform (DLT)", "Reference": "Triangulate two view using the Discrete Linear Transform (DLT) with an uncalibrated camera.", "LLMCandidates": ["Triangulate two views using the Discrete Linear Transform (DLT) with uncalibrated input.", "Triangulate two views using the Discrete Linear Transform (DLT) with an unwrapped calibration.", "Triangulate two views using the Discrete Linear Transform (DLT) with an unwrapped calibration.", "Triangulate two views using the Discrete Linear Transform (DLT) with an uncalibrated DLT algorithm.", "Triangulate two views using the Discrete Linear Transform (DLT) with uncalibrated input."]}
{"SampleId": 3942113, "Origin": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the right returned tree.", "Reference": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the left returned tree.", "LLMCandidates": ["Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree."]}
{"SampleId": 570069, "Origin": "Gets the full path from a full filename, which is the prefix + path,\nand also excluding the final directory separator.", "Reference": "Gets the full path from a full fileName, which is the prefix + path,\nand also excluding the final directory separator.", "LLMCandidates": ["Gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator.", "Returns the full path from a full filename, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator."]}
{"SampleId": 3322433, "Origin": "As the name\nimplies,  indicates whether the train or cart is in the process\nof leaving the track.", "Reference": "As the name\nimplies, {@code trainLeaving} indicates whether the train or cart is in the process\nof leaving the track.", "LLMCandidates": ["Indicates whether the train or cart has departed the track.", "Indicates whether the train or cart has left the track.", "Calculates the locked status of the train or cart based on the current state and delay parameters.", "Calculates the locked status of the train or cart based on the current state and delay parameters.", "Indicates whether the train or cart has departed the track."]}
{"SampleId": 4396607, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data values redacted for security.", "Returns a string representation of this object, with sensitive data values masked for security.", "Returns a string representation of this object, with sensitive data values redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, omitting sensitive data for security."]}
{"SampleId": 234560, "Origin": "When the context is being reinitialized, this call blocks until the reinitialization succeeds\nor fails.", "Reference": "When the context is being reinitialized, this call returns an empty optional.", "LLMCandidates": ["This call blocks until the resource acquisition succeeds or fails during context reinitialization.", "This call acquires a resource that blocks until the reinitialization completes or encounters an error.", "Acquires a resource that blocks until reinitialization completes, returning an Optional containing the resource or an empty Optional if reinitialization fails.", "Acquires a resource that blocks until reinitialization completes, returning an Optional containing the resource if successful or empty if reinitialization fails.", "Acquires a resource that blocks until reinitialization completes, returning an optional CountResource if successful or empty otherwise."]}
{"SampleId": 5437406, "Origin": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the default.", "Reference": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the specified default.", "LLMCandidates": ["If the property has not been set, or its value is negative, set the timeout length to the default value, which is specified in milliseconds.", "If the property has not been set, or its value is negative, set the timeout length to the default value, which is specified in milliseconds.", "If the property has not been set or its value is negative, set the timeout length to the default value of {def} seconds.", "If the property has not been set, or if its value is negative, set the timeout length to the default value of {def}. Additionally, if debug logging is enabled, the current value in seconds will be logged.", "If the property has not been set, or if its value is negative, set the timeout length to the default value, which is {def} milliseconds."]}
{"SampleId": 4386732, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["This method now returns a `DeleteVaultNotificationsResult` object instead of `Void`. Additionally, it uses the `protocolFactory` variable to handle the request and response.", "Access Control Using AWS Identity and Access Management (IAM) to delete vault notifications.", "Access Control Using AWS Identity and Access Management (IAM) to delete vault notifications.", "Access Control Using AWS Identity and Access Management (IAM) to delete vault notifications.", "This method now returns a `DeleteVaultNotificationsResult` object and includes handling for the response using a custom `HttpResponseHandler`."]}
{"SampleId": 1459126, "Origin": "Verify that a named subquery exists for each INCLUDE.", "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.", "LLMCandidates": ["Verify that a named subquery exists for each INCLUDE and that the solution set for the named subquery exists in the current context.", "Verify that a named subquery exists for each INCLUDE, and if not, checks if the solution set with the given name exists in the context.", "Verify that a named subquery exists for each INCLUDE, and if not, checks if the solution set with the given name exists in the current context.", "Verify that a named subquery exists for each INCLUDE, and if not, checks if the solution set with the given name exists in the context.", "Verify that a named subquery exists for each INCLUDE, and if not, checks if the solution set with the given name exists in the current context."]}
{"SampleId": 1435989, "Origin": "Make a copy of a range of bytes from the passed in data array.", "Reference": "Make a copy of a range of bytes from the passed in array.", "LLMCandidates": ["Creates a copy of a range of bytes from the passed-in original array.", "Makes a copy of a range of bytes from the passed-in original array.", "Creates a copy of a range of bytes from the passed-in original array.", "Creates a copy of a range of bytes from the specified original array.", "Creates a copy of a range of bytes from the specified original array."]}
{"SampleId": 5440918, "Origin": "Returns {@code true} if there is a value in the current thread's copy of\nthis thread-local variable, even if that values is {@code null}.", "Reference": "Returns {@code true} if there is a value in the current strand's copy of\nthis thread-local variable, even if that values is {@code null}.", "LLMCandidates": ["Returns `true` if there is a value in the current strand's copy of this thread-local variable, even if that value is `null`.", "Checks if there is a value for this object in the current strand's thread-local map.", "Checks if there is a value in the current strand's copy of this thread-local variable, even if that value is `null`.", "Returns `true` if there is a value in the current thread's `Strand`'s copy of this thread-local variable, even if that value is `null`.", "Checks if there is a value in the current strand's copy of this thread-local variable, even if that value is `null`."]}
{"SampleId": 3678109, "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "LLMCandidates": ["Applications should use the `with(WithAdjuster)` method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the `with(WithAdjuster)` method on the\ndate-time object to make the adjustment passing this as the argument.", "Applications should use the `with(WithAdjuster)` method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the `with(WithAdjuster)` method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the `with(WithAdjuster)` method on the\ndate-time object to make the adjustment passing this as the argument."]}
{"SampleId": 4386719, "Origin": "Glacier provides you a unique archive ID, an opaque string of\ncharacters.", "Reference": "Amazon Glacier\nprovides you a unique archive ID, an opaque string of characters.", "LLMCandidates": ["The protocol factory is now explicitly defined to handle the request and response.", "Provides you with a unique archive ID, an opaque string of characters.", "Provides you with a unique archive ID, an opaque string of characters.", "Provides a unique archive ID, an opaque string of characters.", "The provided code includes handling of a new protocol factory parameter and uses a more specific response handler creation method."]}
{"SampleId": 2701561, "Origin": "Set Zu ber.", "Reference": "Set Zu berechn.", "LLMCandidates": ["Set the quantity to invoice in price UOM.", "Set the quantity to invoice in price UOM.", "Set the quantity to invoice in price UOM.", "Set the quantity to be invoiced in the price unit of measure.", "Sets the quantity to the invoice in price unit of measure."]}
{"SampleId": 5440227, "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .", "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .", "LLMCandidates": ["The method now operates on the `targetTypeAndInfo` variable instead of `value`, and is applicable for type references with a sort of `EXCEPTION_PARAMETER`.", "The method now operates on the `targetTypeAndInfo` variable, which replaces `value` in the original code. The method still requires that the target type reference's sort is `{@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER}`.", "This method must only be used for type references\nwhose sort is `{@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER}`.", "The target type and information mask must only be used for type references whose sort is `{@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER}`.", "This method must only be used for type references whose sort is `{@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER}` ."]}
{"SampleId": 2393774, "Origin": "See {@link ClientsClassDefinition#getWhitelistedProperties()}", "Reference": "See {@link ClientsClassDefinition#getIncludedProperties()}", "LLMCandidates": ["See {@link ClientsClassDefinition#getIncludedProperties()}.", "See {@link ClientsClassDefinition#getIncludedProperties()}.", "See {@link ClientsClassDefinition#getIncludedProperties()} for details.", "See {@link ClientsClassDefinition#getIncludedProperties()} for details.", "See {@link ClientsClassDefinition#getIncludedProperties()} for details."]}
{"SampleId": 2230496, "Origin": "Ensures that the quorum is present if the quorum is configured and the operation service is quorum aware.", "Reference": "Ensures that there is no split brain if the split brain protection is configured and the operation\nservice is split brain protection aware.", "LLMCandidates": ["Ensures that no split-brain condition exists if the split-brain protection is configured and the operation service is split-brain aware.", "Ensures that no split brain condition exists if split brain protection is enabled and the operation service is split brain aware.", "Ensures that no split brain condition exists if the split brain protection is configured and the operation service is split brain aware.", "Ensures that no split brain condition is present if split brain protection is configured and the operation service is split brain aware.", "Ensures that no split-brain condition is present if the split-brain protection is configured and the operation service is split-brain aware."]}
{"SampleId": 4477703, "Origin": "Sets the {@link RetryPolicy} that is used when each request is sent.", "Reference": "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "LLMCandidates": ["Sets the `HttpPipelinePolicy` that is used when each request is sent.", "Sets the `HttpPipelinePolicy` that is used when each request is sent.", "Sets the `HttpPipelinePolicy` that is used when each request is sent.", "Sets the `HttpPipelinePolicy` that is used when each request is sent.", "Sets the `HttpPipelinePolicy` that is used when each request is sent."]}
{"SampleId": 1842058, "Origin": "Provides the location to dockerfile", "Reference": "Provides the location to devfile yaml file", "LLMCandidates": ["Provides the location to the devfile.", "Provides the location to the `devfile` located at the specified GitHub repository branch and filename.", "Provides the location to the `devfile` located at `https://raw.githubusercontent.com` for the given `username`, `repository`, `branch`, and `devfileFilename`.", "Provides the location to the devfile.", "Provides the location to the devfile."]}
{"SampleId": 2113430, "Origin": "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true\nin which case the enriched (split) binding will be returned.", "Reference": "For a split parent package this will include potentially enriching with siblings,\nin which case the enriched (split) binding will be returned.", "LLMCandidates": ["This method no longer checks for split siblings. The enriched binding is always returned regardless of the `checkForSplitSiblings` flag.", "The provided code no longer includes the checkForSplitSiblings parameter, so the original comment regarding enriching with siblings is irrelevant.", "The provided code no longer includes the checkForSplitSiblings parameter, which is reflected in the comment.", "The method now takes only two arguments, element and module, and skips the check for split siblings.", "The method now takes only two arguments, element and module, and skips the check for split siblings."]}
{"SampleId": 402718, "Origin": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link Components#AMBARI_SERVER}.", "Reference": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link RootComponent#AMBARI_SERVER}.", "LLMCandidates": ["Gets all of the `AlertDefinition`s that exist on the path for `RootComponent#AMBARI_SERVER`.", "Gets all of the `AlertDefinition`s that exist on the path for `RootComponent#AMBARI_SERVER`.", "Gets all of the `AlertDefinition`s that exist on the path for `RootComponent#AMBARI_SERVER`.", "Retrieves all the `AlertDefinition`s associated with the `RootComponent#AMBARI_SERVER`.", "Retrieves all existing `AlertDefinition`s on the path for `RootComponent#AMBARI_SERVER`."]}
{"SampleId": 4386724, "Origin": "Glacier, you first initiate a job, and after the job completes, you\ndownload the data.", "Reference": "To retrieve an archive or retrieve a vault inventory from Amazon Glacier,\nyou first initiate a job, and after the job completes, you download the\ndata.", "LLMCandidates": ["The method now handles protocol factory configuration via the provided protocolFactory argument.", "The provided method now uses the `protocolFactory` variable to handle the request and response, and it includes additional metadata configuration for the response handler.", "The method now uses protocol factory to handle response handling and supports streaming success responses.", "The method now handles protocol factory configuration through the provided protocolFactory argument.", "The method now handles protocol factory configuration through the provided protocolFactory argument."]}
{"SampleId": 2223749, "Origin": "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "Reference": "Derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "LLMCandidates": ["Derives secret key by PBKDF2 algorithm (1000 iterations of SHA256) using the provided file key.", "Generates a secret key from the provided password using the PBKDF2 algorithm (1000 iterations of SHA256).", "Derives secret key by PBKDF2 algorithm (1000 iterations of SHA256) using fileKey instead of password.", "Derives a secret key by PBKDF2 algorithm (1000 iterations of SHA256) using the provided file key.", "Derives secret key by PBKDF2 algorithm (1000 iterations of SHA256) using fileKey as input."]}
{"SampleId": 3105252, "Origin": "Convert statistics object into JSONObject.", "Reference": "Convert statistics object into JSON.", "LLMCandidates": ["Converts a Statistics object into a JSON string using an ObjectMapper.", "Converts a Statistics object into a JSON string using the ObjectMapper API.", "Converts a Statistics object into a JSON string using the ObjectMapper API.", "Converts Statistics object into a JSON string using ObjectMapper.", "Converts a Statistics object to a JSON string using the ObjectMapper API."]}
{"SampleId": 4404105, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["The deprecation process for workflow type is now eventually consistent.", "This operation is eventually consistent. Additionally, the response handler has been updated to use `SdkJsonProtocolFactory.createResponseHandler()` with a payload flag of `true`.", "This operation is eventually consistent. Additionally, the response now contains a `Response<Void>` object and uses a custom `JsonResponseHandler` for the response.", "The deprecation process for workflow type is now eventually consistent.", "The deprecation process for workflow type is now eventually consistent."]}
{"SampleId": 4776216, "Origin": "Gets a Vector pointing in the direction that this Location is facing", "Reference": "Gets a unit-vector pointing in the direction that this Location is\nfacing.", "LLMCandidates": ["Calculates a Vector representing the direction the Location is facing, based on its yaw and pitch rotations.", "Calculates the direction vector based on the yaw and pitch rotations.", "Calculates a Vector representing the direction the Location is facing, based on its pitch and yaw rotations.", "Calculates a Vector pointing in the direction that this Location is facing, based on the current yaw and pitch rotations.", "Calculates a Vector representing the direction the Location is facing based on its pitch and yaw rotations."]}
{"SampleId": 6049496, "Origin": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "Reference": "or throws a {@link NoSuchMemberRequestException} if it could not be found.", "LLMCandidates": ["The method retrieves the member request entity from the persistence layer using the provided key. If the request is not found, a `com.liferay.so.NoSuchMemberRequestException` is thrown.", "The persistence layer's `findByKey` method is used to retrieve the MemberRequest instance by its key. If the key is not found, a `com.liferay.so.NoSuchMemberRequestException` exception is thrown.", "The persistence layer's `findByKey` method is used to retrieve the MemberRequest instance based on the provided key. If the key is not found, a `com.liferay.so.NoSuchMemberRequestException` is thrown.", "The persistence layer's `findByKey` method is used to retrieve the MemberRequest instance by its key. If the key is not found, a `com.liferay.so.NoSuchMemberRequestException` is thrown.", "The method returns the MemberRequest object if found by key, or throws a com.liferay.so.NoSuchMemberRequestException if it could not be found."]}
{"SampleId": 2647087, "Origin": "Given a bunch of NodeRefs, create SimpleFeatures from the results.", "Reference": "Given a bunch of NodeRefs, create Features from the results.", "LLMCandidates": ["Given a bunch of NodeRefs, create Features from the results.", "Given a bunch of NodeRefs, create Features from the results.", "Creates features from the provided NodeRefs based on the given feature type and geometry factory.", "Given a bunch of NodeRefs, build Features from the results.", "Given a bunch of NodeRefs, build Features from the results."]}
{"SampleId": 2706905, "Origin": "Get Import Account.", "Reference": "Get Import - Kontendefinition.", "LLMCandidates": ["Get the Import Account ID value from the cached data.", "Retrieves the Import Account ID value from the cached data.", "Retrieves the Import Account ID value from the cached data.", "Retrieves the Import Account ID value from the cached data.", "Retrieves the Import Account ID value from the cached data."]}
{"SampleId": 3082050, "Origin": "For adding classpath elements that are not normally on the classpath in the Java version: svm\njars, truffle jars etc.", "Reference": "For adding classpath elements that are only on the classpath in the context of native-image\nbuilding.", "LLMCandidates": ["Adds classpath elements that are not normally on the classpath in the Java version, such as svm jars and truffle jars.", "Adds classpath elements that are not normally on the classpath in the Java version, such as SVM jars and truffle jars.", "Adds classpath elements that are not normally on the classpath in the Java version, ensuring the image classpath is empty.", "Adds classpath elements that are not normally on the classpath in the Java version, ensuring that the image-related classpath is empty.", "For adding classpath elements that are not normally on the classpath in the Java version: SVM jars, Truffle jars, etc."]}
{"SampleId": 1142556, "Origin": "Create a GeoCircle of the right kind given the specified bounds.", "Reference": "Create a GeoCircle from a center and a cutoff angle.", "LLMCandidates": ["Creates a GeoCircle based on the specified planet model, latitude, longitude, and a cutoff angle threshold. If the cutoff angle is below the minimum angular resolution, a degenerate point is returned.", "Creates a GeoCircle based on the specified planet model, latitude, longitude, and a cutoff angle. If the cutoff angle is below the minimum angular resolution, a degenerate point is returned.", "Creates a GeoCircle based on the given planet model, latitude, longitude, and a cutoff angle. If the cutoff angle is less than the minimum angular resolution, it creates a degenerate point instead.", "Creates a GeoCircle based on the specified bounds and cutoff angle. If the cutoff angle is below the minimum angular resolution, it degenerates to a GeoDegeneratePoint.", "Creates a GeoCircle based on the specified planet model, latitude, longitude, and a cutoff angle. If the cutoff angle is below the minimum angular resolution, a degenerate point is returned."]}
{"SampleId": 5630009, "Origin": "Set the nodeType.", "Reference": "Set the newType.", "LLMCandidates": ["Set the newType.", "Set the newType.", "Set the newType.", "Set the newType.", "Set the newType."]}
{"SampleId": 1134393, "Origin": "Sets a new value by changing the offset and docID.", "Reference": "Sets a new value by changing the offset.", "LLMCandidates": ["Sets the packedValue.offset and packedValueDocID.offset to the given offset.", "Sets a new value by changing the offset. Also updates the associated docID value.", "Sets a new value by changing the offset. Additionally, updates the associated docID value.", "Sets a new value by changing the offset. Additionally, updates the associated docID value.", "Sets a new value by changing the offset. Additionally, updates the associated docID in the `packedValueDocID` field."]}
{"SampleId": 2241419, "Origin": "The MD5 hash of the file.", "Reference": "The hash of the file.", "LLMCandidates": ["The content hash of the file.", "The content hash of the file.", "The content hash of the file.", "Returns the content hash of the file.", "Returns the content hash of the file."]}
{"SampleId": 5632363, "Origin": "Creates a list of default files to check for credentials.", "Reference": "Creates a list of files to check for credentials.", "LLMCandidates": ["Creates a list of files to check for credentials, including a user-specified path if available.", "Creates a list of files to check for credentials, including the user-specified path if available.", "Creates a list of files to check for credentials, including a user-specified path if available.", "Creates a list of files to check for credentials, including the user-specified path if available.", "Creates a list of files to check for credentials, optionally including a user-specified path."]}
{"SampleId": 6018464, "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where val is a provided scalar value.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, with an additional scalar value val.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where val represents a global scaling factor."]}
{"SampleId": 4396523, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, omitting sensitive data for security purposes.", "Returns a string representation of this object, omitting sensitive data for security purposes.", "Returns a string representation of this object, with sensitive data masked for security.", "Returns a string representation of this object, omitting sensitive data for security purposes.", "Returns a string representation of this object, omitting sensitive data for security purposes."]}
{"SampleId": 5454801, "Origin": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes.", "Reference": "The entries in the file are assumed to be the fully-qualified\n    class names of provider classes.", "LLMCandidates": ["The provided code assumes the entries in the file represent the fully-qualified binary names of provider classes.", "The provided code assumes the entries in the file represent the fully-qualified binary names of provider classes.", "The provided code assumes the entries in the file represent the fully-qualified binary names of provider classes.", "The provided code assumes the entries in the file are the fully-qualified binary names of provider classes.", "The provided code assumes the entries in the file are the fully-qualified binary names of provider classes."]}
{"SampleId": 3296178, "Origin": "The key for a max value, or null if everything is NaN (no max).", "Reference": "The key for a max value; null if empty or everything is NaN (no max).", "LLMCandidates": ["The key for a max value, or null if no maximum value is found.", "Returns the key for a max value, or null if no maximum value is found.", "Returns the key for a max value, or null if no maximum value is found.", "Returns the key of the maximum value, or null if no maximum value is found.", "Returns the key for a max value, or null if no maximum is found."]}
{"SampleId": 3773833, "Origin": "Gets the editor component generator for this Column.", "Reference": "Gets the grid that this column belongs to.", "LLMCandidates": ["Gets the grid component for this Column.", "Gets the grid component for this EditorComponentGenerator.", "Gets the grid component for this Column.", "Gets the grid component for this Column.", "Gets the grid component for this Column."]}
{"SampleId": 3156674, "Origin": "Whenever a minion with Deathrattle is summoned, gain +1/+1", "Reference": "Whenever a minion with Deathrattle is summoned, gain +1 Attack", "LLMCandidates": ["Whenever a minion with Deathrattle is summoned, gain +1 to Attack.", "Whenever a minion with Deathrattle is summoned, gain +1 to Attack.", "Whenever a minion with Deathrattle is summoned, gain +1 to Attack.", "Whenever a minion with Deathrattle is summoned, gain +1 to Attack.", "Whenever a minion with Deathrattle is summoned, gain +1 to attack."]}
{"SampleId": 2916283, "Origin": "Gets the Ibor index.", "Reference": "Gets the name of the volatilities.", "LLMCandidates": ["Returns the Ibor Caplet Floorlet Volatilities Name.", "Gets the Ibor Caplet Floorlet Volatilities Name.", "Gets the Ibor Caplet Floorlet Volatilities Name.", "Returns the Ibor Caplet Floorlet Volatilities Name.", "Gets the Ibor Caplet Floorlet Volatilities Name."]}
{"SampleId": 2913740, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 6219026, "Origin": "Returns a {@link Date} representing the date of the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "Reference": "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "LLMCandidates": ["Returns the stored block representing the last checkpoint before the given block height. If no checkpoint is found, the genesis block is returned.", "Returns the stored block representing the last checkpoint before or at the given block height. If no checkpoint is found, the genesis block is used as the fallback.", "Returns the stored block representing the last checkpoint before the given block height, or a newly created block if no checkpoint exists before the specified height.", "Returns the stored block of the last checkpoint before the given block height, or a newly created block if no checkpoint was found.", "Returns the stored block representing the last checkpoint before the given block height. If no checkpoint is found, the genesis block is returned."]}
{"SampleId": 2783374, "Origin": "Deletes the specified variable from the configuration.", "Reference": "Deletes the specified variable from the CONFIGURATION.", "LLMCandidates": ["Deletes the specified variable from the configuration. Note that the configuration reference has been updated to `CONFIGURATION`.", "Removes the specified variable from the configuration.", "Removes the specified variable from the configuration.", "Deletes the specified variable from the configuration.", "Deletes the specified variable from the configuration."]}
{"SampleId": 2624222, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "LLMCandidates": ["Configures SSL or TLS of the virtual host template from the specified `keyManagerFactory` and `tlsCustomizer`.", "Configures SSL or TLS of the virtual host template from the specified `keyManagerFactory` and `tlsCustomizer`.", "Configures SSL or TLS of the virtual host template from the specified `KeyManagerFactory` and `tlsCustomizer`.", "Configures SSL or TLS of the virtual host template from the specified `keyManagerFactory` and `tlsCustomizer`.", "Configures SSL or TLS of the virtual host template from the specified `keyManagerFactory` and `tlsCustomizer`."]}
{"SampleId": 234560, "Origin": "If it fails, an exception is thrown and the read lock will not be locked.", "Reference": "If the reinitialization fails, an exception is thrown.", "LLMCandidates": ["If an exception occurs, the resource will not be acquired and the optional result will be empty. No lock is acquired.", "If an exception occurs, the resource acquisition process is aborted and no lock is acquired.", "If an exception occurs, the resource will not be acquired and the operation will be aborted.", "If an exception occurs, the resource will not be acquired, and the exception is thrown. Otherwise, the resource is acquired and its count is incremented.", "If an exception occurs, the resource acquisition process will be aborted and no lock will be acquired."]}
{"SampleId": 6272767, "Origin": "Returns true if the specified String name, is found within JsonArray checks.", "Reference": "Returns true if the expectedName, is found within JsonArray checks.", "LLMCandidates": ["Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks."]}
{"SampleId": 4232775, "Origin": "Create a new {@link ICrypter} for the given context.", "Reference": "Create a new {@link ICrypter}.", "LLMCandidates": ["Creates a new instance of the DefaultCrypter class.", "Creates a new instance of the DefaultCrypter class.", "Creates a new instance of the DefaultCrypter class.", "Creates a new instance of the default {@link ICrypter}.", "Creates a new instance of the default {@link ICrypter}."]}
{"SampleId": 3923667, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["Generates a deprecated Collapsed SemanticGraph with no extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras.", "Deprecated: Generates a collapsed SemanticGraph without extras.", "Deprecated: Generates a collapsed SemanticGraph without extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras."]}
{"SampleId": 3221596, "Origin": "WorkItemLifecycleEvent} and calls the {@link #publish(WorkItemLifecycleEvent)} method", "Reference": "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "LLMCandidates": ["Creates an IWorkItemLifecycleEvent instance and calls the `publish(IWorkItemLifecycleEvent)` method.", "Creates an IWorkItemLifecycleEvent instance and calls the  {@link #publish(IWorkItemLifecycleEvent)} method.", "Creates an IWorkItemLifecycleEvent instance and calls the  {@link #publish(IWorkItemLifecycleEvent)} method.", "The method creates an IWorkItemLifecycleEvent object based on the provided work item details and publishes it.", "The method creates an IWorkItemLifecycleEvent object based on the provided work item details and publishes it."]}
{"SampleId": 3512230, "Origin": "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_VARIANT llama variant}.", "Reference": "Gets the {@link Value.Mutable} for the {@link LlamaType} of this\n{@link Llama}.", "LLMCandidates": ["Gets the `Value.Mutable` for the `Keys#LLAMA_TYPE llama type`.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the `Value.Mutable` for the `Keys#LLAMA_TYPE llama type`.", "Gets the `Value.Mutable` for the `Keys#LLAMA_TYPE llama type`.", "Gets the `Value.Mutable` for the `Keys#LLAMA_TYPE llama type`."]}
{"SampleId": 4850294, "Origin": "Set a new {@link JacksonResourceProvider} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "Reference": "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "LLMCandidates": ["Set a new `JacksonResources` object to this builder, dedicated to providing an `ObjectMapper` for serialization and deserialization of data.", "Set a new `JacksonResources` object to this builder, dedicated to providing an `ObjectMapper` for serialization and deserialization of data.", "Set a new `JacksonResources` object to this builder, providing an `ObjectMapper` for serialization and deserialization of data.", "Set a new `JacksonResources` object to this builder, providing an `ObjectMapper` for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data."]}
{"SampleId": 5631112, "Origin": "Lists a feedback entry with a specified `feedback_id`.", "Reference": "Gets a feedback entry with a specified `feedback_id`.", "LLMCandidates": ["Retrieves a feedback entry with a specified `feedbackId`.", "Lists a feedback entry with a specified `feedbackId`. The response converter has been updated to handle the response of type `GetFeedback`.", "Retrieves a feedback entry with the specified feedback ID.", "Retrieves a feedback entry with the specified feedback ID.", "Lists a feedback entry with a specified `feedbackId`. Retrieves the response using a custom converter to handle the `GetFeedback` class."]}
{"SampleId": 5459588, "Origin": "Adds an export.", "Reference": "Sets module opens.", "LLMCandidates": ["Sets the exports list by adding a new Exports object based on the provided name.", "Adds an open rule.", "Adds an open rule.", "Adds multiple opens to the builder.", "Adds multiple opens to the builder."]}
{"SampleId": 1837504, "Origin": "If the new address is {@code null}, a pending flight is cancelled and an\nongoing handshake is failed.", "Reference": "If the new address is {@code null}, an ongoing handshake is failed.", "LLMCandidates": ["If the new address is `null`, an exception is thrown as address change without an established session is not supported.", "If the new address is **not**  {@code null}, a pending flight is cancelled and an ongoing handshake is failed.", "If the new address is `null`, an illegal argument exception is thrown, as address change without an established session is not supported.", "If the new address is null, an IllegalArgumentException is thrown as address change without an established session is not supported.", "If the new address is `null`, an ongoing handshake is failed and a runtime exception is thrown, indicating that address change without an established session is not supported."]}
{"SampleId": 2624576, "Origin": "Binds the specified {@link Service} at the specified path pattern.", "Reference": "Binds the specified {@link HttpService} at the specified path pattern.", "LLMCandidates": ["Binds the specified `HttpService` at the specified path pattern.", "Binds the specified `HttpService` at the specified path pattern.", "Binds the specified `HttpService` at the specified path pattern.", "Binds the specified `HttpService` at the specified path pattern.", "Binds the specified `HttpService` at the specified path pattern."]}
{"SampleId": 2823477, "Origin": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor2)}.", "Reference": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "LLMCandidates": ["Maps all index descriptors according to the updated `#indexReference(IndexDescriptor)`.", "Maps all index descriptors according to `#indexReference(IndexDescriptor)`.", "Maps all index descriptors according to `#indexReference(IndexDescriptor)`.", "Maps all index descriptors according to the updated method signature, `mapToIndexReference(IndexDescriptor)`.", "Maps all index descriptors according to the updated method signature, `#indexReference(IndexDescriptor)`."]}
{"SampleId": 2482288, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a contact query using the given queryString.", "Creates a contact query based on the given queryString.", "Creates a contact query based on the given queryString.", "Creates a ContactQuery object based on the given queryString.", "Creates a ContactQuery object based on the given queryString."]}
{"SampleId": 5425070, "Origin": "Get the next value.", "Reference": "Returns the next value from the input.", "LLMCandidates": ["Get the next value from the input stream. If the end of input is reached, an `EndOfInput` exception is thrown.", "Get the next value from the input stream. If the end of input is reached, throws an exception.", "Get the next value from the input stream. This method handles various data types, including strings, numbers, objects, and arrays.", "Reads the next value from the input stream.\n\nThe method handles various input formats, including strings enclosed in single or double quotes, JSON objects and arrays, and unquoted literals. If the end of input is reached, an exception is thrown.", "Gets the next value from the input stream. Handles quoted strings, curly braces (`{`), square brackets (`[]`), and unquoted literals. In the case of encountering an unexpected character, it throws a `syntaxError`."]}
{"SampleId": 4624009, "Origin": "Normalizes the specified URL and creates a new instance of this class.", "Reference": "Normalizes the specified URI and creates a new instance of this class.", "LLMCandidates": ["Normalizes the specified URI and returns the normalized path as a String. If the input URI ends with \"/\" or \"\\\", the final path will include the platform-specific separator (e.g., \"/\" or \"\\\").", "Normalizes the specified URI and returns the normalized path as a String. If the input URI ends with \"/\" or \"\\\", the normalized path will include the platform-specific separator.", "Normalizes the specified URI and returns the path as a String. If the input URI ends with \"/\" or \"\\\", the path is extended with the platform-specific separator.", "Normalizes the specified URI and returns the path as a string. If the input URI ends with \"/\" or \"\\\", the result is appended with the platform-specific separator.", "Normalizes the specified URI and returns the normalized path as a String. In case the input URI ends with '/' or '\\', the final path is appended with the platform-specific separator."]}
{"SampleId": 3467749, "Origin": "Makes the given visitor visit all of the instructions in this list.", "Reference": "Makes the given visitor visit all the instructions in this list.", "LLMCandidates": ["Visits each instruction in the list using the given visitor.", "Visits each instruction in the list using the given visitor.", "Visits each instruction in the list using the given visitor.", "Visits each instruction in the list using the given visitor.", "Visits each instruction in the list using the given visitor."]}
{"SampleId": 4132919, "Origin": "Removes the trace associated with this CallableStatement\nfrom the Connection that created it.", "Reference": "Removes the trace associated with this CallableStatement from the", "LLMCandidates": ["Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it."]}
{"SampleId": 3380964, "Origin": "If you actual latency will be lower than \"desirableOperationLatency\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "Reference": "If you actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "LLMCandidates": ["If actual latency is lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as `BulkheadConfig`.maxWaitTime.", "If actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as `BulkheadConfig`.maxWaitTime.", "If actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as `BulkheadConfig`.maxWaitTime.", "If actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as `BulkheadConfig`.maxWaitTime.", "If actual latency will be lower than \"slowCallDurationThreshold\", \nwill calculate the difference and use it as the maximum wait time in bulkhead configuration."]}
{"SampleId": 1946076, "Origin": "Provide the implementation of the PlatformDecoder for the current platform using the provided", "Reference": "Provide the implementation of the PlatformDecoder for the current platform using the\nprovided PoolFactory", "LLMCandidates": ["Provides the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flags.", "Provides the implementation of the PlatformDecoder based on the current platform and the provided PoolFactory.", "Provides the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled parameters.", "Provides the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flags.", "Provides the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flags."]}
{"SampleId": 1052905, "Origin": "add partition of buffer to consume", "Reference": "add whole buffer to consume", "LLMCandidates": ["Added source buffer to consume data from.", "Added a source buffer to consume from the queue.", "Added a source buffer to consume from the queue.", "Added a source buffer to consume from the queue.", "Added a source buffer to consume from the queue."]}
{"SampleId": 4713376, "Origin": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b.", "Reference": "The defintion\nof subsumption is: Rule a subsumes rule b, if a subsumes b AND a has got\nleast the same expected predictive accuracy as b.", "LLMCandidates": ["Rule a subsumes rule b if a subsumes b and a has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b if a subsumes b, and a has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b if a subsumes b and has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b if a subsumes b, and a has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b if a subsumes b's consequence, has at least the same expected predictive accuracy as b, and matches each premise item of b."]}
{"SampleId": 5433550, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Do nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Does nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Does nothing if\n{@link BaseConfiguration#noComment} is set to true.", "Does nothing if\n{@link BaseConfiguration#noComment} is set to true."]}
{"SampleId": 361244, "Origin": "Saves all writable accounts and the default account, which can later be obtained\nwith {@link #getDefaultAccount}.", "Reference": "Saves the default account, which can later be obtained with {@link #getOnlyOrDefaultAccount}.", "LLMCandidates": ["Saves the default account, which can later be retrieved with `#getDefaultAccount`. The method now handles `null` values for the default account.", "Saves the default account, clearing previous settings if null.", "Saves the default account, clearing previous settings if null.", "Saves the default account, clearing it if it's null.", "Saves the default account, updating it or clearing it based on the provided argument."]}
{"SampleId": 1531004, "Origin": "Returns the full set of traversal parameters specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "Reference": "Returns the full set of traversal intervals specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "LLMCandidates": ["Returns the parsed intervals specified on the command line, without merging intervals specified by the user. The method also handles unmapped reads by allowing the user to explicitly request traversal of unmapped intervals.", "Returns the parsed intervals specified on the command line, without merging any intervals specified by the user.  The method also allows retrieval of unmapped reads by specifying the `GenomeLoc.UNMAPPED` sentinel value.", "Returns the parsed intervals specified on the command line, without merging any intervals specified by the user.  Note that unmapped reads are handled separately and can be explicitly traversed if present.", "Returns the parsed intervals specified on the command line without merging them, along with additional traversal parameters related to unmapped reads.", "Returns the parsed intervals specified on the command line, excluding any intervals marked for exclusion. This method does not merge overlapping intervals."]}
{"SampleId": 4396524, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, omitting sensitive data for security.", "Returns a string representation of this object, with sensitive data redacted for security. Useful for testing and debugging.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security. Useful for testing and debugging."]}
{"SampleId": 5433639, "Origin": "Sets {@link HtmlOptions#createOverview} field to true.", "Reference": "Sets {@code HtmlOptions.createOverview} field to true.", "LLMCandidates": ["Sets the `HtmlOptions#createOverview` field to true based on overview path, module count, or package count.", "Sets the `HtmlOptions#createOverview` field to true based on overviewPath, module count, or package count.", "Sets the `HtmlOptions#createOverview` field to true based on overview path, module count, or package count.", "Sets the `HtmlOptions#createOverview` field to true based on overview path, module count, or package count.", "Sets the `HtmlOptions#createOverview` field to true based on overview path, module count, or package count."]}
{"SampleId": 4476930, "Origin": "This operation requires the {@code secrets/get} permission.", "Reference": "This operation requires the {@code secrets/delete} permission.", "LLMCandidates": ["This operation requires the `secrets/delete` permission.", "This operation requires the `secrets/delete` permission.", "This operation requires the `secrets/delete` permission.", "This operation requires the `secrets/delete` permission.", "This operation requires the `secrets/delete` permission."]}
{"SampleId": 2443728, "Origin": "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Reference": "Binds a new instance {@link Binding} using the information from the Jersey descriptor {@link InstanceBinding}.", "LLMCandidates": ["Binds a new instance of the type referenced by the given descriptor to the specified configuration using the provided Jersey descriptor.", "Binds a new instance `{@link AliasBinding}` using the information from the Jersey descriptor `{@link ActiveDescriptor}`", "Binds a new instance `{@link AliasBinding}` using the information from the Jersey descriptor `{@link ActiveDescriptor}`", "Binds a new instance of the descriptor using the information from the Jersey descriptor `InstanceBeanDescriptor`.", "Binds a new instance of the type referenced by the given descriptor using the information from the Jersey descriptor."]}
{"SampleId": 6191403, "Origin": "The {@link MessagingExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to\nhandle any errors that occur.", "Reference": "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle\nany errors that occur.", "LLMCandidates": ["The configured  {@link FlowExceptionHandler} will be used to handle any errors that occur.", "The configured {@link FlowExceptionHandler} will be used to handle any errors that occur.", "The configured {@link FlowExceptionHandler} will be used to handle any errors that occur.", "The configured {@link FlowExceptionHandler} will be used to handle any errors that occur.", "The configured  {@link FlowExceptionHandler} will be used to handle any errors that occur."]}
{"SampleId": 708321, "Origin": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException.", "Reference": "Adds an error to the message set and throws CompilationFailedException.", "LLMCandidates": ["Adds a fatal exception to the message set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws\nthe unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws\nthe unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException."]}
{"SampleId": 5245177, "Origin": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.", "Reference": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use simply that the\ncheckbox allowing configuration is checked on the options panel.", "LLMCandidates": ["If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.", "If the option to use a central repository has been selected, does not indicate the central repository is configured for use.", "If the option to use a central repository has been selected, does not\nindicate that the central repository is configured for use.", "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.", "If the option to use a central repository has been selected, does not\nindicate whether the central repository is configured for use."]}
{"SampleId": 1354136, "Origin": "Report the ending barline.", "Reference": "Report the ending PartBarline.", "LLMCandidates": ["Report the right part barline.", "Returns the right part barline.", "Returns the right part barline.", "Report the right part barline.", "Report the right part barline."]}
{"SampleId": 6006999, "Origin": "Add a series for a X-Y type chart using Lists with error bars", "Reference": "Add a series for a X-Y type chart using Lists", "LLMCandidates": ["Adds a series for a X-Y type chart based on the data type of the X-axis values. Handles both Date and Number types.", "Adds a series for a X-Y type chart using Lists with error bars based on the data type of the X-axis values.", "Adds a series for a X-Y type chart using Lists with error bars, handling different data types.", "Adds a series for an X-Y type chart using Lists with error bars, handling different data types.", "Adds a series for a X-Y type chart using Lists with error bars, handling different data types."]}
{"SampleId": 4396496, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data masked for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data masked for security.", "Returns a string representation of this object, omitting sensitive data for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 1606491, "Origin": "Get the hex color for the primary displayed usernote of a user", "Reference": "Get the color for the primary displayed usernote of a user", "LLMCandidates": ["Gets the RGB color code of the primary displayed user note of a user.", "Returns the integer representation of the displayed user note's color.", "Gets the integer representation of the primary displayed user note's color of a user.", "Returns the integer representation of the hex color for the primary displayed user note of a user.", "Returns the integer representation of the hex color for the primary displayed user note of a user."]}
{"SampleId": 2542310, "Origin": "Rotate this vector the specified radians about the given rotation axis.", "Reference": "Rotate this vector the specified radians around the given rotation axis.", "LLMCandidates": ["Rotates this vector the specified radians about the given axis.", "Rotates this vector the specified radians about the given rotation axis. See `rotateAxis` for more details.", "Rotates this vector the specified radians about the given axis using the `rotateAxis` method.", "Rotates this vector the specified radians about the given axis.", "Rotates this vector the specified radians about the given rotation axis. Refer to the `rotateAxis` method for details."]}
{"SampleId": 4245480, "Origin": "Does nothing if\nthe given node is currently not visible or target is .", "Reference": "Does nothing if\nthe given node is currently not visible or target is {@code null}.", "LLMCandidates": ["Updates the target with the node if its model equals the node's model.", "Does nothing if the given node is currently not visible or the target is null.", "Updates the target with the given node if its model equals the node's model.", "Does nothing if the given node is currently not visible or the target is null.", "Does nothing if the given node is currently not visible or the target is `null`."]}
{"SampleId": 2014106, "Origin": "Tests that apply works.", "Reference": "See issue\n1683.", "LLMCandidates": ["Tests that the `rewriteAndExecute` method correctly freezes objects and verifies that frozen properties are not writable or configurable.", "Tests the behavior of apply when applied to frozen objects with numeric properties.", "Tests the behavior of apply when applied to frozen objects with numeric properties.", "Tests the behavior of `apply` with frozen objects, ensuring that frozen objects remain immutable as expected.", "Tests the behavior of apply when applied to frozen objects with numeric properties."]}
{"SampleId": 5653269, "Origin": "Returns the value of the node as a module identifier, or null if the node is undefined.", "Reference": "Returns the value of the node as a module identifier.", "LLMCandidates": ["Returns the value of the node as a ModuleIdentifier, based on the node's string representation.", "Returns the module identifier derived from the node's textual representation.", "Returns the module identifier derived from the node's textual representation.", "Returns the value of the node as a module identifier, derived from its string representation.", "Returns the value of the node as a ModuleIdentifier, based on its string representation."]}
{"SampleId": 4615504, "Origin": "Returns a lightweight, low-level preceding-sibling axis iterator.", "Reference": "Returns a light-weight, low-level preceding-sibling axis iterator.", "LLMCandidates": ["Returns a lightweight, low-level preceding-sibling axis iterator iterating over the children of the current node.", "Returns a lightweight, low-level preceding-sibling axis iterator that iterates over the children of the current node.", "Returns a lightweight, low-level preceding-sibling axis iterator, iterating over the children of the current node in reverse order.", "Returns a lightweight, low-level preceding-sibling axis iterator that iterates over the children of the current node's parent.", "Returns a lightweight, low-level preceding-sibling axis iterator iterating over the children of the current node."]}
{"SampleId": 1879788, "Origin": "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class.", "Reference": "Testing the normalizeVector) and normalizeEquals(Vector) methods of the\n{@link VMath} class.", "LLMCandidates": ["Testing the normalize(double[]) and normalizeEquals(double[]) methods of the VMath class.", "Testing the normalize(double[]) and normalizeEquals(double[]) methods of the VMath class.", "Testing the normalize(double[]) and normalizeEquals(double[]) methods of the VMath class.", "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class.", "Testing the normalize(double[]) and normalizeEquals(double[]) methods of the VMath class."]}
{"SampleId": 1390765, "Origin": "Adds a 'followingUser' type notification with the specified request json object.", "Reference": "Adds a 'following - user' type notification with the specified request json object.", "LLMCandidates": ["Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'followingUser' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSON object."]}
{"SampleId": 3964762, "Origin": "Turn a toX of Either3 into a single Either with Lists of values.", "Reference": "Turn an IterableX of Either3 into a single Either with Lists of values.", "LLMCandidates": ["Turns a collection of LazyEither3 values into a single LazyEither3 with lists of values.", "Turns a sequence of LazyEither3 values into a LazyEither3 with a list of values.", "Turns a stream of LazyEither3 values into a single Either with Lists of values.", "Turns a sequence of LazyEither3 values into a single Either with Lists of values.", "Turns a sequence of Either3 values into a single Either with Lists of values."]}
{"SampleId": 4617610, "Origin": "Tests {@link Array#from(Value...)}.", "Reference": "Tests {@link XQArray#from(Value...)}.", "LLMCandidates": ["Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}.", "Tests `XQArray#from(Value...)` with a custom `XQArray` implementation.", "Tests the {@link XQArray#from(Value...)} method."]}
{"SampleId": 1220434, "Origin": "Ingest a Matrix into an H2O Frame.", "Reference": "Ingest a Mahout Matrix into an H2O DRM.", "LLMCandidates": ["Ingest a Matrix into an H2O Frame by populating the frame's vectors with the matrix's values.", "Ingest a Matrix into an H2O Frame by populating its values from the input matrix.", "Ingest a Matrix into an H2O Frame, populating the frame with the matrix values.", "Ingest a Matrix into an H2O Frame by populating its vectors row-by-row.", "Ingest a Matrix into an H2O Frame, populating the frame's values from the matrix."]}
{"SampleId": 2734301, "Origin": "Returns {@link List} of collapsed {@link AccordionPane}s", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Returns a list of collapsed `AccordionPane`s based on the given IDs.", "Returns a list of IDs of collapsed AccordionPane.", "Returns a list of IDs of collapsed AccordionPane.", "Returns a list of collapsed IDs rather than AccordionPane instances.", "Returns a list of collapsed IDs rather than AccordionPane instances."]}
{"SampleId": 2008719, "Origin": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException and TimeoutException as an OperationCancellation.", "Reference": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException as an OperationCancellation.", "LLMCandidates": ["Same as `#awaitResult(long, TimeUnit)`,\nbut throws `TimeoutException` explicitly along with `InterruptedException` as an `OperationCancellation`.", "Same as `#awaitResult(long, TimeUnit)`,\nbut also throws `TimeoutException` as an `OperationCancellation`.", "Same as `#awaitResult(long, TimeUnit)`,\nbut also throws `TimeoutException` alongside `InterruptedException` as an `OperationCancellation`.", "Same as `#awaitResult(long, TimeUnit)`,\nbut also throws `TimeoutException` alongside `InterruptedException` as an `OperationCancellation`.", "Same as `#awaitResult(long, TimeUnit)`, but also throws `TimeoutException` alongside `InterruptedException` as an `OperationCancellation`."]}
{"SampleId": 3863845, "Origin": "shows full-screen preview of the passed media", "Reference": "show full-screen preview of the item and the passed position", "LLMCandidates": ["Shows full-screen preview of the selected media item at the specified position.", "Shows full-screen preview of the selected media item at the specified position.", "Shows full-screen preview of the selected media item at the specified position.", "Shows full-screen preview of the selected media item at the specified position.", "Shows full-screen preview of the selected media item at the specified position."]}
{"SampleId": 237074, "Origin": "Handles a netty RPC callable with logging.", "Reference": "Handles a streaming RPC callable with logging.", "LLMCandidates": ["Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging."]}
{"SampleId": 6305223, "Origin": "Build an HTTP Ok without any content.", "Reference": "Build an HTTP No content.", "LLMCandidates": ["Builds an HTTP No Content response with the specified message.", "Builds an HTTP No Content response with the specified message.", "Creates an HTTP No Content response with the specified message.", "Creates an HTTP No Content response with the specified message.", "Creates an HTTP No Content response with the specified message."]}
{"SampleId": 2230477, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations."]}
{"SampleId": 3270031, "Origin": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "Reference": "Returns the node to the left of the \"::\".", "LLMCandidates": ["Returns the expression to the left of the `::` operator if it exists.", "Returns the expression to the left of the \"::\" operator if it exists.", "Returns the expression to the left of the \"::\" operator if it exists.", "Returns the expression to the left of the \"::\" operator if it exists.", "Returns the expression to the left of the \"::\" operator if it exists."]}
{"SampleId": 2825133, "Origin": "Determine type of a store base on a store file name.", "Reference": "Determine type of a store base on provided database file.", "LLMCandidates": ["Determines type of a store base on a database file.", "Determines type of a store base on a database file's identity.", "Determines type of a store base on a database file's identity.", "Determines type of a store base on a database file's name.", "Determines type of a store base on a database file's name."]}
{"SampleId": 4472680, "Origin": "Set name of the Cosmos DB table.", "Reference": "Set the resource value.", "LLMCandidates": ["Sets the resource associated with the table.", "Set the resource associated with the table.", "Sets the resource associated with the table.", "Sets the resource associated with the table.", "Sets the resource associated with the table."]}
{"SampleId": 6233845, "Origin": "Returns prefix {@code byte} for this type.", "Reference": "Returns length of this type.", "LLMCandidates": ["Returns the length of the value if not null, otherwise 0.", "Returns the length of the value if it's not null, otherwise 0.", "Returns the length of the value if not null, otherwise 0.", "Returns the length of the value if it's not null, otherwise 0.", "Returns the length of the value if it's not null, otherwise 0."]}
{"SampleId": 4617576, "Origin": "Adds part of another token to the token.", "Reference": "Adds the part of a token to the token.", "LLMCandidates": ["Adds part of another token to the token buffer.", "Adds a portion of another token to the token buffer.", "Adds a portion of another token to the token buffer.", "Adds a portion of another token to the token buffer.", "Adds part of another token to the token buffer."]}
{"SampleId": 6043598, "Origin": "and repositoryId = ?.", "Reference": "and type = ?.", "LLMCandidates": ["Updated the method name from 'findByC_M_R_PrevAndNext' to 'findByR_T_PrevAndNext' and replaced 'companyId' with 'repositoryId' in the parameters.", "The repositoryId parameter has been replaced with type 'String' and the method name has been changed to 'findByR_T_PrevAndNext'.", "The method name has been changed to `findByR_T_PrevAndNext`, and the search criteria now includes `repositoryId` and `type`.", "Updated method signature and variable name to reflect the new R_T_ prev/next criteria.", "The method name has been changed to findByR_T_PrevAndNext, and the type parameter has been added."]}
{"SampleId": 2327545, "Origin": "Generates random trits for a transaction.", "Reference": "Generates trits for a hash.", "LLMCandidates": ["Generates a random transaction hash.", "Generates a random transaction hash from trits.", "Generates a random transaction hash from trits.", "Generates a random transaction hash from trits.", "Generates a random transaction hash from trits."]}
{"SampleId": 704476, "Origin": "Thread signaled test for {@link PredicateLock#waitForever()}", "Reference": "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)}", "LLMCandidates": ["Thread signaled test for `PredicateLock#waitForTimeoutOrFail(long)` with a 5-minute timeout.", "Thread signaled test for `PredicateLock#waitForTimeoutOrFail()` with a timeout of 5 minutes.", "Thread signaled test for `PredicateLock#waitForTimeoutOrFail()` with a timeout of 5 minutes.", "Thread signaled test for `PredicateLock#waitForTimeoutOrFail()` with a 5-minute timeout.", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)} with a 5-minute timeout."]}
{"SampleId": 6045130, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["The method retrieves a CalendarResource instance from the persistence layer based on the given UUID and group ID.", "The method returns the CalendarResource instance based on the given UUID and group ID or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "The resource with the given UUID and group ID was retrieved from persistence.", "The resource with the given UUID and group ID was retrieved from persistence.", "The method remains the same as the original implementation."]}
{"SampleId": 2218209, "Origin": "n choose k. Returns 0 if n is less than k.", "Reference": "The n choose k. Returns 0 if n is less than k.", "LLMCandidates": ["Calculates n choose k, using the logarithm-based formula.", "Calculates n choose k using an exponential formula.", "Calculates n choose k. Returns 0 if n is less than k.", "Calculates n choose k using an exponential formula.", "Calculates n choose k using an exponential formula."]}
{"SampleId": 6311227, "Origin": "Show {@link Toast} for exception", "Reference": "Show {@link Toast} for throwable", "LLMCandidates": ["Shows a toast message for the given exception.", "Shows a toast message for the given exception.", "Shows a toast message for the given exception.", "Shows a toast message for the given exception.", "Shows a toast message for the provided exception."]}
{"SampleId": 3357845, "Origin": "List a range of recording descriptors which match a channel and stream id.", "Reference": "List a range of recording descriptors which match a channel URI fragment and stream id.", "LLMCandidates": ["List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "Lists recording descriptors matching a channel fragment and stream id."]}
{"SampleId": 437801, "Origin": "Register the runnable to process the specific pTransformId.", "Reference": "Register the runnable to process the specific pTransformId and track its execution time", "LLMCandidates": ["Registers a runnable to process the specific pTransformId, adding metadata to track its execution state.", "Registers the runnable to process the specific pTransformId and tracks its execution state using a SimpleExecutionState object.", "Registers a runnable to process the specific pTransformId and tracks its execution state.", "Registers a runnable to process the specific pTransformId and tracks its execution state using a SimpleExecutionState object.", "Registers the runnable with associated pTransformId and adds a state tracker for ExecutionTime metrics."]}
{"SampleId": 1879510, "Origin": "Robust computation of the inverse covariance matrix.", "Reference": "Update the cholesky decomposition.", "LLMCandidates": ["Calculates the Cholesky decomposition of the covariance matrix and handles degenerate cases by adding a small value to the diagonal elements.", "Calculates the Cholesky decomposition of the covariance matrix, handling degenerate cases by adding a small value to the diagonal elements.", "Computation of the inverse covariance matrix using Cholesky decomposition. Note that the handling of degenerated cases requires further improvement.", "Computation of the inverse covariance matrix using Cholesky decomposition. Further handling of degenerated cases is still TODO.", "Calculates the Cholesky decomposition of the covariance matrix and handles degenerate cases by adding a small value to the diagonal if necessary."]}
{"SampleId": 4117678, "Origin": "See the\n{@link BlowfishCipher} class-level JavaDoc for more information and why it might be good to provide your own.", "Reference": "See the\nclass-level JavaDoc for more information and why it might be good to provide your own.", "LLMCandidates": ["See the\n{@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the\n{@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the\n{@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the\n{@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the\n{@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own."]}
{"SampleId": 3357566, "Origin": "Get the channel parameter for the cluster log and snapshot replay channel.", "Reference": "Set the counter for the current state of the cluster backup.", "LLMCandidates": ["Retrieves the state counter parameter and assigns it to the internal field.", "Retrieves the state counter parameter and assigns it to the internal stateCounter field.", "Retrieves the state counter parameter and assigns it to the internal stateCounter field.", "Returns the state counter parameter for the cluster log and snapshot replay operation.", "Retrieves the state counter parameter and assigns it to the internal stateCounter field."]}
{"SampleId": 1142511, "Origin": "Reset the leader election throttle.", "Reference": "Reset the leader election throttles.", "LLMCandidates": ["Resets the leader election throttles by clearing the associated list.", "Resets the leader election throttles.", "Resets the leader election throttles.", "Resets the leader election throttles.", "Resets the leader election throttles by clearing the associated list."]}
{"SampleId": 2544552, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "LLMCandidates": ["Applies the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Applies the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix."]}
{"SampleId": 4476357, "Origin": "Fetches the configuration settings that match the {@code options}.", "Reference": "Fetches the configuration settings that match the {@code selector}.", "LLMCandidates": ["Fetches the configuration settings that match the `selector` from the `client`.", "Fetches the configuration settings that match the `SettingSelector` criteria from the `client` instance.", "Fetches the configuration settings that match the `selector` from the `client`.", "Fetches the configuration settings that match the `SettingSelector` options from the client.", "Fetches the configuration settings that match the `SettingSelector` options."]}
{"SampleId": 5316646, "Origin": "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext.", "Reference": "Autodetect a {@link FreeMarkerConfig} object in the {@code ApplicationContext}.", "LLMCandidates": ["Autodetect a `FreeMarkerConfig` object via the ApplicationContext.", "Autodetect a FreeMarkerConfig object via the ApplicationContext.", "Autodetect a FreeMarkerConfig object via the ApplicationContext.", "Autodetect a `FreeMarkerConfig` object via the ApplicationContext.", "Autodetect a `FreeMarkerConfig` object via the ApplicationContext."]}
{"SampleId": 1294322, "Origin": "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite", "Reference": "Invoked when the txn has been removed from the queue and is starting to execute at a local PartitionExecutor", "LLMCandidates": ["Invoked when the txn has been removed from the queue and is starting to execute at the local ExecutionSite, with updated variable name pm_queue_exec.", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite, using `pm_queue_exec` instead of `pm_queue`.", "Invoked when the txn has been removed from the queue and is starting to execute at the local ExecutionSite, with the current ProfileMeasurement being swapped with the previously queued one.", "Invoked when the txn has been removed from the queue and is starting to execute at the local ExecutionSite, with the PM queue now being 'pm_queue_exec'.", "Invoked when the txn has been removed from the queue and is starting to execute at the local ExecutionSite, using `pm_queue_exec` instead of `pm_queue`."]}
{"SampleId": 1985691, "Origin": "Then return all - block to get the trapped water", "Reference": "Then return total - blocks to get the trapped water.", "LLMCandidates": ["Returns the total trapped water after accounting for occupied blocks in the given height array.", "Calculates the trapped water by iterating over the heights of the bars, updating the height level, and tracking occupied blocks. The total trapped water is then given by the difference between the total area under the curve and the area occupied by blocks.", "Calculates the trapped water by updating the area based on the minimum border height between the left and right pointers while accounting for occupied blocks.", "The updated code measures the trapped water between the heights of the taller bars by traversing from the edges inwards. It tracks the height of the lowest bar encountered so far, and calculates the area of each trapped section by multiplying the height difference by the width of the section.", "Calculates the trapped water by considering the height of the shortest bar between the left and right pointers, updating the total trapped water and the occupied blocks during the process."]}
{"SampleId": 2337095, "Origin": "Delete RADIUS Configuration\n### Functional Description:   Delete existing RADIUS configuration.", "Reference": "Delete RADIUS configuration\n### Functional Description:   Delete existing RADIUS configuration.", "LLMCandidates": ["Delegates deletion of RADIUS configuration to the `deteteRadiusConfigWithHttpInfo` method.", "Delegates deletion of RADIUS configuration to a more comprehensive API call.", "Delegates deletion of RADIUS configuration to `deteteRadiusConfigWithHttpInfo` method.", "Delegates deletion of RADIUS configuration to the `deteteRadiusConfigWithHttpInfo` method.", "Delegates deletion of RADIUS configuration to the `deteteRadiusConfigWithHttpInfo` method."]}
{"SampleId": 1259760, "Origin": "Check whether the given member is a proxy member of a proxy object.", "Reference": "Check whether the given member is a proxy member of a proxy object or is a static proxy member.", "LLMCandidates": ["Checks if the given member is a proxy member of a proxy object, and only for non-static members.", "Checks if the given member is a proxy member of a proxy object, and only for non-static members.", "Checks if the given member is a proxy member of a proxy object, and if not static, returns false.", "Checks if the given member is a proxy member of a proxy object, considering non-static members.", "Checks if the given member is a proxy member of a proxy object, considering non-static members."]}
{"SampleId": 4396574, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Redacts sensitive data from the representation.", "Returns a string representation of this object, with sensitive data values redacted for privacy. Useful for testing and debugging.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 1875792, "Origin": "Get the normalized variation of information (normalized, 0 = equal) NVI = 1\n- NMI_Joint", "Reference": "Get the normalized variation of information (normalized, small values are\ngood).", "LLMCandidates": ["Returns the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint.", "`return 1.0 - mutualInformation / entropyJoint;`", "`return 1.0 - mutualInformation / entropyJoint;`", "Returns the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint.", "Returns the normalized variation of information, normalized against the entropy of the joint distribution."]}
{"SampleId": 1309906, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a API, used to index the API in ES.", "LLMCandidates": ["Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES."]}
{"SampleId": 4132872, "Origin": "Returns the JDBC connection {@link #username} property.", "Reference": "Returns the JDBC connection {@link #userName} property.", "LLMCandidates": ["Returns the JDBC connection `{@link #userName}` property.", "Returns the JDBC connection `userName` property.", "Returns the JDBC connection `userName` property.", "Returns the JDBC connection `userName` property.", "Returns the JDBC connection `{@link #userName}` property."]}
{"SampleId": 1629435, "Origin": "When the insertion is complete, the\n{@code ticker} will be {@link CountUpLatch#countUp() incremented} by 1.", "Reference": "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "LLMCandidates": ["When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp()} incremented by 1.", "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1."]}
{"SampleId": 1442385, "Origin": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of AtomContacts", "Reference": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of Contacts containing the indices of the pair and the calculated distance.", "LLMCandidates": ["Calculates all distances between atoms within this cell and returns those that are within the given cutoff as a list of Contacts.", "Calculates all distances between atoms within this cell and returns those that are within the given cutoff as a list of Contacts.", "Calculates all distances between atoms within the current cell and returns those that are within the given cutoff as a list of Contacts.", "Calculates all distances between atoms within this cell and returns those that are within the given cutoff as a list of Contacts, where each Contact object contains the indices of the two atoms and their distance.", "Calculates all distances between atoms within this cell and returns those that are within the given cutoff as a list of Contacts."]}
{"SampleId": 291293, "Origin": "Converts milliseconds to a string containing hours and minutes", "Reference": "Converts milliseconds to a string containing hours and minutes or minutes and seconds", "LLMCandidates": ["Calculates hours and minutes from a duration in milliseconds, optionally considering the duration's units.", "Calculates the duration string based on the provided milliseconds, considering whether the duration should be displayed in hours or minutes.", "Converts milliseconds to a string containing hours and minutes, optionally including hours as the first part.", "Converts milliseconds to a string containing hours and minutes, optionally considering duration in hours.", "Calculates duration in hours and minutes based on the provided milliseconds, with an optional flag to specify if the duration should be converted to hours."]}
{"SampleId": 4019592, "Origin": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage.", "Reference": "They are assigned to a WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.", "LLMCandidates": ["The method is no longer accepting any parameters and throws an exception indicating that 'IsDirty' is not supported on tombstones.", "The purpose of this method is not supported on tombstones.", "WebPage on a job-by-job basis. This method is not supported for tombstones.", "The purpose of this method is not supported on tombstones.", "The purpose of this method is not supported on tombstones."]}
{"SampleId": 2912049, "Origin": "Gets the price that was traded, in decimal form.", "Reference": "Gets the price that was traded, together with the trade date, optional.", "LLMCandidates": ["Returns the traded price, if available, as an Optional object.", "Retrieves the traded price, if available, as an Optional value.", "Retrieves the traded price, if available, as an Optional value.", "Returns the traded price, if available, as an Optional.", "Returns the traded price, if available, as an Optional."]}
{"SampleId": 6291857, "Origin": "Create a TripTimeSubset from a given trip pattern, date and time window.", "Reference": "Create a TripTimeSubset from a given trip pattern, bitset of services running, and time window.", "LLMCandidates": ["Creates a TripTimeSubset from a given trip pattern, date, and time window, using a BitSet to efficiently track running services.", "Creates a TripTimeSubset from a given trip pattern, date, and time window, using a BitSet to filter services running on the specified date.", "Creates a TripTimeSubset from a given trip pattern, date, time window, and a BitSet indicating which services are running.", "Creates a TripTimeSubset from a given trip pattern, date, and time window, using a BitSet to efficiently track running services.", "Creates a TripTimeSubset from a given trip pattern, date, and time window, using a BitSet to efficiently track running services."]}
{"SampleId": 4383855, "Origin": "Availability Zone in the same Region to increase fault tolerance in\nthe event of a service disruption.", "Reference": "Zone in the same Region to increase fault tolerance in the event of a\nservice disruption.", "LLMCandidates": ["Availability Zone in the same Region to increase fault tolerance in the event of a service disruption.", "Availability Zone in the same Region is added to increase fault tolerance in the event of a service disruption.", "Updates request marshalling and response handling to use Stax framework.", "Updates request marshalling and response handling to use Stax framework.", "Updates the request handling to use a StaxResponseHandler for processing the response."]}
{"SampleId": 3344326, "Origin": "RxRatpack.promise(new AsyncService().observe(\"foo\"))\n    ).getValue();", "Reference": "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "LLMCandidates": ["RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();"]}
{"SampleId": 6044273, "Origin": "Returns all the push notifications devices where platform = ?.", "Reference": "Returns all the push notifications devices where userId = any ?", "LLMCandidates": ["Returns all the push notifications devices where platform = ? and user IDs = ?.", "Returns all the push notifications devices where platform = ? and userIds = ?.", "Returns all the push notifications devices where platform = ? and userIds = ?.", "Returns all the push notifications devices where platform = ? and userIds = ?.", "Returns all the push notifications devices where platform = ? and userIds = ?."]}
{"SampleId": 1985765, "Origin": "| Then we can use this range we retrieve levels from the map.", "Reference": "| Then this range can be used to retrieve column values from the map.", "LLMCandidates": ["The retrieved levels from the map represent the columns of the resulting vertical order.", "The range retrieved from the map represents column levels, not row levels as previously stated in the comment.", "The range retrieved from the map represents columns rather than levels, so the results are now presented in column order rather than level order.", "The retrieved levels from the map represent columns rather than rows.", "The retrieved levels from the map represent columns rather than rows."]}
{"SampleId": 4850466, "Origin": "Gets the user's avatar URL, if present and in a supported format.", "Reference": "Gets the user's avatar URL, if present.", "LLMCandidates": ["Retrieves the user's avatar URL from the data store, if available.", "Retrieves the user's avatar URL from the data store if available.", "Retrieves the user's avatar URL from the data store if available.", "Retrieves the user's avatar URL from the data store, if available.", "Retrieves the user's avatar URL if it exists."]}
{"SampleId": 4781233, "Origin": "Return  if {@link ITokenTypeAttribute#TF_COMMON_WORD} is set.", "Reference": "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "LLMCandidates": ["Returns if {@link ITokenizer#TF_COMMON_WORD} is set.", "Returns if `{@link ITokenizer#TF_COMMON_WORD}` is set.", "Returns if `{@link ITokenizer#TF_COMMON_WORD}` is set.", "Returns if `{@link ITokenizer#TF_COMMON_WORD}` is set.", "Return if `{@link ITokenizer#TF_COMMON_WORD}` is set."]}
{"SampleId": 2048822, "Origin": "Calls {@link #reset()} and releases any held DRM resources.", "Reference": "Calls {@link #reset()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Calls {@link #reset()} and releases any DRM resources held by the metadata queue.", "Releases DRM session references held by the metadata queue.", "Releases DRM session references held in the metadata queue.", "Releases DRM session references held in the metadata queue.", "Releases DRM session references held by the metadata queue."]}
{"SampleId": 2478395, "Origin": "Removes given PacketExtension from the list of child packet\nextensions.", "Reference": "Removes given ExtensionElement from the list of child packet\nextensions.", "LLMCandidates": ["Removes given ExtensionElement from the list of child packet extensions.", "Removes given ExtensionElement from the list of child packet extensions.", "Removes given ExtensionElement from the list of child packet extensions.", "Removes given ExtensionElement from the list of child extension elements.", "Removes given ExtensionElement from the list of child packet extensions."]}
{"SampleId": 5078149, "Origin": "Prepare task event for execution on agent.", "Reference": "Prepare exe params for send REST request on node.", "LLMCandidates": ["Builds execution parameters for a Visor Gateway task based on the specified payload.", "Creates execution parameters for a visor gateway task based on the specified cluster ID and input parameters.", "Creates execution parameters for a Visor Gateway task based on the provided payload.", "Builds execution parameters for a Visor Gateway task based on the provided payload.", "Builds execution parameters for a Visor Gateway task based on the provided payload."]}
{"SampleId": 5452379, "Origin": "This method returns an interface that is\nboth \"up\" and supports multicast.", "Reference": "This method returns the first interface that\nis both \"up\" and supports multicast.", "LLMCandidates": ["The method now checks if the network interface is up and supports multicast, and also verifies if it has either IPv4 or IPv6 addresses. If so, it selects that interface as the preferred option. Otherwise, it returns the PPP or loopback interface, in that order of preference.", "The method now checks if the network interface is up and supports multicast, and also verifies if it has IPv4 or IPv6 addresses. If so, it prefers that interface as the default. Otherwise, it selects the PPP or loopback interface as fallback options.", "Returns an interface that is both \"up\", supports multicast, and has IP addresses for both IPv4 and IPv6.", "The method now checks if the network interface is both 'up' and supports multicast, and also verifies if it has either IPv4 or IPv6 addresses. If so, it selects that interface as the preferred option. Otherwise, it prioritizes an interface that is a Point-to-Point connection.", "The method now checks if the network interface is up and supports multicast, and also verifies if it has both IPv4 and IPv6 addresses. If so, it prioritizes that interface. Otherwise, it returns the previously identified preferred interface (PPP) or loopback interface."]}
{"SampleId": 101881, "Origin": "Return true if the given CmsTreeItem or its children is selected.", "Reference": "Return true if at least one child of the given tree item is selected.", "LLMCandidates": ["Checks if any of the given item's children or itself has been selected based on checkbox selection or recursive calls.", "Checks if any of the item's children or itself has been selected based on the checkbox selection or recursive calls to this method.", "Returns true if any of the given CmsTreeItem's children or itself is selected.", "Returns true if any of the given CmsTreeItem's children or itself has been selected.", "Returns true if any of the given CmsTreeItem's children or itself is selected."]}
{"SampleId": 6191662, "Origin": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle.", "Reference": "Note that this performs chains\nconstruction but will not inject {@link MuleContext} or perform any lifecycle.", "LLMCandidates": ["Performs chains construction while injecting the optional processing strategy and handling the provided list of processors.", "Performs chain construction and injects the optional processing strategy if provided, but does not inject `MuleContext` or `FlowConstruct` or perform any lifecycle management.", "Performs chain construction and injects the optional processing strategy if provided, but does not inject `MuleContext` or `FlowConstruct` or perform any lifecycle management.", "Performs chain construction and injects the optional processing strategy if present, but does not inject MuleContext, FlowConstruct or perform lifecycle management.", "Performs chain construction, injecting the optional processing strategy if provided, but does not inject MuleContext, FlowConstruct or perform lifecycle management."]}
{"SampleId": 4386724, "Origin": "NOTE: Amazon Glacier retains recently completed jobs for a\nperiod before deleting them; however, it eventually removes completed\njobs.", "Reference": "Amazon Glacier retains recently completed jobs for a period before\ndeleting them; however, it eventually removes completed jobs.", "LLMCandidates": ["The method now handles protocol factory configuration through the `protocolFactory` argument and uses an `HttpResponseHandler` to process the response.", "The method now handles `protocolFactory` for request handling and includes additional details about the response handler creation.", "The method now supports a custom protocol factory for handling the request and response.", "The method now handles the `protocolFactory` argument in the `ListJobsRequestMarshaller` and `HttpResponseHandler` creation.", "Note that Amazon Glacier retains recently completed jobs for a period before deleting them; however, it eventually removes completed jobs."]}
{"SampleId": 5440480, "Origin": "Appends the information about the given handle to {@link #buf buf}.", "Reference": "Appends a string representation of the given handle to {@link #stringBuilder}.", "LLMCandidates": ["Appends the information about the given handle to the designated mutable string builder object.", "Appends the information about the given handle to the designated string builder.", "Appends the information about the given handle to the newly created `stringBuilder`.", "Appends the information about the given handle to the designated mutable string builder.", "Appends the information about the given handle to the designated mutable string buffer."]}
{"SampleId": 5177566, "Origin": "Handler method converting a Jetty Connection into a Restlet Call.", "Reference": "Handler method converting a Jetty HttpChannel into a Restlet Call.", "LLMCandidates": ["Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call."]}
{"SampleId": 5631550, "Origin": "The timestamp for creation of the synonym.", "Reference": "The timestamp for creation of the object.", "LLMCandidates": ["Timestamp of synonym creation.", "Timestamp of creation of the synonym.", "Timestamp of creation of the synonym.", "Timestamp of synonym creation.", "Timestamp of synonym creation."]}
{"SampleId": 2312757, "Origin": "Returns the (unbiased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "LLMCandidates": ["Returns the kurtosis of all the values within a {@link PointSet} region of a {@link Dataset}.", "Calculates the sample kurtosis of all the values within a given PointSet region of a Dataset.", "Returns the kurtosis of all the values within a `PointSet` region of a `Dataset`.", "Returns the kurtosis of all the values within a `PointSet` region of a `Dataset`.", "Returns the kurtosis of all the values within a {@link PointSet} region of a {@link Dataset}."]}
{"SampleId": 5218994, "Origin": "remove space for SQL expression and outside parentheses", "Reference": "remove space for SQL expression", "LLMCandidates": ["Remove spaces from the SQL expression and outside parentheses.", "Simplify the expression by removing spaces and characters outside parentheses.", "Removed spaces from the SQL expression and outside parentheses.", "Removed spaces from the SQL expression and outside parentheses.", "Remove spaces from the SQL expression and outside parentheses."]}
{"SampleId": 1311345, "Origin": "Reads the inbound request headers from the request and sets them on\nthe {@link ServiceRequest}.", "Reference": "Reads the inbound request headers from the request and sets them on\nthe {@link ApiRequest}.", "LLMCandidates": ["Reads the inbound request headers from the request and sets them on the provided API request object.", "Reads the inbound request headers from the request and sets them on the `ApiRequest` object.", "Reads the inbound request headers from the request and sets them on the provided `ApiRequest` object.", "Reads the inbound request headers from the request and sets them on the `ApiRequest` object.", "Reads the inbound request headers from the request and sets them on the `ApiRequest` object."]}
{"SampleId": 594031, "Origin": "Returns the input stream of this message content.", "Reference": "Returns the CachedOutputStream of this message content.", "LLMCandidates": ["Returns a cached output stream containing the message content.", "Returns the cached output stream of this message content.", "Returns a cached output stream of this message content.", "Returns a cached output stream of this message content.", "Returns a cached output stream of this message content."]}
{"SampleId": 1404511, "Origin": "The value is {@link ArtifactFileMetadata#PLACEHOLDER} if the artifact's metadata is not\nfully captured in {@link #additionalOutputData}.", "Reference": "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully\ncaptured in {@link #additionalOutputData}.", "LLMCandidates": ["The value is now associated with the {@link FileArtifactValue#PLACEHOLDER} placeholder if the artifact's metadata is not fully captured in the {@link #additionalOutputData} field.", "The value is now associated with the type `FileArtifactValue` instead of `ArtifactFileMetadata#PLACEHOLDER`, as the artifact metadata is now captured in `#additionalOutputData`.", "The value is now associated with the type `FileArtifactValue` instead of `ArtifactFileMetadata#PLACEHOLDER` if the artifact's metadata is not fully captured in `#additionalOutputData`.", "The value is now {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in #additionalOutputData.", "The value is now associated with the type {@link FileArtifactValue} if the artifact's metadata is not fully captured in the {@link #additionalOutputData} field."]}
{"SampleId": 3036959, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["SONA now also supports GRE mode in addition to VXLAN, VLAN and FLAT modes.", "SONA now supports VXLAN, VLAN, and GRE modes.", "SONA now supports VXLAN, VLAN, and GRE modes.", "SONA now supports VXLAN, VLAN, and GRE modes.", "SONA now supports VXLAN, GRE and VLAN modes."]}
{"SampleId": 5459561, "Origin": "Returns {@code true} if this module reflectively exports the given\npackage package to the given module.", "Reference": "Returns {@code true} if this module reflectively exports or opens given\npackage package to the given module.", "LLMCandidates": ["Returns true if this module reflectively exports or opens the given package name to the given module, or if the given module is unnamed and the package is exported or opened to all unnamed modules.", "Returns true if this module reflectively exports or opens the given package name to the given module or to all unnamed modules, depending on the open parameter.", "Returns true if this module reflectively exports or opens the given package name to the given module, or is exported or open to all unnamed modules.", "Returns `true` if this module reflectively exports or opens the given package name to the given module, or is open to all unnamed modules.", "Returns true if this module reflectively exports or opens the given package name to the given module, or to all unnamed modules if the given module is unnamed."]}
{"SampleId": 5451749, "Origin": "Search for package name in the sorted regular expression\nlist, if found return the group name.", "Reference": "Search for element name in the sorted regular expression\nlist, if found return the group name.", "LLMCandidates": ["Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name."]}
{"SampleId": 2615604, "Origin": "Returns the keyFrames[] array where all the TextureRegions of the animation are stored.", "Reference": "Returns the keyframes[] array where all the frames of the animation are stored.", "LLMCandidates": ["Returns the T[] array where all the TextureRegions of the animation are stored.", "Returns the T[] array where all the TextureRegions of the animation are stored.", "Returns the T[] array where all the TextureRegions of the animation are stored.", "Returns the T[] array where all the TextureRegions of the animation are stored.", "Returns the T[] array where all the TextureRegions of the animation are stored."]}
{"SampleId": 2443539, "Origin": "Get the current {@link RequestScope.Instance request scope instance}\nand mark it as suspended.", "Reference": "Get the current {@link RequestContext request scope context}\nand mark it as suspended.", "LLMCandidates": ["Retrieves the current request context and marks it as suspended.", "Get the current `RequestContext` and mark it as suspended.", "Get the current `RequestContext` and mark it as suspended.", "Get the current request context and mark it as suspended.", "Get the current request context and mark it as suspended."]}
{"SampleId": 5377094, "Origin": "Whether to group the REST resources together.", "Reference": "How to group the REST resources together.", "LLMCandidates": ["Returns the value of the `groupRestResources` variable.", "Returns the current value of the groupRestResources flag.", "Returns the value of the `groupRestResources` variable.", "Returns the value of the `groupRestResources` variable.", "Returns the value of the `groupRestResources` variable."]}
{"SampleId": 1353529, "Origin": "Assign available voices to the chords that have no voice assigned yet.", "Reference": "Assign available voices to the chords in this measure with no voice assigned yet.", "LLMCandidates": ["Assign available voices to the chords that have no voice assigned yet within the given measure.", "Assign available voices to the chords in the given measure, using the first voice available in the part and with staff continuity whenever possible.", "Assign available voices to the chords in the given measure that have no voice assigned yet.", "Assigns available voices to the chords that have no voice assigned yet within a given measure.", "Assign available voices to the chords in the given measure that have no voice assigned yet."]}
{"SampleId": 4404113, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["The operation is eventually consistent. The request handler has been updated to use `SdkJsonProtocolFactory` and set the response payload to JSON.", "The operation is eventually consistent. The request is now handled using a custom JSON response handler.", "The method now handles request handling via a custom `JsonResponseHandler` created using the `SdkJsonProtocolFactory` class.", "Provides workflow execution history based on the provided request.", "Provides workflow execution history based on the provided request."]}
{"SampleId": 2403174, "Origin": "Ensures server received authentication request.", "Reference": "Ensures server received an extensions request.", "LLMCandidates": ["Assert that the server received an extension request.", "Asserts the server received an authentication request.", "Asserts the server received an authentication request.", "The purpose of this method has been superseded by a more generic assertion method.", "The purpose of this method has been superseded by a more generic assertion method."]}
{"SampleId": 470385, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:\n type.", "LLMCandidates": ["Specifies the data frame to be used for building the endpoint configuration.", "Sets the data frame to the configuration.", "Sets the data frame to the configuration.", "Sets the data frame value.", "Sets the data frame value."]}
{"SampleId": 5446194, "Origin": "Returns true if the given class loader is in the system domain\nin which all permissions are granted.", "Reference": "Returns true if the given class loader is the bootstrap class loader\nor the platform class loader.", "LLMCandidates": ["Returns true if the given class loader is in the system domain, or is the platform class loader.", "Returns true if the given class loader is in the system domain or the platform class loader.", "Returns true if the given class loader is in the system domain or is the platform class loader, which grants all permissions.", "Returns true if the given class loader is either null or the platform class loader, which implies that it operates in the system domain where all permissions are granted.", "Returns true if the given class loader is in the system domain or is the platform class loader, in which all permissions are granted."]}
{"SampleId": 4404087, "Origin": "IMPORTANT:Because the number of workflow history events for a\nsingle workflow execution might be very large, the result returned\nmight be split up across a number of pages.", "Reference": "Because the number of workflow history events for a single\nworkflow execution might be very large, the result returned might be\nsplit up across a number of pages.", "LLMCandidates": ["The result returned might be split up across multiple pages due to the large number of workflow history events for a single workflow execution.", "The result returned might be split up across multiple pages due to the large number of workflow history events for a single workflow execution.", "The result returned might be split up across multiple pages due to the potentially large number of workflow history events for a single workflow execution.", "The result returned might be split up across multiple pages due to the large number of workflow history events for a single workflow execution.", "The result returned might be split up across multiple pages due to the large number of workflow history events for a single workflow execution."]}
{"SampleId": 3774087, "Origin": "The default resolution is {@link Resolution#DAY} since Vaadin VERSION.", "Reference": "The default resolution is {@link DateResolution#DAY} since Vaadin VERSION.", "LLMCandidates": ["The default resolution is now {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION."]}
{"SampleId": 2734304, "Origin": "Returns {@link List} of expanded {@link AccordionPane}s.", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Returns a list of collapsed `AccordionPane`s after collapsing the panes identified by the given IDs.", "Returns a list of collapsed `AccordionPane`s after collapsing the panes identified by the given IDs.", "Returns a list of collapsed `AccordionPane`s after collapsing the panes identified by the given IDs.", "Returns an empty list if no expanded panes exist, otherwise retrieves the list of expanded panes from the model.", "Returns an empty list if no expanded panes exist, otherwise retrieves the list of expanded panes from the model."]}
{"SampleId": 1348111, "Origin": "Initializes the execution of a task.", "Reference": "Initializes the state machine.", "LLMCandidates": ["Initializes the state machine for the current instance.", "Initializes the state machine execution.", "Initializes the state machine.", "Initializes the state machine.", "Initializes the state machine for the current context."]}
{"SampleId": 1578397, "Origin": "Removes the specified properties of the {@link NamespacedEntityId}.", "Reference": "Removes the specified properties of the {@link MetadataEntity}.", "LLMCandidates": ["Removes the specified properties of the provided MetadataEntity.", "Removes the specified properties of the provided metadata entity.", "Removes the specified properties of the provided metadata entity.", "Removes the specified properties of the passed metadata entity.", "Removes the specified properties of the passed metadata entity."]}
{"SampleId": 3074972, "Origin": "Called in response to the {@link RContext#destroy} method.", "Reference": "Called in response to the {@link RContext#dispose} method.", "LLMCandidates": ["Called in response to the `RContext#dispose` method.", "Called in response to the `RContext#dispose` method.", "Called in response to the `RContext#dispose` method.", "Called in response to the `RContext#dispose` method.", "Called in response to the `RContext#dispose` method."]}
{"SampleId": 5315712, "Origin": "Each class must represent an annotated class.", "Reference": "Each class must represent a component class.", "LLMCandidates": ["Each class must represent a component class.", "The method now registers component classes based on the provided configuration.", "The method now registers component classes based on the provided configuration.", "Each class must represent a component class.", "Each class must represent a component class."]}
{"SampleId": 1989254, "Origin": "Add the specified {@link Graph} to the cache.", "Reference": "Add the specified {@link Store} to the cache.", "LLMCandidates": ["Adds the specified {@link Store} to the cache.", "Adds the specified  {@link Store} to the cache.", "Adds the specified {link Store} to the cache.", "Adds the specified {link Store} to the cache.", "Adds the specified {@link Store} to the cache."]}
{"SampleId": 4311215, "Origin": "High order byte is serverId, next 5\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "Reference": "High order 1 byte is serverId, next\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "LLMCandidates": ["High order byte is serverId, next 5 bytes are from timestamp, and low order 2 bytes are 0s.", "High order byte is serverId, next 55 bytes are from timestamp, and low order 2 bytes are 0s.", "High order byte is serverId, next 55 bytes are from timestamp.", "High order byte is serverId, next 5 bytes are from timestamp, and low order 2 bytes are still 0s.", "High order byte is serverId, next 55 bytes are from timestamp, and low order 2 bytes are 0s."]}
{"SampleId": 1135686, "Origin": "Common test method to be able to check security from any authentication plugin", "Reference": "Common test method to be able to check auth metrics from any authentication plugin", "LLMCandidates": ["Common test method to check security metrics from any authentication plugin.", "Common test method to check security metrics for authentication plugins.", "Common test method to check security metrics for authentication plugins.", "Common test method to check security metrics for authentication plugins using the specified prefix and defined thresholds.", "Common test method to check security metrics for authentication plugins."]}
{"SampleId": 5230482, "Origin": "An example of a valid direction is\n{@code new Vector(1, 0, 1)}.", "Reference": "An example of a valid direction is\n{@code new BlockVector3(1, 0, 1)}.", "LLMCandidates": ["The return type is now `Collection<BlockVector3>` instead of `Collection<Vector>`. Otherwise, the method body and example direction remain the same.", "The method now returns a collection of `BlockVector3` objects instead of `Vector` objects.", "The return type of this method has been changed from `Collection<Vector>` to `Collection<BlockVector3>`. The example direction remains valid: `{@code new BlockVector3(1, 0, 1)}`.", "The method now returns a collection of BlockVector3 objects instead of Vector objects. The example direction remains valid: `{@code new BlockVector3(1, 0, 1)}`.", "The return type is now `Collection<BlockVector3>` instead of `Collection<Vector>`."]}
{"SampleId": 4478306, "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.", "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "LLMCandidates": ["Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.\".", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.\".", "Code snippets for `BlobLeaseClientBuilder#buildClient()`.", "Code snippets for `BlobLeaseClientBuilder#buildClient()`.", "Code snippets for `BlobLeaseClientBuilder#buildClient()`."]}
{"SampleId": 2050142, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing.", "Pauses downloads if not already paused. Otherwise, does nothing."]}
{"SampleId": 1118538, "Origin": "Decodes a String representing a number of events into a Vector of LoggingEvents", "Reference": "Decodes a String representing a number of events into a", "LLMCandidates": ["Decodes a String representing a number of events into a Vector of LoggingEvents, handling the empty document case.", "Decodes a final String representing a number of events into a Vector of LoggingEvents.", "Decodes a final String representing a number of events into a Vector of LoggingEvents.", "Decodes a **final** String representing a number of events into a Vector of LoggingEvents.", "Decodes a String representing a number of events into a Vector of LoggingEvents, handling empty documents."]}
{"SampleId": 4245364, "Origin": "Checks whether or not resources in the WEB-INF folder can be access.", "Reference": "Checks whether or not resources in the web root folder can be access.", "LLMCandidates": ["Checks whether or not resources in the ROOT folder can be accessed.", "Checks whether or not resources in the ROOT folder can be accessed.", "Checks whether or not resources in the ROOT folder can be accessed.", "Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be accessed."]}
{"SampleId": 2705593, "Origin": "Get Stringwert.", "Reference": "Get Eingaberegister Name.", "LLMCandidates": ["Get the data entry tab name value.", "Retrieves the data entry tab name from the underlying data source.", "Get the Data Entry tab name value.", "Get the Data Entry tab name value.", "Get the Data Entry tab name value."]}
{"SampleId": 617199, "Origin": "Compare the two queues containing operator/task output by converting them to an array first.", "Reference": "Compare the two queues containing operator/task output by converting them to an array first, sort array by\ncomparator.", "LLMCandidates": ["Compares the two queues without any sorting, as the sorting logic is now performed in the `assertOutputEquals` method.", "Compares the two queues containing operator/task output by converting them to sorted arrays.", "Compare the two queues containing operator/task output using a sorting algorithm.", "Compare the two queues containing operator/task output using a sorting algorithm.", "Compares the two queues by converting them to sorted arrays and then verifies their equality."]}
{"SampleId": 4132895, "Origin": "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Reference": "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original", "LLMCandidates": ["Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet."]}
{"SampleId": 4372852, "Origin": "Sets the Single character used to indicate a row should be ignored when present at the start of a row.", "Reference": "Sets the character used to indicate a row should be ignored when present at the start of a row.", "LLMCandidates": ["Sets the Single character used to indicate a row should be ignored when present at the start of a row. The character is first converted to a String before being assigned.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row. This is converted to a string before being stored.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row. The character is first converted to a String before being stored.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row. The character is first converted to a string before being assigned.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row. The character is first converted to a string before being stored."]}
{"SampleId": 2443544, "Origin": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestScope.Instance scope instance}.", "Reference": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestContext scope context}.", "LLMCandidates": ["The current thread might already be in any request scope, and in that case the scope will be changed to the scope defined by the `RequestContext` object.", "The current thread might\nalready be in any request context, and in that case the context will be changed to the\ncontext defined by the  {@link RequestContext.RequestContext request context instance}.", "The current thread might already be in any request context, and in that case the context will be changed to the context defined by the `RequestContext` object.", "The current thread might be already in any request scope, and in that case the scope will be changed to the scope defined by the `RequestContext` object.", "The current thread might be already in any request context, and in that case the context will be changed to the context defined by the `RequestContext` object."]}
{"SampleId": 2891684, "Origin": "and \"..\" in file names.", "Reference": "and \"..\" in {@link File} names.", "LLMCandidates": ["The method now initializes the skip count with `ZERO` instead of `0`.", "The method now uses `ZERO` as the initial value for `skipCount` instead of relying on the value 0.", "The method now uses `ZERO` as a constant for the skip count instead of relying on a literal 0.", "Accounts for directory names containing '.' or '..'.", "The method now initializes `skipCount` to `ZERO` instead of `0`."]}
{"SampleId": 2616150, "Origin": "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Vector2} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the given string into a Vector2 object using the format defined by the #toString() method.", "Parses the given string into a Vector2 object using the same format as the #toString() method.", "Parses the given string into a Vector2 object using the same format as the #toString() method.", "Parses the given string into a Vector2 object using the same format as the #toString() method.", "Parses the `Vector2` represented by the given string according to the format of `#toString()`. This method now sets the resulting vector using the `set()` method."]}
{"SampleId": 4624426, "Origin": "Returns the function annotations.", "Reference": "Returns the function body expression.", "LLMCandidates": ["Returns the annotations of the last expression in the exprs array.", "Returns the annotations of the last expression in the exprs array.", "Returns the annotations of the last expression in the exprs array.", "Returns the annotations of the last expression in the exprs array.", "Returns the annotations of the last expression in the exprs array."]}
{"SampleId": 5360172, "Origin": "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type.", "Reference": "Configure an {@link RSocketOutboundGateway.Command} for the RSocket request type.", "LLMCandidates": ["Configure a deprecated `RSocketOutboundGateway.Command` for RSocket request type.", "Configure a deprecated `RSocketOutboundGateway.Command` for RSocket request type.", "Configure a deprecated `RSocketOutboundGateway.Command` for RSocket request type.", "Configure a deprecated `RSocketOutboundGateway.Command` for RSocket request type.", "Configure a deprecated `RSocketOutboundGateway.Command` for RSocket request type."]}
{"SampleId": 1630674, "Origin": "Inserts a {@link Set} to the {@link Dataset}", "Reference": "Inserts a {@code Set} to the {@link Dataset}.", "LLMCandidates": ["Inserts a set of entries into the dataset and returns the number of successfully inserted entries.", "Inserts a set of entries into the dataset and returns the number of successfully inserted entries.", "Inserts a set of dataset entries to the dataset and returns the number of successfully inserted entries.", "Inserts a set of entries into the dataset and returns the number of successful insertions.", "Inserts a set of entries into the dataset and returns the number of successful insertions."]}
{"SampleId": 402253, "Origin": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}", "Reference": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}", "LLMCandidates": ["Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName"]}
{"SampleId": 242261, "Origin": "Then log4j invokes the {@link #setAppenderName(String)}\nmethod to set the value of {@link #mAppenderName}.", "Reference": "Then log4j invokes the {@link #setProcessType(String)}\nmethod to set the value of {@link #mProcessType}.", "LLMCandidates": ["The log4j library invokes the `#setProcessType(String)` method to set the value of `#mProcessType`.", "The method name has been changed to setProcessType(String) and it now sets the value of mProcessType.", "The provided code has been modified to set the value of `mProcessType` instead of `mAppenderName`.", "The method name has been changed to setProcessType() and it now sets the value of mProcessType.", "The method name has been changed to setProcessType() and it now sets the value of mProcessType."]}
{"SampleId": 6047022, "Origin": "Returns the status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.", "Reference": "Returns the status with the primary key or throws a {@link NoSuchStatusException} if it could not be found.", "LLMCandidates": ["Returns the status with the primary key or throws a `com.liferay.chat.NoSuchStatusException` if it could not be found.", "Returns the status with the primary key or throws a `com.liferay.chat.NoSuchStatusException` if it could not be found.", "Returns the status with the primary key or throws a `com.liferay.chat.NoSuchStatusException` if it could not be found.", "Returns the status with the primary key or throws a `com.liferay.chat.NoSuchStatusException` if it could not be found.", "Returns the status with the primary key or throws a `com.liferay.chat.NoSuchStatusException` if it could not be found."]}
{"SampleId": 4388500, "Origin": "IMPORTANT: After you create a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group.", "Reference": "After you create a DB parameter group, you should wait at least 5 minutes\nbefore creating your first DB instance that uses that DB parameter group\nas the default parameter group.", "LLMCandidates": ["The method now uses a StaxResponseHandler to handle the response from the AWS API call.", "After creating the DB parameter group, please wait at least 5 minutes before creating your first DB instance using that DB parameter group as the default.", "The code now uses a custom StaxResponseHandler to handle the response from the API call.", "The code now uses a custom StaxResponseHandler to handle the response from the API call.", "The provided code includes enhanced request handling using StaxResponseHandler and updated response processing."]}
{"SampleId": 2484703, "Origin": "Sets the state attribute of this User to\nstate", "Reference": "Sets the state attribute of this User's element to\nstate", "LLMCandidates": ["Sets the state attribute of this User element to state.", "Sets the state attribute of this User element to state.", "Sets the state attribute of this User element to state.", "Sets the state attribute of this User element to state.", "Sets the state attribute of this User element to state."]}
{"SampleId": 3084770, "Origin": "This call returns true in the interpreter or a low tier compilation that does profiling.", "Reference": "This call returns true in the interpreter or a low grade compilation that does profiling.", "LLMCandidates": ["This call returns true in the interpreter or a low-grade compilation that does profiling.", "This call returns true in the interpreter or a low-grade compilation that does profiling.", "This call returns true in the interpreter or a low-grade compilation that does profiling.", "This call returns true in the interpreter or a low-grade compilation that does profiling.", "This call returns true in the interpreter or a low-grade compilation that does profiling."]}
{"SampleId": 4117768, "Origin": "Returns the InetAddress associated with the client who created/is interacting with this Subject.", "Reference": "Returns the host name or IP associated with the client who created/is interacting with this Subject.", "LLMCandidates": ["Returns the host name associated with the client who created/is interacting with this Subject.", "Returns the hostname associated with the client who created/is interacting with this Subject.", "Returns the host name associated with the client who created/is interacting with this Subject.", "Returns the host name associated with the client who created/is interacting with this Subject.", "Returns the host name associated with the client who created/is interacting with this Subject."]}
{"SampleId": 4479674, "Origin": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHTTPHeaders, Map, BlobAccessConditions)}", "Reference": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)}", "LLMCandidates": ["Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for `AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)`."]}
{"SampleId": 5600561, "Origin": "class|delay|cron", "Reference": "class|intervalSchedule|cron", "LLMCandidates": ["Class|task|cron", "Creates a matcher for the pattern to create a task.", "Creates a matcher for the pattern to create a task.", "Creates a matcher for the pattern to create a task.", "Class|delay|cron"]}
{"SampleId": 3083932, "Origin": "The returned context supplier is intended to be cached in the currently adopted\nAST.", "Reference": "The returned context reference is intended to be cached in the currently adopted\nAST.", "LLMCandidates": ["The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST."]}
{"SampleId": 291294, "Origin": "Converts short duration string (HH:MM) to milliseconds.", "Reference": "Converts short duration string (XX:YY) to milliseconds.", "LLMCandidates": ["Converts short duration string (HH:MM) to milliseconds, optionally considering hours instead of minutes.", "Converts short duration string (HH:MM) to milliseconds, optionally accounting for hours instead of minutes.", "Converts short duration string (HH:MM) to milliseconds, optionally accounting for durations specified in hours.", "Converts short duration string (HH:MM) to milliseconds, optionally accounting for hours.", "Converts short duration string (HH:MM) to milliseconds, optionally accounting for hours."]}
{"SampleId": 5927587, "Origin": "Returns a new fresh folder with the given name under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given path under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder with the given name under the root folder, ensuring it doesn't already exist.", "Creates a new folder with the given name under the current working directory, ensuring the folder is not absolute.", "Creates a new folder with the given name under the root folder, ensuring it's not an absolute path.", "Creates a new folder with the given name relative to the root directory.", "Creates a new folder with the given name relative to the root directory."]}
{"SampleId": 5319337, "Origin": "Adds a new CONSTANT_Double_info to the constant pool of this symbol table.", "Reference": "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol\ntable.", "LLMCandidates": ["Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table.", "Adds a new CONSTANT_INT_info to the constant pool of this symbol table.", "Adds a new CONSTANT_INT_info to the constant pool of this symbol table.", "Adds a new CONSTANT_INT_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table."]}
{"SampleId": 5447625, "Origin": "timed invokeAll(empty collection) returns empty collection", "Reference": "timed invokeAll(empty collection) returns empty list", "LLMCandidates": ["The method now accepts an empty collection and performs timed invokeAll with a randomly generated timeout and time unit.", "Invoke `invokeAll` method on the executor service with an empty collection of callable tasks and a randomly generated timeout and time unit.", "The method now performs timed invokeAll() on an empty collection, returning an empty collection of futures.", "The method now performs timed invokeAll with an empty collection of callable tasks and defines the timeout and time unit randomly.", "Invokes `invokeAll` with an empty collection of callable tasks and waits for a random timeout."]}
{"SampleId": 2337267, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user.", "Created by user.", "Created by user.", "Created by user.", "Created by user."]}
{"SampleId": 2337065, "Origin": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.", "Reference": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is **NOT** supplied.", "LLMCandidates": ["This method is deprecated. Use `getBrandingServerInfoWithHttpInfo().getData()` instead.", "The `getBrandingServerInfo` method is deprecated. Use `getBrandingServerInfoWithHttpInfo().getData()` instead.", "The method is deprecated. Use `getBrandingServerInfoWithHttpInfo().getData()` instead.", "The method is deprecated. Use `getBrandingServerInfoWithHttpInfo().getData()` instead.", "The functionality of this method has been superseded by `getBrandingServerInfoWithHttpInfo()`. Use the latter method instead."]}
{"SampleId": 2544551, "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.", "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.", "LLMCandidates": ["In order to set the matrix to a rotation transformation without post-multiplying, use `#rotation(Quaterniondc)`.", "In order to set the matrix to a rotation transformation without post-multiplying, use `#rotation(Quaterniondc)`.", "In order to set the matrix to a rotation transformation without post-multiplying, use `#rotation(Quaterniondc)`.", "In order to set the matrix to a rotation transformation without post-multiplying, use `#rotation(Quaterniondc)`.", "In order to set the matrix to a rotation transformation without post-multiplying, use `#rotation(Quaterniondc)`."]}
{"SampleId": 1574727, "Origin": "When translated into a QueryTerm object, search terms\ncontaining an operator have the operator removed from the string representation.", "Reference": "When translated into a QueryTerm object, search terms\ncontaining a qualifying operator have the operator removed from the string representation.", "LLMCandidates": ["Search terms containing an operator are retained in the string representation.", "Search terms containing an operator have the operator removed from the input string representation before being translated into a QueryTerm object.", "When translated into a QueryTerm object, search terms containing an operator have the operator removed from the input term string representation.", "Search terms containing an operator have the operator removed from the input string representation before being translated into a QueryTerm object.", "Search terms containing an operator have the operator removed from the input string before being translated into a QueryTerm object."]}
{"SampleId": 4962979, "Origin": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching.", "Reference": "This method is mostly used for root-level serializer\nhandling to allow for simpler caching.", "LLMCandidates": ["This method is currently used for finding value type serializers, primarily for caching purposes.", "This method is currently only used for root-level serializer handling to allow for simpler caching.", "This method is currently only used for root-level serializer handling to allow for simpler caching of top-level values.", "This method is now used for finding value type serializers, regardless of their use as root-level or non-root-level.", "This method is currently only used for root-level serializer handling to allow for simpler caching of value types."]}
{"SampleId": 2891318, "Origin": "Appends BCC address.", "Reference": "Appends CC address.", "LLMCandidates": ["Adds a CC address.", "Adds the given address as a CC recipient.", "Adds the given address as a CC recipient.", "Adds the specified address as a CC recipient.", "Adds the specified address as a CC recipient."]}
{"SampleId": 3758384, "Origin": "Look for contract stored by given slot contract id.", "Reference": "Look for the contract stored using the given slot contract id.", "LLMCandidates": ["Look for contract stored by the given slot contract id.", "Queries contract data stored by the given slot contract id.", "Queries contract stored by given slot contract id.", "Queries contract stored by given slot contract id.", "Look for contract stored by given slot contract id. The null checks have been added for originId and contractId parameters."]}
{"SampleId": 4237630, "Origin": "Sets the {@link IClassCache} for the given application.", "Reference": "Sets the {@link IGetAndSetLocator} for the given application.", "LLMCandidates": ["Sets the `IClassCache` for the given application using a custom locator to retrieve get-and-setters.", "Sets the `IClassCache` using a locator that allows retrieval of getters and setters for the given class and field name.", "Deprecated: Sets the `IClassCache` for the given application using a custom `IGetAndSetLocator`.", "Deprecated. Sets the locator to a new instance that caches get-and-setters retrieved from the provided `IClassCache`.", "Deprecated: Sets the `IClassCache` for the given application using a custom locator to retrieve get-and-setters from the cache or fallback to the default locator if not cached."]}
{"SampleId": 236986, "Origin": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to\ncomplete successfully.", "Reference": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to\ncomplete successfully.", "LLMCandidates": ["Tests for the `BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)` method to complete successfully.", "Tests for the BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions) method to complete successfully.", "Tests for the `BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)` method to complete successfully.", "Tests for the `BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)` method to complete successfully.", "Tests for the `BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)` method to complete successfully."]}
{"SampleId": 3576038, "Origin": "If there is any regular output or error\noutput, it is appended to the given s.", "Reference": "If there is any regular output or error\noutput, it is appended to the given {@code StringBuilder}s.", "LLMCandidates": ["This method now delegates the execution of the shell command to another overloaded version of the `runShellCommand` method.", "This method now delegates the actual command execution to a separate overload with additional parameters for handling output and error streams.", "The provided method now runs the specified shell command and writes any output or error to the designated output and error line buffers.", "The provided method now runs the specified command without capturing any output or error.", "The provided method now runs the specified command without capturing any output or error."]}
{"SampleId": 2048820, "Origin": "Calls {@link #discardToEnd()} and releases any held DRM resources.", "Reference": "Calls {@link #discardToEnd()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Releases DRM session references held in the metadata queue.", "Releases DRM session references held by the metadata queue.", "Releases DRM session references held by the metadata queue.", "Releases DRM session references held by the metadata queue.", "Calls `#discardToEnd()` and releases any held DRM resources held by the `metadataQueue`."]}
{"SampleId": 2913862, "Origin": "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations and 1% of the observation are above that level.", "Reference": "This is measured from the bottom, that is, Thus the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["This quantile is measured from the bottom, that is, the quantile estimation with the level `level` corresponds to the smallest `level` percent observations and `level` percent of the observations are above that level.", "This quantile is measured from the bottom, that is, the quantile estimation with the level `level` corresponds to the smallest `level` percent observations and `level` percent of the observations are above that level.", "Calculates the quantile from the sorted sample using the `quantileResultFromUnsorted` method and retrieves the result using `getValue()`. The quantile is measured from the bottom, meaning that the quantile estimation with the given level corresponds to the smallest specified percentage of observations and the remaining percentage are above that level.", "This quantile is calculated from the sorted sample using the `quantileResultFromUnsorted` method and then retrieves the quantile value using `getValue()`. The level indicates the proportion of observations below the quantile.", "This quantile is calculated from the values in the sortedSample list based on the given level. The result is retrieved from the quantileResultFromUnsorted method and its getValue method is used to extract the quantile value."]}
{"SampleId": 339673, "Origin": "Add a Content {@link Uri} to observe", "Reference": "Adds a content {@link Uri} for system observation", "LLMCandidates": ["Adds a Content `Uri` to the list of triggers.", "Adds a Content `Uri` to the list of triggers.", "Adds a Content `Uri` to the list of triggers.", "Adds a Content Uri to be observed.", "Adds a Content Uri to be observed."]}
{"SampleId": 367563, "Origin": "Preference summary should be the activated device name", "Reference": "Preference summary should be device's name", "LLMCandidates": ["Preference summary should be the name of the activated Bluetooth device.", "Preference summary should be the name of the active Bluetooth device after updateState() is called.", "Preference summary should be the name of the connected Bluetooth device.", "Preference summary should be the name of the activated Bluetooth device.", "Preference summary should be the name of the activated Bluetooth device."]}
{"SampleId": 3467627, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index."]}
{"SampleId": 528022, "Origin": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync).", "Reference": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync), and in\nthe treatment of failures.", "LLMCandidates": ["Differs from the above because it can be used on any file, rather than only managed commit log segments (and thus cannot call waitForFinalSync).", "Differ from the above because it can be used on any file, rather than only managed commit log segments (and thus cannot call waitForFinalSync).", "Differ from the above because it can be used on any file, rather than only managed commit log segments (and thus cannot call waitForFinalSync).", "Same as above, but now handles any file, rather than only managed commit log segments.", "Same as above, but now includes error handling with logging in case of archiving failures."]}
{"SampleId": 5630798, "Origin": "Gets the description.", "Reference": "Gets the code.", "LLMCandidates": ["Returns the code.", "Returns the code associated with the description.", "Returns the code associated with the description.", "Returns the code.", "Returns the code."]}
{"SampleId": 1136150, "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Reference": "Result is returned them in sorted order (most recent 1st)", "LLMCandidates": ["Parses the timestamp from the collection list and returns them in reverse sorted order (most recent first).", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent first).", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent first).", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent first).", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent first)."]}
{"SampleId": 3574164, "Origin": "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Reference": "Does a simple HEAD request to a configuration endpoint to check if it's reachable.", "LLMCandidates": ["Checks if the config server is reachable by sending a HEAD request to the specified endpoint.", "Checks if the config server is reachable by sending a HEAD request to the configured endpoint.", "Checks if the config server is reachable by sending a HEAD request to the specified URL.", "Checks if the config server is reachable by sending a HEAD request to the provided URL.", "Checks if the config server is reachable by sending a HEAD request to the specified endpoint."]}
{"SampleId": 4475929, "Origin": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, AppendBlobRequestConditions,", "Reference": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions,", "LLMCandidates": ["The code now includes MD5 checksum verification before appending the block.", "Code snippet now includes digest calculation for data before append operation.", "Code snippet now includes digest calculation for data before append operation.", "Code snippet for `AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)`.", "The code now includes MD5 checksum calculation before appending the block."]}
{"SampleId": 2395154, "Origin": "Returns true if the class has the specified annotation class.", "Reference": "Returns true if the class has the specified annotation type.", "LLMCandidates": ["Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation class, now accepting typeName as the class name instead of clz.", "Returns true if the class has the specified annotation class, now taking typeName as the argument instead of clz.", "Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation type."]}
{"SampleId": 2911558, "Origin": "A typical use case would be to convert index names to curve names valid for an underlying system.", "Reference": "A typical use case would be to convert parameter metadata tenors to be valid for an underlying system.", "LLMCandidates": ["Creates a CurveSensitivities instance using the provided function to update the parameter metadata.", "A typical use case would be to convert parameter metadata to curve sensitivities valid for an underlying system.", "The provided function transforms the parameter metadata associated with sensitivities.", "Creates a CurveSensitivities object by applying the provided function to parameter metadata.", "Creates a CurveSensitivities object by applying the provided function to parameter metadata."]}
{"SampleId": 2111867, "Origin": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module or within the default imports.", "Reference": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module.", "LLMCandidates": ["The method checks for unresolved types and eliminates them based on module imports, star imports, and default imports.", "The method checks each missing type against the module's single-type and on-demand imports.", "The method checks for unresolved types and eliminates them based on the module's explicit and implicit imports.", "The method checks for unresolved types that exist among the module's imports or within the default imports.", "The method checks for unresolved types and eliminates them based on the module's imports and default imports."]}
{"SampleId": 5455011, "Origin": "Checks a name to ensure that it's a legal type name.", "Reference": "Checks a name to ensure that it's a legal qualified class name.", "LLMCandidates": ["Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name."]}
{"SampleId": 1348848, "Origin": "Returns the log compactor.", "Reference": "Returns the log writer.", "LLMCandidates": ["Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer."]}
{"SampleId": 5631506, "Origin": "This property is not returned if the dialog node has no parent.", "Reference": "This property is omitted if the dialog node has no parent.", "LLMCandidates": ["Returns the parent node of the current dialog node.", "Returns the `parent` node of the current dialog node, or `null` if the node has no parent.", "This property is not returned if the dialog node has no parent.", "Returns the value of the parent node, or null if the dialog node has no parent.", "Gets the parent node of the dialog node. This property is not returned if the dialog node has no parent."]}
{"SampleId": 3847346, "Origin": "Parses {@link SparseVector} from the given Matrix Market string.", "Reference": "Parses {@link SparseVector} from the given Matrix Market.", "LLMCandidates": ["Parses `SparseVector` from the given Matrix Market InputStream.", "Parses `SparseVector` from the given input stream.", "Parses a SparseVector from the given Matrix Market InputStream.", "Parses a SparseVector from the given Matrix Market InputStream.", "Parses `SparseVector` from the given input stream."]}
{"SampleId": 4479574, "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHTTPHeaders)}", "Reference": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}", "LLMCandidates": ["Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)"]}
{"SampleId": 5841626, "Origin": "Get the gradle paths for the given list of modules and all the tested projects (if it is a test app).", "Reference": "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "LLMCandidates": ["Gets the gradle paths for the given module and all the tested projects if it's a test application.", "Retrieves the Gradle paths for the given module and all associated tested projects, if applicable.", "Gets the gradle paths for the given module and all the tested projects, if the module is a test app.", "Gets the gradle paths for the given module and all the tested projects, if it is a test application.", "Gets the gradle paths for the given module and all the tested projects, if the project is a test application."]}
{"SampleId": 5176845, "Origin": "Getter for {@link #exposeHeaders}", "Reference": "Getter for {@link #allowHeaders}", "LLMCandidates": ["Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders}.", "Getter for {@link #allowHeaders}."]}
{"SampleId": 4237183, "Origin": "Creates a {@link Behavior} that uses the given {@link WicketConsumer consumer}\nto do something with the component's tag.", "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do\nsomething with the component's tag.", "LLMCandidates": ["Creates a `Behavior` that uses the given `SerializableConsumer` to do something with the component's tag.", "Creates a `Behavior` that uses the given `SerializableConsumer` to do something with the component's tag.", "Creates a `Behavior` that uses the given `SerializableConsumer` to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag."]}
{"SampleId": 3964812, "Origin": "Accumulate secondarys into a LinkedListX (extended Persistent List) and Right with the supplied combiner function", "Reference": "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function", "LLMCandidates": ["Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function.", "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function.", "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function.", "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function.", "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function."]}
{"SampleId": 2872597, "Origin": "Retrieves the position in the list corresponding to itemId.", "Reference": "Retrieves the position in the list corresponding to itemId, subtracting any header views.", "LLMCandidates": ["Retrieves the position in the list corresponding to itemId, adjusted by the number of header views displayed.", "Retrieves the position in the list corresponding to itemId, accounting for the number of header views.", "Retrieves the position in the list corresponding to itemId, adjusted by the number of header views displayed.", "Retrieves the position in the list corresponding to itemId, adjusted by the number of header views displayed.", "Retrieves the position in the list corresponding to itemId, adjusted by the number of header views displayed."]}
{"SampleId": 2624224, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "LLMCandidates": ["Configures SSL or TLS of the virtual host template from the specified key certificate chain file and key file.", "Configures SSL or TLS of the virtual host template from the specified `keyCertChainFile` and cleartext `keyFile`.", "Configures SSL or TLS of the virtual host template from the specified key certificate chain file and key file.", "Configures SSL or TLS of the virtual host template from the specified `keyCertChainFile` and cleartext `keyFile`.", "Configures SSL or TLS of the virtual host template from the specified key certificate chain file and key file."]}
{"SampleId": 2337239, "Origin": "Phone Number", "Reference": "Phone number", "LLMCandidates": ["Phone number", "Phone number", "Phone number", "Phone number", "Phone number"]}
{"SampleId": 3991730, "Origin": "Set the number of expected records for this task.", "Reference": "Set the number of expected records for this connector.", "LLMCandidates": ["Set the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task."]}
{"SampleId": 2134050, "Origin": "predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["Predict the rating given a sparse vector representing user-item interactions.", "Predicts the rating given a sparse vector representing user-item interactions, including global bias and 1-way and 2-way interaction effects.", "Predicts the rating given a sparse vector representing user-item interactions, including global bias and 1-way and 2-way interaction effects.", "Predicts the rating for a given sparse vector representing user-item interactions, incorporating global bias and both 1-way and 2-way interactions.", "Predicts the rating given a sparse vector representing user-item interactions, including both global bias and 1-way and 2-way interactions."]}
{"SampleId": 3760874, "Origin": "Each of the available players is passed the provided information\nand the first that reports it is compatible will be returned.", "Reference": "Each of the available {@link Player} instances are\npassed the provided information and the first that reports that it is\ncompatible will be returned.", "LLMCandidates": ["Each available player is evaluated for compatibility with the provided resource, and the first compatible player encountered is returned.", "Each available player is evaluated for compatibility with the provided resource, and the first compatible player found is returned.", "Each available player is examined, and the first one compatible with the provided resource is returned.", "Each of the available players is passed the provided information and their compatibility with the resource is checked. The first player that reports compatibility will be returned.", "Each of the available players is passed the provided resource information, and the first that reports it is compatible will be returned."]}
{"SampleId": 617914, "Origin": "Adding fields to a POJO as operator state should require a state migration.", "Reference": "Adding fields to a POJO as operator state should succeed.", "LLMCandidates": ["The test case verifies that adding fields to a POJO as operator state does not trigger a state migration exception.", "Test the POJO serializer upgrade with the addition of a field as operator state.", "Test case now only verifies the POJO serialization upgrade process.", "Test case verifies that adding fields to a POJO as operator state triggers a StateMigrationException.", "Test case now only verifies the POJO serialization upgrade process."]}
{"SampleId": 5630039, "Origin": "Sets the sensitivity.", "Reference": "Set the sensitivity.", "LLMCandidates": ["Sets the sensitivity level of the Builder instance.", "Sets the sensitivity value on the Builder instance and returns the Builder instance for further configuration.", "Sets the sensitivity level for the builder instance.", "Sets the sensitivity level for the builder instance.", "Sets the sensitivity level for the builder instance."]}
{"SampleId": 340617, "Origin": "Requests that the player prefetch a media item with the media id for playback.", "Reference": "Requests that the player prepare a media item with the media id for playback.", "LLMCandidates": ["Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback."]}
{"SampleId": 4476666, "Origin": "Creates a new block blob, or updates the content of an existing block blob.", "Reference": "Creates a new block blob.", "LLMCandidates": ["Creates a new block blob, or updates the content of an existing block blob, optionally specifying whether to perform a partial upload.", "Creates a new block blob, or updates the content of an existing block blob, optionally specifying whether to perform the operation in parallel.", "Creates a new block blob, or updates the content of an existing block blob, without triggering any metadata updates.", "Creates a new block blob, or updates the content of an existing block blob, with the option to skip metadata updates.", "Creates a new block blob, or updates the content of an existing block blob, optionally bypassing cache."]}
{"SampleId": 4479525, "Origin": "Get the etag property: The etag property.", "Reference": "Get the eTag property: The eTag property.", "LLMCandidates": ["Returns the eTag property: The eTag property.", "Returns the eTag property: The eTag property.", "Gets the eTag property: The eTag property.", "Gets the eTag property: The eTag property.", "Returns the eTag property: The eTag property."]}
{"SampleId": 2484852, "Origin": "Causes  to have its \nmethod called in the event dispatch thread with low priority.", "Reference": "Causes runnable to have its run method called in the\nevent dispatch thread with low priority.", "LLMCandidates": ["Causes the given method to be called in the event dispatch thread with low priority using the specified toolkit.", "Causes the provided Runnable to be invoked in the event dispatch thread with low priority.", "Causes the given Runnable to be invoked in the event dispatch thread with low priority using the provided Toolkit instance.", "Causes the provided runnable to be invoked in the event dispatch thread with low priority.", "Causes the given method to be invoked in the event dispatch thread with low priority using the specified Toolkit."]}
{"SampleId": 4903008, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if the deletion policy can release index commits whose sequence numbers are less than or equal to the latest global checkpoint.", "Checks if the deletion policy can release some index commits with the latest global checkpoint based on the max sequence number of the next safe commit.", "Checks if the deletion policy can release some index commits based on the latest global checkpoint.", "Checks if the deletion policy can release index commits whose sequence numbers are less than or equal to the latest global checkpoint.", "Checks if the deletion policy can release some index commits with the latest global checkpoint based on the maximum sequence number from the last commit."]}
{"SampleId": 617915, "Origin": "Removing fields from a POJO as keyed state should require a state migration.", "Reference": "Removing fields from a POJO as keyed state should succeed.", "LLMCandidates": ["Removed the expectation of a state migration exception as the test now verifies the upgrade process directly.", "Test case verifies that state migration is triggered when removing fields from a POJO with keyed state.", "Test case verifies that a state migration exception is thrown when removing fields from a POJO as keyed state.", "Test case verifies that state migration is triggered when removing fields as keyed state.", "The test case verifies that upgrading the POJO serializer encounters an exception when removing fields that are used as keyed state."]}
{"SampleId": 5845110, "Origin": "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources\njust like the app does.", "Reference": "When a layout is rendered in the layout editor, it is getting resources from the app resource repository: it should see all\nthe resources just like the app does.", "LLMCandidates": ["Retrieves the application's resource repository, ensuring it is initialized if necessary.", "Retrieves the app resource repository, ensuring it is initialized with the facet and library resources.", "Retrieves the app resource repository, ensuring it's initialized with the facet and library resources.", "Retrieves the app resource repository from the ApplicationManager, ensuring it is initialized if necessary.", "Retrieves the app resource repository from the ApplicationManager, ensuring it is initialized if necessary."]}
{"SampleId": 6034464, "Origin": "Enables initial {@literal PING} barrier before any connection is usable.", "Reference": "Returns the {@link ProtocolVersion} to use.", "LLMCandidates": ["Retrieves the current protocol version.", "Retrieves the currently used protocol version.", "Retrieves the currently used protocol version.", "Returns the current protocol version.", "Returns the current protocol version."]}
{"SampleId": 3242213, "Origin": "Get the content of this element.", "Reference": "Gets the value of the content property.", "LLMCandidates": ["Gets the content of the element, using the updated variable name 'content'.", "Retrieves the content stored in the element.", "Retrieves the content stored in the element.", "Gets the content of this element.", "Gets the content of this element."]}
{"SampleId": 2535872, "Origin": "Extract the values of given field or property from the array's elements under test into a new array, this new array\nbecoming the array under test.", "Reference": "Extract the values of given field or property from the array's elements under test into a new list, this new list\nbecoming the object under test.", "LLMCandidates": ["Extracts the values of the given field or property from the array's elements under test into a new list, this new list becoming the list under test.", "Extracts the values of the given field or property from the array's elements under test into a new list, this new list becoming the list under test.", "Extracts the values of the given field or property from the array's elements under test into a new list, this new list becoming the list under test.", "Extracts the values of the given field or property from the array's elements under test into a new list, this new list becoming the list under test.", "Extracts the values of the given field or property from the array's elements under test into a new list, this new list becoming the list under test."]}
{"SampleId": 671354, "Origin": "Converts a JSON document into a PdxInstance", "Reference": "Converts a Byte Array JSON document into a PdxInstance", "LLMCandidates": ["Converts a JSON document into a PdxInstance, optionally specifying identity fields to be populated from the JSON.", "Converts a JSON document into a PdxInstance, optionally specifying identity fields to be populated from the JSON.", "Converts a JSON document into a PdxInstance, optionally specifying identity fields to be preserved during conversion.", "Converts a JSON document into a PdxInstance, optionally specifying identity fields to be preserved during conversion.", "Converts a JSON document into a PdxInstance, optionally specifying identity fields to be populated from the JSON."]}
{"SampleId": 3512219, "Origin": "Gets the current {@link Art} value represented by this {@link Painting}.", "Reference": "Gets the current {@link ArtType} value represented by this {@link Painting}.", "LLMCandidates": ["Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current value of type `ArtType` represented by this `Painting`.", "Gets the current `ArtType` value represented by this `Painting`.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}."]}
{"SampleId": 3894604, "Origin": "In error message, exclude {@code @rultor} from list of commanders (REF).", "Reference": "QnAskedBy can exclude {@code @rultor} from list of commanders (REF).", "LLMCandidates": ["In error message, exclude `@rultor` from the list of commanders (REF).", "In error message, exclude `@rultor` from the list of commanders (REF).", "In error message, exclude `@rultor` from the list of commanders (REF).", "In the error message, exclude `@rultor` from the list of commanders (REF).", "In error message, exclude `@rultor` from the list of commanders (REF)."]}
{"SampleId": 1843359, "Origin": "WebElement#getText()} equals to provided {@code expectedText}.", "Reference": "WebElement#getText()} equals to provided {@code expected} one.", "LLMCandidates": ["Waits until the element's text equals the provided expected text. Uses a custom error message to report the discrepancy.", "Waits until the element's text equals the provided expected text. Uses a custom error message format to report the discrepancy.", "Waits until the element's text equals the provided expected text. Logs the comparison using a formatted string.", "Waits until the element's text equals the provided expected text. Uses a custom error message to report the discrepancy.", "Waits until the element's text equals the provided `expected` parameter. Logs a formatted message indicating the expected and actual values."]}
{"SampleId": 2700102, "Origin": "Set UPC/EAN.", "Reference": "Set CU-UPC.", "LLMCandidates": ["Sets UPC/EAN value.", "Sets UPC/EAN value.", "Sets UPC/EAN value.", "Set UPC/EAN value.", "Set UPC/EAN value."]}
{"SampleId": 4396695, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 4236719, "Origin": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface()} for important\nsecurity-related information.", "Reference": "WARNING: Read the javadoc of {@link Component#canCallListener()} for important\nsecurity-related information.", "LLMCandidates": ["Refer to the updated documentation of `Component#canCallListener()` for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "The updated method name is `canCallListener` and the referenced method name is `canCallListener` in the security-related information."]}
{"SampleId": 2916154, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["The method now iterates over `SwapPaymentPeriod` objects instead of `PaymentPeriod` objects.", "The payment periods must not be of type `SwapPaymentPeriod`.", "The provided code now iterates over `SwapPaymentPeriod` objects instead of `PaymentPeriod` objects.", "The method now iterates over `SwapPaymentPeriod` objects instead of `PaymentPeriod` objects.", "The payment periods must not be of type `KnownAmountPaymentPeriod`."]}
{"SampleId": 4396563, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, omitting sensitive variable data for security.", "Returns a string representation of this object, with sensitive variable data redacted for security.", "Returns a string representation of this object, with sensitive variable data redacted for security.", "Returns a string representation of this object, with sensitive variable data redacted for security.", "Returns a string representation of this object, with sensitive variable data redacted for security."]}
{"SampleId": 3771649, "Origin": "Checks whether caption and description are interpreted as html or plain\ntext.", "Reference": "Checks whether caption and description are interpreted as HTML or plain\ntext.", "LLMCandidates": ["Checks whether the current state's `htmlContentAllowed` flag is true.", "Checks whether the HTML content flag is enabled in the current state.", "Checks whether the HTML content flag is enabled in the current state.", "Checks whether the current state's caption and description are interpreted as HTML or plain text.", "Checks whether the current state's caption and description are interpreted as HTML or plain text."]}
{"SampleId": 278863, "Origin": "Determines if this BeaconManager instance is part of the process hosting the beacon scanning\nservice.", "Reference": "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning\nservice.", "LLMCandidates": ["Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a process different from the one hosting the beacon scanning service.", "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service."]}
{"SampleId": 5873660, "Origin": "The domain portion of the ObjectName in the query if useObjDomain is set to true\n3. else, the Class Name of the MBean.", "Reference": "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true\n3. else, the Class Name of the MBean.", "LLMCandidates": ["Adds the MBean identifier to the query results based on key alias, object domain or class name, depending on the query configuration.", "The domain portion of the ObjectName in the query if `query.isUseObjDomainAsKey()` is true, otherwise the Class Name of the MBean.", "Added query parameter `query.isUseObjDomainAsKey()` to check if the ObjectName domain should be used as the key.", "Added the MBean identifier to the query result if available, or the object domain if `query.isUseObjDomainAsKey()` is true. Otherwise, the class name is appended.", "Added the `query` parameter and updated the reference to `useObjDomain` and `allowDottedKeys` based on the query configuration."]}
{"SampleId": 5762169, "Origin": "Forget all entries that match the scheme+host+port of the given key, so\nthat they can be crawled again if discovered again.", "Reference": "Forget all entries that match the scheme+host+port of the given url, so\nthat they can be crawled again if discovered again.", "LLMCandidates": ["Forget all entries whose scheme+authority matches the given url, so that they can be crawled again if discovered again.", "Forget all entries whose scheme+authority matches the given url, so that they can be crawled again if discovered again.", "Forget all entries whose scheme+authority matches the given url, so that they can be crawled again if discovered again.", "Forget all entries whose scheme+authority matches the given url, so that they can be crawled again if discovered again.", "Forget all entries where the scheme+authority from the given url is found in alreadySeen, allowing them to be rediscovered."]}
{"SampleId": 5640433, "Origin": "Keys and values are separated by {@value #SEPARATOR}.", "Reference": "Keys and values are separated by {@value #KEY_VALUE_SEPARATOR}.", "LLMCandidates": ["Filters are parsed into a map of key-value pairs, which are then processed.", "Filters are parsed into a map of key-value pairs, which are then processed.", "Filters are parsed into a map of key-value pairs, which are then processed.", "Filters are parsed into a map of key-value pairs using the #parseFilters method.", "Filters are parsed into a map of keys and values, which are then processed."]}
{"SampleId": 3357863, "Origin": "Set the time a publication will linger in nanoseconds after being drained.", "Reference": "Set the time a network publication will linger in nanoseconds after being drained.", "LLMCandidates": ["Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained."]}
{"SampleId": 4474502, "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubDirectory#string}", "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#string}", "LLMCandidates": ["Creates a subdirectory with the given name.", "Creates a subdirectory with the given name.", "Creates a subdirectory with the given name.", "Creates a subdirectory with the given name.", "Creates a subdirectory with the given name."]}
{"SampleId": 2337263, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user.", "Created by user", "Created by user", "Created by user", "Created by user"]}
{"SampleId": 1578381, "Origin": "Retrieves the metadata for the specified {@link NamespacedEntityId}.", "Reference": "Retrieves the metadata for the specified {@link MetadataEntity}.", "LLMCandidates": ["Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {MetadataEntity} object."]}
{"SampleId": 4477036, "Origin": "BlobRange, ParallelTransferOptions, ReliableDownloadOptions, BlobRequestConditions, boolean)}", "Reference": "BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean)}", "LLMCandidates": ["DownloadRetryOptions has been added to the method signature, reflecting the change in the code.", "DownloadRetryOptions has been added to the method signature, replacing ReliableDownloadOptions.", "DownloadRetryOptions has been added to handle retries in case of download errors.", "Download options updated to include DownloadRetryOptions for automatic retries on download failures.", "Download options updated to include DownloadRetryOptions for automatic retries on download failures."]}
{"SampleId": 5270017, "Origin": "Request for graceful stop then blocks until process is stopped.", "Reference": "Request for quick stop then blocks until process is stopped.", "LLMCandidates": ["Request for immediate stop, bypassing graceful shutdown process.", "Requests a hard stop of the process, blocking until process is stopped. Note: Timeout value may need to be adjusted for specific cases (see MMF-1673).", "Request for forceful stop, bypassing graceful shutdown process.", "Request for forceful stop, bypassing graceful shutdown process.", "Request for immediate stop, bypassing graceful shutdown process."]}
{"SampleId": 2384658, "Origin": "For now, just consume the message and throw it away.", "Reference": "Consume the message and save it.", "LLMCandidates": ["The method now reads the message line by line, discarding any lines starting with '.', and writes the remaining content to a temporary stream. The final message is retrieved from the stream and assigned to the `setMessage` method.", "Reads the message line by line and discards lines starting with '.' until encountering the end of the message. The content is then stored in a ByteArrayOutputStream.", "The method now reads the message line by line and writes it to a temporary buffer before setting the message content.", "The method now reads the message line by line and discards any line starting with '.'. The remaining lines are written to a temporary stream and the final result is stored in the 'setMessage' method.", "Reads the message line by line until encountering a '.' character, discarding the prefix '.' from any lines starting with it, and writing the remaining content to an output stream."]}
{"SampleId": 2887747, "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).", "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).", "LLMCandidates": ["This signature is the one specified in the constructor (see `#SignatureReader(String) SignatureReader`). The method parses the given signature value and visits various elements of the signature, such as formal type parameters, class and interface bounds, parameters, return type, and exceptions, depending on the signature's structure.", "This signature is the one specified in the constructor (see `#SignatureReader(String)` SignatureReader). The parsing logic has been refactored to handle type parameters, method and class signatures more efficiently.", "This signature is the one specified in the constructor (see `#SignatureReader(String)` SignatureReader). It represents the parsed form of the signature string, which can include type parameters, method parameters, return type, and exceptions.", "This signature is the one specified in the constructor (see the updated documentation for #SignatureReader(String) SignatureReader).", "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}). It reflects the formal type parameters, method parameters, return type, and exceptions in the specified string."]}
{"SampleId": 237013, "Origin": "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} object with a\nmatching Alluxio storage type.", "Reference": "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a\nmatching Alluxio storage type.", "LLMCandidates": ["Converts a `CreateFilePOptions` object to an `OpenFilePOptions` object with a matching Alluxio storage type.", "Converts a `CreateFilePOptions` object to an `OpenFilePOptions` object with a matching Alluxio storage type.", "Converts a `CreateFilePOptions` object to an `OpenFilePOptions` object with a matching Alluxio storage type.", "Converts a `CreateFilePOptions` object to an `OpenFilePOptions` object with a matching Alluxio storage type.", "Converts a `CreateFilePOptions` object to an `OpenFilePOptions` object with a matching Alluxio storage type."]}
{"SampleId": 1314716, "Origin": "Called when the user reorders the policies in a service.", "Reference": "Called when the user reorders the policies in a API.", "LLMCandidates": ["Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API."]}
{"SampleId": 1880460, "Origin": "This lacks a mathematical argument, but is a handcrafted heuristic to avoid\nnumerical problems.", "Reference": "This lacks a thorough mathematical argument, but is a handcrafted heuristic\nto avoid numerical problems.", "LLMCandidates": ["This lacks a mathematical argument, but is a handcrafted heuristic to avoid numerical problems in degenerate cases, where all distances are effectively zero. In such scenarios, the method simply returns 1.", "This lacks a mathematical argument, but is a handcrafted heuristic to avoid numerical problems in degenerate cases. In such cases, the function simply returns 1.", "The provided code includes a heuristic to handle degenerate cases by simply returning 1 if all distances are zero. This bypasses the lack of a mathematical argument for the original heuristic but avoids numerical problems.", "This lacks a mathematical argument, but is a handcrafted heuristic to avoid numerical problems in degenerate cases, where it simply returns 1.", "This method employs a handcrafted heuristic to address numerical instabilities by estimating the initial beta value based on the distances between data points, ensuring better numerical stability."]}
{"SampleId": 2608946, "Origin": "Tests {@code globalRecommend(Set, int, Set, Set)}.", "Reference": "Tests {@code recommendRelatedItems()(Set, int, Set, Set)}.", "LLMCandidates": ["Tests `recommendRelatedItems(Set, int, Set, Set)`.", "Tests `recommendRelatedItems(Set, int, Set, Set)` with various recommendations and exclusions criteria.", "Tests the revised version of the global item-item recommender algorithm, which now returns a list of recommended IDs.", "Tests the revised  {@code recommendRelatedItems(Set, int, Set, Set)} method.", "Tests the `recommendRelatedItems(Set, int, Set, Set)` method."]}
{"SampleId": 1759643, "Origin": "Setter for the output directory where the data files are stored.", "Reference": "Setter for the directory where the data files are stored.", "LLMCandidates": ["Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Sets the directory where the data files are stored.", "Sets the directory where the data files are stored."]}
{"SampleId": 4470079, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["In case of failure, the `CosmosContinuablePagedFlux` will emit an error.", "The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux`.", "In case of failure, the `CosmosContinuablePagedFlux` will emit an error.", "The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux`.", "In case of failure, the `CosmosContinuablePagedFlux` will emit an error."]}
{"SampleId": 4404087, "Origin": "Note that you do not call", "Reference": "Note that you do\nnot call  with this\n.", "LLMCandidates": ["The request handler has been updated to utilize the SdkJsonProtocolFactory to create a JSON response handler.", "The request handler has been updated to use the SdkJsonProtocolFactory class for JSON response handling.", "The request handler has been updated to use SdkJsonProtocolFactory to create the response handler.", "The request handler has been updated to use `SdkJsonProtocolFactory` for improved JSON handling.", "See updated documentation for request handling and response processing."]}
{"SampleId": 5452026, "Origin": "Adds a qualified \"exports dynamic\" directive to the declaration.", "Reference": "Adds a qualified \"opens\" directive to the declaration.", "LLMCandidates": ["Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration."]}
{"SampleId": 1985765, "Origin": "| 2. if it's a right child, it should have a incremented column value.", "Reference": "| If it's a right child, its column should increment by 1.", "LLMCandidates": ["If it's a right child, it should have a decremented column value instead.", "If it's a right child, it should have a decremented column value instead.", "Changed 'left' to 'right' children in the BFS loop to traverse the columns in the vertical order.", "The right child should have a decremented column value instead of an incremented one.", "If it's a right child, it should have a decremented column value instead."]}
{"SampleId": 2482285, "Origin": "Queries this search source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Queries this search source for the given queryString using the `createContactQuery` method.", "Queries this search source for the given queryString, using the `createContactQuery` method instead of `queryContactSource`.", "Queries this search source for the given queryString using the `createContactQuery` method.", "Queries this search source for the given queryString using the `createContactQuery` method.", "Queries this search source for the given queryString using the `createContactQuery` method."]}
{"SampleId": 4470466, "Origin": "Gets the list of {@link CertificateProperties CertificateProperties} on this page.", "Reference": "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "LLMCandidates": ["Returns an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Gets an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Retrieves an iterable stream of {@link CertificateProperties CertificateProperties} from this page.", "Returns an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Returns an iterable stream of {@link CertificateProperties CertificateProperties} on this page."]}
{"SampleId": 2312346, "Origin": "Users\ncannot poke the threshold values via this Condition.", "Reference": "Users must not poke the threshold values via this Condition.", "LLMCandidates": ["Retrieves the Condition object named 'conditionWithin'. This Condition object cannot poke the threshold values.", "Retrieves the condition within the threshold values.", "Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin.", "The condition used for retrieving the threshold values is now `conditionWithin` instead of `condition`."]}
{"SampleId": 2616149, "Origin": "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Rectangle} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the `Rectangle` represented by the given string according to the format of `#toString()`. The result is returned as this instance after setting the x, y, width, and height values.", "Parses the `Rectangle` represented by the given string according to the format of `#toString()`.  Returns a new `Rectangle` object initialized with the values extracted from the string.", "Parses the `Rectangle` represented by the given string according to the format of `#toString()`, and sets the resulting rectangle using the `set()` method.", "Parses the `Rectangle` represented by the given string according to the format of `#toString()`, and sets its x, y, width, and height values.", "Parses the given string into a Rectangle object using the format specified by the #toString() method."]}
{"SampleId": 3573462, "Origin": "Set name of the noun.", "Reference": "Set the noun.", "LLMCandidates": ["Sets the name of the noun.", "Sets the noun of the Builder.", "Sets the noun of the Builder.", "Sets the name of the noun.", "Sets the name of the noun."]}
{"SampleId": 2302360, "Origin": "Delegateaction to the track(s) clicked on.", "Reference": "Delegate action to the track(s) clicked on.", "LLMCandidates": ["Delegate action to the track(s) clicked on.", "Delegate action to the tracks clicked on.", "Delegate action to the tracks clicked on.", "Delegate action to the tracks clicked on.", "Delegate action to the tracks clicked on."]}
{"SampleId": 1052994, "Origin": "Receive indicator result from persistence, after it is saved into storage.", "Reference": "Receive metrics result from persistence, after it is saved into storage.", "LLMCandidates": ["Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage."]}
{"SampleId": 1328525, "Origin": "Sets the journal serializer, returning the builder for method chaining.", "Reference": "Sets the journal namespace, returning the builder for method chaining.", "LLMCandidates": ["Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the serialization namespace, returning the builder for method chaining."]}
{"SampleId": 1066822, "Origin": "Return the {@code Graph} from the underlying switchable.", "Reference": "Return the {@code Graph} from the underlying DatasetGraph", "LLMCandidates": ["Returns the base {@code Graph} from the underlying switchable, or a default graph if no name is specified.", "Returns the base {@code Graph} from the underlying switchable, or a default graph if no name is specified.", "Returns the base {@code Graph} from the underlying switchable, or a default graph if no name is specified.", "Returns the base {@code Graph} from the underlying switchable, or a default graph if the graph name is null.", "Returns the base {@code Graph} from the underlying switchable, or the default graph if the graph name is null."]}
{"SampleId": 1353787, "Origin": "(Try to) create a Flag inter (either standard FlagInter or SmallFlagInter).", "Reference": "(Try to) create and add a Flag inter (either standard FlagInter or SmallFlagInter).", "LLMCandidates": ["Creates a valid FlagInter instance, handling the case where a link is found among the system stems.", "Creates a valid FlagInter instance.", "Creates a valid FlagInter instance.", "Creates a valid FlagInter instance, including standard FlagInter or SmallFlagInter.", "Creates a valid FlagInter instance, adding the provided glyph, shape and grade to the flag."]}
{"SampleId": 4396618, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, omitting sensitive data for privacy.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted from the Payload field.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security. Useful for testing and debugging."]}
{"SampleId": 5435232, "Origin": "If the new lookup class is not within the same package member\nas the old one, private members will not be accessible, and protected members\nwill not be accessible by virtue of inheritance.", "Reference": "If the new lookup class is not within the same package member\n as the old one, private members will not be accessible, and protected members\n will not be accessible by virtue of inheritance,\n i.e.", "LLMCandidates": ["If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible due to access restrictions.", "If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible due to access restrictions.", "If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible due to module boundaries. Additional access restrictions apply depending on the `allowedModes` flag.", "If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible.", "If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible."]}
{"SampleId": 2913759, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name using a dedicated parser.", "Obtains an instance from the specified name using a dedicated parser."]}
{"SampleId": 1356182, "Origin": "Report the ID of the sample sheet that contains the provided sample.", "Reference": "Report the name of the sample sheet that contains the provided sample.", "LLMCandidates": ["Report the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample."]}
{"SampleId": 576503, "Origin": "The format used is ISO 8601-like:\nH:m:s.S.", "Reference": "The format used is ISO 8601-like: {@code HH:mm:ss.SSS}.", "LLMCandidates": ["The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:mm:ss.SSS."]}
{"SampleId": 2251648, "Origin": "Get the object, and return it, throws RuntimeException", "Reference": "Get the object, and return it, throws RuntimeException if not found", "LLMCandidates": ["Get the value associated with the given key from the internal data structure, or throws RuntimeException if not found.", "Retrieves the value associated with the given key from the data structure. If not found, throws RuntimeException.", "Retrieves the value associated with the given key from the internal data store, throws RuntimeException if not found.", "Get the value associated with the given key from the data structure, or throw an RuntimeException if not found.", "Retrieves the value associated with the given key from the internal data structure."]}
{"SampleId": 2939253, "Origin": "This polling job tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "Reference": "This function tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "LLMCandidates": ["This polling job checks for and creates missing UPnP devices related to the same Samsung TV, then checks for a manual connection.", "This polling job checks for additional UPnP devices related to the same Samsung TV and creates handlers for them. Additionally, it now checks for and creates a manual connection.", "This polling job checks and creates missing UPnP services, and also checks for a manual connection.", "This polling job checks for other UPnP devices related to the same Samsung TV and creates handlers for them. Additionally, it checks for a manual connection.", "This polling job checks for and creates missing UPnP devices related to the same Samsung TV, and also attempts to establish a manual connection if necessary."]}
{"SampleId": 4474437, "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubDirectory#String}", "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}", "LLMCandidates": ["Deleted the subdirectory identified by the given name.", "Delete the specified subdirectory asynchronously.", "Delete the specified subdirectory asynchronously.", "Deleted the subdirectory identified by the given name.", "Deleted the subdirectory identified by the given name."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"\\0\"}, settings without any label are returned.", "Reference": "If {@code labelFilter = \"\\0\"}, settings without any label are returned.", "LLMCandidates": ["If `labelFilter` is empty, settings without any label are returned.", "If `labelFilter` is empty, settings without any label are returned.", "If {@code labelFilter = \"\"}, settings without any label are returned.", "If {@code labelFilter = \"\"}, settings without any label are returned.", "If {@code labelFilter} is empty, settings without any label are returned."]}
{"SampleId": 6165109, "Origin": "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace.", "Reference": "The namespace document is a BsonDocument containing the values associated with a MongoNamespace.", "LLMCandidates": ["The getNamespaceDocument method now allows for a `null` value.", "The `namespaceDocument` is a `BsonDocument` containing the values associated with a MongoNamespace. It may be `null` in some cases.", "The `namespaceDocument` is a `BsonDocument` containing the values associated with a MongoNamespace. It may be `null` in certain cases.", "The `namespaceDocument` is a `BsonDocument` containing the values associated with a MongoNamespace, which may be `null`.", "The `getNamespaceDocument` method now allows `null` as a possible value."]}
{"SampleId": 3083929, "Origin": "Returns a supplier that returns the current language instance.", "Reference": "Returns a reference that returns the current language instance.", "LLMCandidates": ["Returns the language reference associated with the current language instance.", "Returns a LanguageReference object representing the current language instance.", "Returns a LanguageReference object representing the current language instance.", "Returns the current language instance represented as a LanguageReference object.", "Returns the current language instance represented as a LanguageReference object."]}
{"SampleId": 5203568, "Origin": "After the recreation, it brings back its lifecycle state to the resumed state.", "Reference": "After the recreation, it brings back its lifecycle state to the original state.", "LLMCandidates": ["After recreation, it restores the activity's lifecycle state to its previous stage, which is reflected by the appropriate lifecycle callbacks being invoked in sequence.", "The method handles different lifecycle stages of the component before recreation and restores the state appropriately. After recreation, it brings the component back to the state it was in before recreation.", "After recreation, it restores the lifecycle state to the stage it was before recreation, handling transient stages appropriately.", "The method now handles different lifecycle stages of the activity before and after recreation, ensuring proper state restoration and post-creation processing based on the original stage.", "After recreation, it restores the activity's lifecycle state to the state it was in before recreation."]}
{"SampleId": 3242255, "Origin": "Create an instance of {@link CTWebProperties }", "Reference": "Create an instance of {@link CTRel }", "LLMCandidates": ["Creates an instance of CTRel.", "Create an instance of CTRel.", "Create an instance of CTRel.", "Creates an instance of CTRel.", "Creates an instance of CTRel."]}
{"SampleId": 2337259, "Origin": "Classification ID (for files only): * `1` - public * `2` - for internal use only * `3` - confidential * `4` - strictly confidential", "Reference": "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "LLMCandidates": ["Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential"]}
{"SampleId": 1750901, "Origin": "Appends to a collection column, as in {@code SET l+=?}.", "Reference": "Appends to a collection column, as in {@code SET l=l+?}.", "LLMCandidates": ["Appends to a collection column, as in `SET ${columnId} += ${suffix}`.", "Appends to a collection column, as in `SET l += ?`.", "Appends to a collection column, as in `SET ${columnId} += ${suffix}`.", "Appends to a collection column, as in `SET <columnId>+=<suffix>`.", "Appends to a collection column, as in `SET <columnId>+=<suffix>`."]}
{"SampleId": 2127259, "Origin": "Start a Task with a Tag to identify it and with a time threshold; a task represents some work\nthat spans some time, and you are interested in both its start time and end time.", "Reference": "End a Task with a Tag to identify it; a task represents some work that spans some time, and\nyou are interested in both its start time and end time.", "LLMCandidates": ["Tasks now end with a Tag and a time threshold, representing the completion of some work.", "Completes a Task identified by a Tag and tracks its end time.", "Completes a Task identified by a Tag and tracks its end time.", "Completes a Task identified by a Tag and records its end time.", "Ends a Task identified by a Tag and associated with a time threshold."]}
{"SampleId": 2913708, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 6048292, "Origin": "or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Reference": "or throws a {@link NoSuchAccountException} if it could not be found.", "LLMCandidates": ["The method returns the account object if found by user ID and email address, or throws a `com.liferay.mail.NoSuchAccountException` if it could not be found.", "The method returns the Account object if found by user ID and address, or throws a `com.liferay.mail.NoSuchAccountException` if it could not be found.", "The method returns the account object matching the given user ID and email address or throws a `com.liferay.mail.NoSuchAccountException` if it could not be found.", "The method returns the account object for the given user ID and email address, or throws a `com.liferay.mail.NoSuchAccountException` if it could not be found.", "The method returns the Account object if found by user ID and address, or throws a com.liferay.mail.NoSuchAccountException if it could not be found."]}
{"SampleId": 5828271, "Origin": "Loads the update center data, if any and if modified since last read.", "Reference": "Loads the update center data, if any.", "LLMCandidates": ["Loads the update center data from the file if available and if its modification time is newer than the last time it was read.", "Loads the update center data from the file if available and if it has been modified since the last read.", "Loads the update center data from file if available and if it has been modified since the last read.", "Loads the update center data from the file if available and if its modification time has changed since the last read.", "Retrieves the cached data object if available and refreshes it if modified since last read."]}
{"SampleId": 3923671, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["Generates a deprecated Collapsed SemanticGraph with no extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras.", "Deprecated: Produces a Collapsed SemanticGraph with no extras."]}
{"SampleId": 5218897, "Origin": "Is has plain column or not.", "Reference": "Contains plain column or not.", "LLMCandidates": ["Checks if the given table contains a plain column.", "Checks if the given table contains a plain column.", "Checks if the given table contains a plain column.", "Checks if the given table contains a plain column.", "Checks if the given table contains a plain column."]}
{"SampleId": 1352583, "Origin": "Report the note which if vertically farthest from stem tail.", "Reference": "Report the highest note by default.", "LLMCandidates": ["Returns the highest note in the chord.", "Report the note which is vertically farthest from the stem tail.", "Report the note which is vertically farthest from the stem tail.", "Reports the highest note in the chord.", "Reports the highest note in the chord."]}
{"SampleId": 5589244, "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getContentLanguage(Context)}.", "Reference": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "LLMCandidates": ["If the given language code is `null`, uses `DisplaySettings#getShowsLanguage(Context)`.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses  {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is `null`, uses `DisplaySettings#getShowsLanguage(Context)`.", "If the given language code is `null`, uses `DisplaySettings#getShowsLanguage(Context)` to fallback to the default language."]}
{"SampleId": 5844942, "Origin": "Creates an Android framework resource repository without using a persistent cache.", "Reference": "Creates an Android framework resource repository.", "LLMCandidates": ["Creates a FrameworkResourceRepository with optional persistent caching and configurable cache creation executor.", "Creates a FrameworkResourceRepository with optional persistent caching and asynchronous cache creation.", "Creates a FrameworkResourceRepository with optional persistent caching and asynchronous cache creation. The repository is initialized based on the provided resource folder or JAR file, and it attempts to load resources from a persistent cache if configured. If caching is enabled, an asynchronous cache creation task is scheduled with the provided Executor.", "Creates a FrameworkResourceRepository from a folder or jar, optionally including locale resources. It also supports optional persistent caching and asynchronous cache creation with a custom executor.", "Creates a FrameworkResourceRepository using the specified folder or JAR file, optionally including locale resources. If a persistent cache is enabled and the resource data is available in the cache, it will be loaded from there for improved performance. Otherwise, the resource files will be loaded from the source."]}
{"SampleId": 5631353, "Origin": "Convert file to HTML.", "Reference": "Convert document to HTML.", "LLMCandidates": ["Converts file to HTML, now accepting a model parameter and specifying the request header 'Accept' as 'application/json'.", "Converts file to HTML, now including header and model parameters.", "Converts file to HTML, now including support for specifying a model ID and accepting files in multipart/form-data format.", "Converts file to HTML, including additional header and query parameter handling.", "Converts file to HTML, including additional request headers and query parameters based on input options."]}
{"SampleId": 1354710, "Origin": "Try to detect link between this Slur instance and head on left side\nplus head on right.", "Reference": "Try to detect link between this Slur instance and head on left side\nplus head on right side.", "LLMCandidates": ["Attempts to detect links between this Slur instance and heads on the left and right sides, based on defined area pairs.", "Attempts to detect potential link pairs between this Slur instance and heads on the left and right sides, using area-based heuristics.", "Attempts to detect potential link pairs between this Slur instance and heads on the left and right sides.", "Attempts to detect candidate link pairs between this Slur instance and heads on the left and right sides, based on chords identified on those heads.", "Attempts to detect links between this Slur instance and heads on both the left and right sides."]}
{"SampleId": 1548425, "Origin": "Slight performance increase over {@link #render(BufferBuilder)}.", "Reference": "Slight performance increase over {@link #render(VertexBuffer)}.", "LLMCandidates": ["Performance improvement over `#render(BufferBuilder)` due to changes in method signature.", "Performance improvement over `#render(BufferBuilder)` due to the use of `VertexBuffer` instead of `BufferBuilder`.", "Slight performance increase over `#render(VertexBuffer)`.", "Performance improvement over `#render(BufferBuilder)` due to changes in method signature.", "Performance improvement over `#render(BufferBuilder)` due to changes in method signature."]}
{"SampleId": 2133750, "Origin": "Calculate a sample's standard deviation.", "Reference": "Calculate the standard deviation.", "LLMCandidates": ["Calculates the standard deviation of a collection of numbers, using the provided mean.", "Calculates the standard deviation of a collection of numbers, using the mean as the center point.", "Calculates the standard deviation of a collection of numbers, using the provided mean.", "Calculates the standard deviation of a collection of numbers, using the provided mean.", "Calculates the standard deviation of a collection of numeric values, using the provided mean."]}
{"SampleId": 2545534, "Origin": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation.", "Reference": "When transforming a vector by the resulting matrix the rotation - and possibly scaling - transformation will be applied first and then the translation.", "LLMCandidates": ["The rotation transformation is applied before the translation transformation in the resulting matrix.", "The provided code updates the rotation-translation algorithm. The new version uses a different approach for calculating the rotation matrix elements, leveraging quaternion multiplication. The overall process remains the same, with rotation applied before translation.", "The rotation transformation is now applied before the translation transformation.", "The rotation transformation is now applied before the translation transformation.", "The rotation transformation is applied before the translation transformation."]}
{"SampleId": 6049369, "Origin": "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Reference": "Returns the foo with the primary key or throws a {@link NoSuchFooException} if it could not be found.", "LLMCandidates": ["Returns the Foo with the primary key or throws a `com.liferay.sampleservicebuilder.NoSuchFooException` if it could not be found.", "Returns the Foo with the primary key or throws a `com.liferay.sampleservicebuilder.NoSuchFooException` if it could not be found.", "Returns the Foo with the primary key or throws a `com.liferay.sampleservicebuilder.NoSuchFooException` if it could not be found.", "Returns the Foo with the primary key or throws a `com.liferay.sampleservicebuilder.NoSuchFooException` if it could not be found.", "Returns the Foo with the primary key or throws a `com.liferay.sampleservicebuilder.NoSuchFooException` if it could not be found."]}
{"SampleId": 2882033, "Origin": "Gets the String or Long id from the key, or null if incomplete", "Reference": "Gets the String or Long id from the key as a Value, or null if incomplete", "LLMCandidates": ["Retrieves the ID of the entity represented by the given key, which can be either a complete or incomplete key. If the key is complete, the ID is returned as a Long value. Otherwise, the name of the entity is returned as a String value.", "Retrieves the ID value from the key as a Long or String, or null if the key is incomplete.", "Retrieves the value associated with the key, as a Value object, or null if the key is incomplete.", "Retrieves the ID value (as a Long or String) from the given key, or null if incomplete.", "Gets the Value&lt;S&gt; representation of the id from the key, or null if incomplete."]}
{"SampleId": 1327914, "Origin": "Returns a list of backup nodes.", "Reference": "Returns a list of follower nodes.", "LLMCandidates": ["Returns a list of followers.", "Returns a list of followers.", "Returns a list of followers.", "Returns a list of followers.", "Returns a list of followers."]}
{"SampleId": 1542632, "Origin": "This method creates a temporary VCF file and it's appropriately named index file, and will delete them on exit.", "Reference": "This method creates a temporary VCF or Bam file and its appropriately named index file, and will delete them on exit.", "LLMCandidates": ["This method creates a temporary indexed file and its appropriately named index file, and will delete them on exit. Additionally, it now supports indexing files with the `.bam` extension by adding a new conditional branch to the existing logic.", "This method creates a temporary file and its associated index file, appropriately naming them based on the file suffix. It will delete both files on program exit.", "This method creates a temporary file and its associated index file, appropriately named based on the suffix of the file being created. Deleted on exit.", "This method creates a temporary file and its associated index file, appropriately named based on the file suffix. The temporary files will be deleted upon program exit.", "Creates a temporary file with the specified prefix and suffix, along with an appropriately named index file if applicable (based on the file suffix), and deletes both files on exit."]}
{"SampleId": 2050311, "Origin": "Starts the service if not started already and starts all downloads.", "Reference": "Starts the service if not started already and resumes all downloads.", "LLMCandidates": ["Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads."]}
{"SampleId": 125737, "Origin": "Helper method to retrieve the parent folder type.", "Reference": "Helper method to retrieve the parent folder type or  if none available.", "LLMCandidates": ["Helper method to retrieve the parent folder type, noting that the retrieved value may be null.", "Helper method to retrieve the parent folder type, noting that the retrieved type may be null.", "Helper method to retrieve the parent folder type, noting that the retrieved type may be null.", "Helper method to retrieve the parent folder type, noting that the retrieved type may be null.", "Helper method to retrieve the parent folder type, noting that the cached folder type may be null."]}
{"SampleId": 6235650, "Origin": "The input stream should\ncontain an X.509 certificate chain in PEM format.", "Reference": "The input stream should\ncontain an X.509 certificate collection in PEM format.", "LLMCandidates": ["The input stream should contain an X.509 certificate collection in PEM format.", "The input stream should contain an X.509 certificate collection in PEM format.", "The input stream should contain an X.509 certificate collection in PEM format.", "The input stream should contain an X.509 certificate collection in PEM format.", "The input stream should contain an X.509 certificate collection in PEM format."]}
{"SampleId": 3389056, "Origin": "Unregister the given event from the current context (provided).", "Reference": "Unregister all methods observing the given event from the provided context.", "LLMCandidates": ["Unregister the given event from the set of observers associated with the given class.", "Unregister the given event from the list of registered observers associated with the given instance.", "Unregister the given event from the set of observers associated with the specified class.", "Unregister the given event from the set of observers associated with the specified class.", "Unregister the given event from the set of observers associated with the given type."]}
{"SampleId": 1328163, "Origin": "Sets the storage serializer.", "Reference": "Sets the storage namespace.", "LLMCandidates": ["Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace."]}
{"SampleId": 2912410, "Origin": "Gets the groups used to find an issuer curve.", "Reference": "Gets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Returns a map of legal entity IDs to groups used to find issuer curves.", "Retrieves the groups associated with legal entities to find issuer curve information.", "Returns a map of legal entity IDs to their associated groups, used to find issuer curves.", "Gets the groups used to find a legal entity curve.", "Gets the groups used to find a legal entity curve."]}
{"SampleId": 1578587, "Origin": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}", "Reference": "Returns a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}.", "LLMCandidates": ["Creates a new MetadataEntity by adding a new KeyValue pair with the given key and value to the existing details of this MetadataEntity.", "Creates a new `MetadataEntity` by adding a new `KeyValue` pair of the given key and value to its internal details map.", "Creates a new `MetadataEntity` by adding a new `KeyValue` pair consisting of the given key and value to its internal `details` map.", "Creates a new `MetadataEntity` by adding a new key-value pair to the existing ones.", "Creates a new `MetadataEntity` by adding a new `KeyValue` pair to its `details` map."]}
{"SampleId": 4396433, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, omitting sensitive data for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, omitting sensitive data for privacy.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 3677761, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).", "LLMCandidates": ["The input for parameter `dayOfWeek` will return the previous day of the week.", "The provided comment is no longer relevant as the method body has been simplified.", "The input for parameter (DayOfWeek) will return the previous day of the specified day.", "The input for parameter (DayOfWeek) will return the previous day of the specified day.", "The input dayOfWeek for the previous method will return the previous day of the week."]}
{"SampleId": 3993404, "Origin": "Complete the request.", "Reference": "2.", "LLMCandidates": ["Completes the request and updates the final state based on the outcome (SUCCESSED or FAILED). If the final state was already completed, an IllegalStateException is thrown.", "Complete the request. The final state is now determined based on the exception status, with success or failure logged accordingly. The state transition logic has been updated to handle successful batches after previous failures.", "Completes the request and updates the final state based on the outcome (SUCCESSED or FAILED), logging appropriate messages.", "Completes the request and updates the final state based on the outcome (SUCCESSED or FAILED), logging appropriate messages.", "Completes the request and updates the final state based on the outcome of message production. If successful, logs a success message; otherwise, logs an error message with the exception. If the final state was already set, checks if the new state is consistent with the previous one and throws an exception if not."]}
{"SampleId": 2060821, "Origin": "It tests that the method {@code addEdge}\nwill silently add the missing nodes to the graph, then add the edge connecting them.", "Reference": "Tests that the method {@code addEdge} will silently add the missing nodes to the graph, then\nadd the edge connecting them.", "LLMCandidates": ["Tests that the method `addEdge` will silently add the missing nodes to the mutable graph, then add the edge connecting them.", "Tests that the method `addEdge` will silently add the missing nodes to the mutable graph, then add the edge connecting them.", "Tests that the method `addEdge` will silently add the missing nodes to the mutable graph, then add the edge connecting them.", "Tests that the method `addEdge` will silently add missing nodes to the mutable graph before adding the specified edge between them.", "Tests that the method `addEdge` will silently add the missing nodes to the mutable graph, then add the edge connecting them."]}
{"SampleId": 6104045, "Origin": "Will set Object as TAG to this request, wrapped by WeakReference", "Reference": "Will set Object as TAG to underlying AsyncHttpRequest", "LLMCandidates": ["Sets the request tag for the underlying asynchronous request object.", "Sets the request tag to the given Object.", "Sets the request tag to the passed Object, which is wrapped in WeakReference.", "Sets the request tag to the passed Object, which is wrapped in WeakReference.", "Sets the request tag associated with this request."]}
{"SampleId": 3492756, "Origin": "Whether the channel product is a beta product", "Reference": "Whether the channel product is a betaMarker product", "LLMCandidates": ["Checks if the channel product is marked as beta using the `betaMarker` field.", "Determines whether the channel product is marked as beta using the `betaMarker` field.", "Determines whether the channel product is marked as beta using the `betaMarker` field.", "Determines whether the channel product is a beta version, based on the value of the `betaMarker` field.", "Checks if the channel product is a beta product, based on the value of the betaMarker field."]}
{"SampleId": 6006976, "Origin": "Write a Chart series as rows in a CSV file.", "Reference": "Export a XYChart series into rows in a CSV file.", "LLMCandidates": ["Writes a XYSeries chart as rows in a CSV file.", "Writes a XYSeries chart as rows in a CSV file.", "Writes a XYSeries chart as rows in a CSV file.", "Writes data points from an XYSeries object as rows in a CSV file.", "Writes data points from an XYSeries object as rows in a CSV file."]}
{"SampleId": 3677760, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).", "LLMCandidates": ["The input dayOfWeek for parameter (SATURDAY) will return a RelativeDayOfWeek one week later.", "The input dayOfWeek for parameter (SATURDAY) will return a RelativeDayOfWeek one week later.", "The input dayOfWeek for parameter (SATURDAY) will return a RelativeDayOfWeek one week later.", "The input dayOfWeek for parameter (SATURDAY) will return a RelativeDayOfWeek object representing one week later.", "The input dayOfWeek will return a RelativeDayOfWeek instance representing the next day of the week."]}
{"SampleId": 2700520, "Origin": "Set Bewegungsdatum.", "Reference": "Set Inventurdatum.", "LLMCandidates": ["Set Lagerdatum.", "Set Lagerdatum.", "Set Lagerdatum.", "Set Lagerdatum.", "Set inventorisdatum."]}
{"SampleId": 5631504, "Origin": "Gets the dialogNodeId.", "Reference": "Gets the dialogNode.", "LLMCandidates": ["Returns the dialogNode.", "Returns the dialogNode value.", "Returns the dialogNode value.", "Returns the dialogNode value.", "Returns the dialogNode."]}
{"SampleId": 2959054, "Origin": "the barChartProperties of the chart", "Reference": "the chartProperties of the chart", "LLMCandidates": ["Returns the chartProperties of the chart.", "Returns the chartProperties of the chart.", "Returns the chartProperties of the chart.", "Returns the chartProperties of the chart.", "Returns the chartProperties of the chart."]}
{"SampleId": 3037217, "Origin": "Gets forwarding function type of the forwarding objective.", "Reference": "Attempts to guess the forwarding function type of the given forwarding\nobjective.", "LLMCandidates": ["Calculates the forwarding function type based on the criteria and meta criteria of the forwarding objective. The method checks for compatibility with various forwarding function types and selects the best match based on the presence and type of criteria in the objective.", "Calculates the forwarding function type based on the criteria and meta criteria of the forwarding objective. The method checks if the forwarding function type expected criterion types match the ones found in the objective, and also if the forwarding function type's criteria are contained in the objective.", "Calculates the forwarding function type based on the criteria and meta criteria of the forwarding objective. Filters out forwarding function types that do not match the observed criteria types or those that do not have a perfect match for the observed criteria.", "Calculates the forwarding function type based on the criteria of the forwarding objective, considering both the main objective and any meta criteria.", "Calculates the forwarding function type based on the criteria and meta criteria of the forwarding objective. The method filters out criteria indicating L2 broadcast and returns the most suitable forwarding function type based on the remaining criteria."]}
{"SampleId": 5749203, "Origin": "Returns an iterator of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "Reference": "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "LLMCandidates": ["Returns a collection of all of the registered `SaslClientFactory`s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered `SaslClientFactory`s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered `SaslClientFactory`s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered `SaslClientFactory`s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered `SaslClientFactory`s where the order is based on the order of the Provider registration and/or class path order."]}
{"SampleId": 2229197, "Origin": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code cursor#getNext()} to the result.", "Reference": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code pathCursor#getNext()} to the result.", "LLMCandidates": ["Traverses objects in the given array and adds their scalar values to the result, as indicated by the cursor's next value.", "Traverses all objects in the given array and adds their scalar values, named by the next cursor value, to the result.", "Traverses all objects in the given array and adds their scalar values named `cursor.getCurrent()` to the result.", "Traverses all objects in the given array and adds their scalar values named `cursor#getNext()` to the result.", "Traverses all objects in the given array and adds their scalar values named `cursor#getNext()` to the result."]}
{"SampleId": 1665715, "Origin": "This method is run everytime the service is executed", "Reference": "This method is run every time the service is executed", "LLMCandidates": ["This method is responsible for automatically backing up all books in the database.", "This method is responsible for automatically backing up all books in the application.", "This method is responsible for automatically backing up all books in the application.", "This method is responsible for backing up all books in the database to their corresponding files.", "This method is responsible for automatically backing up all books in the database."]}
{"SampleId": 4933730, "Origin": "If one param is a float, the other is converted to a float.", "Reference": "a/b If one param is a\nfloat, the other is converted to a float.", "LLMCandidates": ["If both params are integers, the result is rounded to an integer. Otherwise, the parameters are converted to floats before calculating the power.", "If both params are integers, the result is rounded to an integer power. Otherwise, the parameters are converted to floats before calculating the power.", "If one or both params are floats, the other is converted to a float.", "If one or both params are floats, the other is converted to a float.", "If both params are ints, their values are used to calculate the power directly. Otherwise, the values are converted to floats before calculating the power."]}
{"SampleId": 4478592, "Origin": "Get the fileContentType property: Sets the MIME content type of the\nfile.", "Reference": "Get the contentType property: Sets the MIME content type of the\nfile.", "LLMCandidates": ["Returns the contentType property: Sets the MIME content type of the file.", "Gets the contentType property: Returns the MIME content type of the file.", "Gets the contentType property: Sets the MIME content type of the file.", "Returns the contentType property: Sets the MIME content type of the file.", "Returns the contentType property: Sets the MIME content type of the file."]}
{"SampleId": 4390872, "Origin": "For more information about managing snapshot copy grants, go to", "Reference": "For more information about managing snapshot copy grants, go to Amazon Redshift Database Encryption in the Amazon Redshift", "LLMCandidates": ["See updated documentation for managing snapshot copy grants.", "Creates a snapshot copy grant using the provided request object.", "See the updated documentation for managing snapshot copy grants.", "See the updated documentation for managing snapshot copy grants.", "See the updated documentation for managing snapshot copy grants."]}
{"SampleId": 2061801, "Origin": "Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\nnumber of keys.", "Reference": "Uses a hash table to map keys to value collections, initialized to expect the specified\nnumber of keys.", "LLMCandidates": ["Uses a `Platform.newHashMapWithExpectedSize` to map keys to value collections, initialized to expect the specified number of keys.", "Uses a `Platform.newHashMapWithExpectedSize` method to map keys to value collections, initialized to expect the specified number of keys.", "Uses a platform-specific `HashMap` implementation to map keys to value collections, initialized to expect the specified number of keys.", "Uses a platform-specific `HashMap` implementation to map keys to value collections, initialized to expect the specified number of keys.", "Uses a `Platform.newHashMapWithExpectedSize` to map keys to value collections, initialized to expect the specified number of keys."]}
{"SampleId": 4620088, "Origin": "Returns the number of occurrences, or {@code -1} if the exact number is unknown.", "Reference": "Returns the result size, or {@code -1} if the exact size is unknown.", "LLMCandidates": ["Returns the size of the collection, or -1 if the exact size is unknown.", "Returns the size of the collection, or -1 if the exact size is unknown.", "Returns the size of the underlying data structure, or -1 if the size is unknown.", "Returns the size of the collection, or -1 if the exact size is unknown.", "Returns the size of the collection, or -1 if the exact size is unknown."]}
{"SampleId": 1467613, "Origin": "Log rule execution statistics.", "Reference": "Log rule execution statistics @ INFO.", "LLMCandidates": ["Log rule execution statistics, including summaries and detailed rows for the query and its children.", "Logs rule execution statistics, including summaries and details for both the main query and its children.", "Log rule execution statistics, including summaries and detailed rows for both the current query and its children.", "Log rule execution statistics, including summaries and detailed rows for the query and its children. Note that a new `StringBuilder` object is allocated for each query to avoid potential deadlock issues when logging queries with child subqueries. See the linked ticket for details.", "Logs rule execution statistics, including summary and detailed rows for the given query and its children."]}
{"SampleId": 2217836, "Origin": "Test of var method, of class HyperGeometricDistribution.", "Reference": "Test of variance method, of class HyperGeometricDistribution.", "LLMCandidates": ["Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, which calculates the variance of the HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution."]}
{"SampleId": 275709, "Origin": "Load all profile names.", "Reference": "A task that reads all profile names.", "LLMCandidates": ["Reads all profile names.", "Reads all profile names.", "Reads all profile names.", "Reads all profile names.", "Reads all profile names."]}
{"SampleId": 337244, "Origin": "Get the {@link SessionConfiguration} for the specified camera id.", "Reference": "Get the {@link SessionConfig} for the specified camera id.", "LLMCandidates": ["Retrieves the `SessionConfig` object for the specified camera id.", "Get the `SessionConfig` object for the specified camera id.", "Retrieve the `SessionConfig` object associated with the specified camera ID from the attached camera ID to session config map.", "Retrieves the `SessionConfig` object associated with the specified camera ID from the attached camera ID to session config map.", "Retrieves the `SessionConfig` object associated with the specified camera ID from the attached camera ID to session configuration map."]}
{"SampleId": 3677731, "Origin": "Obtains an instance of {@code ZoneOffset} from a date-time object.", "Reference": "Obtains an instance of {@code ZoneOffset} from a temporal object.", "LLMCandidates": ["Obtains an instance of `ZoneOffset` from a date-time object, handling potential `DateTimeException` during conversion.", "Obtains an instance of `ZoneOffset` from a date-time object, handling potential `DateTimeException` during conversion.", "Obtains an instance of `ZoneOffset` from a date-time object, handling potential `DateTimeException`.", "Obtains an instance of `ZoneOffset` from a date-time object, handling potential `DateTimeException`.", "Obtains an instance of `ZoneOffset` from a date-time object, handling potential `DateTimeException`."]}
{"SampleId": 4245995, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Returns null if text is empty, otherwise converts to a Long value using toLongObject() method.", "Converts to object types, returning null if text is empty.", "Converts to Long object if the text is not empty, or null otherwise.", "Converts to Long object if the text is not empty, or null otherwise.", "Converts to object types, returning null if text is empty."]}
{"SampleId": 3384765, "Origin": "Returns the attack range for a {@link robocode.SentryRobot SentryRobot}.", "Reference": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}\nfrom the border.", "LLMCandidates": ["Returns the border size of a `robocode.SentryRobot SentryRobot`.", "Returns the border size of a {@link robocode.SentryRobot SentryRobot}.", "Returns the border size of a `robocode.SentryRobot SentryRobot`.", "Returns the border size of a `robocode.SentryRobot SentryRobot`.", "Returns the border size of a `robocode.SentryRobot SentryRobot`."]}
{"SampleId": 3036764, "Origin": "Decode an action profile member to PI action group member.", "Reference": "Decode an action profile member to PI action profile member.", "LLMCandidates": ["Decodes an action profile member into a PI action group member object.", "Decodes an action profile member into a PI action group member object.", "Decodes an action profile member to a PI action group member object.", "Decodes an action profile member to a PI action group member.", "Decodes an action profile member to a PI action group member."]}
{"SampleId": 3734139, "Origin": "If not, returns -1.", "Reference": "If not, returns null.", "LLMCandidates": ["Returns the minimum length value retrieved from the annotated type factory.", "Calculates the minimum length value from the annotated type retrieved using the provided factory.", "Calculates the minimum length value from the annotated tree using the provided ValueAnnotatedTypeFactory.", "Calculates the minimum length value from the annotated tree using the provided ValueAnnotatedTypeFactory.", "Retrieves the minimum length annotation value from the provided tree using the given factory."]}
{"SampleId": 2230461, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations."]}
{"SampleId": 2142909, "Origin": "Visit class header and get class name, access , and intefraces\ninformatoin (step 1,2, and 3) for SVUID computation.", "Reference": "Visit class header and get class name, access , and interfaces\ninformation (step 1,2, and 3) for SVUID computation.", "LLMCandidates": ["Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation."]}
{"SampleId": 3677731, "Origin": "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}.", "Reference": "This factory converts the arbitrary temporal object to an instance of {@code ZoneOffset}.", "LLMCandidates": ["This factory converts the arbitrary date-time object to an instance of `ZoneOffset` by attempting to extract the offset seconds from the provided `TemporalAccessor`. If successful, it returns the corresponding `ZoneOffset`. In case of errors, it throws a `DateTimeException` with a descriptive message.", "Converts the arbitrary date-time object to a ZoneOffset instance, handling potential exceptions.", "The method now handles potential exceptions while converting the TemporalAccessor to a ZoneOffset.", "This factory converts the arbitrary date-time object to an instance of `ZoneOffset`, handling potential `DateTimeException` during conversion.", "Converts the arbitrary date-time object to a `ZoneOffset` instance, handling potential `DateTimeException` during conversion."]}
{"SampleId": 1381360, "Origin": "Validates that trailing checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "Reference": "Validates that checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "LLMCandidates": ["Validates that trailing checksums should be enabled for PutObject requests based on the provided client type and the presence or absence of S3-specific headers.", "Validates that trailing checksums should be enabled for PUT requests based on the provided {@link ClientType} and the presence or absence of S3-specific headers.", "Validates that trailing checksums should be enabled for `PutObjectRequest` based on the provided `ClientType` and the presence or S3-specific headers.", "Validates that trailing checksums should be enabled for PUT operations based on the provided {@link ClientType} and the presence of S3-specific headers.", "Validates that trailing checksums should be enabled for PUT requests based on the provided {@link ClientType} and the presence of specific S3 headers."]}
{"SampleId": 6044783, "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.", "LLMCandidates": ["The method remains the same as the original version, fetching a CalendarBooking by UUID and group ID. It throws a com.liferay.calendar.NoSuchBookingException if the booking is not found.", "The method returns the calendar booking associated with the given UUID and group ID or throws a `com.liferay.calendar.NoSuchBookingException` if it could not be found.", "The method retrieves a CalendarBooking instance by its UUID and group ID. It throws a com.liferay.calendar.NoSuchBookingException if it could not be found.", "The method retrieves a CalendarBooking object by its UUID and group ID. If the booking could not be found, a com.liferay.calendar.NoSuchBookingException is thrown.", "The method remains the same as the original, fetching a CalendarBooking by UUID and group ID. It throws a com.liferay.calendar.NoSuchBookingException if the booking is not found."]}
{"SampleId": 4862706, "Origin": "This method will called {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "Reference": "This method calls {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "LLMCandidates": ["This method will call `ByteBufferPool#release(ByteBuffer)` if a buffer pool has been configured and the buffer is not the empty buffer.", "This method will call `ByteBufferPool#release(ByteBuffer)` if a buffer pool has been configured.", "This method will call `ByteBufferPool#release(ByteBuffer)` if a buffer pool has been configured.", "This method will call `ByteBufferPool#release(ByteBuffer)` if a buffer pool has been configured.", "This method will call `ByteBufferPool#release(ByteBuffer)` if a buffer pool has been configured."]}
{"SampleId": 5242834, "Origin": "Generate and write the html page that shows the snapshot and the state of\nthe ZoomParams", "Reference": "Generate and write the html page that shows the snapshot and the ZoomState", "LLMCandidates": ["Generate and write the HTML page that shows the snapshot and the state of the ZoomState.", "Generate and write the HTML page that shows the snapshot and the state of the `ZoomState` object.", "Generate and write the HTML page that shows the snapshot and the state of the ZoomState.", "Generate and write the HTML page that shows the snapshot and the state of the ZoomState.", "Generate and write the HTML page that shows the snapshot and the state of the `ZoomState` object."]}
{"SampleId": 4476928, "Origin": "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)}.", "Reference": "SecretProperties secret} and call {@link SecretClient#getSecret(String, String)}.", "LLMCandidates": ["Returns a paginated iterable of SecretProperties representing the versions of the specified secret.", "Returns a collection of properties of secret versions identified by the given name.", "Retrieves the properties of secret versions with the given name. Call {@link SecretClient#listPropertiesOfSecretVersions(String, Context)}.", "Retrieves the properties of secret versions with the given name.", "Retrieves the properties of secret versions with the given name. Call {@link SecretClient#listPropertiesOfSecretVersions(String, Context)}."]}
{"SampleId": 2615723, "Origin": "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and\ncell, column, and row defaults.", "Reference": "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties\nand cell, column, and row defaults.", "LLMCandidates": ["Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and cell, column, and row defaults. Additionally clears all children of the table.", "Removes all children actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties, cell, column, and row defaults.", "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties, cell, column, and row defaults. Additionally clears all children of the table.", "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties, cell, column, and row defaults. Additionally clears all children of the table.", "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties, cell, column, and row defaults. This method now also clears all children of the table."]}
{"SampleId": 1220435, "Origin": "If the number of missing elements is\n    32 x times the number of present elements, treat it as sparse", "Reference": "If the number of missing elements is 32x times the number of present\nelements, consider it as sparse.", "LLMCandidates": ["If the number of missing elements is\n    32 times the number of present elements, treat it as sparse.", "If the number of missing elements is\n32 times the number of present elements, treat it as sparse.", "If the number of missing elements is 32 times the number of present elements, treat it as sparse.", "If the number of missing elements is\n    32 times the number of present elements, treat it as sparse.", "If the number of missing elements is 32 times the number of present elements, treat it as sparse."]}
{"SampleId": 3629306, "Origin": "Returns an immutable set containing one element.", "Reference": "Returns an unmodifiable set containing one element.", "LLMCandidates": ["Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element."]}
{"SampleId": 1956974, "Origin": "Compute the number of bytes that would be needed to encode a {@code uint32} field.", "Reference": "Compute the number of bytes that would be needed to encode a varInt.", "LLMCandidates": ["Calculates the number of bytes required to encode a `uint32` field, using a different masking technique.", "Calculates the number of bytes needed to encode a `uint32` field, using a different bit masking approach.", "Calculates the number of bytes needed to encode a `uint32` field, using the shifted mask 0xffffffff.", "Computes the number of bytes needed to encode a `uint32` field, using a different masking technique.", "Calculates the number of bytes required to encode a `uint32` field, considering the updated mask 0xffffffff."]}
{"SampleId": 3344422, "Origin": "Create a new read/write access object.", "Reference": "Create a new read/write access object with the given default timeout.", "LLMCandidates": ["Creates a new read/write access object with a specified default timeout.", "Creates a new read/write access object with a specified default timeout.", "Creates a new read/write access object with a specified default timeout.", "Creates a new read/write access object with a specified default timeout.", "Creates a new read/write access object with a default timeout."]}
{"SampleId": 2535861, "Origin": "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName}\nis null.", "Reference": "Filter the array under test into a list composed of the elements whose property or field specified\nby {@code propertyOrFieldName} are null.", "LLMCandidates": ["Filter the list under test keeping only elements whose property or field specified by `propertyOrFieldName` is `null`.", "Filter the list under test keeping only elements whose property or field specified by `propertyOrFieldName` is `null`.", "Filter the list under test keeping only elements whose property or field specified by `propertyOrFieldName` is `null`. Note that null filtering is not compatible with soft assertion proxying mechanism and requires improvements in our proxy mechanism.", "Filter the list under test keeping only elements whose property or field specified by `propertyOrFieldName` is `null`.", "Filter the list under test keeping only elements whose property or field specified by `propertyOrFieldName` is `null`. Note that this method cannot be used with soft assertions proxying mechanism due to potential double proxying issues."]}
{"SampleId": 1135007, "Origin": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given coreName.", "Reference": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given blobName.", "LLMCandidates": ["First sends a request to the BlobStore and gets a list of all blob files prefixed by the given blobName.", "First sends a request to the BlobStore and gets a list of all blob files prefixed by the given blobName.", "Retrieves a list of all blob files prefixed by the given blobName from the BlobStore.", "Retrieves a list of all blob files prefixed by the given blobName from the BlobStore.", "Retrieves a list of all blob files prefixed by the given blobName."]}
{"SampleId": 2624584, "Origin": "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s.", "Reference": "Creates a new HTTP authorization {@link HttpService} decorator using the specified\n{@link Authorizer}s.", "LLMCandidates": ["Creates a new HTTP authorization service decorator using the specified Iterable of Authorizers.", "Creates a new HTTP authorization `Function` decorator using the specified `Authorizer`s.", "Creates a new HTTP authorization `Function` decorator using the specified `Iterable` of `Authorizer`s.", "Creates a new HTTP authorization `Function` decorator using the specified `Authorizer`s.", "Creates a new HTTP authorization `Function` decorator using the specified `Iterable` of `Authorizer`s."]}
{"SampleId": 2034558, "Origin": "Method that returns code to access a named state parameter.", "Reference": "Method that returns code to access a named prop parameter.", "LLMCandidates": ["Generates code to access a named property parameter.", "Returns code to access a named property parameter.", "Returns code to access a named property parameter.", "Method that returns code to access a named property parameter.", "Returns code to access a named property parameter."]}
{"SampleId": 5433545, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if\n{@link Options#noComment} is set to true.", "Do nothing if\n{@link Configuration#noComment} is set to true.", "Do nothing if\n{@link Options#noComment} is set to true.", "Do nothing if\n{@link Configuration#noComment} is set to true.", "Do nothing if\n{@link Options#noComment} is set to true."]}
{"SampleId": 2404072, "Origin": "Executes {@link Pems#privateKeySpec(InputSupplier)} on the string which contains an encoded private key in PEM\nformat.", "Reference": "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM\nformat.", "LLMCandidates": ["Executes `Pems#privateKeySpec(ByteSource)` on the string which contains an encoded private key in PEM format.", "Executes `Pems#privateKeySpec(ByteSource)` on the string which contains an encoded private key in PEM format.", "Executes `Pems#privateKeySpec(ByteSource)` on the string which contains an encoded private key in PEM format.", "Executes `privateKeySpec` on the string which contains an encoded private key in PEM format.", "Executes `Pems#privateKeySpec(ByteSource)` on the string which contains an encoded private key in PEM format."]}
{"SampleId": 4233858, "Origin": "Verify that at most {@code maxEntries} per session can be put in the cache", "Reference": "Verify that at most {@code maxEntries} per session can be put in the store", "LLMCandidates": ["Verify that at most {code maxEntries} pages per session can be added to the cache using the provided context.", "Verify that at most **{maxEntries)** pages per session can be added to the cache using the provided context object.", "Verify that at most **{maxEntries)** pages per session can be added to the cache using the provided context.", "Verify that at most {@code maxEntries} pages can be added to the cache within a session.", "Verify that at most **{maxEntries**} pages per session can be added to the cache using the provided context object."]}
{"SampleId": 1449477, "Origin": "Creates RedeemData for P2PKH or P2PK input.", "Reference": "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "LLMCandidates": ["Creates RedeemData for P2PKH, P2PK, or P2Witness input.", "Creates RedeemData for P2PKH, P2PK, or P2Witness input.", "Creates RedeemData for P2PKH, P2PK, or P2Witness input.", "Creates RedeemData for P2PKH, P2PK, or P2Witness input.", "Creates RedeemData for P2PKH, P2PK, or P2Witness input."]}
{"SampleId": 1131869, "Origin": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed", "Reference": "Return a new {@link Terms} in which terms for the {@code coreNodeName} are removed", "LLMCandidates": ["Return a new {@link Terms} in which terms of both {@code coreNodeName} and any term matching the result of the {@code recoveringTerm} function are removed.", "Returns a new {@link Terms} in which terms of both `coreNodeName` and `recoveringTerm(coreNodeName)` are removed.", "Return a new {@link Terms} in which terms of both {@code coreNodeName} and its recovering term are removed.", "Returns a new {@link Terms} in which terms of both the given core node name and the recovered term of that name are removed.", "Return a new {@link Terms} in which terms of both {@code coreNodeName} and any associated recovering terms are removed."]}
{"SampleId": 239880, "Origin": "Typically used for RPCs\nat best efforts (e.g., async cache).", "Reference": "This method is typically used for RPCs\nproviding best efforts (e.g., async cache).", "LLMCandidates": ["Typically used for RPCs asynchronously, e.g., to cache results or perform best-effort computations.", "Typically used for RPCs asynchronously. Performs the request without blocking and awaits completion asynchronously, notifying the provided `request` object upon completion or encountering an error.", "Typically used for RPCs asynchronously, e.g., for caching or request processing without blocking.", "Typically used for RPCs asynchronously, e.g., when caching results.", "Typically used for RPCs asynchronously, e.g., for caching or request processing without blocking."]}
{"SampleId": 5149993, "Origin": "Create an initial optimistic locking value according the {@link VersionType}\ncontract for the version property if required and inject it into\nthe snapshot state.", "Reference": "Create an initial optimistic locking value according the {@link VersionSupport}\ncontract for the version property if required and inject it into\nthe snapshot state.", "LLMCandidates": ["Creates an initial optimistic locking value according to the provided\n{@link VersionDescriptor} contract for the version property if required and\ninjects it into the snapshot state.", "Creates an initial optimistic locking value based on the provided `VersionDescriptor` contract and injects it into the snapshot state.", "Creates an initial optimistic locking value based on the provided\n{@link VersionDescriptor} contract for the version property if required and injects it\ninto the snapshot state.", "Creates an initial optimistic locking value according to the provided\n{@link VersionDescriptor} contract for the version property if required and inject it into\nthe snapshot state.", "Create an initial optimistic locking value according to the provided\n{@link VersionDescriptor} contract for the version property if required and inject it into\nthe snapshot state."]}
{"SampleId": 4850223, "Origin": "Returns the number of allowed parallel requests the configured {@link Router} should adhere to.", "Reference": "Returns the currently configured {@link ExchangeStrategies}.", "LLMCandidates": ["Returns the configured exchange strategies used by the router.", "Returns the configured exchange strategies used by the router.", "Returns the configured exchange strategies used by the router.", "Returns the configured exchange strategies used by the router.", "Returns the configured exchange strategies used by the router."]}
{"SampleId": 5079050, "Origin": "Checks that collection {@param col} doesn't contains string {@param str}.", "Reference": "Checks that collection {@param col} doesn't contains element {@param str}.", "LLMCandidates": ["Checks that collection <C> doesn't contain element <T>.", "Checks that collection <C> doesn't contain element <T>.", "Checks that collection <C> doesn't contain element <T>.", "Checks that collection <C> doesn't contain element <T>.", "Checks that collection <C> doesn't contain element <T>."]}
{"SampleId": 5442858, "Origin": "Return the initial pixel size used to define initial arrays\n(tile AA chunk, alpha line, buckets)", "Reference": "Return the initial pixel height used to define initial arrays\n(buckets)", "LLMCandidates": ["Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets).", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets).", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets).", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets).", "Returns the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)."]}
{"SampleId": 4117755, "Origin": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without an inetAddress is valid or not.", "Reference": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without a host is valid or not.", "LLMCandidates": ["The provided code has been updated to set the host name instead of the inetAddress.", "The provided code has been renamed from setInetAddress to setHost, and now accepts a host name as a String parameter instead of an InetAddress.", "The provided code has been renamed from `setInetAddress` to `setHost`, and now accepts a `String` representing the host name instead of an `InetAddress`.", "The provided code has been renamed from setInetAddress to setHost, and now takes a String representing the host name instead of an InetAddress.", "The provided code has been renamed from setInetAddress to setHost, and now accepts a String parameter representing the host name instead of an InetAddress."]}
{"SampleId": 2988281, "Origin": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example.", "Reference": "(Also, useful because the granularity\nof the clock on some systems is low, so doing a Thread.sleep(10) may not give you a different clock value", "LLMCandidates": ["Adjusted the clock granularity to milliseconds (dividing by 1000) to ensure accurate waiting.", "Adjusted the clock granularity to milliseconds for improved accuracy. The loop now checks the second boundary instead of individual milliseconds.", "Adjusted the clock granularity to milliseconds (dividing by 1000) to account for potential discrepancies between system clock and sleep duration.", "The method now uses milliseconds divided by 1000 to account for the clock granularity issue. The sleep duration has also been adjusted to 100 milliseconds.", "Adjusted the clock granularity to milliseconds for improved precision."]}
{"SampleId": 340520, "Origin": "Sets {@link MediaItem2} object to render using VideoView2.", "Reference": "Sets {@link MediaItem} object to render using VideoView2.", "LLMCandidates": ["Sets `MediaItem` object to render using VideoView.", "Sets `MediaItem` object to render using VideoView2.", "Sets `MediaItem` object to render using VideoView2.", "Sets `MediaItem` object to render using VideoView2.", "Sets `MediaItem` object to render using VideoView."]}
{"SampleId": 3579668, "Origin": "Otherwise,\nthe specified consumer is invoked with the leader index metadata fetched from the remote cluster.", "Reference": "Otherwise, the specified consumer is invoked with the cluster state and leader index metadata\nfetched from the remote cluster.", "LLMCandidates": ["Otherwise, the specified consumer is invoked with the leader index metadata and associated cluster state fetched from the remote cluster.", "Otherwise, the specified consumer is invoked with the leader index metadata and associated cluster state fetched from the remote cluster.", "Otherwise, the specified consumer is invoked with the leader index metadata and retrieved cluster state fetched from the remote cluster.", "Otherwise, the specified consumer is invoked with the leader index metadata and cluster state fetched from the remote cluster.", "The specified consumer is invoked with the leader index metadata and associated cluster state fetched from the remote cluster."]}
{"SampleId": 368454, "Origin": "Returns true if the currently set key guard matches our minimum quality requirements.", "Reference": "Returns true if the currently set key guard violates our minimum quality requirements.", "LLMCandidates": ["Returns true if the currently set password meets the minimum quality requirements.", "Returns true if the currently set password meets our minimum quality requirements.", "Returns true if the currently set password meets our minimum quality requirements.", "Returns true if the currently set password meets the minimum quality requirements.", "Returns true if the currently set password meets the minimum quality requirements."]}
{"SampleId": 2939584, "Origin": "It incorporates the zone, bulb type and command\ncategory.", "Reference": "It incorporates the bridge, zone, bulb type and command\ncategory.", "LLMCandidates": ["Calculates the UIDC value by adding the bridge offset, zone, bulb type, and command category to the base address.", "Calculates the unique ID by adding the bridge offset, zone, bulb type and command category to the base value.", "Calculates the UIDC value by adding the bridge offset, zone, bulb type, and command category.", "Calculates the user ID based on bridge offset, zone, bulb type, and command category.", "Calculates the UIDC value based on bridge offset, zone, bulb type and command category."]}
{"SampleId": 1706012, "Origin": "Restore redundancy with backoff.", "Reference": "Restore redundancy with an exponential backoff.", "LLMCandidates": ["Restore redundancy with backoff and returns true if successful.", "Restore redundancy with backoff and returns a boolean indicating success.", "Restore redundancy with backoff and returns true if successful.", "Restore redundancy with backoff and returns a boolean indicating success or failure.", "Restore redundancy with backoff and returns a boolean indicating success or failure."]}
{"SampleId": 4479778, "Origin": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, URI)}", "Reference": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)}", "LLMCandidates": ["Generates a code sample for using `FileClient#uploadRangeFromUrl(long, long, long, String)`.", "Generates a code sample for using `FileClient#uploadRangeFromUrl(long, long, long, String)`", "Generates a code sample for using `FileClient#uploadRangeFromUrl(long, long, long, String)`.", "Generates a code sample for using `FileClient#uploadRangeFromUrl(long, long, long, String)`.", "Generates a code sample for using `FileClient#uploadRangeFromUrl(long, long, long, String)`."]}
{"SampleId": 3731150, "Origin": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "Reference": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns {@code null}.", "LLMCandidates": ["If typeVar is a captured wildcard, returns the wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns the wildcard represented by `@Nullable`. Otherwise, returns `null`.", "If typeVar is a captured wildcard, returns the wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns the wildcard represented by the annotation; otherwise returns null.", "If typeVar is a captured wildcard, returns the wildcard; otherwise returns null."]}
{"SampleId": 2543276, "Origin": "Set this quaternion to be a representation of the supplied axis and\nangle (in radians).", "Reference": "Set this quaternion to be a representation of the supplied axis and\nangle (in degrees).", "LLMCandidates": ["Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees)."]}
{"SampleId": 437253, "Origin": "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link\nPCollection}.", "Reference": "Like {@link #readGenericRecords(Schema)}, but for a {@link PCollection} of {@link", "LLMCandidates": ["Like `#readGenericRecords(Schema)`, but reads each filepattern in the input `PCollection`.", "Like `#readGenericRecords(Schema)`, but reads each file pattern in the input `PCollection`.", "Like `#readGenericRecords(Schema)`, but reads each filepattern in the input `PCollection`.", "Like `#readGenericRecords(Schema)`, but reads each filepattern in the input `PCollection`.", "Like `#readGenericRecords(Schema)`, but reads each file pattern in the input `PCollection`."]}
{"SampleId": 6310269, "Origin": "Returns the whitelisted regular expressions.", "Reference": "Returns the white regular expressions.", "LLMCandidates": ["Returns an array of whitelisted regular expressions.", "Returns an array of the whitelisted regular expressions.", "Returns an array of the whitelisted regular expressions.", "Returns an array of whitelisted regular expressions.", "Returns an array of whitelisted regular expressions."]}
{"SampleId": 613054, "Origin": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph or merge the resource consumed by state backend.", "Reference": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph.", "LLMCandidates": ["Used to merge resource specifications of chained operators when generating the job graph or merging state backend resources.", "Used to merge the resource specifications of chained operators when generating the job graph or merging state backend resource consumption.", "Used to merge the resource consumption of chained operators when generating the job graph or merging state backend resources.", "Used to merge resource specifications of chained operators, now specifically handles task heap/off-heap memory.", "Used to merge resource specifications of chained operators when generating the job graph or merging state backend resources."]}
{"SampleId": 2911559, "Origin": "Adds a single sensitivity to the builder using metadata.", "Reference": "Adds a single sensitivity to the builder.", "LLMCandidates": ["Adds a single sensitivity to the builder using metadata, specifying the currency.", "Adds a single sensitivity to the builder using metadata, now accepting currency as input instead of sensitivityValue.", "Adds a single sensitivity to the builder using metadata, specifying the currency.", "Adds a single sensitivity to the builder using metadata, now accepting currency and sensitivity value as double.", "Adds a single sensitivity to the builder using metadata, now with support for specifying the currency."]}
{"SampleId": 3653159, "Origin": "Creates a Course object and an Instructor object for the Course.", "Reference": "Creates a course and an associated instructor for the course.", "LLMCandidates": ["Creates a Course object and an Instructor object for the specified course.", "Creates a Course object and associates it with an Instructor object for the specified course.", "Creates a Course object and associates it with an Instructor object for the specified course.", "Creates a Course object and associates it with an Instructor object.", "Creates a Course object and associates it with an Instructor object."]}
{"SampleId": 5240878, "Origin": "Indicates if the display name of the XRY meta key is a recognized type.", "Reference": "Indicates if the display name of the XRY key is a recognized type.", "LLMCandidates": ["Checks if the given display name is a recognized type of XRY meta key.", "Checks if the given display name is a recognized type of XRY meta key.", "Checks if the given display name is a recognized type of XRY meta key.", "Checks if the given display name is a recognized type of XRY meta key.", "Indicates if the given display name is a recognized type of XRY meta key."]}
{"SampleId": 2217816, "Origin": "Test of var method, of class BinomialDistribution.", "Reference": "Test of variance method, of class BinomialDistribution.", "LLMCandidates": ["Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution."]}
{"SampleId": 2133792, "Origin": "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "Reference": "bold driver: Gemulla et al., Large-times matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "LLMCandidates": ["Updated logic for learning rate update based on loss history. Now sets last loss before returning if learnRate is negative.", "Last loss is now updated before checking the maximum learning rate.", "Last loss is now updated before checking the maximum learning rate.", "Updated logic for learning rate update based on recent loss values. Additionally, set lastLoss to current loss when learnRate is non-positive.", "Fixed typo in lastLoss and added explanation for updating learnRate based on loss and lastLoss values."]}
{"SampleId": 2062875, "Origin": "With natural ordering,\n{@link Ordering#natural()} is returned.", "Reference": "Ordering#natural()} is returned.", "LLMCandidates": ["The `columnComparator` method is deprecated.", "Deprecated: Use the default natural ordering.", "Deprecated: Use the default natural ordering.", "The `columnComparator` method is deprecated.", "The `columnComparator` method is deprecated."]}
{"SampleId": 2404068, "Origin": "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM\nformat.", "Reference": "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM\nformat.", "LLMCandidates": ["Executes `publicKeySpec` on the string which contains an encoded public key in PEM format.", "Executes `publicKeySpec` on the string which contains an encoded public key in PEM format.", "Executes `publicKeySpec` on the string which contains an encoded public key in PEM format.", "Executes `publicKeySpec` on the string which contains an encoded public key in PEM format.", "Executes `publicKeySpec` on the string which contains an encoded public key in PEM format."]}
{"SampleId": 4004239, "Origin": "This method schedules the disablement for asynchronous execution.", "Reference": "This method deactivates and disables the component immediately.", "LLMCandidates": ["Schedules the disablement of the component for asynchronous execution.", "Schedules the internal deactivate and disable processes asynchronously.", "Schedules the internal deactivate and disable processes asynchronously.", "Schedules the internal disabling process.", "Schedules the internal disabling process."]}
{"SampleId": 5588757, "Origin": "Switch to the given page, update the highlighted episode.", "Reference": "Switch to the episode at the given position.", "LLMCandidates": ["Update the highlighted episode by setting the current item of the episode details pager. If the current pane view is single, switch to the given page.", "Update the highlighted episode based on the selected page.", "Update the highlighted episode by setting the current item of the pager. If in single pane view, switch the container visibility.", "Switch to the given page, update the highlighted episode and toggle the view between container list and pager.", "Update the highlighted episode by setting the current item of the episode details pager. If in single pane view, switch to the given page."]}
{"SampleId": 1968999, "Origin": "Repairs the metadata table.", "Reference": "Repairs the schema history table.", "LLMCandidates": ["Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table."]}
{"SampleId": 3629275, "Origin": "Returns an immutable list containing three elements.", "Reference": "Returns an unmodifiable list containing three elements.", "LLMCandidates": ["Returns an immutable list containing three elements.", "Returns an immutable list containing three elements.", "Returns an immutable list containing three elements.", "Returns an immutable list containing three elements.", "Returns an immutable list containing three elements."]}
{"SampleId": 3306952, "Origin": "Sets SSLHostConfig infos.", "Reference": "Sets SslHostConfig infos.", "LLMCandidates": ["Sets the SSLHostConfigInfos field.", "Sets the SSLHostConfigInfos field.", "Sets the SSLHostConfigInfos field.", "Sets the SSLHostConfigInfos field.", "Sets the SSLHostConfigInfos field."]}
{"SampleId": 3629303, "Origin": "See Immutable Set Static Factory Methods for details.", "Reference": "See Unmodifiable Sets for details.", "LLMCandidates": ["See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details."]}
{"SampleId": 2404091, "Origin": "Sets the CSS pages for the Static Website.", "Reference": "Sets the listings CSS page for the Static Website.", "LLMCandidates": ["Sets the CSS pages for the Static Website by associating the provided value with the `STATIC_WEB_LISTINGS_CSS` header key.", "Sets the CSS pages for the Static Website by associating the provided value with the `STATIC_WEB_LISTINGS_CSS` header key.", "Sets the CSS pages for the Static Website using the `STATIC_WEB_LISTINGS_CSS` header key.", "Sets the CSS pages for the Static Website, using the `STATIC_WEB_LISTINGS_CSS` header key.", "Sets the CSS pages for the Static Website using the `STATIC_WEB_LISTINGS_CSS` header key."]}
{"SampleId": 4002573, "Origin": "Returns a literal for the {@link Reference} policy.", "Reference": "Returns a literal for the {@link ScrService.Reference} policy.", "LLMCandidates": ["Returns a literal for the `ScrService.Reference` policy.", "Returns a literal for the `ScrService.Reference` policy.", "Returns a literal for the `ScrService.Reference` policy.", "Returns a literal for the `ScrService.Reference` policy.", "Returns a literal for the `ScrService.Reference` policy."]}
{"SampleId": 3772633, "Origin": "Expands the given row.", "Reference": "Expands the given item at given index.", "LLMCandidates": ["Expands the given item and inserts its children into the grid, if applicable. The `index` argument specifies the row index to insert the children at.", "Expands the given item and inserts its children into the grid, if available. The refresh operation is now performed implicitly.", "Expands the given item at the specified index. If successful, inserts the newly added rows into the client and refreshes the expanded status of the item.", "Expands the given item and inserts the newly added rows into the client.", "Expands the given item and inserts the newly added rows into the client."]}
{"SampleId": 340561, "Origin": "Sets playback rate using {@link PlaybackParams2}.", "Reference": "Sets playback rate using {@link PlaybackParams}.", "LLMCandidates": ["Sets playback rate using `PlaybackParams` parameters.", "Sets playback rate using `PlaybackParams` parameters.", "Sets playback rate using `PlaybackParams` parameters.", "Sets playback rate using `PlaybackParams` parameters.", "Sets playback rate using `PlaybackParams` parameters."]}
{"SampleId": 4617700, "Origin": "Adds the specified argument as XQuery string.", "Reference": "Adds the specified argument unchanged.", "LLMCandidates": ["Adds the specified argument as a string to the command builder.", "Adds the specified argument as a String to the query string.", "Adds the specified argument as a String to the XQuery string, after checking for null value.", "Adds the specified argument as a string to the XQuery command.", "Adds the specified argument as a string to the XQuery command."]}
{"SampleId": 6043581, "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?", "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?", "LLMCandidates": ["Returns an ordered range of all the sync d l objects where modifiedTime = ?, repositoryId = ?, parentFolderId = ?, start = ?, and end = ?", "Returns an ordered range of all the sync d l objects where modifiedTime = ?, repositoryId = ?, parentFolderId = ?, start = ?, and end = ?.", "Returns an ordered range of all the sync d l objects where modifiedTime = ?, repositoryId = ?, parentFolderId = ?, start = ?, and end = ?.", "Returns an ordered range of all the sync d l objects where modifiedTime = ?, repositoryId = ?, parentFolderId = ?, start = ?, end = ?.", "Returns an ordered range of all the sync d l objects where modifiedTime = ?, repositoryId = ?, parentFolderId = ?, start = ?, and end = ?."]}
{"SampleId": 2913863, "Origin": "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to\nthe average of the smallest 99% of the observations.", "Reference": "This is measured from the bottom, that is, Thus the expected shortfall with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["The expected shortfall is retrieved from the result of calling `expectedShortfallResultFromUnsorted` with the given level and sorted sample, and then retrieving the `getValue` from the result.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the sorted observations.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the sorted observations.", "This measure is calculated from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the unsorted values.", "The expected shortfall is retrieved from the result of calling `expectedShortfallResultFromUnsorted` with the given level and sorted sample, and the `getValue` method is used to extract the actual value."]}
{"SampleId": 3652786, "Origin": "The base URL will be the application URL.", "Reference": "The base URL will be the application back-end URL.", "LLMCandidates": ["The base URL will now be the backend application URL.", "The base URL will now be referred to as the backend application URL.", "The base URL will now be referred to as the backend application URL.", "The base URL will be the backend application URL.", "The base URL will be the backend application URL."]}
{"SampleId": 4863800, "Origin": "Atomically updates the current hi value with the results of\napplying the given delta, returning the updated value.", "Reference": "Atomically adds the given delta to the current hi value, returning the updated hi value.", "LLMCandidates": ["Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically updates the current `hi` value with the results of applying the given delta, returning the updated value.", "Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically updates the current hi value with the results of applying the given delta, returning the updated value."]}
{"SampleId": 3562209, "Origin": "Returns the report builder for the rootmost component that contains any of the duplicate\nbindings.", "Reference": "Returns the report builder for the rootmost component that contains any of the {@code\nbindings}.", "LLMCandidates": ["Returns the report builder for the rootmost component that contains any of the given bindings.", "Returns the report builder for the rootmost component that contains any of the provided bindings.", "Returns the report builder for the rootmost component that contains any of the provided bindings.", "Returns the report builder for the rootmost component that contains any of the duplicate bindings passed as argument.", "Returns the report builder for the rootmost component that contains any of the provided bindings."]}
{"SampleId": 3906717, "Origin": "Centres this dialog on the main fame.", "Reference": "Centres this dialog on the parent window.", "LLMCandidates": ["Centres this dialog relative to the parent window.", "Centres this dialog relative to the parent window.", "Centres this dialog relative to the parent window.", "Centres this dialog relative to its parent window.", "Centres this dialog relative to its parent window."]}
{"SampleId": 1790907, "Origin": "Gets the value of the source property.", "Reference": "Gets the value of the parameter property.", "LLMCandidates": ["Returns the value of the parameter property.", "Returns the value of the parameter property.", "Returns the value of the parameter property.", "Returns the value of the parameter property.", "Gets the value of the parameter property."]}
{"SampleId": 4465302, "Origin": "If an event\nlistener is assignable to {@link EventListener} it will registered as is.", "Reference": "If an event\nhandler is assignable to {@link EventMessageHandler} it will registered as is.", "LLMCandidates": ["If an event\nhandler is assignable to the `EventListener` interface, it will be registered as is.", "If an event\nhandler is assignable to `EventListener` it will be registered as is.", "If an event\nhandler is assignable to `EventListener` it will be registered as is.", "If an event handler is assignable to the `EventListener` interface, it will be registered as is.", "If an event handler is assignable to the `EventListener` interface, it will be registered as is."]}
{"SampleId": 4239806, "Origin": "use_credentials: Cross-origin CORS requests for the element will have the credentials flag set.", "Reference": "USE_CREDENTIALS: Cross-origin CORS requests for the element will have the credentials flag set.", "LLMCandidates": ["Cross-origin CORS requests for the element will have the credentials flag set.", "Cross-origin CORS requests for the element will have the credentials flag set.", "Cross-origin CORS requests for the element will have the credentials flag set.", "Cross-origin CORS requests for the element will have the credentials flag set.", "Cross-origin CORS requests for the element will have the credentials flag set."]}
{"SampleId": 3081518, "Origin": "Allocates an array of the specified length in unmanaged memory to hold references to objects\non the Java heap.", "Reference": "Allocates an array of the specified length to hold references to objects on the Java heap.", "LLMCandidates": ["Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap."]}
{"SampleId": 1351493, "Origin": "Nota: the defining points are meant to be the extrema points inside the ribbon.", "Reference": "Nota: the defining points are meant to be the precise extrema Point2D values on the\nborders of the ribbon.", "LLMCandidates": ["The defining points are meant to be the extrema points on the vertical ribbon's boundaries.", "The defining points are meant to be the extrema points **on** the ribbon.", "The defining points are meant to be the extrema points on the left and right sides of the ribbon.", "The defining points are meant to be the extrema points on the left and right sides of the ribbon.", "The defining points are meant to be the extrema points outside the ribbon."]}
{"SampleId": 2337343, "Origin": "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Reference": "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "LLMCandidates": ["Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)"]}
{"SampleId": 1878720, "Origin": "A comparison of document clustering techniques\nKDD workshop on text mining, 2000", "Reference": "A Comparison of Document Clustering Techniques\nKDD workshop on text mining.", "LLMCandidates": ["A comparison of document clustering techniques. KDD workshop on text mining. Vol. 400. No. 1.", "A Comparison of Document Clustering Techniques\nKDD workshop on text mining. Vol. 400. No. 1\nhttp://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\nbibkey = \"conf/kdd/SteinbachKK00", "A comparison of document clustering techniques. KDD workshop on text mining. Vol. 400. No. 1.", "A Comparison of Document Clustering Techniques\nKDD workshop on text mining. Vol. 400. No. 1\nhttp://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\nbibkey = \"conf/kdd/SteinbachKK00", "A comparison of document clustering techniques\nKDD workshop on text mining. Vol. 400. No. 1\nhttp://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\nbibkey = \"conf/kdd/SteinbachKK00"]}
{"SampleId": 437086, "Origin": "Doesn't support date types.", "Reference": "Doesn't support date types or structs.", "LLMCandidates": ["This function attempts to convert TableRows without  having access to the corresponding TableSchema because: 1. TableSchema contains redundant information already available in the Schema object. 2. TableSchema objects are not serializable and are therefore harder to propagate through a pipeline. Use the toBeamRow(Schema, TableRow) function for cases where the TableSchema is available.", "**Deprecated `toBeamRow` function in favour of this function. This function avoids redundant information in `TableSchema` and simplifies pipeline propagation by directly using the `Schema` object.**", "This function attempts to convert TableRows without  having access to the\ncorresponding TableSchema because:\n1. TableSchema contains redundant information already available in the Schema object.\n2. TableSchema objects are not serializable and are therefore harder to propagate through a\npipeline.\nNote: This function is currently deprecated and will be removed in a future release. Please use the `toBeamRow(Schema, TableRow)` function instead.", "Deprecates the `toBeamRow(Schema, TableSchema, TableRow)` function in favour of this function. This function avoids redundant information in the `TableSchema` object and simplifies pipeline propagation by directly using the `Schema` object.", "This function attempts to convert TableRows without having access to the corresponding TableSchema because: 1. TableSchema contains redundant information already available in the Schema object. 2. TableSchema objects are not serializable and are therefore harder to propagate through a pipeline. Use the toBeamRow(Schema, TableRow) function instead."]}
{"SampleId": 5749488, "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#start()}.", "LLMCandidates": ["Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a different configuration for the underlying Infinispan RemoteCacheManager.", "Test method for `org.infinispan.spring.provider.SpringRemoteCacheManager#start()` with a different `RemoteCacheManager` initialization flag.", "Test method for `org.infinispan.spring.provider.SpringRemoteCacheManager#start()` with a different configuration for the underlying `RemoteCacheManager`.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a different configuration for the underlying Infinispan RemoteCacheManager.", "Test method for `org.infinispan.spring.provider.SpringRemoteCacheManager#start()` with a different configuration for the underlying `RemoteCacheManager`."]}
{"SampleId": 3270305, "Origin": "Returns the expression node to the left of the \"::\" if it exists.", "Reference": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "LLMCandidates": ["Returns the expression node to the left of the \"::\" operator if it exists, or null if the expression is an ambiguous name.", "Returns the expression node to the left of the \"::\" operator if it exists and is not an `ASTAmbiguousName`.", "Returns the expression node to the left of the \"::\" operator if it exists, or null if the expression is an `ASTAmbiguousName`.", "Returns the expression node to the left of the \"::\" operator if it exists, or null if the expression is an ambiguous name.", "Returns the expression node to the left of the \"::\" operator if it exists and is not an `ASTAmbiguousName`."]}
{"SampleId": 1678724, "Origin": "Execute function for each chunk of arguments.", "Reference": "Execute function for each chunk of arguments and collect the result.", "LLMCandidates": ["Execute the provided function for each chunk of arguments.", "Execute function for each chunk of arguments using the provided lambda expression.", "Execute the provided function for each chunk of arguments.", "Execute the provided function for each chunk of arguments.", "Execute function for each chunk of arguments using a lambda expression."]}
{"SampleId": 5241596, "Origin": "Runs a process using a custom timeout and a process terminator.", "Reference": "Runs a process using a custom termination check interval and a process\nterminator.", "LLMCandidates": ["Runs a process using a custom timeout and a process terminator with an additional parameter to check the process termination status at a specified interval.", "Runs a process using a custom timeout and a process terminator, with added support for checking process termination at a specified interval.", "Runs a process using a custom timeout and a process terminator, with added support for checking process termination at a specified interval.", "Runs a process using a custom timeout and a process terminator, with an added parameter to check the process termination status periodically.", "Runs a process using a custom timeout and a process terminator, with added support for periodic termination check."]}
{"SampleId": 4117756, "Origin": "(Shiro's default Authenticator\nallows null IPs to support localhost and proxy server environments).", "Reference": "(Shiro's default Authenticator allows null hosts to support localhost and proxy server environments).", "LLMCandidates": ["Retrieves the host name rather than the IP address. (Shiro's default Authenticator allows null IPs to support localhost and proxy server environments).", "Retrieves the host name of the current connection.", "Retrieves the host name of the current connection.", "Retrieves the host name of the current connection.", "Retrieves the host name associated with the current session."]}
{"SampleId": 2615599, "Origin": "Adds an actor as a child of this group, immediately after another child actor.", "Reference": "If the\nactor is already a child of this group, no changes are made.", "LLMCandidates": ["Adds an actor as a child of this group, immediately after another child actor, unless the actor is already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor, unless the actor is already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor, skipping any parent-child relationship established previously.", "Adds an actor as a child of this group, immediately after another child actor, except if the actor being added is already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor, unless the actor is already a child of this group."]}
{"SampleId": 616737, "Origin": "TODO: If an input result partition of an involved region is not available, i.e.", "Reference": "If an input result partition of an involved region is not available, i.e.", "LLMCandidates": ["Implemented backtracking logic to identify all involved regions that require restart based on unavailable input result partitions.", "Implemented a backtracking algorithm to identify all regions involved in the outage, and marks them for restart. If an input result partition of an involved region is not available, its producer region is recursively identified and added to the list of regions to restart.", "Implemented a backtracking algorithm to identify all regions indirectly dependent on the failed region, and marks them for restart.", "Implemented backtracking logic to identify all involved regions that require restart, including producer and consumer regions of the failed region and any region whose input or output result partitions are unavailable.", "Implemented a backtracking algorithm to identify all regions that depend on or are dependent by the failed region, and marks them for restart."]}
{"SampleId": 1880564, "Origin": "Use {@link #destroyToNaiveMatrix()} if you do not need further\nupdates.", "Reference": "Use {@link #destroyToPopulationMatrix()} if you do not need further\nupdates.", "LLMCandidates": ["Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates."]}
{"SampleId": 1095693, "Origin": "This method currently handles\nevents for the classname combo box.", "Reference": "This method currently handles\nevents for the classname JLabeledChoice", "LLMCandidates": ["This method currently handles events for the classNameLabeledChoice combo box.", "This method currently handles events for the classNameLabeledChoice combo box.", "This method now handles events for the classNameLabeledChoice control.", "This method now handles events for the classNameLabeledChoice control.", "This method now handles state changes of the classNameLabeledChoice component."]}
{"SampleId": 4622144, "Origin": "Waits until the query with the specified id has been started.", "Reference": "Waits until a very slow query has been started.", "LLMCandidates": ["Waits until the query with the specified id has been started. Now querying with the `_JOBS_EVAL` argument and labeled as `VERY_SLOW_QUERY`.", "Waits until the query with the specified id has been started, as indicated by the `VERY_SLOW_QUERY` constant.", "Waits until the query with the specified id has been started. Now queries the job with ID `VERY_SLOW_QUERY`.", "Waits until the query with the specified ID has been started. Now used for a very slow query.", "Waits until the query with the specified ID has been started. Now used for a very slow query."]}
{"SampleId": 3566648, "Origin": "{@code handshake} will be null and {@code throwable} will be non-null in the case of a\nfailed TLS connection attempt.", "Reference": "{@code handshake} will be null and {@code ioe} will be non-null in the case of a\nfailed TLS connection attempt.", "LLMCandidates": ["In the case of a failed TLS connection attempt, the input `handshake` will be null and the `ioe` will be non-null.", "In the case of a failed TLS connection attempt,  {@code handshake} will be null and  {@code ioe} will be non-null.", "In the case of a failed TLS connection attempt,  {@code handshake} will be null and  {@code ioe} will be non-null.", "In the case of a failed TLS connection attempt,  {@code handshake} will be null and  {@code ioe} will be non-null.", "In the case of a failed TLS connection attempt, `handshake` will be null and `ioe` will be non-null."]}
{"SampleId": 1314713, "Origin": "Creates an audit entry when a service definition is deleted.", "Reference": "Creates an audit entry when a API definition is deleted.", "LLMCandidates": ["Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted."]}
{"SampleId": 3493342, "Origin": "Schedules package actions differentiating their type among Linux and Solaris\nservers.", "Reference": "Schedules package actions.", "LLMCandidates": ["Schedules package actions specifically for Linux servers.", "Schedules package actions specifically for Linux servers.", "Schedules package actions specifically for Linux servers.", "Schedules package actions specifically for Linux servers.", "Schedules package actions specifically for Linux servers."]}
{"SampleId": 1327230, "Origin": "Returns the partition ID for the given key.", "Reference": "Returns the service ID for the given primitive ID.", "LLMCandidates": ["Returns the service ID for the given ID.", "Returns the service ID for the given ID.", "Returns the service ID for the given ID.", "Returns the service ID for the given ID.", "Returns the service ID for the given ID."]}
{"SampleId": 2480730, "Origin": "Return the formatted string.", "Reference": "Return the formatted string in its current state.", "LLMCandidates": ["Returns the string representation of the current text object.", "Returns the string representation of the current object.", "Returns the string representation of the current object.", "Returns the string representation of the current object.", "Returns the string representation of the current object."]}
{"SampleId": 5367566, "Origin": "If --all is specified, --interface won't be visible", "Reference": "If --all is specified, --entity won't be visible", "LLMCandidates": ["If --all is specified, --entity won't be visible --all parameter has been specified before.", "If --all is specified, --entity won't be visible --all parameter has been specified before.", "If --all is specified, --entity won't be visible --all parameter has been specified before.", "If --all is specified, --entity won't be visible --all parameter has been specified before.", "If --all is specified, --entity won't be visible --all parameter has been specified before."]}
{"SampleId": 1836978, "Origin": "Returns the raw binary representation of the handshake header.", "Reference": "Returns the raw binary representation of the handshake message.", "LLMCandidates": ["Returns the raw binary representation of the handshake message, including the header.", "Returns the raw binary representation of the handshake message, or the cached binary representation if available.", "Returns the raw binary representation of the handshake header, or directly returns the cached binary representation if available.", "Returns the raw binary representation of the handshake header, or directly returns the cached binary representation if available.", "Returns the raw binary representation of the handshake message, including the header if available. If a raw message is already initialized, it is directly returned."]}
{"SampleId": 4386708, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["Access Control using AWS Identity and Access Management (IAM) has been updated to reflect the change in protocolFactory usage.", "Access Control Using AWS Identity and Access Management (IAM) to handle protocol factory configuration.", "Access Control Using AWS Identity and Access Management (IAM) for completeMultipartUpload request processing.", "Access Control has been removed from the method as it is not relevant to the code modifications.", "Access Control has been removed from the method as it is not relevant to the code modifications."]}
{"SampleId": 125265, "Origin": "Sets the console script.", "Reference": "Sets the web server script.", "LLMCandidates": ["Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script."]}
{"SampleId": 2824496, "Origin": "Should return {@code null} for values that cannot be compared\nunder Comparability semantics.", "Reference": "Should return {@code Comparison.UNDEFINED} for values that cannot be compared\nunder Comparability semantics.", "LLMCandidates": ["Should return Comparison.UNDEFINED if either value is undefined or cannot be compared under Comparability semantics.", "Should return `Comparison.UNDEFINED` for values that cannot be compared under Comparability semantics, or if either value is ternary undefined.", "Should return `Comparison.UNDEFINED` if either value is undefined under Comparability semantics.", "Should return `Comparison.UNDEFINED` for values that cannot be compared under Comparability semantics.", "Should return `Comparison.UNDEFINED` if either value is undefined under Comparability semantics."]}
{"SampleId": 4479746, "Origin": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#URL-String}", "Reference": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String}", "LLMCandidates": ["Updated method signature. Source URL parameter is now a String.", "Updated method signature to reflect the change in argument names from URL to String.", "Updated method signature to reflect the change in argument names from URL to String.", "Signature updated to match the new method parameter order: source and snapshot instead of URL and snapshot.", "Updated method signature to reflect the change from URL source to String source."]}
{"SampleId": 3325967, "Origin": "Backs up the subscriptions and bookmarks databases to external storage.", "Reference": "Backs up the databases to external storage.", "LLMCandidates": ["Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage."]}
{"SampleId": 234012, "Origin": "If the lock list is write locked, returns LockMode.WRITE.", "Reference": "If mode is read but the lock list is write locked, returns LockMode.WRITE.", "LLMCandidates": ["If the lock list is write locked, returns LockMode.WRITE based on the conditional check.", "If the lock list is write locked, returns LockMode.WRITE based on the `endsInWriteLock()` check.", "If the lock list is write locked, returns LockMode.WRITE.", "If the lock list is write locked, returns LockMode.WRITE.", "If the lock list ends in a write lock, returns LockMode.WRITE; otherwise, returns the input mode."]}
{"SampleId": 6188983, "Origin": "Custom logic to only enable the configuration element as this is immutable and once the MuleContext is started we cannot change\nvalues.", "Reference": "MuleConfiguration for instance is immutable and once the MuleContext is started we cannot change its values.", "LLMCandidates": ["Custom logic to enable the configuration element, as it is immutable and cannot be changed after MuleContext initialization.", "Custom logic to enable only the configuration element as it's immutable and cannot be changed after MuleContext initialization.", "Custom logic to only enable the configuration element as it is immutable, and since the MuleContext is started, values cannot be changed.", "Custom logic to enable only the configuration element as it is immutable and cannot be changed after MuleContext initialization.", "Custom logic to enable only the configuration element, as it is immutable and cannot be changed after MuleContext initialization."]}
{"SampleId": 3775230, "Origin": "If the new value is not equal to\n{@code getValue()}, fires a value change event.", "Reference": "If the new value is not equal to\n{@code getValue()}, fires a {@link ValueChangeEvent}.", "LLMCandidates": ["If the new value is not equal to the current value, fires a value change event.", "If the new value is not equal to\n{@code getValue()}, triggers a value change event.", "If the new value is not equal to the current value, fires a value change event.", "If the new value is not equal to the current value, fires a value change event.", "If the new value is not equal to\n{@code getValue()}, triggers a value change event."]}
{"SampleId": 5763909, "Origin": "Gets a collection of bibentries and sets an ID for every entry.", "Reference": "Gets a collection of entries and sets an ID for every entry.", "LLMCandidates": ["Creates a BibDatabase from a collection of BibEntry objects, setting IDs and inserting them into the database.", "Sets an ID for each entry in the provided collection of BibEntries and inserts them all into the database.", "Creates a BibDatabase object by inserting a collection of BibEntry entities into it.", "Creates a BibDatabase object by inserting a collection of BibEntry entities into it.", "Sets an ID for each entry in the given collection of BibEntries and inserts them all into the database."]}
{"SampleId": 3678294, "Origin": "Obtains an instance of {@code ZonedDateTime} from an {@code OffsetDateTime}.", "Reference": "Obtains an instance of {@code ZonedDateTime} from the instant formed by combining\nthe local date-time and offset.", "LLMCandidates": ["Obtains an instance of `ZonedDateTime` from a `LocalDateTime` and `ZoneOffset`.", "Creates a ZonedDateTime instance from a LocalDateTime and ZoneOffset.", "Obtains an instance of `ZonedDateTime` from a `LocalDateTime` and `ZoneOffset`.", "Creates a ZonedDateTime instance from a LocalDateTime and ZoneOffset.", "Obtains an instance of `ZonedDateTime` from a `LocalDateTime` and `ZoneOffset`."]}
{"SampleId": 336223, "Origin": "Called when a track info is deselected.", "Reference": "Called when a track is deselected.", "LLMCandidates": ["Called when a non-null track info is deselected.", "Called when a non-null track info is deselected.", "Called when a non-null track info is deselected.", "Called when a non-null track info is deselected.", "Called when a non-null track info is deselected."]}
{"SampleId": 340563, "Origin": "Gets current playback position as a {@link MediaTimestamp2}.", "Reference": "Gets current playback position as a {@link MediaTimestamp}.", "LLMCandidates": ["Gets current playback position as a `MediaTimestamp`.", "Gets current playback position as a `MediaTimestamp`.", "Gets current playback position as a `MediaTimestamp`.", "Gets current playback position as a `MediaTimestamp`.", "Gets current playback position as a `MediaTimestamp`."]}
{"SampleId": 1765423, "Origin": "Internal mapper to remember and add all types for the RecyclerView.", "Reference": "Internal mapper to remember and add all view types for the items.", "LLMCandidates": ["Internal mapper to remember and add all types for the RecyclerView.", "Internal mapper to remember and add all types for the RecyclerView.", "Internal mapper to remember and add all types for the RecyclerView.", "Internal mapper to remember and add all types for the RecyclerView.", "Internal mapper to remember and add all types for the Recycler view."]}
{"SampleId": 3355672, "Origin": "They are not accessible in the handler provided as parameter.", "Reference": "They are NOT accessible in the handler provided as parameter.", "LLMCandidates": ["Parameter handler is not accessible from the provided context.", "The provided handler does not have access to the request or response objects.", "The provided handler does not have access to the request or response objects.", "The provided handler does not have access to the request or response objects.", "The handler provided as parameter does not have access to these elements."]}
{"SampleId": 5456947, "Origin": "XML Catalogs, OASIS Standard V1.1, invalid path entries will be ignored.", "Reference": "XML Catalogs, OASIS Standard V1.1, if a catalog entry is invalid, it\nis ignored.", "LLMCandidates": ["Creates a Catalog object from the specified features and URIs. Invalid URI syntax will be validated and ignored.", "Creates a Catalog object based on the given features and an array of URIs, validating the syntax of the URIs beforehand.", "Creates a Catalog object from the given features and a list of URIs representing the catalog paths. Valid URIs are required.", "Creates a Catalog object from features and validated URIs. Invalid URI entries will be ignored.", "Creates a Catalog object from the specified features and list of URIs. Invalid URI syntax will be validated and ignored."]}
{"SampleId": 2544523, "Origin": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniond) rotate()} instead.", "Reference": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniondc) rotate()} instead.", "LLMCandidates": ["The provided code updates the `Quaterniond` parameter to `Quaterniondc`, and uses the new class methods `x()`, `y()`, and `z()` for accessing the quaternion components.", "To apply the rotation transformation, use `#rotate(Quaterniondc)` instead.", "To apply the rotation transformation, use `#rotate(Quaterniondc)` instead.", "To apply the rotation transformation to an existing transformation, use `#rotate(Quaterniondc) rotate()` instead.", "To apply the rotation transformation to an existing transformation, use `#rotate(Quaterniondc)` instead."]}
{"SampleId": 4622194, "Origin": "Returns the servlet request instance.", "Reference": "Returns the current HTTP connection.", "LLMCandidates": ["Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance."]}
{"SampleId": 431986, "Origin": "Varargs version of {@link #addState(Closure, Object, java.util.Set)}.", "Reference": "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "LLMCandidates": ["Varargs version of `#addState(Consumer, Object, java.util.Set)`", "Varargs version of `#addState(Consumer, Object, java.util.Set)`.", "Varargs version of `#addState(Consumer, Object, java.util.Set)`", "Varargs version of `#addState(Consumer, Object, java.util.Set)`", "Varargs version of `#addState(Consumer, Object, java.util.Set)`."]}
{"SampleId": 4374184, "Origin": "This completes the switch.", "Reference": "This completes the change.", "LLMCandidates": ["This completes the switch to enabling all features.", "This completes the switch to enabling all features.", "This completes the switch to enabling all features.", "This method now enables all features instead of full control.", "This method now enables all features instead of full control."]}
{"SampleId": 2312555, "Origin": "Creates a command that can be run later which will restore a display to its\ncurrent state.", "Reference": "Creates a module that can be run later which will restore a display to its\ncurrent state.", "LLMCandidates": ["Creates a command that can be run later to restore a display to its current state.", "Creates an undoable action that will restore a display to its current state.", "Creates a command that can be run later to restore a display to its current state.", "Creates a command that can be run later to restore a display to its current state.", "Creates a command that can be run later to restore a display to its current state."]}
{"SampleId": 2427472, "Origin": "Return the underlying expression tree.", "Reference": "Return the math expression as operation tree.", "LLMCandidates": ["Returns the underlying expression tree.", "Returns the underlying expression tree now referred to as 'toTree()'.", "Returns the underlying expression tree now referred to as `toTree()`.", "Returns the underlying expression tree now referred to as `toTree()`.`", "Returns the underlying expression tree now referred to as `toTree()`. Previous name was `tree()`."]}
{"SampleId": 3080392, "Origin": "A guarded transition from native to Java.", "Reference": "An unguarded transition to Java.", "LLMCandidates": ["Transitioned status from native to Java using volatile write.", "Transitioned from native state to Java state directly, without guarding.", "Sets the status to `STATUS_IN_JAVA` directly, bypassing the `compareAndSet` operation previously used for this transition.", "Updated the method name to `setStatusJavaUnguarded` and describes the action of setting the status to `STATUS_IN_JAVA` directly.", "Sets the status to `STATUS_IN_JAVA` directly, bypassing the compare-and-swap operation."]}
{"SampleId": 115634, "Origin": "Setter for the auto-pull flag.", "Reference": "Setter for the pull-after flag.", "LLMCandidates": ["Setter for the auto-pull flag, now named `autoPullAfter`.", "Setter for the auto-pull flag, now named `autoPullAfter`.", "Setter for the auto-pull flag, now named `autoPullAfter`.", "Setter for the auto-pull flag after modification.", "Setter for the auto-pull flag, now controlling the `m_autoPullAfter` flag."]}
{"SampleId": 3084134, "Origin": "Calls {@link #arrayAllocationSize(int, int, int, GraalHotSpotVMConfig)} using an injected VM\nconfiguration object.", "Reference": "Calls {@link #arrayAllocationSize(int, int, int, int)} using an injected VM configuration\nobject.", "LLMCandidates": ["Calls `#arrayAllocationSize(int, int, int, ObjectAlignment)` using an injected VM configuration object.", "Calls `#arrayAllocationSize(int, int, int, ObjectAlignment)` using an injected VM configuration object.", "Calls `#arrayAllocationSize(int, int, int, ObjectAlignment)` using an injected VM configuration object.", "Calls `arrayAllocationSize(int, int, int, ObjectAlignment)` using an injected VM configuration object.", "Calls `arrayAllocationSize(int, int, int, ObjectAlignment)` using an injected VM configuration object."]}
{"SampleId": 232605, "Origin": "Get a table object based on the identifier.", "Reference": "Get a table object by name.", "LLMCandidates": ["Retrieves a table object from the database identified by the provided database and table names.", "Retrieves a table object based on the given database and table names.", "Retrieves a table object from the database identified by the given database and table names.", "Retrieves a table object from the database identified by the given database and table names.", "Retrieves a table object from the cache based on the given database and table names."]}
{"SampleId": 3861954, "Origin": "reverts local changes for this post, replacing it with the latest version from the server", "Reference": "discard local changes for this post, replacing it with the latest version from the server", "LLMCandidates": ["Reverts local changes for this post, discarding the locally modified version and fetching the latest version from the server.", "Reverts local changes for this post, discarding the latest update from the server.", "Reverts local changes for this post, replacing them with the latest version from the server.", "Reverts local changes for this post, replacing it with the latest version from the server.", "Reverts local changes for this post, replacing it with the latest version from the server."]}
{"SampleId": 2706458, "Origin": "Get Multiply Rate.", "Reference": "Get Faktor.", "LLMCandidates": ["Retrieves the Multiply Rate value from the underlying data store.", "Retrieves the Multiply Rate value from the data store.", "Retrieves the Multiply Rate value from the data store.", "Retrieves the Multiply Rate value from the database.", "Retrieves the Multiply Rate value from the database."]}
{"SampleId": 2312346, "Origin": "By design the return value is not a {@link WithinRangeCondition}.", "Reference": "By design the return value is not a speciailized version of a Condition.", "LLMCandidates": ["By design the return value is not a `WithinRangeCondition`.", "By design, the return value is not a `WithinRangeCondition`.", "By design the return value is not a `WithinRangeCondition`.", "By design the return value is not a `WithinRangeCondition`.", "By design the return value is not a `WithinRangeCondition`."]}
{"SampleId": 2794170, "Origin": "This method sets the value of the database column m_prj_risk.dateraised", "Reference": "This method sets the value of the database column m_prj_risk.raisedDate", "LLMCandidates": ["This method sets the value of the database column m_prj_risk.raiseddate.", "This method sets the value of the database column m_prj_risk.raiseddate.", "This method sets the value of the database column m_prj_risk.raiseddate.", "This method sets the value of the database column m_prj_risk.raiseddate.", "This method sets the value of the database column m_prj_risk.raiseddate."]}
{"SampleId": 3366652, "Origin": "Returns the Realm Type, in the described table, of the named column.", "Reference": "Returns the {@link ColumnDetails}, in the described table, of the named column.", "LLMCandidates": ["Returns the details of the column with the given name.", "Returns the ColumnDetails object for the named column, or null if not found.", "Returns the ColumnDetails object of the described table, for the named column.", "Returns the ColumnDetails object of the named column from the cached index map.", "Returns the ColumnDetails object for the given column name, or null if not found."]}
{"SampleId": 611958, "Origin": "Finds the table schema that can be used for a format schema (without time attributes).", "Reference": "Finds the table schema that can be used for a format schema (without time attributes and generated columns).", "LLMCandidates": ["Finds the physical table schema from the given descriptor properties, excluding time-related attributes.", "Finds the table schema from the given properties map, excluding any fields generated from the format schema expression.", "Finds the table schema that can be used for a format schema (without time attributes), and also supports columns defined using an expression.", "Finds the table schema that can be used for a format schema (without time attributes), including columns generated from expressions specified in the input properties.", "Finds the physical table schema from the descriptor properties, omitting time-related attributes."]}
{"SampleId": 5471048, "Origin": "Note: This API uses {@link Class} instead of {@link Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "Reference": "Note: This API uses {@link Class} instead of {@code Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "LLMCandidates": ["The code now supports Java Specification Version 9 and above, dynamically exporting JVMCI packages instead of requiring command-line options.", "The method now supports JDK versions 9 and above, using reflection to access the necessary methods and fields dynamically.", "The method now uses reflection to access module-related methods at runtime, enabling compatibility with JDK releases earlier than 9.", "The code now supports Java Spec 9 and above, utilizing reflection to access module-related methods dynamically.", "The method now supports JDK 9 and later, using reflection to access module-related methods dynamically."]}
{"SampleId": 3677398, "Origin": "Obtains an instance of {@code OffsetDateTime} from a date-time object.", "Reference": "Obtains an instance of {@code OffsetDateTime} from a temporal object.", "LLMCandidates": ["Obtains an instance of `OffsetDateTime` from a date-time object, handling various input types.", "Obtains an instance of `OffsetDateTime` from a date-time object, handling both `OffsetDateTime` and other temporal types.", "Obtains an instance of `OffsetDateTime` from a date-time object, handling both `OffsetDateTime` instances and temporal values that can be converted to `OffsetDateTime`.", "Obtains an instance of `OffsetDateTime` from a date-time object, handling both `OffsetDateTime` instances and temporal values.", "Obtains an instance of `OffsetDateTime` from a date-time object, handling both `OffsetDateTime` instances and temporal values."]}
{"SampleId": 84978, "Origin": "Primitive operation which inserts the node at the tail of the frontier.", "Reference": "Inserts the node at the tail of the frontier.", "LLMCandidates": ["Inserts the node at the tail of the private frontier queue.", "Inserts the node at the tail of the private frontier.", "Inserts the node at the tail of the private frontier.", "Inserts the node at the tail of the private frontier queue.", "Inserts the node at the tail of the private frontier queue."]}
{"SampleId": 4476355, "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettingRevisions#settingSelector}", "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector}", "LLMCandidates": ["See updated documentation for listRevisions method.", "`listRevisions(selector, Context.NONE)` replaces `listSettingRevisions(selector)` in the code.", "`List the configuration setting revisions based on the given selector.`", "`List the configuration setting revisions based on the given selector. See the `listRevisions` method for additional context parameters.`", "See updated documentation for `listRevisions` method."]}
{"SampleId": 2913757, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a dedicated parser.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name using the `NAMES.parse` utility.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 4396564, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive message details redacted for security.", "Returns a string representation of this object, with sensitive message details redacted for security.", "Returns a string representation of this object, with sensitive message details redacted for security.", "Returns a string representation of this object, useful for testing and debugging, with sensitive message details redacted.", "Returns a string representation of this object, with sensitive message details redacted for security."]}
{"SampleId": 6320778, "Origin": "Create a new detached JDOQuery instance with the given projection", "Reference": "Create a new detached {@link JDOQuery} instance with the given projection", "LLMCandidates": ["Creates a new detached JDOQuery instance with the given projection and applies the DISTINCT clause.", "Creates a new detached JDOQuery instance with the given projection and applies distinct clause.", "Creates a new detached JDOQuery instance with the given projection, selecting only distinct values.", "Creates a new detached JDOQuery instance with the given projection and applies the DISTINCT clause.", "Creates a new detached JDOQuery instance with the given projection and applies the DISTINCT clause."]}
{"SampleId": 237391, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen some files are consistent in a larger inode tree.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen some files are consistent in a larger inode tree.", "LLMCandidates": ["Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when some files are consistent in a larger inode tree, utilizing the new `CreateDirectoryPOptions` and `CreateFilePOptions` classes with the `WritePType.CACHE_THROUGH` write type.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when some files are consistent in a larger inode tree, using updated PO options.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when some files are consistent in a larger inode tree, using updated API with `CreateDirectoryPOptions` and `CreateFilePOptions`.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when some files are consistent in a larger inode tree, using updated options and context classes.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when some files are consistent in a larger inode tree, using updated options classes and context builder pattern."]}
{"SampleId": 4591717, "Origin": "Add init return statments.", "Reference": "Add nil return statement.", "LLMCandidates": ["Adds a nil return statement to the block statement.", "Adds a nil return statement to the block statement.", "Adds a nil return statement to the block statement.", "Adds a nil return statement to the block statement.", "Adds a nil return statement to the block statement."]}
{"SampleId": 4476809, "Origin": "The {@link RsaKeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateRsaKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The `{@link CreateRsaKeyOptions#isEnabled() enabled}` field is set to true by Azure Key Vault, if not specified.", "The `{@link CreateRsaKeyOptions#isEnabled() enabled}` field is set to true by Azure Key Vault, if not specified.", "The `{@link CreateRsaKeyOptions#isEnabled() enabled}` field is set to true by Azure Key Vault, if not specified.", "The `{@link CreateRsaKeyOptions#isEnabled() enabled}` field is set to true by Azure Key Vault if not specified.", "The `{@link CreateRsaKeyOptions#isEnabled() enabled}` field is set to true by Azure Key Vault, if not specified."]}
{"SampleId": 2049948, "Origin": "Asserts that the cache contains the given data for {@code uriString}.", "Reference": "Asserts that the cache contains necessary data for the {@code requestSet}.", "LLMCandidates": ["Asserts that the cache contains the expected data for the given request set. The total length of the cached data is verified against the cache space.", "Asserts that the cache contains the expected data for the given request set.", "Asserts that the cache contains the cached data for the given request set.", "Asserts that the cache contains the expected data for the given request set.", "Asserts that the cache contains the expected data for the given request set."]}
{"SampleId": 232736, "Origin": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.", "Reference": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.", "LLMCandidates": ["Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master resource containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master resource containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master resource containing that master.", "Creates a new leader `FsMasterResource` from journal along with its dependencies, and returns the master resource containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master resource containing that master."]}
{"SampleId": 4856970, "Origin": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}", "Reference": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI UNKNOWN_EMOJI}", "LLMCandidates": ["Encode Unicode characters using EncodingUtil based on the input string's prefix.", "Encoding logic updated to use `EncodingUtil` class for codepoint encoding.", "Encoding logic updated to use `EncodingUtil` class for codepoint encoding.", "Encoding logic updated to use `EncodingUtil` class for codepoint encoding.", "Encode Unicode characters based on their prefix, and utilize `EncodingUtil` for the process."]}
{"SampleId": 2289333, "Origin": "The provided {@link XMPPError XMPPError}.", "Reference": "The provided {@link StanzaError XMPPError}.", "LLMCandidates": ["The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "Creates an ErrorIQ response based on the provided XMPPError.Builder.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}."]}
{"SampleId": 1837081, "Origin": "The executor will shutdown\non {@link #shutdown()}, if not detached.", "Reference": "The executors will shutdown\non {@link #shutdown()}, if not detached.", "LLMCandidates": ["The executor will shutdown on {@link #shutdown()} if not detached, and can now accept an optional secondary executor for parallel tasks.", "The executor will shutdown on {@link #shutdown()} if not detached, and optionally accepts a secondary executor for parallel processing.", "The executor will shutdown on {@link #shutdown()} if not detached, and can now accept a secondary executor for parallel processing.", "The executors will shutdown on `#shutdown()` if not detached.", "The executor will shutdown on {@link #shutdown()} if not detached. Additionally, a secondary executor can now be set using the second argument."]}
{"SampleId": 339145, "Origin": "The ParcelFileDescriptor will be closed when the list\nbecomes empty.", "Reference": "The ParcelFileDescriptor will\nbe closed when the count becomes zero.", "LLMCandidates": ["The ParcelFileDescriptor will be closed when the reference count reaches zero.", "The ParcelFileDescriptor will be closed when the reference count becomes 0.", "The ParcelFileDescriptor will be closed when the reference count reaches zero.", "The ParcelFileDescriptor will be closed when the reference count reaches zero.", "The ParcelFileDescriptor will be closed when the reference count reaches zero."]}
{"SampleId": 5179168, "Origin": "Returns the client preferences.", "Reference": "Returns the request including client preferences.", "LLMCandidates": ["Returns the request object.", "Returns the current request object.", "Returns the current request object.", "Returns the current request object.", "Returns the request object."]}
{"SampleId": 2700190, "Origin": "Get UPC/EAN.", "Reference": "Get TU-UPC.", "LLMCandidates": ["Retrieves UPC/EAN value from the data source.", "Retrieves UPC/EAN value from the data store.", "Retrieves UPC/EAN value from the underlying data source.", "Retrieves UPC/EAN value from the underlying data source.", "Retrieves UPC/EAN value from the data store."]}
{"SampleId": 6104684, "Origin": "Returns the value of the {@code bitfield} field.", "Reference": "Returns the value of the {@code direction} field.", "LLMCandidates": ["Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field."]}
{"SampleId": 4132857, "Origin": "Get the last time this object was used in ms.", "Reference": "Gets the last time this object was used in milliseconds.", "LLMCandidates": ["Returns the last time this object was used in milliseconds.", "Returns the last time this object was used in milliseconds.", "Returns the last time this object was used in milliseconds.", "Returns the last time this object was used in milliseconds.", "Returns the last time this object was used in milliseconds."]}
{"SampleId": 5724509, "Origin": "Convenience method for getScheme(host.getSchemeName())", "Reference": "Convenience method for {@code getScheme(host.getSchemeName())}", "LLMCandidates": ["Convenience method for getting the scheme of the given host.", "Convenience method for retrieving the scheme of the given host.", "Convenience method for retrieving the scheme of the given host.", "Convenience method for retrieving the scheme of the given HTTP host.", "Convenience method for getting the scheme of the given host."]}
{"SampleId": 2916600, "Origin": "The meta-property for the {@code expiryDateTime} property.", "Reference": "The meta-property for the {@code expiry} property.", "LLMCandidates": ["The meta-property for the `expiry` property.", "The meta-property for the `expiry` property.", "The meta-property for the `expiry` property.", "The meta-property for the `expiry` property.", "The meta-property for the `expiry` property."]}
{"SampleId": 2783358, "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "LLMCandidates": ["If this happens, a configuration {@link ConfigurationEvent} event will\nbe sent to all registered listeners.", "If this happens, a configuration {@link ConfigurationEvent} event will be sent to all registered listeners.", "If this happens, a configuration event will be sent to all registered listeners.", "If this happens, a configuration event will be sent to all registered listeners.", "If this happens, a configuration {@link ConfigurationEvent} event will be sent to all registered listeners."]}
{"SampleId": 4245592, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to duration, returning default value if text is inconvertible.", "LLMCandidates": ["Returns the parsed Duration value from the text field, or the default value if text is null.", "If text is not null, attempt to convert to Duration; otherwise, returns the default value.", "Converts text to a Duration object, returning the default value if text is null.", "Converts text to a Duration object, returning the default value if text is null.", "Returns the parsed Duration value from the provided text, or the default value if text is null."]}
{"SampleId": 4320983, "Origin": "Gets policy for resource set.", "Reference": "Delete policy for resource set.", "LLMCandidates": ["Retrieves and deletes policies for the resource set.", "Retrieves and deletes policies for the given resource set.", "Retrieves and deletes policies for a resource set.", "Retrieves and deletes policies for a resource set.", "Retrieves and deletes all policies associated with a resource set."]}
{"SampleId": 3506149, "Origin": "The alias is a boolean value located\nunder the {@link #ENABLED} key.", "Reference": "The alias is a boolean value located\nunder the {@link HasEnableUtil#ENABLED} key.", "LLMCandidates": ["The alias is a boolean value located under the `{@link #HasEnableUtil.ENABLED}` key.", "The alias is a boolean value located under the `{@link #HasEnableUtil.ENABLED}` key.", "The alias is a boolean value located under the `{@link #HasEnableUtil.ENABLED}` key.", "The alias is a boolean value located under the `{@link #HasEnableUtil.ENABLED}` key.", "The alias is a boolean value located under the `{@link #HasEnableUtil.ENABLED}` key."]}
{"SampleId": 337258, "Origin": "Returns the {@link CaptureRequestConfiguration} for the {@link CaptureStage} object.", "Reference": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "LLMCandidates": ["Returns the `CaptureRequestConfig` object configured with the camera settings from `mCamera2ConfigBuilder`.", "Returns the `CaptureRequestConfig` object configured with the options from the `mCamera2ConfigBuilder`.", "Returns the `CaptureRequestConfig` object configured with the settings from the `mCamera2ConfigBuilder`.", "Returns the `CaptureRequestConfig` object configured with options derived from the `Camera2ConfigBuilder` instance.", "Returns the `CaptureRequestConfig` object configured with the camera settings from `mCamera2ConfigBuilder`."]}
{"SampleId": 4781139, "Origin": "Simple names for a given type.", "Reference": "Return the descriptor class for a given type.", "LLMCandidates": ["Returns the descriptor class name for the given type.", "Returns the descriptor class name for the given type.", "Returns the descriptor class name for the given type.", "Retrieves the descriptor class name for the given type.", "Returns the descriptor class name for the given type."]}
{"SampleId": 4470234, "Origin": "Get the preventEncryptionScopeOverride property: Optional.", "Reference": "Get the encryptionScopeOverridePrevented property: Optional.", "LLMCandidates": ["Gets the isEncryptionScopeOverridePrevented property: Optional.", "Gets the isEncryptionScopeOverridePrevented property: Optional.", "Gets the isEncryptionScopeOverridePrevented property: Optional.", "Gets the isEncryptionScopeOverridePrevented property: Optional.", "Gets the isEncryptionScopeOverridePrevented property: Optional."]}
{"SampleId": 4986646, "Origin": "Get the FCPClient if it exists.", "Reference": "Get the PersistentRequestClient if it exists.", "LLMCandidates": ["Retrieves the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Retrieves the PersistentRequestClient if it exists.", "Retrieves the PersistentRequestClient if it exists.", "Retrieves the PersistentRequestClient if it exists."]}
{"SampleId": 4891063, "Origin": "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Reference": "Set the connection, this is called when the channel is added to the pipeline.", "LLMCandidates": ["Sets the connection, usually called by subclasses when the channel is added to the pipeline.", "Sets the connection, usually called by subclasses when the channel is added to the pipeline.", "Sets the connection, typically called by subclasses when the channel is added to the pipeline.", "Sets the connection, which is usually called by subclasses when the channel is added to the pipeline.", "Sets the connection, which is usually called by subclasses when the channel is added to the pipeline."]}
{"SampleId": 4807132, "Origin": "Get the classloader and module finder.", "Reference": "Get the callstack.", "LLMCandidates": ["Retrieves the call stack from the class loader finder.", "Get the call stack from the class loader finder.", "Get the call stack from the class loader finder.", "Returns the call stack of the class loader finder.", "Returns the call stack of the class loader finder."]}
{"SampleId": 1730901, "Origin": "Validation type is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Reference": "Validation mode affects whether entity bean validation will be applied on {@link DataManager} level.", "LLMCandidates": ["Validation mode determines whether entity bean validation is applied on the {@link CommitContext} level.", "Validation mode determines whether entity bean validation will be applied on the {@link CommitContext} level.", "Validation mode determines whether entity bean validation is applied on the {@link CommitContext} level.", "Validation mode determines whether entity bean validation should be applied at the {@link CommitContext} level.", "Validation mode determines whether entity bean validation is applied on the {@link CommitContext} level."]}
{"SampleId": 1042205, "Origin": "Delete persisted {@link WorkUnit}s upon job completion.", "Reference": "Delete persisted {@link WorkUnit}s and {@link JobState} upon job completion.", "LLMCandidates": ["Deleted persisted work units and the job state file for the specified job.", "Deleted persisted work units and job state file for job \" + this.jobContext.getJobId() + \".", "Deleted persisted work units and job state file for job \" + this.jobContext.getJobId() + \".", "Deleted persisted work units and job state file for job \" + this.jobContext.getJobId() + \".", "Deleted persisted work units and job state file for job \" + this.jobContext.getJobId() + \"."]}
{"SampleId": 4797744, "Origin": "A return value of {@code -1} necessarily\nindicate that the map contains no mapping for the key.", "Reference": "A return value of {@code #FREE} necessarily\nindicate that the map contains no mapping for the key.", "LLMCandidates": ["A return value of  {@code FREE} now indicates that the map contains no mapping for the key.", "A return value of  {@code FREE} now indicates that the map contains no mapping for the key.", "A return value of  {@code FREE} now indicates that the map contains no mapping for the key.", "A return value of `FREE` now indicates that the map contains no mapping for the key.", "A return value of {code FREE} now indicates that the map contains no mapping for the key."]}
{"SampleId": 4473555, "Origin": "Create Subject Alternative names with dns names.", "Reference": "Set the dns names.", "LLMCandidates": ["Sets the DNS names for the current SubjectAlternativeNames instance.", "Sets the DNS names for the current SubjectAlternativeNames object.", "Sets the DNS names for the SubjectAlternativeNames object.", "Sets the DNS names for the SubjectAlternativeNames object.", "Sets the DNS names for the SubjectAlternativeNames object."]}
{"SampleId": 3758708, "Origin": "So when we got block and all is ok - call this method.", "Reference": "So when we got packet and all is ok - call this method.", "LLMCandidates": ["This method now handles incoming packet with ack packet ID.", "This method is now called with a SessionReader object and an Integer packetId instead of a Session and an int blockId. The report message has also been updated to reflect the new parameters.", "This method is called when a block has been received and all is in order.", "This method is used to send an ACK packet to the remote node after receiving a block.", "This method is now called with a SessionReader object and an Integer packetId instead of Session and blockId. The reporting message has also been updated with more detailed verbosity level."]}
{"SampleId": 431798, "Origin": "Creates execution sequence for pending task groups by interleaving their unique occurrences.", "Reference": "Creates execution sequence for pending task groups by interleaving batches of requested size of\ntheir occurrences.", "LLMCandidates": ["Creates execution sequence for pending task groups by interleaving their unique occurrences in batches of the specified size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences in batches of the specified size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences in batches of the specified size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences in batches of the specified size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences in batches of the specified size."]}
{"SampleId": 3990800, "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.", "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.", "LLMCandidates": ["Wait for this task to meet the expected number of records as defined by `expectedRecords` parameter in the specified time unit.", "Wait for this task to meet the expected number of records as defined by `expectedRecords` parameter.", "Wait for this task to meet the expected number of records as defined by `expectedRecords` parameter in the specified time unit.", "Wait for this task to meet the expected number of records as defined by `expectedRecords` parameter in the specified `timeout` and `unit`.", "Wait for this task to meet the expected number of records as defined by `expectedRecords` parameter in the given time unit."]}
{"SampleId": 5441293, "Origin": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistring bad font\nin case when scaler reports this.", "Reference": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistering a bad font\nwhen the scaler reports this.", "LLMCandidates": ["This method now uses the `FreetypeFontScaler` constructor instead of reflection to create the scaler object.", "The scaler object is now created using the `FreetypeFontScaler` constructor, with the given arguments. In the case of an exception, a `null` scaler is assigned.", "FontScaler is now instantiated using the `FreetypeFontScaler` constructor with the provided arguments.", "This method now uses the `FreetypeFontScaler` constructor to instantiate the scaler object.", "This method now utilizes the `FreetypeFontScaler` constructor to create the scaler object."]}
{"SampleId": 5003417, "Origin": "gets all tv show episodes from database", "Reference": "SYNCHRONOUSLY gets all tv show episodes from database", "LLMCandidates": ["Retrieves all TV show episodes from the database.", "Retrieves all TV show episodes from the database.", "Retrieves all TV show episodes from the database.", "Retrieves all TV show episodes from the database.", "Retrieves all TV show episodes from the database."]}
{"SampleId": 2913765, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 3358024, "Origin": "Value of the code encoded.", "Reference": "Value of the errorCode encoded.", "LLMCandidates": ["Returns the encoded error code value.", "Returns the encoded value of the code.", "Returns the encoded value of the code.", "Returns the encoded error code value.", "Returns the encoded error code value."]}
{"SampleId": 1346741, "Origin": "Closes the session.", "Reference": "Updates the session state.", "LLMCandidates": ["Changes the session state based on the provided state argument. If the new state is SUSPENDED, it tracks the time of suspension. If the state changes back to anything other than SUSPENDED, the suspension time is reset. Additionally, if the session has been suspended for more than a specified timeout, it is automatically closed.", "Changes the session state based on the provided state argument. If the new state is SUSPENDED, it tracks the time of suspension. If the session remains SUSPENDED for more than the specified timeout, it automatically transitions to the CLOSED state.", "Updates session state based on the provided state argument. If the new state is SUSPENDED, the suspension time is recorded. Otherwise, the suspension time is reset. Additionally, it notifies registered change listeners about the state change.", "Updates the session state based on the provided state argument. If the new state is SUSPENDED and no suspended time is set, the current time is recorded as the suspended time. Otherwise, the suspended time is reset.", "Changes the session state based on the given state argument. If the new state is SUSPENDED, the current time is recorded as the suspension time. If the new state is not SUSPENDED, the previous suspension time is reset. Additionally, it notifies change listeners about the state change."]}
{"SampleId": 5724390, "Origin": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521.", "Reference": "This function fully implements the quoted-printable encoding specification (rule REF through rule REF) as\ndefined in RFC 1521.", "LLMCandidates": ["This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This method overrides the default `decode` method and implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This method overrides the superclass implementation and performs quoted-printable decoding as specified in RFC 1521.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This method overrides the default `decode` method and implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521."]}
{"SampleId": 6130393, "Origin": "Method to get the configuration knowning the set", "Reference": "Method to get the first configuration knowning the set", "LLMCandidates": ["Returns the configuration for the given set, with a default index of 0.", "Retrieves the configuration based on the given set, with an optional index parameter.", "Returns the configuration for the given set, using a cached value if available.", "Returns the configuration for the given set, using a cached value if available.", "Retrieves the configuration for the given set, or a default configuration if not found."]}
{"SampleId": 4617953, "Origin": "Binds the HTTP connection.", "Reference": "Assigns an external property.", "LLMCandidates": ["Sets the property value based on the given key and value.", "Sets the value of the property identified by the given key.", "Sets the value of the property identified by the given key.", "Sets the HTTP connection value.", "Sets the property value based on the given key and value."]}
{"SampleId": 5324303, "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.", "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.", "LLMCandidates": ["The writing process does not start until the returned `Flux` is subscribed to.", "The writing process does not start until the returned `Flux` is subscribed to.", "The writing process does not start until the returned `Flux` is subscribed to.", "The writing process does not start until the returned `Flux` is subscribed to.", "The writing process starts when the returned `Flux` is subscribed to."]}
{"SampleId": 3037775, "Origin": "Tests resilency when D2 device availability is changed.", "Reference": "Tests resiliency when D2 device availability is changed.", "LLMCandidates": ["Tests resilency when D2 device availability is changed, including updated path weight calculation with ScalarWeight.", "Tests resilency when D2 device availability is changed, and verifies path weight after topological change.", "Tests resilency when D2 device availability is changed. The test case specifically verifies the path change when device2, links1 and 2 are removed from the topology.", "Tests resilency when D2 device availability is changed. The code updates the topology by removing the D2 device and its connected links (link1 and link2).", "Tests resilency when D2 device availability is changed. The path weight is now referred to as `path.weight()` instead of `path.cost()`."]}
{"SampleId": 2443922, "Origin": "Start building a new factory class-based service binding.", "Reference": "Start building a new supplier class-based service binding.", "LLMCandidates": ["Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding."]}
{"SampleId": 1314730, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name."]}
{"SampleId": 2913760, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 5840707, "Origin": "Removes the source location value from this list of elements.", "Reference": "Removes the source location value from this map of elements.", "LLMCandidates": ["Removes the source location value from the specified map.", "Removes the source location value from the specified map and its associated elements.", "Removes the source location value from the specified map.", "Removes the source location value from the specified map.", "Removes the source location value from the specified map."]}
{"SampleId": 3074824, "Origin": "Make you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Reference": "Make sure you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "LLMCandidates": ["The completeness check now includes a new condition to ensure that the newly introduced NA values have been properly handled.", "The completeness check now includes a new condition to verify that the 'introducesNA' method has not been called before relying on this method.", "The completeness check now includes the additional condition `!introducesNA()`.", "The completeness check now includes a new condition to verify that the 'introducesNA' method has not been called.", "The completeness check is now contingent on the result of the newly added `introducesNA()` method."]}
{"SampleId": 4124110, "Origin": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this.", "Reference": "Make sure to\n{@link #releaseParser(PoolSAXParser)} in\na  block every time you call this.", "LLMCandidates": ["Make sure to\n{@link #releaseParser(PoolSAXParser)} in\na  block every time you call this.", "Make sure to\n{@link #releasePoolSAXParser(PoolSAXParser)} in\na  block every time you call this.", "Make sure to\n{@link #releasePoolSAXParser(PoolSAXParser)} in\na  block every time you call this.", "Make sure to\n{@link #releasePoolSAXParser(PoolSAXParser)} in\na  block every time you call this.", "Ensure that the associated method, `releaseParser(PoolSAXParser)` is called in a `try-finally` block every time this method is utilized."]}
{"SampleId": 2603540, "Origin": "Send a non-mutation message to a given endpoint.", "Reference": "Send a non-mutation message to a given node.", "LLMCandidates": ["Send a non-mutation message to a given node.", "Send a non-mutation message to a given node.", "Send a non-mutation message to a given node.", "Send a non-mutation message to a given node.", "Send a non-mutation message to a given node."]}
{"SampleId": 1753706, "Origin": "Whether this codec is capable of encoding the given Java type.", "Reference": "Whether this codec is capable of processing the given Java type.", "LLMCandidates": ["Checks if this codec can encode the given Java type.", "Checks if this codec can handle the given Java type.", "Checks if this codec can encode the given Java type.", "Checks if this codec can encode the given Java type.", "Checks if this codec can encode the given Java type."]}
{"SampleId": 2603544, "Origin": "unlike excise we just need this endpoint gone without going through any notifications *", "Reference": "unlike excise we just need this node gone without going through any notifications *", "LLMCandidates": ["Unlike excise, we just need this node gone without going through any notifications.", "Unlike the `excise` operation, this method simply removes the given node without triggering any notifications.", "Unlike `excise`, this method simply removes the given node without any notifications.", "Unlike the `excise` operation, this method simply removes the given node without triggering any notifications.", "Unlike the `excise` operation, this method simply removes the given node without triggering any notifications."]}
{"SampleId": 2017647, "Origin": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated.", "Reference": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, if B's constructor is not explicitly annotated.", "LLMCandidates": ["When a class B inherits from A and A is annotated as a struct, then B automatically inherits the annotation, even if B's constructor is not explicitly annotated.", "If the class inherits from a struct-annotated class, it inherits the annotation, regardless of the constructor's explicit annotation status.", "If the class inherits from a struct-annotated superclass, it automatically inherits the annotation, regardless of the constructor's explicit annotation.", "If the super type has a `makesStructs` method, it will be used to determine the struct status of the current class. Otherwise, the class will not be considered a struct.", "When a class B inherits from A and A is annotated as a struct, then B automatically inherits the annotation, even if B's constructor is not explicitly annotated."]}
{"SampleId": 4396425, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security purposes."]}
{"SampleId": 1406605, "Origin": "Overrides previous instances of the exact\nsame subclass of FragmentOptions.", "Reference": "Overrides previous instances of the exact same subclass of {@code FragmentOptions}.", "LLMCandidates": ["Overrides previous instances of the exact same subclass of FragmentOptions and normalizes them before storing.", "Overrides previous instances of the exact same subclass of FragmentOptions and sets the value to its normalized form.", "Overrides previous instances of the exact same subclass of FragmentOptions and normalizes them before storing.", "Overrides previous instances of the exact same subclass of FragmentOptions and uses the normalized value instead.", "Overrides previous instances of the exact same subclass of FragmentOptions and normalizes them before storing."]}
{"SampleId": 4386708, "Origin": "List Multipart Uploads response, even if idempotent complete is\npossible.", "Reference": "Uploads response, even if idempotent complete is possible.", "LLMCandidates": ["The completeMultipartUpload method has been updated to handle protocolFactory. The request is now constructed using the protocolFactory, and the response handler is created using a protocolFactory-specific handler.", "CompleteMultipartUploadRequestMarshaller is now explicitly mentioned in the request creation process.", "Completes the multipart upload process and returns the result, even if idempotent completion is possible.", "The method signature and variable names have been updated in the code. The idempotency of the complete operation is still reflected in the response handling.", "CompleteMultipartUploadRequestMarshaller is now initialized with the protocolFactory."]}
{"SampleId": 3710575, "Origin": "Load a {@link android.graphics.drawable.Drawable} asynchronously", "Reference": "Load a {@link android.graphics.drawable.Drawable} asynchronously (convenience method)", "LLMCandidates": ["Loads the drawable asynchronously into the specified image view.", "Loads a drawable asynchronously, with an optional error placeholder.", "Loads a drawable asynchronously into the given image view.", "Loads a drawable asynchronously into the given image view.", "Loads a drawable asynchronously into the provided image view."]}
{"SampleId": 2700191, "Origin": "Set UPC/EAN.", "Reference": "Set TU-UPC.", "LLMCandidates": ["Sets UPC/EAN_TU.", "Sets UPC/EAN_TU.", "Set UPC/EAN value.", "Set UPC/EAN value.", "Sets UPC/EAN_TU."]}
{"SampleId": 2680294, "Origin": "Returns the opening {@link Month} within this set of bounds.", "Reference": "Returns the openAt {@link Month} within this set of bounds.", "LLMCandidates": ["Returns the opening month within this set of bounds.", "Returns the month at which this set of bounds opens.", "Returns the month at which this set of bounds opens.", "Returns the month at which this set of bounds opens.", "Returns the month at which this set of bounds opens."]}
{"SampleId": 2272830, "Origin": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener.", "Reference": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections of a particular type.", "LLMCandidates": ["The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener has been deprecated. Please refer to the connection type's fallback configuration for details.", "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store is deprecated. Please refer to the documentation for alternative options.", "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener is deprecated. Please refer to the documentation for alternative methods.", "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener is deprecated. Please refer to the updated documentation for details on the new storage mechanism.", "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener has been deprecated."]}
{"SampleId": 3678449, "Origin": "Returns a copy of this date-time with the zone ID locked to the offset.", "Reference": "Returns a copy of this date-time with the zone ID set to the offset.", "LLMCandidates": ["Returns a copy of this date-time with the zone ID fixed to the offset.", "Returns a copy of this date-time with the zone ID fixed to the offset.", "Returns a copy of this date-time with the zone ID fixed to the offset.", "Returns a copy of this date-time with the zone ID fixed to the offset.", "Returns a copy of this date-time with the zone ID fixed to the offset."]}
{"SampleId": 1310050, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a api, used to index the api in ES.", "LLMCandidates": ["Generates a valid API ID for an organization's API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES.", "Generates a valid API ID for an API, used to index the API in ES."]}
{"SampleId": 5447042, "Origin": "If the range of the variable has not been set yet, it will be set to be\nval id from the start to the end of the instruction list.", "Reference": "If the range of the variable has not been set yet, it will be set to be\nvalid from the start to the end of the instruction list.", "LLMCandidates": ["This method has been superseded by `getLocalVariableOrTypes(true)`. Please refer to the new method for details.", "Retrieves the local variable types from the cached list or generates them from the instruction list if not cached.", "Retrieves the local variable types from the cached list or generates them from the instruction list if not cached.", "This method now delegates to `getLocalVariableOrTypes` with the `includeInstructionList` flag set.", "This method now delegates the logic to the `getLocalVariableOrTypes` method with the `includeInstructions` flag set to true."]}
{"SampleId": 6247256, "Origin": "Deletes the elements in the mValues list and notifies the Adapter", "Reference": "Deletes the elements in the values list and notifies the Adapter", "LLMCandidates": ["Deletes the elements in the values list and notifies the Adapter.", "Deletes the elements in the values list and notifies the Adapter.", "Deletes the elements in the values list and notifies the Adapter.", "Deletes the elements in the values list and notifies the Adapter.", "Deletes the elements in the values list and notifies the Adapter."]}
{"SampleId": 2382765, "Origin": "The version of this Titan graph database", "Reference": "The version of this JanusGraph graph database", "LLMCandidates": ["Returns the version of the JanusGraph database.", "Returns the version of this JanusGraph database.", "Returns the version of this JanusGraph database.", "Returns the version of the JanusGraph database.", "Returns the version of the JanusGraph database."]}
{"SampleId": 4386726, "Origin": "Uploading Large Archives in Parts (Multipart Upload)  and  Upload Part \nin the Amazon Glacier Developer Guide .", "Reference": "For conceptual information and underlying REST API, go to Uploading Large Archives in Parts (Multipart Upload) and Upload Part  in the Amazon Glacier Developer Guide.", "LLMCandidates": ["Updated method to handle protocol factory for Multipart Upload.", "Updated for changes in method signature, variable names, and adds protocolFactory to request marshalling.", "Uploading large archives in parts (Multipart Upload) and uploading part in the Amazon Glacier Developer Guide.", "Uploads large archives in parts (Multipart Upload) and uploads a part in the Amazon Glacier Developer Guide.", "Upload large archives in parts (Multipart Upload) and upload part in the Amazon Glacier Developer Guide."]}
{"SampleId": 3772938, "Origin": "Creates a column instance from a value provider and a renderer.", "Reference": "Creates a column instance from a value provider, presentation provider\nand a renderer.", "LLMCandidates": ["Creates a column instance from a value provider, a presentation provider (optional), and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider (optional), and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer."]}
{"SampleId": 2912413, "Origin": "This maps either the security ID or the legal entity ID to a group.", "Reference": "This maps the legal entity ID to a group.", "LLMCandidates": ["This maps either the security ID or the legal entity ID to a group.", "This maps either the security ID or the legal entity ID to a group.", "Maps either the security ID or the legal entity ID to a group.", "This maps either the security ID or the legal entity ID to a group.", "This maps either the security ID or the legal entity ID to a group."]}
{"SampleId": 367453, "Origin": "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri}\nif exists", "Reference": "Returns the singleton instance of {@link SliceBackgroundWorker} for specified {@link Uri} if\nexists", "LLMCandidates": ["Returns the singleton instance of the generic type `T` of `SliceBackgroundWorker` for the specified `Uri` if exists.", "Returns the singleton instance of the generic type parameter extending {@link SliceBackgroundWorker} for the specified {@link Uri} if exists.", "Returns the singleton instance of the generic type extending \n{@link SliceBackgroundWorker} for the specified {@link Uri} if it exists.", "Returns the singleton instance of the generic type parameter extending `SliceBackgroundWorker` for the specified `Uri` if exists.", "Returns the singleton instance of the generic type parameter `T` of type `SliceBackgroundWorker` for the specified `Uri` if exists."]}
{"SampleId": 2783671, "Origin": "A {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:", "Reference": "This method throws an {@link IOException} if the operation failed, for any of the following reasons:", "LLMCandidates": ["The method now attempts to rename the file if supported, and falls back to copying if rename fails. The source file is deleted after successful copying, with an exception thrown if deletion fails.", "The method now attempts to rename the file directly if supported, and falls back to copying the file recursively if rename fails. In all cases, the source file is deleted after successful copying.", "The method now attempts to rename the file if possible, falling back to copying recursively if rename fails. In either case, the source file is deleted after successful copying.", "The method now attempts to rename the file if supported, and falls back to copying if rename fails. The source file is deleted after successful copying, with an exception thrown in case of deletion errors.", "The method now attempts to rename the file if supported, falling back to manual file copying if rename is not available."]}
{"SampleId": 3366327, "Origin": "Sets the schema version to the given {@link SharedRealm}.", "Reference": "Sets the schema version to the given {@link OsSharedRealm}.", "LLMCandidates": ["Sets the schema version to the given `OsSharedRealm`.", "Sets the schema version to the given `OsSharedRealm`.", "Sets the schema version to the given `OsSharedRealm`.", "Sets the schema version to the given `OsSharedRealm`.", "Sets the schema version to the given `OsSharedRealm`."]}
{"SampleId": 5243388, "Origin": "Compare two groups based on the grouping attribute.", "Reference": "Compare two groups based on the group key", "LLMCandidates": ["Compares two groups based on their group key attribute.", "Compares two groups based on their group key.", "Compares two groups based on their group key.", "Compares two groups based on their group key.", "Compares two groups based on their group keys."]}
{"SampleId": 2526359, "Origin": "Adds a handle to the constant pool of the class being built.", "Reference": "Adds a method handle to the constant pool of the class being built.", "LLMCandidates": ["Adds a method handle to the constant pool of the class being built.", "Adds a method handle to the constant pool of the class being built.", "Adds a handle to the constant pool of the class being built, based on a method handle instead of a handle.", "Adds a method handle to the constant pool of the class being built.", "Adds a method handle to the constant pool of the class being built."]}
{"SampleId": 2443738, "Origin": "Bind contract provider model to a provider class using the supplied instance manager.", "Reference": "Bind contract provider model to a provider class using the supplied injection manager.", "LLMCandidates": ["Binds contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager."]}
{"SampleId": 2848845, "Origin": "The manifest produced by this service do not include checksum for each entry.", "Reference": "The manifest produced by this service do not include checksum for entries and caches manifests recently created.", "LLMCandidates": ["The manifest produced by this service does not include checksum for each entry.", "The manifest produced by this service does not include checksum for each entry.", "The manifest produced by this service does not include checksum for each entry.", "The manifest produced by this service does not include checksum for each entry.", "The manifest produced by this service does not include checksum for each entry."]}
{"SampleId": 4780345, "Origin": "Returns all documents contained in this cluster.", "Reference": "Returns all documents contained in this cluster or an empty list if none.", "LLMCandidates": ["Returns the list of documents stored in the cluster, or an empty list if no documents are found.", "Returns the list of documents stored in the cluster, or an empty list if none exist.", "Returns the list of documents associated with this cluster, or an empty list if none are found.", "Returns the list of documents retrieved from the cluster attribute.", "Returns the list of documents retrieved from the cluster attribute."]}
{"SampleId": 1067852, "Origin": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain an entry for a {@code StreamManager}.", "Reference": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain a valid entry for a {@code StreamManager}.", "LLMCandidates": ["Return the `StreamManager` from the context if defined, otherwise fallback to the global one.", "Return the `StreamManager` from the given context if defined, or the global one otherwise.", "Return the `StreamManager` from the context if defined, otherwise the global one.", "Return the `StreamManager` from the provided context if it is defined, otherwise fall back to the global one.", "Return the `StreamManager` from the context if it is defined, otherwise fall back to the global one."]}
{"SampleId": 2230476, "Origin": "Sets the quorum name for lock operations.", "Reference": "Sets the split brain protection name for lock operations.", "LLMCandidates": ["Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations."]}
{"SampleId": 1855232, "Origin": "[IF Sidecar19-SE]", "Reference": "[IF Java14]", "LLMCandidates": ["Deprecated due to removal in Java14. No functionality applies to this VM.", "Deprecated due to removal in Java14.", "Deprecated due to removal in future versions, since Java14.", "Deprecated as of Java14, no longer applicable to this VM.", "Deprecated as of Java14, no longer applicable to this VM."]}
{"SampleId": 1464613, "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "LLMCandidates": ["Obtain a RemoteRepository for the data set having the specified SPARQL endpoint.", "Obtain a {@link RemoteRepository} for the data set referenced by the specified SPARQL endpoint URL.", "Obtain a `RemoteRepository` for the data set referenced by the specified SPARQL endpoint URL.", "Obtain a RemoteRepository for the data set using the specified SPARQL endpoint URL.", "Obtain a {@link RemoteRepository} for the data set using the specified SPARQL end point."]}
{"SampleId": 6247260, "Origin": "Returns an AccountListItem from the specified position in the mValues list", "Reference": "Returns an AccountListItem from the specified position in the values list", "LLMCandidates": ["Returns an AccountListItem from the specified position in the values list.", "Returns an AccountListItem from the specified position in the values list.", "Returns an AccountListItem from the specified position in the values list.", "Returns an AccountListItem from the specified position in the values list.", "Returns an AccountListItem from the specified position in the values list."]}
{"SampleId": 340561, "Origin": "PlaybackParams2 to the given input.", "Reference": "PlaybackParams to the given input.", "LLMCandidates": ["Sets the PlaybackParams input to the given PlaybackParams2 object.", "Updates the input parameter name from `PlaybackParams2` to `PlaybackParams` in the Javadoc comment.", "Updates the `onExecute` method to handle `PlaybackParams` input and adds the future to the pending command list.", "Sets the playback parameters specified in the input `PlaybackParams` object.", "Sets the playback parameters specified in the input `PlaybackParams` object."]}
{"SampleId": 5176607, "Origin": "Setter for {@link #allowCredentials}", "Reference": "Setter for {@link #allowedCredentials}", "LLMCandidates": ["Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials}.", "Setter for {@link #allowedCredentials}.", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials"]}
{"SampleId": 5299668, "Origin": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDbFactory factory}.", "Reference": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "LLMCandidates": ["Obtain the `MongoDatabase` with given name from the given `MongoDatabaseFactory`.", "Obtain the {@link MongoDatabase} with given name from the given {@link MongoDatabaseFactory} instance.", "Obtain the `MongoDatabase` with the given name from the given `MongoDatabaseFactory`.", "Obtain the `MongoDatabase` with the given name from the given `MongoDatabaseFactory`.", "Obtain the `MongoDatabase` with the given name from the given `MongoDatabaseFactory`."]}
{"SampleId": 4396605, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security purposes.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive data redacted for security."]}
{"SampleId": 4620051, "Origin": "Copies this expression's return type and size to the given expression.", "Reference": "Copies this expression's type to the specified expression.", "LLMCandidates": ["Copies the expression's return type assignment to the given expression.", "Copies the expression's type assignment to the given expression.", "Copies this expression's expression type and assigns it to the given expression.", "Copies the expression's type and assigns it to the given expression's exprType field.", "Copies the expression's return type to the given expression's exprType field."]}
{"SampleId": 1578100, "Origin": "The returned {@link MetadataEntity} is of the same type.", "Reference": "The returned {@link MetadataEntity.Builder} is of the same type.", "LLMCandidates": ["The returned type is now a `Builder` instead of `MetadataEntity`.", "The returned {@link Builder} is of the same type.", "The returned {@link Builder} is of the same type.", "The returned type is now a `Builder` instead of `MetadataEntity`.", "The returned {@link Builder} is of the same type."]}
{"SampleId": 3629288, "Origin": "Returns an immutable map containing a single mapping.", "Reference": "Returns an unmodifiable map containing a single mapping.", "LLMCandidates": ["Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping."]}
{"SampleId": 4474528, "Origin": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubDirectoryWithResponse(String, Duration,", "Reference": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,", "LLMCandidates": ["Generates a code sample for using `ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)` to delete a subdirectory with response tracking.", "Same as original comment.", "Same as original comment.", "Generates a code sample for using `ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)` to delete a subdirectory asynchronously.", "Method body remains the same."]}
{"SampleId": 1611738, "Origin": "The expected indentation should be the same as the indentation of the node\nwhich is the parent of the target modifier node.", "Reference": "The expected indentation should be the same as the indentation of the target node.", "LLMCandidates": ["The expected indentation should be the same as the indentation of the node itself.", "The expected indentation should be the same as the indentation of the node itself.", "The expected indentation should be the same as the indentation of the node itself.", "The expected indentation should be the same as the indentation of the node itself.", "The expected indentation should be the same as the indentation of the node itself."]}
{"SampleId": 1356230, "Origin": "Check if the last item in key signature has some trailing space (before any head).", "Reference": "Check if last item in key signature has some trailing space (before any head).", "LLMCandidates": ["Checks if the last item in key signature has some trailing space (before any head) and defines a rectangle based on its bounds and pitch.", "Checks if the last item in key signature has some trailing space (before any head) and adjusts the rectangle accordingly.", "Checks if the last item in key signature has some trailing space (before any head symbol).", "Checks if the last item in key signature has some trailing space (before any head symbol).", "Checks if the last item in key signature has some trailing space (before any head), and uses specific interline value for staff."]}
{"SampleId": 1405621, "Origin": "Marks the action as analyzing.", "Reference": "Marks the action as scanning.", "LLMCandidates": ["Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning."]}
{"SampleId": 4396654, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data redacted for security.", "Returns a string representation of this object, with sensitive output data redacted for security.", "Returns a string representation of this object, omitting sensitive data for output.", "Returns a string representation of this object, useful for testing and debugging, with sensitive output data redacted.", "Returns a string representation of this object; useful for testing and debugging, omitting sensitive data."]}
{"SampleId": 2527768, "Origin": "Get or create a storage block by the name.", "Reference": "Gets or creates a buffer block by the name.", "LLMCandidates": ["Get or create a shader buffer block by the name.", "Retrieves or creates a buffer block by the given name.", "Get or create a shader buffer block by the name.", "Get or create a shader buffer block by the name.", "Retrieves or creates a buffer block by the given name."]}
{"SampleId": 1760055, "Origin": "Calculates Minimum - Nulls are handled as zeros.", "Reference": "Calculates Minimum - Nulls are ignored.", "LLMCandidates": ["Calculates Minimum - Null values are handled as zeros, and the comparison is case-sensitive.", "Calculates Minimum - Null values are handled as zeros.", "Calculates Minimum - Null values are handled as zeros.", "Calculates Minimum - Null values are handled as zeros. Note: Updated null check condition in the loop.", "Calculates Minimum - Null values are handled as zeros. Updated handling of non-null values in the loop condition."]}
{"SampleId": 6043566, "Origin": "and repositoryId = ?.", "Reference": "and parentFolderId = ?.", "LLMCandidates": ["Retrieves SyncDLObjects by repositoryId and parentFolderId.", "Retrieves DLObjects from the repository by repository ID and parent folder ID.", "Retrieved by repositoryId and parentFolderId.", "Retrieved by repositoryId and parentFolderId.", "Retrieves SyncDLObjects by repositoryId and parentFolderId."]}
{"SampleId": 2217819, "Origin": "Test of var method, of class Exponential.", "Reference": "Test of variance method, of class Exponential.", "LLMCandidates": ["Test of variance method, of class Exponential.", "Test of variance method, of class Exponential.", "Test of variance method, of class Exponential.", "Test of variance method, of class Exponential.", "Test of variance method, of class ExponentialDistribution."]}
{"SampleId": 4003565, "Origin": "If you want to extend a value (e.g.", "Reference": "If you like to extend an option (e.g.", "LLMCandidates": ["Creates a KarafDistributionConfigurationFilePutOption instance to modify the specified configuration file value.", "Creates a KarafDistributionConfigurationFilePutOption instance to edit the specified configuration file value.", "Creates a `KarafDistributionConfigurationFilePutOption` instance to modify the specified configuration file value.", "Creates a `KarafDistributionConfigurationFilePutOption` instance to edit a configuration file value.", "Creates a KarafDistributionConfigurationFilePutOption object with the given configurationPointer and value."]}
{"SampleId": 1841602, "Origin": "Returns the ssh configuration entry which includes host and identity file location", "Reference": "Returns the ssh configuration entry which includes host, identity file location and Host Key\nchecking policy", "LLMCandidates": ["Returns the ssh configuration entry which includes host, identity file location, and additional configuration option 'StrictHostKeyChecking = no'.", "Returns the ssh configuration entry which includes host, identity file location, and additional configuration option 'StrictHostKeyChecking = no'.", "Returns the ssh configuration entry which includes host, identity file location, and additional configuration option to disable strict host key checking.", "Returns the ssh configuration entry which includes host, identity file location, and enables StrictHostKeyChecking bypass.", "Returns the ssh configuration entry which includes host, identity file location, and disables strict host key checking."]}
{"SampleId": 2912364, "Origin": "Extracts the underlying quotes from the {@link CurveInputs} instances and returns them in a map.", "Reference": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "LLMCandidates": ["Extracts the underlying quotes from the `RatesCurveInputs` instances and returns them in a map.", "Extracts the underlying quotes from the `RatesCurveInputs` instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the `RatesCurveInputs` instances and returns them in a map."]}
{"SampleId": 1327233, "Origin": "Sets the minimum session timeout.", "Reference": "Sets the session timeout.", "LLMCandidates": ["Sets the session timeout.", "Sets the session timeout to the specified value.", "Sets the session timeout to the specified value.", "Sets the session timeout.", "Sets the session timeout."]}
{"SampleId": 3512228, "Origin": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Reference": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link Cat}.", "LLMCandidates": ["Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Gets the `Value.Mutable` for the `CatType` of this `CatData`.", "Gets the `Value.Mutable` for the `CatType` of this `CatData`.", "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Gets the `Value.Mutable` for the `CatType` of this `CatData`."]}
{"SampleId": 4986032, "Origin": "Copy the contents of a Bucket to a RandomAccessThing at a specific offset.", "Reference": "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "LLMCandidates": ["Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset, truncating the length if specified.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset, truncating the data to the specified length.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset, truncating the length as specified by the truncateLength parameter.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset, truncating the transfer to the specified length.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset, truncating the transfer to the specified length."]}
{"SampleId": 5177780, "Origin": "This method is used\nonly to initialize the acceptReplacers field.", "Reference": "This method is used\nonly to initialize the headerReplacers field.", "LLMCandidates": ["This method is used to load the accept.properties file and extract the values for the 'acceptOld' and 'acceptNew' keys.", "This method is used to load the accept.properties file and extract the 'acceptOld' and 'acceptNew' values.", "This method is used to load the accept.properties file and extract the 'acceptOld' and 'acceptNew' values.", "This method is used to load the accept.properties file and extract acceptOld and acceptNew values from it.", "This method is used to load the accept.properties file and extract the values for the \"acceptOld\" and \"acceptNew\" keys."]}
{"SampleId": 4388460, "Origin": "To add or remove access for an AWS account to copy or restore a\nmanual DB snapshot, or to make the manual DB snapshot public or\nprivate, use the ModifyDBSnapshotAttribute API.", "Reference": "To add or remove access for an AWS account to copy or restore a manual DB\nsnapshot, or to make the manual DB snapshot public or private, use the", "LLMCandidates": ["To modify access permissions or visibility of a manual DB snapshot, use the ModifyDBSnapshotAttribute API.", "To modify the access, visibility, or copying permissions of a manual DB snapshot, use the ModifyDBSnapshotAttribute API.", "To modify access permissions, copy or restore status, or visibility of a manual DB snapshot, use the ModifyDBSnapshotAttribute API.", "To modify the access permissions or visibility of a manual DB snapshot, use the ModifyDBSnapshotAttribute API.", "To modify the access, public/private status, or copying/restoring permissions of a manual DB snapshot, use the ModifyDBSnapshotAttribute API."]}
{"SampleId": 6018371, "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum value for each pixel across all bands in the given Planar image.", "Computes the minimum value for each pixel across all bands in the provided Planar image.", "Computes the minimum value for each pixel across all bands in the given Planar image.", "Computes the minimum value for each pixel across all bands in the given Planar image.", "Computes the minimum value for each pixel across all bands in the provided Planar image."]}
{"SampleId": 3992810, "Origin": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "Reference": "{@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "LLMCandidates": ["The `@Deprecated` annotation has been added to the method. The time difference can still be negative, but its absolute value must not exceed the current window's \"before\" value.", "The `@Deprecated` annotation has been added to the method signature, indicating that this method is no longer recommended for new code. The reasoning for deprecation is not mentioned in the code, so the original comment remains relevant.", "The `timeDifferenceMs` can be negative but its absolute value must not be larger than the current window's \"before\" value (which would result in a negative window size).", "The `timeDifferenceMs` parameter can be negative but its absolute value must not be larger than the current window's \"before\" value (which would result in a negative window size).", "The `timeDifferenceMs` parameter can be negative but its absolute value must not be larger than the current window \"before\" value (which would result in a negative window size)."]}
{"SampleId": 4788914, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If the objects are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown."]}
{"SampleId": 1310037, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously gets an API.", "Asynchronously retrieves an API.", "Asynchronously retrieves an API.", "Asynchronously retrieves an API.", "Asynchronously gets an API."]}
{"SampleId": 4850245, "Origin": "Tests this matcher against the given {@link DiscordRequest}.", "Reference": "Tests this matcher against the given {@link DiscordWebRequest}.", "LLMCandidates": ["Tests this matcher against the given `DiscordWebRequest`.", "Tests this matcher against the given `DiscordWebRequest`.", "Tests this matcher against the given `DiscordWebRequest`.", "Tests this matcher against the given `DiscordWebRequest`.", "Tests this matcher against the given `DiscordWebRequest`."]}
{"SampleId": 5218913, "Origin": "Add optimized insert value.", "Reference": "Add insert value.", "LLMCandidates": ["Adds an insert value optimized for performance.", "Adds an InsertValue object to the insertValues list.", "Adds a non-optimized insert value to the insertValues list.", "Adds a non-optimized insert value to the insertValues list.", "Adds a new InsertValue object to the insertValues list."]}
{"SampleId": 5177561, "Origin": "Creates a new internal Jetty connector.", "Reference": "Creates a new Jetty connection factory.", "LLMCandidates": ["Creates a new Jetty connection factory based on the provided configuration.", "Creates a new Jetty connection factory based on the provided configuration.", "Creates a new Jetty connection factory based on the given configuration.", "Creates a new Jetty connection factory based on the given configuration.", "Creates a new Jetty connection factory based on the given configuration."]}
{"SampleId": 3588530, "Origin": "See\n{@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set)} for details.", "Reference": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "LLMCandidates": ["See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details."]}
{"SampleId": 1725851, "Origin": "This test asserts that only one\nstate is added to the stateflowgraph.", "Reference": "This test asserts that only one state is added to the state-flow graph.", "LLMCandidates": ["The test asserts that only one state is added to the stateflowgraph, now with the addition of an EmbeddedBrowser object as a parameter to the StateVertexFactory.", "This test asserts that only one state is added to the stateflowgraph, and that the state vertex factory is used to compare states based on their identity.", "This test asserts that only one state is added to the stateflow graph, and it now also sets the browser configuration based on the detected browser type.", "This test asserts that only one state is added to the stateflow graph, now with support for embedded browser configuration.", "This test asserts that only one state is added to the stateflowgraph, now including an EmbeddedBrowser argument in the StateVertexFactory."]}
{"SampleId": 5595783, "Origin": "Update the metadata version for the given key (cluster or store).", "Reference": "Update the metadata versions for the given keys (cluster or store).", "LLMCandidates": ["Updates the metadata version for the given node IDs and key (cluster or store).", "Updates the metadata version for the given node IDs and key (cluster or store).", "Updates the metadata version for the given node IDs and key (cluster or store).", "Updates the metadata version for the given node IDs and key (cluster or store).", "Updates the metadata version for the given node IDs and key (cluster or store)."]}
{"SampleId": 3344327, "Origin": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Observable;", "Reference": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Single;", "LLMCandidates": ["Changed the method name from `promiseSingle` to `promise` and the argument from `ObservableOnSubscribe` to `SingleOnSubscribe`.", "Changed the method name to `promise` and the argument type to `SingleOnSubscribe<T>`. The underlying logic remains the same.", "Changed the method name to `promise` and the argument type to `SingleOnSubscribe<T>`.", "Changed the method name from `promiseSingle` to `promise` and the argument type from `ObservableOnSubscribe` to `SingleOnSubscribe`.", "Changed the method name to 'promise' and the argument type to 'SingleOnSubscribe<T>'."]}
{"SampleId": 3080416, "Origin": "We include all flags that enable CPU instructions as we want best possible performance for\nthe code.", "Reference": "We include all flags that enable AMD64 CPU instructions as we want best possible performance\nfor the code.", "LLMCandidates": ["The method name has been changed to `allAMD64Flags` to better reflect the purpose of the method.", "Returns a set of all flags that enable CPU instructions, optimizing performance for the code.", "Provides a collection of all AMD64 instructions' flags to enable optimal performance.", "We include all flags that enable CPU instructions to optimize performance.", "We include all flags that enable CPU instructions to optimize performance."]}
{"SampleId": 2568439, "Origin": "Sets the value of the 'ValueType' field.", "Reference": "Sets the value of the 'valueType' field.", "LLMCandidates": ["Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field."]}
{"SampleId": 3921113, "Origin": "The LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.", "Reference": "The ORGANIZATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "LLMCandidates": ["The ORGANIZATION on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.", "The organization name on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "The LOCATION of Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "The location of Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "The location on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank."]}
{"SampleId": 5440225, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index.", "Returns the type_argument_index of the path element of the given index."]}
{"SampleId": 3805026, "Origin": "Registers a new content observer for the media library", "Reference": "Registers a new library observer for the media library", "LLMCandidates": ["Registers a new library observer for the media library.", "Registers a new library observer for the media library.", "Registers a new library observer for the media library.", "Registers a new library observer for the media library.", "Registers a new library observer for the media library."]}
{"SampleId": 2615521, "Origin": "Returns the height of the specified row, or 0 if the table layout has not been validated.", "Reference": "Returns the height of the specified row.", "LLMCandidates": ["Returns the height of the specified row.", "Returns the height of the specified row.", "Returns the height of the specified row directly, without checking the table layout validation status.", "Returns the height of the specified row directly, without checking the table layout validation status.", "Returns the height of the specified row."]}
{"SampleId": 2774802, "Origin": "Specifies the component's horizontal width, measured in pixels.", "Reference": "Specifies the horizontal width of the %type%, measured in pixels.", "LLMCandidates": ["Specifies the horizontal width of the %type%, measured in pixels.", "Specifies the horizontal width of the %type%, measured in pixels.", "Specifies the horizontal width of the %type%, measured in pixels.", "Specifies the horizontal width of the %type%, measured in pixels.", "Specifies the horizontal width of the %type%, measured in pixels."]}
{"SampleId": 3399007, "Origin": "Test of parse method, of class FinishedMessageParser.", "Reference": "Test of parse method, of class FinishedParser.", "LLMCandidates": ["Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser."]}
{"SampleId": 4473556, "Origin": "Create Subject Alternative names with emails.", "Reference": "Set the emails.", "LLMCandidates": ["Creates a SubjectAlternativeNames object from a list of emails.", "Creates a SubjectAlternativeNames object from a list of emails.", "Sets the emails list for the SubjectAlternativeNames object.", "Sets the emails list for the SubjectAlternativeNames object.", "Sets the emails list for the current SubjectAlternativeNames object."]}
{"SampleId": 4615496, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["If nodes returned are to be further used, they must be finalized via `ANode#finish()`.", "The iteration over children is now performed using the new `childIter()` method.", "The iteration over children is now performed using the new `childIter()` method.", "If nodes returned are to be further utilized, they must be finalized via `ANode#finish()`.", "If nodes returned are to be further utilized, they must be finalized via `ANode#finish()`."]}
{"SampleId": 2081521, "Origin": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but failes if it doesn't.", "Reference": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "LLMCandidates": ["We verify that updating the field succeeds when the user has the correct role and fails otherwise.", "We verify that attempting to update the field succeeds if the user has the correct role, and fails otherwise.", "We verify that updating the field succeeds when the user has the correct role, and fails otherwise.", "We verify that updating the field succeeds when the user has the correct role, and fails otherwise.", "We verify that attempting to update the field succeeds when the user has the correct role, and fails otherwise."]}
{"SampleId": 6192516, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance and and {@link EventContext}.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "LLMCandidates": ["Creates a new `Builder` instance based on an existing `CoreEvent` instance and an `EventContext`.", "Creates a new `Builder` based on an existing `CoreEvent` instance and an `EventContext`.", "Creates a new `Builder` instance based on an existing `CoreEvent` instance and an `EventContext`.", "Creates a new `Builder` based on an existing `CoreEvent` instance and an `EventContext`.", "Creates a new `Builder` instance based on an existing `CoreEvent` instance and an `EventContext`."]}
{"SampleId": 2217848, "Origin": "Test of npara method, of class MultivariateGaussian.", "Reference": "Test of length method, of class MultivariateGaussian.", "LLMCandidates": ["Test of length method, which returns the number of parameters of the MultivariateGaussianDistribution object.", "Test of length method, which returns the number of parameters in the MultivariateGaussianDistribution instance.", "Test of length method, which returns the number of parameters in the MultivariateGaussianDistribution object.", "Test of length method, which returns the number of parameters of the MultivariateGaussianDistribution object.", "Test of length method, which calculates the number of parameters of a MultivariateGaussianDistribution instance."]}
{"SampleId": 3552099, "Origin": "Create a {@link Jwt} Validator that contains all standard validators as well as\nany supplied in the parameter list.", "Reference": "Create a {@link Jwt} Validator that contains all standard validators when an issuer is known.", "LLMCandidates": ["Creates a default JWT Validator with a specified issuer, including the standard TimestampValidator and a custom JwtIssuerValidator.", "Creates a default JWT Validator with the specified issuer in addition to the standard timestamp validator.", "Creates a default JWT Validator with the specified issuer in addition to the standard timestamp validator.", "Creates a default JWT validator with the specified issuer, including the timestamp validator and a custom JWT issuer validator.", "Creates a default JWT validator with a pre-configured timestamp validator and an issuer-checking validator based on the provided issuer string."]}
{"SampleId": 373027, "Origin": "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing\nsupported environment variables.", "Reference": "Gets a property of type {@link PropertyType#PATH}.", "LLMCandidates": ["Retrieves a property of type `PropertyType#PATH`, interpreting the value and replacing supported environment variables, except for those prefixed with '$ACCUMULO_'. In such cases, an `IllegalArgumentException` is thrown.", "Retrieves a property of type `PropertyType#PATH`, interpreting the value and replacing supported environment variables, with an additional check to avoid environment variable interpolation.", "Gets a property of type `PropertyType#PATH`, interpreting the value properly, replacing\nsupported environment variables except for those prefixed with '$ACCUMULO_'. In such cases,\nenvironment variable interpolation is not supported and a runtime exception is thrown.", "Gets a property of type `PropertyType#PATH`, interpreting the value properly, but skipping environment variable interpolation due to potential security risks. Consider using direct configuration values or `${env:VAR_NAME}` syntax in your configuration file instead.", "Interprets the value of the given property, replacing supported environment variables except those prefixed with '$ACCUMULO_'. In such cases, an exception is thrown."]}
{"SampleId": 2732049, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not the specified `@NotNull` `SvgIcon` and `@NotNull` `SVGElement` meet the conditions of this `SvgSelector`.", "Returns whether or not the specified `@NotNull` `SVGElement` fits the `@NotNull` `SvgSelector` conditions.", "Returns whether or not the specified `@NotNull` `SvgIcon` and `@NotNull` `SVGElement` satisfy the conditions of this `SvgSelector`.", "Indicates whether the specified `SvgIcon` is applicable to the given `SVGElement` based on the selector and attribute checks.", "Returns whether or not the specified `@NotNull` `SvgIcon` and `@NotNull` `SVGElement` satisfy the conditions of this `SvgSelector`."]}
{"SampleId": 5062115, "Origin": "Parent will have\nmodified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}.", "Reference": "Parent will have\nmodification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "LLMCandidates": ["Parent will have modified time set to `LayerConfiguration#DEFAULT_MODIFICATION_TIME`.", "Parent will have modified time set to  {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Parent will have modified time set to `LayerConfiguration#DEFAULT_MODIFICATION_TIME`.", "Parent will have modified time set to \n{@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Parent will have modified time set to `LayerConfiguration#DEFAULT_MODIFICATION_TIME`."]}
{"SampleId": 3406829, "Origin": "Returns true if the method m is visible from code in the class from.", "Reference": "Returns true if the classmember m is visible from code in the class from.", "LLMCandidates": ["Returns true if the method m is visible from code in the class from, based on the updated method signature with ClassMember as the parameter type.", "Returns true if the method m is visible from code in the class from, considering the updated method signature with ClassMember as the parameter type.", "Returns true if the method m is visible from code in the class from, considering both class and member visibility.", "Returns true if the method m is visible from code in the class from, based on the updated method signature which now accepts a ClassMember instead of a SootMethod.", "Returns true if the method m is visible from code in the class from, considering the new parameter type ClassMember."]}
{"SampleId": 2706894, "Origin": "Set Balancing.", "Reference": "Set Saldierung.", "LLMCandidates": ["Set Balancing.", "Set Balancing.", "Sets the Balancing value.", "Sets the Balancing value.", "Sets the Balancing value."]}
{"SampleId": 471489, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:  type.", "LLMCandidates": ["Disables stream caching by setting the 'disableStreamCache' property to the given boolean value.", "Disables caching of stream data.", "Disables caching of stream data.", "Sets the option to disable stream caching.", "Sets the option to disable stream caching."]}
{"SampleId": 2915665, "Origin": "Returns a curve node for a CDS quoted in points upfront.", "Reference": "Returns a curve node with points upfront convention.", "LLMCandidates": ["Returns a curve node for a CDS quoted in points upfront, using the specified fixed rate.", "Creates a curve node for a CDS quoted in points upfront, using the specified template, observable ID, legal entity ID, and fixed rate.", "Creates a curve node for a CDS priced using the points upfront convention.", "Creates a curve node for a CDS with points upfront pricing.", "Creates a curve node for a CDS quoted in points upfront, specifically using the 'POINTS_UPFRONT' quote convention."]}
{"SampleId": 733850, "Origin": "Recursively find all operators under root, that are of class clazz, and\nput them in result.", "Reference": "Recursively find all operators under root, that are of class clazz or are the sub-class of clazz, and\nput them in result.", "LLMCandidates": ["Recursively find all operators under root that are instances of class clazz, and add them to result.", "Recursively find all operators under root that are instances of class clazz and put them in result.", "Recursively find all operators under root that are instances of class clazz, and add them to result.", "Recursively find all operators under root that are assignable to class `clazz`, and add them to `result`.", "Recursively find all operators under root that are instances of class clazz and put them in result."]}
{"SampleId": 4245998, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Returns null if text is empty, otherwise converts to Time object.", "Returns null if text is empty, otherwise converts to Time object.", "Returns null if the text is empty, otherwise converts the text to a Time object.", "Returns null if text is empty, otherwise converts to Time object.", "Returns null if text is empty, otherwise converts to Time object."]}
{"SampleId": 230839, "Origin": "Sets the transformed layout.", "Reference": "Transform the partition.", "LLMCandidates": ["Sets the transformed layout using a new Transformation object.", "Sets the transformed layout by applying a transformation based on the given definition.", "Sets the transformed layout via the `Transformation` object.", "Sets the transformed layout via the `Transformation` object.", "Sets the transformed layout via the `Transformation` object."]}
{"SampleId": 6174108, "Origin": "Creates an entity and populates its state based on the dbObject given.", "Reference": "Creates an entity and populates its state based on the document given.", "LLMCandidates": ["Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given."]}
{"SampleId": 5629969, "Origin": "Sets the entity.", "Reference": "Set the entity.", "LLMCandidates": ["Sets the entity value.", "Sets the entity value.", "Sets the entity value.", "Sets the entity value.", "Sets the entity value."]}
{"SampleId": 1150835, "Origin": "An empty NumericDocValues which returns zero for every document", "Reference": "An empty NumericDocValues which returns no documents", "LLMCandidates": ["Creates an empty NumericDocValues instance that returns zero for all documents.", "Returns an empty NumericDocValues that returns zero for all documents and has an exhausted flag to track document consumption.", "Returns an empty NumericDocValues that immediately exhausts, indicating the absence of any documents.", "Creates an empty NumericDocValues that immediately exhausts, indicating the absence of any documents.", "Returns an empty NumericDocValues which immediately exhausts, indicating the absence of any documents."]}
{"SampleId": 3427796, "Origin": "Setter for the URL of the content review icon associated with this item", "Reference": "Setter for the css class of the content review icon associated with this item", "LLMCandidates": ["Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item."]}
{"SampleId": 3196536, "Origin": "Returns\n {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "Reference": "Returns\n if {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "LLMCandidates": ["Returns a `ByteString` representing the MD5 checksum of the underlying data.", "Returns a `ByteString` representing the MD5 checksum of the underlying data.", "Returns the MD5 checksum of the content, represented as a `ByteString`.", "Returns a ByteString representing the MD5 checksum of the cached content. Note that the use of checksum is controlled by the `{@link RolapConnectionProperties#UseContentChecksum}` property.", "Returns a ByteString representation of the checksum, as set by the `md5Bytes` field."]}
{"SampleId": 1576617, "Origin": "Returns an {@link InputSupplier} for a given entry.", "Reference": "Gets the {@link Manifest} inside the given jar.", "LLMCandidates": ["Returns an `InputSupplier` for a given entry from the specified location, which can be either a local file or a JAR archive.", "Returns an `InputSupplier` for a given entry from a JAR file.", "Returns an `InputSupplier` for a given entry in a JAR file, handling local files and JAR archives.", "Returns an `InputSupplier` for the given entry from the JAR file at the specified location.", "Returns an `InputSupplier` for a given entry in a JAR file, optimizing for local locations."]}
{"SampleId": 2732050, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not the specified `SVGElement` matches the selector conditions of this `SvgSelector`.", "Checks if the specified SVG element matches the selector conditions of this SvgSelector.", "Returns whether or not the specified `SVGElement` matches this `SvgSelector`'s selector conditions, considering attributes `ID` and `CLASS`.", "Returns whether or not the specified `SVGElement` matches the selector conditions defined by this `SvgSelector`.", "Returns whether or not the specified `SVGElement` matches the current `SvgSelector` selector conditions."]}
{"SampleId": 2134051, "Origin": "bounded predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["Bounded predict\n\n* Predicts the rating given a sparse appender vector for a specific user and item.", "Predicts the rating for a specific user-item pair given a sparse appender vector, and optionally bounds the result within a specified range.", "Bounded predict\n\n* Predicts the rating given a sparse appender vector for a specific user-item pair.", "Predicts the rating for a specific user-item pair given a sparse appender vector, with bounds applied.", "Predicts the rating for a given user-item pair, given a sparse vector representing the user's preferences."]}
{"SampleId": 5440405, "Origin": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method.", "Reference": "One way to ensure this is to always call {@link #declareLabel} before\ncalling this method.", "LLMCandidates": ["To append the label's name retrieved from the labelNames map to the stringBuilder.", "Append the label's name retrieved from the labelNames map to the stringBuilder.", "To append the label's name retrieved from the labelNames map to the stringBuilder.", "To append the label's name retrieved from the labelNames map to the stringBuilder.", "Ensure that the label has been declared using the `{@link #declareLabel declared}` method before calling this method."]}
{"SampleId": 4003873, "Origin": "Felix constructor documentation for more information on\nframework configuration options.", "Reference": "Refer to the  Felix\n constructor documentation for more information on framework\nconfiguration options.", "LLMCandidates": ["See Felix constructor documentation for more information on framework configuration options.", "See Felix constructor documentation for more information on framework configuration options.", "Framework configuration options are documented in the Felix constructor comments.", "Documentation updated to reflect the changes in the code, including the introduction of a LifecycleManager object for framework management.", "See Felix constructor documentation for more information on framework configuration options."]}
{"SampleId": 2775452, "Origin": "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.", "Reference": "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "LLMCandidates": ["The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom."]}
{"SampleId": 3652423, "Origin": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code filePathParam}.", "Reference": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code fileName}.", "LLMCandidates": ["Verifies that the given `emailContent` is the same as the content given in the file at `fileName`.", "Verifies that the given `emailContent` is the same as the content given in the file at `fileName`.", "Verifies that the given `emailContent` is the same as the content given in the file at `fileName`.", "Verifies that the given `emailContent` is the same as the content given in the file at `fileName`.", "Verifies that the given `emailContent` is the same as the content given in the file at `fileName`. The file path is constructed using the `TestProperties.TEST_EMAILS_FOLDER` property and the provided `fileName`."]}
{"SampleId": 2732074, "Origin": "Returns a better disabled icon than BasicLookAndFeel offers.", "Reference": "Returns better disabled icon than {@link BasicLookAndFeel} offers.", "LLMCandidates": ["Returns a disabled icon based on the provided icon, or the original icon if no width or height is defined.", "Returns a disabled icon based on the input icon.", "Returns a disabled icon based on the provided icon.", "Returns a disabled icon based on the provided icon.", "Returns a disabled icon based on the input icon, if available."]}
{"SampleId": 4048110, "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "LLMCandidates": ["This will set the margin between the annotations' outer rectangle defined by\n/Rect and the border.", "Sets the margin between the annotations 'outer' rectangle defined by /Rect and the border, using the specified differences in left, top, right, and bottom.", "This will set the margin between the annotations' outer rectangle defined by /Rect and the border.", "Sets the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border, using the specified differences in left, top, right, and bottom margins.", "Sets the margin between the annotations \"outer\" rectangle defined by /Rect and the border."]}
{"SampleId": 1703350, "Origin": "Compute the total number of transferred addresses.", "Reference": "Get the total number of addresses in range.", "LLMCandidates": ["Calculates the total number of addresses transferred.", "Calculates the total number of addresses transferred.", "Calculates the total number of addresses transferred.", "Calculates the total number of addresses transferred.", "Calculates the total number of addresses transferred."]}
{"SampleId": 664505, "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.", "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}", "LLMCandidates": ["Convenience method for calling `newGenericExecuteException(String, TemplateFunctionModel, Throwable)`.", "Convenience method for calling `#newGenericExecuteException(String, TemplateFunctionModel, Throwable)`.", "Convenience method for calling `#newGenericExecuteException(String, TemplateFunctionModel, Throwable)`.", "Convenience method for calling `#newGenericExecuteException(String, TemplateFunctionModel, Throwable)`.", "Convenience method for calling `#newGenericExecuteException(String, TemplateFunctionModel, Throwable)`."]}
{"SampleId": 3035868, "Origin": "Backs up all buckets for the device to the given node.", "Reference": "Backs up the given flow bucket.", "LLMCandidates": ["Backs up a specific bucket to each of the backup nodes, ensuring synchronization before replication to backups.", "Backs up a single FlowBucket to the given node, if the bucket's term matches the current term and the local node is the master.", "Backs up the given bucket to each of the configured backup nodes, ensuring synchronization prior to replication.", "Backs up the specified bucket to each of the backup nodes asynchronously, ensuring synchronization prior to replication.", "Backs up the given bucket to each of the backup nodes asynchronously, ensuring that the bucket has been synchronized prior to a new master replicating changes to backups."]}
{"SampleId": 2848848, "Origin": "Make JobDirectoryManifestService beans are configured as expected.", "Reference": "Make JobDirectoryManifestService beans is configured as expected.", "LLMCandidates": ["Verify that a single JobDirectoryManifestService bean is configured.", "Verify that a single JobDirectoryManifestService bean is configured.", "Verify that a single JobDirectoryManifestService bean is configured.", "Verify that a single instance of JobDirectoryManifestService is configured in the context.", "Verify that a single instance of JobDirectoryManifestService is configured in the context."]}
{"SampleId": 2577115, "Origin": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "Reference": "Runs the given {@code runnable} at most {@code attemptsCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "LLMCandidates": ["Runs the given `Supplier` at most `attemptsCount` times until it passes, tracking the iteration number with `iteration` and leaving `intervalMillis` milliseconds between the invocations.", "Runs the given `Supplier` at most `attemptsCount` times until it passes, keeping track of the current iteration using `iteration` variable. The thread pauses for `intervalMillis` milliseconds after each attempt.", "Runs the given supplier at most attemptsCount times until it passes, keeping track of the current iteration using iteration variable. The method pauses for intervalMillis milliseconds between consecutive attempts.", "Runs the given `Supplier` at most `attemptsCount` times until it passes, keeping track of the current iteration with the `iteration` variable. The sleep interval between invocations is `intervalMillis` milliseconds.", "Runs the given `Supplier` at most `attemptsCount` times until it passes, tracking the number of attempts with `iteration` and leaving `intervalMillis` milliseconds between the invocations."]}
{"SampleId": 4618280, "Origin": "Removes a query focus from the stack.", "Reference": "Removes the current query focus from the stack.", "LLMCandidates": ["Removes the last query focus from the list.", "Removes the top query focus from the stack.", "Removes the top query focus from the stack.", "Removes the top query focus from the stack.", "Removes the top query focus from the stack."]}
{"SampleId": 5458245, "Origin": "It\nsatisfies the general contract of the {@link Object#hashCode", "Reference": "It satisfies the general\ncontract of the {@link Object#hashCode Object.hashCode} method.", "LLMCandidates": ["The hash code is now calculated by adding the compiled version's hash code if it is not null, to the combination of the name and mods fields.", "Hash code now includes compiledVersion field if not null.", "Overrides the default implementation to include the compiled version hash code if available, alongside name and mods hash codes.", "Hash code is now calculated by adding the compiled version's hash code if available, to the combination of name and mods hash codes.", "Consistent with the updated code, this method now checks the 'compiledVersion' field if it's not null and includes its hash code in the calculation."]}
{"SampleId": 1922860, "Origin": "NativeLinkable}.", "Reference": "NativeLinkableGroup}.", "LLMCandidates": ["Returns an iterable of NativeLinkableGroup dependencies retrieved from the build dependencies.", "Returns an iterable of NativeLinkableGroup dependencies retrieved from the build dependencies.", "Returns a list of NativeLinkableGroup dependencies retrieved from the build dependencies.", "Returns a list of NativeLinkableGroup dependencies retrieved from the build dependencies.", "Returns an iterable of NativeLinkableGroup dependencies retrieved from the build dependencies."]}
{"SampleId": 3830101, "Origin": "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Reference": "Returns a new Run with the status of the given completed step set accordingly.", "LLMCandidates": ["Returns a new Run with the new status, and with the status of the given, completed step updated accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly. The status of the step is retrieved using the `stepInfo` object.", "Returns a new Run with the new status, and with the status of the given, completed step updated accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly. The step information is retrieved using the provided step key, and if the step is not found or has already completed, an IllegalStateException is thrown.", "Returns a new Run with the new status, and with the status of the given, completed step updated accordingly."]}
{"SampleId": 2912437, "Origin": "Sets the groups used to find an issuer curve.", "Reference": "Sets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Sets the groups used to find an issuer curve based on LegalEntityId instead of StandardId.", "Sets the groups used to find an issuer curve based on LegalEntityId instead of StandardId.", "Sets the groups used to find an issuer curve based on LegalEntityId instead of StandardId.", "Sets the groups used to find an issuer curve based on LegalEntityId instead of StandardId.", "Sets the groups used to find an issuer curve based on LegalEntityId instead of StandardId."]}
{"SampleId": 4776185, "Origin": "Sets the amount of damage caused by the event", "Reference": "Sets the raw amount of damage caused by the event", "LLMCandidates": ["Sets the amount of damage caused by the event by calling the `setDamage` method with a modifier and the specified damage value.", "Sets the amount of damage caused by the event by applying a damage modifier.", "Sets the amount of damage caused by the event by applying a damage modifier.", "Sets the amount of damage caused by the event by applying a damage modifier.", "Sets the amount of damage caused by the event using a damage modifier."]}
{"SampleId": 2544522, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Applies the rotation transformation of the given `Quaterniondc` to this matrix and stores the result in `dest`.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and stores the result in `dest`.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and stores the result in `dest`.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and stores the result in `dest`. The changes in the code are related to the use of the `Quaterniondc` class instead of the `Quaterniond` class.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and stores the result in the provided destination matrix."]}
{"SampleId": 4470238, "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.", "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.", "LLMCandidates": ["Retrieves the encryption scope used to encrypt the blob's content on the server.", "Retrieves the encryption scope from the client.", "Retrieves the encryption scope from the client.", "Returns the encryption scope used to encrypt the blob's content on the server.", "Returns the encryption scope used to encrypt the blob's content on the server."]}
{"SampleId": 1131683, "Origin": "If version is null, \"latest\" or \"$LATEST\",\nthen it returns the highest version available in the system for the package.", "Reference": "If version is null, PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package.", "LLMCandidates": ["If version is null, \"latest\" or `PackageUtils.LATEST` or `PackagePluginHolder.LATEST`, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or `PackageUtils.LATEST` or `PackagePluginHolder.LATEST`, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or `PackageUtils.LATEST` or `PackagePluginHolder.LATEST`, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or `PackageUtils.LATEST` or `PackagePluginHolder.LATEST`, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or \"$LATEST\", then it returns the latest version available in the system for the package."]}
{"SampleId": 5175625, "Origin": "Configuration)", "Reference": "Dynamic Configuration)", "LLMCandidates": ["Updated the comment to reflect the change in the conditional statement checking for the presence of the `redirectUri` parameter.", "Updated the comment to reflect the change in the condition for optional `redirect_uri` parameter handling.", "Updated the comment to reflect the change in the conditional check for the `redirectUri` parameter. It now explicitly mentions the use of `StringUtils.isNullOrEmpty()` for null or empty checks.", "Updated the comment to reflect the change in the conditional check for the `redirectUri` parameter.", "Updated the comment to reflect the change in the conditional statement handling the `redirectUri` parameter."]}
{"SampleId": 803642, "Origin": "Gets the threshold parameter value.", "Reference": "Get the threshold parameter value.", "LLMCandidates": ["Retrieves the threshold value.", "Retrieves the threshold parameter value.", "Retrieves the threshold parameter value.", "Retrieves the threshold parameter value.", "Retrieves the threshold value."]}
{"SampleId": 237395, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen a file is not the correct size.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen a file is not the correct size.", "LLMCandidates": ["Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when a file is not the correct size.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when a file is not the correct size.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when a file is not the correct size.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when a file is not the correct size.", "Tests the `FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)` method when a file is not the correct size."]}
{"SampleId": 1612089, "Origin": "Returns list of nodes matching defined line and column number.", "Reference": "Returns list of nodes matching defined line number, column number and token type.", "LLMCandidates": ["Returns list of nodes matching defined line and column number and token type.", "Returns list of nodes matching defined line and column number and token type.", "Returns list of nodes matching defined line and column number, now considering token type.", "Returns list of nodes matching defined line and column number, now considering token type.", "Returns list of nodes matching defined line and column number and token type."]}
{"SampleId": 1992986, "Origin": "Deletes an external ID.", "Reference": "Inserts or updates an external ID.", "LLMCandidates": ["Upserts an external ID.", "Upserts an external ID.", "Upserts an external ID.", "Upserts an external ID.", "Upserts an external ID."]}
{"SampleId": 6330486, "Origin": "Calls the specified converter function with the current Maybe instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Calls the specified MaybeConverter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified MaybeConverter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified MaybeConverter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified `MaybeConverter` function with the current Maybe instance during assembly time and returns its result.", "Calls the specified MaybeConverter function with the current Maybe instance during assembly time and returns its result."]}
{"SampleId": 2337101, "Origin": "Get OpenID IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "Reference": "Get list of OpenID Connect IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "LLMCandidates": ["Retrieves OpenID IDP configurations from the API by leveraging the `getOpenIdIdpConfigsWithHttpInfo` method and extracting the resulting data using the `getData` method.", "Retrieves the list of OpenID IDP configurations from the API endpoint.", "Retrieves the list of configured OpenID Connect IDPs from the API.", "Retrieves the list of OpenID IDP configurations from the API.", "Retrieves the list of OpenID IDP configurations from the API."]}
{"SampleId": 431814, "Origin": "Reports the percentile value from the given list ordered in a non-descending order.", "Reference": "Reports the percentile value from the continuous distribution described by a given list of\nsamples.", "LLMCandidates": ["Calculates the percentile value from the given list based on a quantile scale to handle values like p99.9. If the provided percentile falls between two whole numbers, the index is rounded down to the lower whole number. The result is obtained using Quantiles.scale() method with the specified quantile scale.", "Calculates the percentile value from the given list using a quantile scaling approach to handle arbitrary percentiles.", "Calculates the percentile value from the given list, using a quantile-based approach for improved precision. The method handles empty lists and reports a value of 0.0 in such cases.", "Calculates the percentile value from the given list using a quantile scaling approach to handle arbitrary percentiles, such as p99.9.", "Calculates the percentile value from the given list using a quantile-based approach for improved precision and handling of non-integer percentiles."]}
{"SampleId": 3571800, "Origin": "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included.", "Reference": "Marks {@code protoMember}, throwing if it is explicitly excluded.", "LLMCandidates": ["Marks the provided `protoMember`, throwing if it is explicitly excluded or if its enclosing type is also specifically included. Additionally, records the enclosing type to a list.", "Marks `protoMember`, throwing if it is explicitly excluded, or if its enclosing type is also specifically included. Additionally, records the enclosing type in the `types` list.", "Marks `protoMember` if it is explicitly excluded, or if its enclosing type is also specifically included. Additionally, adds the type to a list of tracked types.", "Marks `protoMember`, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included. Additionally, records the enclosing type to a list.", "Marks `protoMember`, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included. Additionally, adds the enclosing type to a list of tracked types."]}
{"SampleId": 4003565, "Origin": "This option allows to configure each configuration file based on the  location.", "Reference": "This option allows to configure each configuration fille based on the karaf.home location.", "LLMCandidates": ["Allows configuring each configuration file based on its location.", "Allows configuring each configuration file based on its location.", "Allows configuring each configuration file based on its location.", "Allows configuring each configuration file based on its location.", "Allows configuring each configuration file based on its location."]}
{"SampleId": 6364977, "Origin": "Get all the jobs present in the wiki.", "Reference": "Get all the intervals/jobs present in the wiki.", "LLMCandidates": ["Retrieve all the watchlist job documents from the main wiki and store them in a list.", "Get all the watchlist job documents from the main wiki.", "Get all the watchlist job documents from the main wiki.", "Get all the job documents from the main wiki and add them to a list of intervals.", "Get all the watchlist job documents from the main wiki."]}
{"SampleId": 5322278, "Origin": "Return a single {@link ReflectiveMethodResolver}.", "Reference": "Return the specified {@link MethodResolver} delegates, if any.", "LLMCandidates": ["Returns the pre-populated list of `MethodResolver` instances.", "Returns the previously initialized list of `MethodResolver` objects.", "Returns the previously initialized list of `MethodResolver` objects.", "Returns the cached list of method resolvers.", "Returns the cached list of method resolvers."]}
{"SampleId": 5360748, "Origin": "This is useful for typical \nblocks in manual JavaMail code.", "Reference": "blocks in manual JavaMail code.", "LLMCandidates": ["Same as previous, but with updated logging level.", "Useful for typical blocks in manual JavaMail code.", "Provides a way to gracefully close the provided Service object.", "Provides a way to gracefully close the provided Service object.", "Similar to the previous version, this method closes the provided Service object if it's not null."]}
{"SampleId": 575173, "Origin": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}", "Reference": "Two objects are considered different if\n{@code value.equals(reference) == false}", "LLMCandidates": ["Two objects are considered different if\n{@code value.equals(reference)}.", "Two objects are considered different if\n{@code value.equals(reference)}.", "Two objects are considered different if\n{@code value.equals(reference)}.", "Two objects are considered different if\n{@code value.equals(reference)}.", "Two objects are considered different if their equality check returns `false`."]}
{"SampleId": 2732385, "Origin": "Expands all tree nodes in a single call.", "Reference": "Expands all tree nodes.", "LLMCandidates": ["Expands all tree nodes using a recursive helper method.", "Expands all tree nodes using a recursive implementation.", "Expands all tree nodes using a recursive implementation.", "Expands all tree nodes recursively using an iterative approach.", "Expands all tree nodes recursively using an iterative approach."]}
{"SampleId": 235252, "Origin": "Tests for defaults {@link CreateOptions}.", "Reference": "Tests for defaults {@link GetWorkerOptions}.", "LLMCandidates": ["Tests for defaults with block info set.", "Tests for defaults with block info set to a new `BlockInfo` object.", "Tests for defaults with block info set.", "Tests for defaults with block info set.", "Tests for defaults with block info set to a new `BlockInfo` object."]}
{"SampleId": 2337171, "Origin": "Modified by user info", "Reference": "Modified by user", "LLMCandidates": ["Modified by user", "Modified by user", "Modified by user", "Modified by user.", "Modified by user."]}
{"SampleId": 2913748, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 4476805, "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.", "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.", "LLMCandidates": ["The key curve specified by the {@link CreateEcKeyOptions#getCurve()} option can be optionally specified.", "The key curve specified by the {@link CreateEcKeyOptions#getCurve()} parameter can be optionally specified.", "The key curve specified by the {@link CreateEcKeyOptions#getCurve()} option can be optionally specified.", "The key curve specified by the {@link CreateEcKeyOptions#getCurve()} parameter can optionally be used.", "The key curve specified by the {@link CreateEcKeyOptions#getCurve()} argument can be optionally specified."]}
{"SampleId": 5841424, "Origin": "Used by track model container (e.g.", "Reference": "Only exposed to track model container (e.g.", "LLMCandidates": ["Sets the ID of the Builder object to the given ID.", "Sets the ID of the Builder instance to the specified ID.", "Sets the ID of the Builder instance to the specified ID.", "Sets the ID of the Builder instance by assigning the given ID value to 'myId'.", "Sets the ID of the Builder instance to the provided id value."]}
{"SampleId": 4388477, "Origin": "IMPORTANT: The source DB instance must have backup retention\nenabled.", "Reference": "The source DB instance must have backup retention enabled.", "LLMCandidates": ["The code now uses a StaxResponseHandler to handle the response from the AWS API call.", "The source DB instance must have backup retention enabled for successful replication.", "The source DB instance must have backup retention enabled for successful replication.", "The source DB instance must have backup retention enabled for successful replication.", "The source DB instance must have backup retention enabled for read replica creation."]}
{"SampleId": 340614, "Origin": "Requests that the player prefetch the media items for playback.", "Reference": "Requests that the player prepare the media items for playback.", "LLMCandidates": ["Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback."]}
{"SampleId": 4383857, "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .", "Reference": "CloudSearch Developer Guide.", "LLMCandidates": ["Deleted suggester using the provided request.", "Gets Search Suggestions from the Amazon CloudSearch Developer Guide.", "Gets Search Suggestions from the Amazon CloudSearch Developer Guide.", "Deleted suggestions using the provided request and returns the result.", "Deleted suggestions using the provided request and returns the result."]}
{"SampleId": 6017980, "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum for each pixel across all bands in the given Planar image and reshapes the output image to match the input image's dimensions.", "Computes the minimum for each pixel across all bands in the given Planar image and writes the result to the output image.", "Computes the minimum for each pixel across all bands in the input image and writes the result to the provided output image.", "Computes the minimum for each pixel across all bands in the {@link Planar} image and outputs the result to the provided {@link GrayS32} image. Additionally, reshapes the output image to match the dimensions of the input image.", "Computes the minimum for each pixel across all bands in the input image and reshapes the output image to match the input image's dimensions before performing the operation."]}
{"SampleId": 2891419, "Origin": "Sets current date as e-mails sent date.", "Reference": "Sets current date as the sent date.", "LLMCandidates": ["Sets the current date as the email sent date by delegating to the `setSentDate` method.", "Sets the current date as the email sent date by calling the `setSentDate` method.", "Sets the current date as the email sent date by calling the `setSentDate` method.", "Sets the current date as the e-mail sent date using the `setSentDate` method.", "Sets the current date as the email sent date by delegating to the `setSentDate` method."]}
{"SampleId": 3242248, "Origin": "Sets the value of the cryptAlgorithmType property.", "Reference": "Sets the value of the algorithmName property.", "LLMCandidates": ["Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property."]}
{"SampleId": 4470108, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux`.", "The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux`.", "The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux`.", "The return type has been changed from `Flux<FeedResponse<CosmosUserProperties>>` to `CosmosContinuablePagedFlux<CosmosUserProperties>`.", "The method now returns a `CosmosContinuablePagedFlux` instead of a `Flux` of `FeedResponse`s."]}
{"SampleId": 3038914, "Origin": "Adds a network interface (aka port) into a given bridge of openstack node.", "Reference": "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "LLMCandidates": ["Adds or removes a network interface (aka port) into a given bridge of openstack node, depending on the value of the addOrRemove parameter.", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the 'addOrRemove' flag.", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the `addOrRemove` flag.", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the 'addOrRemove' flag.", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the 'addOrRemove' flag."]}
{"SampleId": 754537, "Origin": "Sets the amount of time, in milliseconds, to wait between\nadjustments in pool sizes for a given host, to allow\nenough time for the adjustments to take effect.", "Reference": "Sets the amount of time to wait between adjustments in\npool sizes for a given host, to allow enough time for\nthe adjustments to take effect.", "LLMCandidates": ["Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect. The argument is now a TimeValue object representing the cool down duration.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect."]}
{"SampleId": 1122902, "Origin": "Constuct a trace log event.", "Reference": "Constuct a fatal log event.", "LLMCandidates": ["Constructs a fatal log event.", "Constructs a fatal log event with additional checks.", "Constructs a fatal log event with additional checks.", "Creates a fatal log event with the current log builder. If the fatal logging is enabled, it sets the log level to `FATAL` on the underlying builder. Otherwise, it returns a no-op builder.", "Creates a fatal log event based on the current log configuration."]}
{"SampleId": 2230469, "Origin": "Returns the QuorumConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "Reference": "Returns the {@link SplitBrainProtectionConfig} for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "LLMCandidates": ["Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations."]}
{"SampleId": 5447619, "Origin": "timed invokeAll(,,null) throws NPE", "Reference": "timed invokeAll(,,null) throws NullPointerException", "LLMCandidates": ["Timed invokeAll() now uses a randomly generated timeout value instead of null.", "Test timed invokeAll with a random timeout.", "Test timed invokeAll with a random timeout.", "Timed invokeAll() now uses a random timeout value instead of null.", "Timed invokeAll() now uses a random timeout value instead of null."]}
{"SampleId": 2081832, "Origin": "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex}", "Reference": "All {@link ForeignKeyIndex} types\n  {@link EppResourceIndex}", "LLMCandidates": ["The code now handles ForeignKeyIndex creation for renamed hosts.", "Handles Foreign Key Indexes associated with renamed hosts.", "All ForeignKeyIndex types, including DomainApplicationIndex and EppResourceIndex, ...", "All ForeignKeyIndex types, including DomainApplicationIndex and EppResourceIndex, ...", "The code now handles ForeignKeyIndex creation for renamed hosts."]}
{"SampleId": 2630413, "Origin": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path segments in {@code segments}.", "Reference": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path pathSegments in {@code pathSegments}.", "LLMCandidates": ["Checks if the region of `path` starting at `pathOffset` matches the path segments in `pathSegments`. The method now accounts for the presence of `PATH_SEPARATOR_STRING` (which is not explicitly mentioned in the original code).", "Checks if the region of `path` starting at `pathOffset` matches the path segments in `pathSegments`, considering the specified `ignoreCase` flag.", "Checks if the region of `path` starting at `pathOffset` matches the path segments in `pathSegments`.", "Checks if the region of `path` starting at `pathOffset` matches the path segments in `pathSegments`, considering the case insensitivity of `ignoreCase`.", "Checks if the region of `path` starting at `pathOffset` matches the path segments in `pathSegments`."]}
{"SampleId": 5243394, "Origin": "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Reference": "Indicates whether this filter needs to use the secondary, non-SQL method applyAlternateFilter().", "LLMCandidates": ["Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles()."]}
{"SampleId": 338759, "Origin": "This only functions after we have been attached to a hierarchy.", "Reference": "This only works after this preference has been attached to a hierarchy.", "LLMCandidates": ["This method will find a preference value in the hierarchy only after it has been attached to a hierarchy.", "This method only functions after the preference manager has been initialized.", "This method only functions after the preference manager has been initialized.", "This method retrieves a preference value from the hierarchical preference manager after it has been attached to a hierarchy.", "This method now checks for a non-null `key` parameter and returns `null` if either the key or the preference manager is null."]}
{"SampleId": 4476777, "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.", "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.", "LLMCandidates": ["The `@param createRsaKeyOptions` argument specifies the options used to create the RSA key.", "The argument type for this method has been changed from `RsaKeyCreateOptions` to `CreateRsaKeyOptions`.", "The `@param createRsaKeyOptions` parameter replaces the previous `@param rsaKeyCreateOptions` parameter.", "The key type specified by the {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.", "The key type specified by the {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create."]}
{"SampleId": 2544520, "Origin": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniond}.", "Reference": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "LLMCandidates": ["Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "Set this `AxisAngle4f` to be equivalent to the given `Quaterniondc`.", "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}."]}
{"SampleId": 4132953, "Origin": "Create or obtain a {@link CallableStatement} from the pool.", "Reference": "Creates or obtains a {@link CallableStatement} from the pool.", "LLMCandidates": ["Obtain or create a callable statement from the pool.", "Obtain a callable statement from the pool.", "Obtain a callable statement from the pool.", "Obtain a callable statement from the pool.", "Obtain a callable statement from the pool."]}
{"SampleId": 5454969, "Origin": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link", "Reference": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the module {@link", "LLMCandidates": ["If the JAR file has a `Main-Class` attribute in its main manifest then its value is the `ModuleReference` of the main class.", "If the JAR file has a `Main-Class` attribute in its main manifest then its value is the `ModuleReference` of the main class.", "If the JAR file has a `Main-Class` attribute in its main manifest then its value is the `ModuleReference` of the main class.", "If the JAR file has a `Main-Class` attribute in its main manifest then its value is the `ModuleReference` of the main class.", "If the JAR file has a `Main-Class` attribute in its main manifest then its value is the `ModuleReference` of the main class."]}
{"SampleId": 3773945, "Origin": "It is used for\nadapting this data provider to a filter type provided by a Component such\nas ComboBox.", "Reference": "This can be used for adapting this data provider to a filter\ntype provided by a Component such as ComboBox.", "LLMCandidates": ["Adapts this data provider to a filter type provided by a component such as ComboBox, using the given filter converter function.", "Adapts this data provider to a filter type provided by a component such as ComboBox.", "Adapts this data provider to a filter type provided by a component such as ComboBox.", "Adapts this data provider to a filter type provided by a component such as ComboBox.", "Adapts this data provider to a filter type provided by a component such as ComboBox."]}
{"SampleId": 2482494, "Origin": "Creates query for the given queryString.", "Reference": "Queries this search source for the given queryString.", "LLMCandidates": ["Creates query for the given queryString.", "Creates query for the given queryString, now referred to as queryContactSource.", "Creates query for the given queryString, now referred to as queryContactSource.", "Creates query for the given queryString using the `queryContactSource` method.", "Creates query for the given queryString, now referred to as queryContactSource."]}
{"SampleId": 4132958, "Origin": "Create or obtain a {@link PreparedStatement} from the pool.", "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.", "LLMCandidates": ["Obtain or create a PreparedStatement from the pool.", "Creates or retrieves a prepared statement from the pool.", "Creates or retrieves a PreparedStatement from the pool.", "Creates or retrieves a PreparedStatement from the pool.", "Creates or retrieves a PreparedStatement from the pool."]}
{"SampleId": 437930, "Origin": "Creates a {@link MetadataCoder}.", "Reference": "Returns the singleton {@link MetadataCoder} instance.", "LLMCandidates": ["Returns the singleton instance of MetadataCoder.", "Returns a singleton instance of MetadataCoder.", "Returns a singleton instance of MetadataCoder.", "Returns the singleton instance of MetadataCoder.", "Returns the singleton instance of MetadataCoder."]}
{"SampleId": 84963, "Origin": "Inserts the node at the tail of the frontier.", "Reference": "Primitive operation which inserts the node at the tail of the frontier.", "LLMCandidates": ["Inserts the node at the tail of the frontier.", "Inserts the node at the tail of the frontier.", "Inserts the node at the tail of the frontier.", "Inserts the node at the tail of the frontier.", "Inserts the node at the tail of the frontier."]}
{"SampleId": 2049500, "Origin": "Returns the codec's supported type for decoding {@code requestedMimeType} on the current\ndevice, or {@code null} if the codec can't be used.", "Reference": "Returns the codec's supported MIME type for media of type {@code mimeType}, or {@code null} if\nthe codec can't be used.", "LLMCandidates": ["Returns the codec's supported MIME type for decoding the provided mimeType on the current device, or null if the codec cannot be used.", "Returns the codec's supported MIME type for decoding the provided mimeType on the current device, or null if the codec cannot be used for decoding that mimeType.", "Returns the codec's supported MIME type for decoding the provided mimeType on the current device, or null if the codec can't be used.", "Returns the codec's supported MIME type for decoding the given mimeType on the current device, or null if the codec can't be used.", "Returns the codec's supported MIME type for decoding the provided mimeType on the current device, or null if the codec can't be used."]}
{"SampleId": 1353937, "Origin": "Remove all free glyphs that are assigned the provided group.", "Reference": "Remove all free glyphs that are only assigned the provided group.", "LLMCandidates": ["Removes free glyphs assigned to the provided group, identified by checking if the glyph's group set size is 1 and contains the specified group.", "Removes free glyphs assigned to the provided group, identified by comparing their associated groups.", "Removes free glyphs that are assigned the provided group, identified by comparing their associated groups.", "Removes free glyphs assigned to the provided group, identified by comparing their assigned groups.", "Removes free glyphs assigned to the provided group, identified by comparing their assigned groups."]}
{"SampleId": 5219060, "Origin": "Add insert optimize result uint.", "Reference": "Add insert optimize result unit into units.", "LLMCandidates": ["Adds an InsertOptimizeResultUnit object to the units list.", "Adds an insert optimize result unit to the list of units.", "Adds an InsertOptimizeResultUnit object to the units list.", "Adds an InsertOptimizeResultUnit object to the units list.", "Adds an InsertOptimizeResultUnit object to the units list."]}
{"SampleId": 6050238, "Origin": "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Reference": "Returns the tasks entry with the primary key or throws a {@link NoSuchTasksEntryException} if it could not be found.", "LLMCandidates": ["Returns the tasks entry with the primary key or throws a `com.liferay.tasks.NoSuchTasksEntryException` if it could not be found.", "Returns the tasks entry with the primary key or throws a `com.liferay.tasks.NoSuchTasksEntryException` if it could not be found.", "Returns the tasks entry with the primary key or throws a `com.liferay.tasks.NoSuchTasksEntryException` if it could not be found.", "Returns the tasks entry with the primary key or throws a `com.liferay.tasks.NoSuchTasksEntryException` if it could not be found.", "Returns the tasks entry with the primary key or throws a `com.liferay.tasks.NoSuchTasksEntryException` if it could not be found."]}
{"SampleId": 5015241, "Origin": "If no sld file, throws an exception", "Reference": "If no sld file, throws an appropriate exception", "LLMCandidates": ["Retrieves the first sld file from the provided directory and throws an exception if none is found.", "Retrieves the first sld file from the provided directory.", "Retrieves the first sld file from the directory.", "Retrieves the first sld file from the directory.", "Retrieves the first sld file from the directory."]}
{"SampleId": 3574224, "Origin": "Use this method if setting this option is not required and to express that it may be .", "Reference": "Builds the option and marks it as not required  Use this method if setting this option is not required and\nto express that it may be .", "LLMCandidates": ["Use this method if setting this option is not required and to express that it may be omitted.", "Use this method if setting this option is not required and to express that it may be omitted or left blank.", "Use this method if setting this option is not required and to express that it may be omitted.", "Use this method if setting this option is not required and to express that it may be omitted.", "Use this method if setting this option is not required and to express that it may be omitted."]}
{"SampleId": 3239399, "Origin": "Gets the value of the descrption property.", "Reference": "Gets the value of the description property.", "LLMCandidates": ["Gets the value of the description property.", "Returns the value of the description property.", "Returns the value of the description property.", "Returns the value of the description property.", "Returns the value of the description property."]}
{"SampleId": 3814021, "Origin": "Gets the amount of available items in the network of the type passed in, checking NBT or not.", "Reference": "Gets the number of available items in the network satisfying the given matcher.", "LLMCandidates": ["Gets the amount of available items in the network matching the given criteria, checking NBT or not.", "Gets the amount of available items in the network that match the given criteria, checking NBT or not.", "Calculates the amount of available items in the network that match the provided matcher criteria, based on the given inventories.", "Calculates the amount of available items in the network based on the provided matcher and inventories.", "Calculates the amount of available items in the network based on the provided matcher and inventories."]}
{"SampleId": 2641058, "Origin": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "Reference": "This makes it\nhard to debug because if a task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "LLMCandidates": ["Enabling/disabling cross-thread stack trace collection.", "Enabling or disabling cross-thread stack trace logging.", "Enabling or disabling cross-thread stack trace logging.", "Enabling/disabling cross-thread stack trace logging.", "Enabling/disabling cross-thread stack trace logging."]}
{"SampleId": 5300344, "Origin": "Creates new {@link DayOfMonth} in UTC.", "Reference": "Creates new {@link DayOfMonth}.", "LLMCandidates": ["Creates new DayOfMonth in UTC based on the provided AggregationExpression.", "Creates new `DayOfMonth` in UTC based on the provided `AggregationExpression`.", "Creates a new `DayOfMonth` in UTC based on the provided `AggregationExpression`.", "Creates new `DayOfMonth` in UTC based on the provided `AggregationExpression`.", "Creates new `DayOfMonth` in UTC based on the provided `AggregationExpression`."]}
{"SampleId": 5629938, "Origin": "Sets the entities.", "Reference": "Set the entities.", "LLMCandidates": ["Sets the entities using the provided list.", "Sets the entities using the provided list.", "Sets the entities using the provided list.", "Sets the entities using the provided list.", "Sets the entities using the provided list."]}
{"SampleId": 471391, "Origin": "The option is a:\n type.", "Reference": "The option is a:", "LLMCandidates": ["The option is an object that configures the CXF-RS endpoint.", "The option is an object type.", "The option is an object type.", "The option is an object type.", "The option is an object type."]}
{"SampleId": 3105257, "Origin": "Test of from method, of class Statistics.", "Reference": "Test of fromJson method, of class Statistics.", "LLMCandidates": ["Test of from method, which now reads JSON data from a string instead of a JSONObject.", "Test of from method, which now reads JSON data from a String instead of a JSONObject.", "Test of from method, which now uses JSON serialization to create a Statistics object from a JSON string.", "Test of from method, which now uses JSON serialization to create a Statistics object from a JSON string.", "Test of from method, which now reads JSON data from a stream and creates a Statistics object from it."]}
{"SampleId": 438097, "Origin": "Infer a {@link Schema} from an AVRO-generated SpecificRecord.", "Reference": "Infer a {@link Schema} from either an AVRO-generated SpecificRecord or a POJO.", "LLMCandidates": ["Infer the schema from the reflective metadata of the given class.", "Infer the Beam Schema from the underlying Avro record's schema.", "Infer the schema from the reflected SCHEMA$ field of the given AVRO SpecificRecord.", "Infer the schema from the `ReflectData` utility.", "Infer the `Schema` from the `ReflectData.get().getSchema(clazz)` reflection API."]}
{"SampleId": 4617594, "Origin": "Deletes the element at the specified position.", "Reference": "Removes the element at the specified position.", "LLMCandidates": ["Removes the element at the specified position and updates the list size.", "Removes the element at the specified position.", "Removes the element at the specified position.", "Removes the element at the specified position from the underlying list. The element at the specified index is stored in the return value.", "Removes the element at the specified position. The removed element is stored in the return value."]}
{"SampleId": 2017357, "Origin": "Creates an empty object literal, `{}`.", "Reference": "Creates an object-literal with zero or more elements, `{}`.", "LLMCandidates": ["Creates an object literal initialized with the given elements.", "Creates an object literal with the specified elements.", "Creates an object literal initialized with the given elements.", "Creates an object literal initialized with the given elements.", "Creates an object literal with the specified elements, `{}`."]}
{"SampleId": 3195611, "Origin": "Creates an iterable that iterates in parallel over a three iterables.", "Reference": "Creates an iterable that iterates in parallel over three iterables.", "LLMCandidates": ["Creates an iterable that iterates in parallel over three iterables, without enforcing their sizes.", "Creates an iterable that iterates in parallel over three iterables, returning a tuple containing the next elements from each iterator.", "Creates an iterable that iterates in parallel over three iterables, returning a tuple containing the next elements from each iterable.", "Creates an iterable that iterates in parallel over the three iterables, returning a tuple of their elements.", "Creates an iterable that iterates in parallel over three iterables, returning a tuple containing the next elements from each iterable."]}
{"SampleId": 2939899, "Origin": "Initializes this.audioFormats", "Reference": "Initializes audioFormats", "LLMCandidates": ["Initializes the `audioFormats` set by iterating over available audio formats and adding their corresponding formats.", "Initializes the `audioFormats` set by iterating over the available audio formats retrieved from `voiceRssImpl` and adding the corresponding `AudioFormat` objects to it.", "Initializes the `audioFormats` set by iterating over available audio formats and adding the corresponding AudioFormat objects.", "Initializes the `audioFormats` set by retrieving available audio formats from `voiceRssImpl` and converting them to `AudioFormat` objects.", "Initializes the `audioFormats` set by adding each supported audio format retrieved from `voiceRssImpl`."]}
{"SampleId": 4396424, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive phone number data redacted for privacy.", "Returns a string representation of this object, with sensitive phone number information redacted for privacy.", "Returns a string representation of this object, with sensitive phone number data redacted for privacy.", "Returns a string representation of this object, with sensitive phone number data redacted for privacy.", "Returns a string representation of this object, with sensitive phone number data redacted for security purposes."]}
{"SampleId": 1328641, "Origin": "Sets the partition storage level.", "Reference": "Sets the storage configuration.", "LLMCandidates": ["Sets the partition storage configuration.", "Sets the storage configuration.", "Sets the storage configuration.", "Sets the storage configuration.", "Sets the storage configuration."]}
{"SampleId": 1880371, "Origin": "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class.", "Reference": "Testing the isSPD (is symmetric positive definite) method of", "LLMCandidates": ["Testing the `isSPD` (is symmetric positive definite) method of CholeskyDecomposition class. The method now accepts a decomposed matrix directly.", "Testing the `isSPD` (is symmetric positive definite) method of CholeskyDecomposition class.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class. The CholeskyDecomposition constructor now takes a matrix as input.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class. The CholeskyDecomposition constructor now takes a matrix argument rather than a timesTranspose argument.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class. The initial decomposition is performed on the transpose of the test matrices."]}
{"SampleId": 1388665, "Origin": "showIndex.", "Reference": "showTagArticles.", "LLMCandidates": ["Tests showing tag articles on the \"Solo\" page.", "Tests the display of tag articles on the \"Solo\" page.", "Tests the display of tag articles on the \"Solo\" page.", "Tests the display of tag articles on the \"Solo\" page.", "Tests the display of tag articles on the \"Solo\" page."]}
{"SampleId": 440279, "Origin": "Creates an instance of {@link RowFactory} using provided {@link RowTypeFactory}\nand {@link GetterFactory}.", "Reference": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory}\nand {@link GetterFactory}.", "LLMCandidates": ["Creates an instance of `RowFactory` using provided `SchemaFactory` and `GetterFactory`.", "Creates an instance of `RowFactory` using provided `SchemaFactory` and `GetterFactory`.", "Creates an instance of `RowFactory` using provided `SchemaFactory` and `GetterFactory`.", "Creates an instance of `RowFactory` using provided `SchemaFactory` and `GetterFactory`.", "Creates an instance of `RowFactory` using provided `SchemaFactory` and `GetterFactory`."]}
{"SampleId": 5360344, "Origin": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route}.", "Reference": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route} and optional variables to expand route template.", "LLMCandidates": ["Creates an `RSocketOutboundGatewaySpec` builder for request-reply gateway based on the provided `route` and optional `routeVariables`.", "Creates an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional route variables.", "Creates an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided route and optional route variables.", "Creates an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided `route` and optional `routeVariables`.", "Creates an `RSocketOutboundGatewaySpec` builder for request-reply gateway based on provided `route` and optional `routeVariables`."]}
{"SampleId": 2544551, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Applies the rotation transformation of the given `Quaterniondc` to this matrix and store the result in .\".", "Apply the rotation transformation of the given `Quaterniondc` to this matrix and store the result in `dest`.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and store the result in `dest`.", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and store\nthe result in .", "Applies the rotation transformation of the given `Quaterniondc` to this matrix and store the result in `dest`."]}
{"SampleId": 4715990, "Origin": "Constructs a URL to save the data to", "Reference": "Constructs a final path save the data to", "LLMCandidates": ["Constructs the final path by substituting the HDFS path and adding any necessary components.", "Constructs the final path by processing the HDFS path and adding any necessary components.", "Constructs the final URL for saving the data to HDFS.", "Constructs the final path by substituting environment variables and adding necessary components based on configuration and input values.", "Constructs the final path to save the data by substituting the HDFS path, adding any necessary components, and ensuring the correct file extension."]}
{"SampleId": 613117, "Origin": "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces.", "Reference": "Returns the back pressure ratio of the given subtask index.", "LLMCandidates": ["Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces, now indexed by `subTaskBackPressureRatios`.", "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces, now using an array of ratios instead of a\nsingle value.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces. The indexed element of the `subTaskBackPressureRatios` array is now retrieved.", "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces, now indexed by `subTaskBackPressureRatios`.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces, now referred to as 'subTaskBackPressureRatios'."]}
{"SampleId": 2913755, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 4471188, "Origin": "Prints out the created certificate\nissuer details when a response has been received.", "Reference": "Subscribes to the call and prints out the\nupdated certificate operation details when a response has been received.", "LLMCandidates": ["Creates and retrieves a certificate cancellation operation based on the given certificate name.", "Creates and returns a certificate operation object based on the specified certificate name.", "Creates and returns a certificate operation object based on the specified certificate name.", "Creates and returns a certificate cancellation operation based on the given certificate name.", "Creates and returns a certificate cancellation operation based on the specified certificate name."]}
{"SampleId": 1730796, "Origin": "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari", "Reference": "Workaround to avoid disappearing footer when changing the predefined styles at runtime in Safari", "LLMCandidates": ["Updated method name to 'updateFooterVisibility' and added an early return if the footer is not visible.", "Updated method name to 'updateFooterVisibility' and added an early return if the footer is not visible.", "Updated the method name to 'updateFooterVisibility' and added an early return if the footer is not visible.", "Updated logic to handle footer visibility based on its initial state.", "Corrected method name to 'updateFooterVisibility' and added an early return if the footer is not visible."]}
{"SampleId": 3734023, "Origin": "If the offsets list is empty, then an offset of 0 is used for each array.", "Reference": "If the offsets list is empty, then an offset of 0 is used for each\nsequence.", "LLMCandidates": ["If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence."]}
{"SampleId": 5179883, "Origin": "Indicates if the way is ready to handle new messages.", "Reference": "Indicates if the way is available to handle new messages.", "LLMCandidates": ["Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages."]}
{"SampleId": 3038653, "Origin": "Handles an iterate commit.", "Reference": "Handles an iterator next commit.", "LLMCandidates": ["Iterates over an iterator context to publish entries in batches, stopping when the batch size is reached or the end of the iterator is encountered.", "Handles an iterator commit by iterating over entries in a backing map and publishing their values to the commit session.", "Iterates over an iterator context, extracting entries and values based on the specified position and batch size. Returns an IteratorBatch object containing the collected entries or null if no entries are found.", "Handles an `IteratorPosition` commit by iterating over an iterator context and extracting values from entries exceeding a specified position.", "Iterates over an iterator context to publish entries in batches based on position and size constraints."]}
{"SampleId": 4367578, "Origin": "Add a duration (with the same time unit as the current duration)", "Reference": "Add a amount (with the same time unit as the current duration)", "LLMCandidates": ["Adds the specified amount (in the current time unit) to the duration.", "Adds a given duration to the current duration, considering the time unit.", "Adds the specified amount to the current duration, using the specified time unit.", "Adds the specified amount (in the current time unit) to the duration.", "Adds the specified amount (in the current time unit) to the duration."]}
{"SampleId": 2912048, "Origin": "Gets the additional trade information, defaulted to an empty instance.", "Reference": "Gets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Gets the portfolio item information, defaulted to an empty instance.", "Retrieves the portfolio item information associated with the trade.", "Retrieves the portfolio item information, defaulted to an empty instance.", "Retrieves the portfolio item information, defaulted to an empty instance.", "Retrieves the portfolio information, defaulted to an empty instance."]}
{"SampleId": 2891854, "Origin": "Returns  if annotation is present on\ngiven accessible object.", "Reference": "Returns  if annotation is present on\ngiven annotated element.", "LLMCandidates": ["Checks if annotation is present on the given AnnotatedElement.", "Checks if annotation is present on\ngiven annotated element.", "Checks if annotation is present on the given annotated element.", "Checks if annotation is present on the given annotated element.", "Checks if an annotation is present on the given AnnotatedElement."]}
{"SampleId": 5630008, "Origin": "Gets the nodeType.", "Reference": "Gets the newType.", "LLMCandidates": ["Returns the newType.", "Returns the newType.", "Returns the newType.", "Returns the newType.", "Returns the newType."]}
{"SampleId": 6049437, "Origin": "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Reference": "Returns the favorite site with the primary key or throws a {@link NoSuchFavoriteSiteException} if it could not be found.", "LLMCandidates": ["Returns the favorite site with the primary key or throws a `com.liferay.so.NoSuchFavoriteSiteException` if it could not be found.", "Returns the favorite site with the primary key or throws a `com.liferay.so.NoSuchFavoriteSiteException` if it could not be found.", "Returns the favorite site with the primary key or throws a `com.liferay.so.NoSuchFavoriteSiteException` if it could not be found.", "Returns the favorite site with the primary key or throws a `com.liferay.so.NoSuchFavoriteSiteException` if it could not be found.", "Returns the favorite site with the primary key or throws a `com.liferay.so.NoSuchFavoriteSiteException` if it could not be found."]}
{"SampleId": 2443732, "Origin": "Create an unnamed, parented {@link InstanceManager}.", "Reference": "Create an unnamed, parented {@link InjectionManager}.", "LLMCandidates": ["Creates an unnamed, parented `InjectionManager`.", "Creates an unnamed, parented InjectionManager.", "Creates an unnamed, parented InjectionManager.", "Creates an unnamed, parented `InjectionManager`.", "Creates an unnamed, parented `InjectionManager`."]}
{"SampleId": 5077304, "Origin": "Starts continuous task.", "Reference": "Starts local continuous task.", "LLMCandidates": ["Starts local continuous task.", "Starts local continuous task.", "Starts local continuous task.", "Starts local continuous task.", "Starts local continuous task."]}
{"SampleId": 3425073, "Origin": "Since category uses \"totalPointsPossible\" property instead of\n\"pointsPossible\" property, as in Assignments", "Reference": "Fix for Category NPE reported in SAK-14519 Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property,\nas in Assignments", "LLMCandidates": ["The updated code refers to the instance variable `totalPointsPossible` instead of the previously used `pointsPossible`.", "Uses `this` keyword to access the class's `totalPointsPossible` property.", "The points possible are retrieved from the \"totalPointsPossible\" property of this instance.", "The points possible are retrieved from the \"totalPointsPossible\" property of the current instance.", "The points possible are retrieved from the \"totalPointsPossible\" property of the current instance."]}
{"SampleId": 2916155, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["The payment periods must not be of type `SwapPaymentPeriod`.", "The payment periods must not be of type `KnownAmountPaymentPeriod`.", "The fixed leg's payment periods must not be of type `KnownAmountPaymentPeriod`.", "The payment periods must not be of type `KnownAmountPaymentPeriod`.", "The payment periods must not be of type `KnownAmountPaymentPeriod`."]}
{"SampleId": 6133932, "Origin": "Get the address of the datagram's data field.", "Reference": "Get the datagram's data field.", "LLMCandidates": ["Retrieves the actual data of the datagram.", "Returns the actual data of the datagram.", "Returns the actual data of the datagram.", "Returns the actual data of the datagram.", "Returns the actual data of the datagram."]}
{"SampleId": 1352180, "Origin": "Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Reference": "Upgrade from oldStaffBarlines to staffBarlines.", "LLMCandidates": ["Method now handles conversion of oldStaffBarlines to staffBarlines.", "Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Temporary method to upgrade from oldStaffBarlines to staffBarlines, now fully transitioned.", "Temporary method to upgrade from oldStaffBarlines to staffBarlines."]}
{"SampleId": 3920802, "Origin": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.", "Reference": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.", "LLMCandidates": ["Returns a list with the values of the captured groups in the pattern.", "Returns a list with the values of the captured groups in the pattern.", "Returns a list with the values of the captured groups in the pattern.", "Returns a list with the values of the captured groups in the pattern.", "Returns a list with the values of the captured groups in the pattern."]}
{"SampleId": 4476791, "Origin": "The {@link KeyCreateOptions} is required.", "Reference": "The {@link CreateKeyOptions} is required.", "LLMCandidates": ["The required argument is now of type {@link CreateKeyOptions} instead of KeyCreateOptions.", "The required argument is now of type `CreateKeyOptions` instead of `KeyCreateOptions`.", "The required argument is now of type `CreateKeyOptions` instead of `KeyCreateOptions`.", "The provided method now operates on a `CreateKeyOptions` object instead of `KeyCreateOptions`.", "The required argument is now of type {@link CreateKeyOptions} instead of {@link KeyCreateOptions}."]}
{"SampleId": 3629294, "Origin": "See Immutable Map Static Factory Methods for details.", "Reference": "See Unmodifiable Maps for details.", "LLMCandidates": ["See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details."]}
{"SampleId": 2849528, "Origin": "Make sure we can get the {@link GenieHostInfo} instance even if EC2 metadata fails.", "Reference": "Make sure we can get the {@link GenieHostInfo}.", "LLMCandidates": ["Check if the application is running on a cloud environment, and if so, retrieve the GenieHostInfo instance. Otherwise, gracefully handle the lack of AWS credentials.", "Check if the application is running on a cloud environment and then retrieve the GenieHostInfo instance, otherwise fail the test with an informative message.", "Check if the application is running on a cloud environment and then retrieve the GenieHostInfo instance. If not running on a cloud environment, attempt to fetch the instance but fail the test with an informative message.", "Check if the application is running on a cloud environment, and if so, retrieve the GenieHostInfo instance. Otherwise, fail the test with an appropriate message.", "Check if the application is running in a cloud environment, and if so, retrieve the GenieHostInfo instance. Otherwise, attempt to retrieve the instance but fail the test with an informative message."]}
{"SampleId": 4826489, "Origin": "Equivalent to: {@code .weightInit(WeightInit.DISTRIBUTION).dist(distribution)}", "Reference": "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))}", "LLMCandidates": ["Equivalent to: `.weightInit(new WeightInitDistribution(distribution)).dist(distribution)`", "Equivalent to: `.weightInit(new WeightInitDistribution(distribution)).dist(distribution)`.", "Equivalent to: `.weightInit(new WeightInitDistribution(distribution)).dist(distribution)`", "Equivalent to: `.weightInit(new WeightInitDistribution(distribution)).dist(distribution)`.", "Equivalent to: `weightInit(new WeightInitDistribution(distribution)).dist(distribution)`."]}
{"SampleId": 6017985, "Origin": "Computes the median for each pixel across all bands in the {@link Planar}\nimage.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all bands in the given\n{@link Planar} image and reshapes the output image to match the input image's dimensions.", "Computes the median for each pixel across all bands in the given Planar image, and reshapes the output image to match the input image's dimensions.", "Computes the median for each pixel across all bands in the input\nimage and writes the result to the provided output image. The median filter\nis applied only to the bands between the given startBand and lastBand.", "Computes the median for each pixel across all bands in the given Planar image, and also reshapes the output image to match the input image's dimensions.", "Computes the median for each pixel across all bands in the provided Planar image, and writes the result to the output image. Additionally, it reshapes the output image to match the dimensions of the input image."]}
{"SampleId": 3982157, "Origin": "Converts Hex encoded string to byte[] if necessary.", "Reference": "Converts a Hex encoded string to a byte array.", "LLMCandidates": ["Converts Hex encoded string to byte[] if necessary.", "Converts Hex encoded string to byte[] if necessary.", "Converts Hex encoded string to byte[] directly.", "Converts Hex encoded string to byte[] if necessary.", "Converts Hex encoded string to byte[] if necessary."]}
{"SampleId": 2568424, "Origin": "Sets the value of the 'BloomFilter' field", "Reference": "Sets the value of the 'bloomFilter' field.", "LLMCandidates": ["Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field.", "Sets the value of the 'bloomFilter' field.", "Sets the value of the 'bloomFilter' field.", "Sets the value of the 'bloomFilter' field."]}
{"SampleId": 4390861, "Origin": "Amazon Redshift returns all resources that match any combination of\nthe specified keys and values.", "Reference": "Redshift returns all resources that match any combination of the\nspecified keys and values.", "LLMCandidates": ["Amazon Redshift returns all resources that match the specified keys and values.", "Amazon Redshift returns all resources that match the specified keys and values.", "Amazon Redshift returns all resources that match the specified keys and values.", "Amazon Redshift returns all resources that match any combination of the specified keys and values. The response is returned as an AWS API response object.", "Amazon Redshift returns all resources that match any combination of the specified keys and values."]}
{"SampleId": 5415531, "Origin": "Generate a FormType from a string.", "Reference": "Generate a FormTypes from a string.", "LLMCandidates": ["Generate a FormTypes from a string.", "Generates a FormTypes value from a string.", "Generates a FormTypes value from a string.", "Generate a FormTypes from a string.", "Generate a FormTypes from a string."]}
{"SampleId": 5922687, "Origin": "Append TLVMsg to the TLVList.", "Reference": "Append TLVMsg to the TLV list.", "LLMCandidates": ["Appends a non-null TLVMsg to the tags list, throwing a NullPointerException if the provided TLV message is null.", "Adds a non-null TLVMsg to the tags list.", "Adds a non-null TLVMsg to the tags list.", "Adds a non-null TLVMsg to the tags list.", "Adds a non-null TLVMsg to the tags list."]}
{"SampleId": 2568426, "Origin": "Gets the value of the 'KeepDeletedCells' field", "Reference": "Gets the value of the 'keepDeletedCells' field.", "LLMCandidates": ["Returns the value of the 'keepDeletedCells' field.", "Returns the value of the 'keepDeletedCells' field.", "Returns the value of the `keepDeletedCells` field.", "Returns the value of the `keepDeletedCells` field.", "Returns the value of the 'keepDeletedCells' field."]}
{"SampleId": 2794191, "Origin": "This method sets the value of the database column m_prj_project.projectType", "Reference": "This method sets the value of the database column m_prj_project.type", "LLMCandidates": ["Sets the value of the database column m_prj_type.", "Sets the value of the database column m_prj_type.", "Sets the value of the database column m_prj_type.", "Sets the value of the database column m_prj_type.", "Sets the value of the database column m_prj_type."]}
{"SampleId": 5446622, "Origin": "Return type of method signature as a byte value as defined in Constants", "Reference": "Return type of method signature as a byte value as defined in", "LLMCandidates": ["Return type of method signature as a byte value as defined in Constants.", "Return type of method signature as a byte value as defined in Constants.", "Return type of method signature as a byte value as defined in Constants.", "Returns the type of method signature as a byte value, as defined in Constants.", "Returns the type of method signature as a byte value, as defined in Constants."]}
{"SampleId": 4476800, "Origin": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(KeyProperties key properties)}.", "Reference": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(String, String)}.", "LLMCandidates": ["Loop over the\n{@link KeyProperties key} and call\n{@link KeyClient#getKeyProperties(KeyProperties keyProperties)}.", "Loop over the\n{@link KeyProperties key} and call\n{@link KeyClient#getKeyProperties(KeyProperties keyProperties)}.", "Loop over the\n{@link KeyProperties key} and call\n{@link KeyClient#getProperties(KeyProperties keyProperties)}.", "Loop over the\n{@link KeyProperties key} and call\n{@link KeyClient#getPropertiesOfKey(KeyProperties keyProperties)}.", "Loop over the\n{@link KeyProperties key} and call\n{@link KeyClient#getPropertiesOfKey(KeyProperties keyProperties)}."]}
{"SampleId": 2615557, "Origin": "Sets the alignment of the items in the list.", "Reference": "Sets the horizontal alignment of the list items.", "LLMCandidates": ["Sets the alignment of the items in the list.\n\nThe parameter name has been changed to `alignment`.", "Sets the alignment of the items in the list.\n\nThe parameter name has been changed to `alignment`.", "Sets the alignment of the items in the list.", "Sets the alignment of the items in the list.\n\nThe parameter name has been changed to 'alignment' and the method name is now 'setAlignment'.", "Sets the alignment of the items in the list."]}
{"SampleId": 4625121, "Origin": "Atomize Java items.", "Reference": "Return Java items.", "LLMCandidates": ["Queries a list of Java items.", "Queries a list of Java items.", "Atomically materialize a list of Java items.", "Atomically materialize a list of Java items.", "Atomize Java items using a different query."]}
{"SampleId": 1122903, "Origin": "Constuct a trace log event.", "Reference": "Constuct a debug log event.", "LLMCandidates": ["Constructs a debug log event.", "Constructs a debug log event.", "Constructs a debug log event.", "Constructs a debug log event.", "Constructs a debug log event."]}
{"SampleId": 5595690, "Origin": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific exception class.", "Reference": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific set of exception classes.", "LLMCandidates": ["Inspects a given `Throwable` and an array of exception classes to look for, recursively traversing the exception hierarchy. Returns `true` if any of the specified exception classes are found, or `false` otherwise.", "Inspects a given `Throwable` and an array of exception classes to look for, recursively traversing the exception hierarchy. Returns `true` if any of the specified exception classes are found, or `false` otherwise.", "Inspects a given `Throwable` and an array of exception classes to look for a specific exception type within the hierarchy of the throwable or its nested causes.", "Inspects a given Throwable and an array of exception classes to look for the specified classes in the hierarchy of the Throwable or its nested causes.", "Inspects a given Throwable and its nested causes, in order to look for a specific exception class among the specified list of classes."]}
{"SampleId": 2782536, "Origin": "Returns an iterator on all registered commands.", "Reference": "Returns a sorted collection of all registered commands.", "LLMCandidates": ["Returns a collection of all registered commands.", "Returns a collection of all registered commands.", "Returns a collection of all registered commands.", "Returns a collection of all registered commands.", "Returns a sorted collection of all registered commands."]}
{"SampleId": 3116178, "Origin": "Returns the server list for the requested cluster.", "Reference": "Returns the configured server list for the requested cluster.", "LLMCandidates": ["Returns the list of servers configured for the requested cluster.", "Returns the list of servers configured for the requested cluster.", "Returns the list of servers configured for the requested cluster.", "Returns the list of servers configured for the requested cluster.", "Returns the list of servers configured for the requested cluster."]}
{"SampleId": 5654768, "Origin": "Creates a service name for the deployment unit to define the service.", "Reference": "Creates a service name for the batch environment service.", "LLMCandidates": ["Creates a service name for the deployment unit to define the service, adding \"batch\" and \"environment\" to the service name.", "Creates a service name for the deployment unit to define the service, appending \"batch\" and \"environment\" to the service name.", "Creates a service name for the deployment unit to define the service, with an additional suffix of \"environment\" appended.", "Creates a service name for the deployment unit to define the service, adding \"batch\" and \"environment\" to the service name.", "Creates a service name for the deployment unit to define the service, adding 'batch' and 'environment' to the service name."]}
{"SampleId": 4232631, "Origin": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e.", "Reference": "Warning: the conditional comments don't work when injected dynamically with", "LLMCandidates": ["The media type parameter has been renamed to 'rel' instead of 'condition'.", "The conditional comments don't work when injected dynamically with JavaScript (i.e. the `rel` parameter).", "The conditional comments don't work when injected dynamically with JavaScript (i.e. the condition parameter is ignored).", "The conditional comments don't work when injected dynamically with JavaScript (i.e. they are ignored by the browser).", "The conditional comments don't work when injected dynamically with JavaScript (i.e. the `rel` parameter)."]}
{"SampleId": 4961626, "Origin": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.", "Reference": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.", "LLMCandidates": ["If this node is Object Node and has a value for the specified property, it is returned to allow chaining; otherwise an IllegalArgumentException is thrown.", "If this node is an Object Node and has a value for the specified property, this is returned to allow chaining; otherwise an IllegalArgumentException is thrown.", "If the node is an Object Node and has a value for the specified property, this is returned to allow chaining; otherwise an {@link IllegalArgumentException} is thrown.", "If this node is an Object Node and has a value for the specified property, this is returned to allow chaining; otherwise an {@link IllegalArgumentException} is thrown.", "If this node is an Object Node and has a value for the specified property, this is returned to allow chaining; otherwise an {@link IllegalArgumentException} is thrown."]}
{"SampleId": 3677389, "Origin": "Returns a copy of this date with the specified field altered.", "Reference": "Returns a copy of this date with the specified field set to a new value.", "LLMCandidates": ["Returns a copy of this date with the specified field altered according to the provided value.", "Returns a copy of this date with the specified field altered, based on the field's type.", "Returns a copy of this date with the specified field altered, based on the ChronoField type.", "Returns a copy of this date with the specified field value altered.", "Returns a copy of this date with the specified field altered, based on the ChronoField type."]}
{"SampleId": 4478386, "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.", "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "LLMCandidates": ["Sets the `StorageSharedKeyCredential` used to authorize requests sent to the service.", "Sets the `StorageSharedKeyCredential` used to authorize requests sent to the service.", "Sets the `StorageSharedKeyCredential` used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the `StorageSharedKeyCredential` used to authorize requests sent to the service."]}
{"SampleId": 3828357, "Origin": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present `alt` or \"/\" is used.", "Reference": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present \"/\" is used.", "LLMCandidates": ["The special-casing of \"back\" is preserved to support Referrer, and if Referrer is not present, the `alt` or \"/\" is used as the fallback.", "The string \"back\" is special-cased to provide Referrer support. When Referrer is not present, `alt` or \"/\" is used.", "The string \"back\" is special-cased to provide Referrer support, when Referrer is not present, the `alt` or \"/\" parameter is used instead.", "The `alt` parameter is no longer required as Referrer support is now handled based on the `url` parameter.", "The string \"back\" is special-cased to provide Referrer support. When Referrer is not present, `alt` or \"/\" is used."]}
{"SampleId": 2891644, "Origin": "Creates all folders at once.", "Reference": "Creates all directories at once.", "LLMCandidates": ["Creates all directories recursively if they do not exist. If the directory already exists, it checks if it is a directory and returns immediately.", "Creates all folders recursively if they don't exist. Performs additional checks before creating directories.", "Creates all directories recursively if they do not exist. Checks if the directory already exists and throws an exception if it is not a directory.", "Creates all directories recursively if they do not exist. If the directory already exists, it checks if it is a directory and throws an exception if not.", "Creates all directories recursively if they do not exist."]}
{"SampleId": 4903187, "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.", "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.", "LLMCandidates": ["The returned `Bits` instance MUST be consumed in order. This is because the method now supports iterating over documents starting from a specific index.", "The returned `Bits` instance MUST be consumed in order. Note that the method signature has been updated to include an additional parameter to control the starting point of the iteration.", "The returned `Bits` instance MUST be consumed in order. Note that the method signature has been updated to accept an additional parameter for improved flexibility.", "The provided code now accepts an additional argument (long) to control the starting point of the returned Bits instance.", "The returned `Bits` instance MUST be consumed in order. Note that the current implementation starts iterating from index 0."]}
{"SampleId": 2887744, "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.", "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.", "LLMCandidates": ["This method must only be used for type references whose sort is `{@link #TARGET_TYPE_AND_INFO TARGET_TYPE_AND_INFO}`.", "This method must only be used for type references whose sort is `{@link #TARGETTYPEANDINFO TARGETTYPEANDINFO}`", "This method must only be used for type references whose sort is `{@link #TARGET_TYPE_AND_INFO TARGET_TYPE_AND_INFO}`.", "The method now operates on the `targetTypeAndInfo` variable, which replaces `value` in the original code.", "This method must only be used for type references whose sort is `@link #TARGET_TYPE_AND_INFO TARGET_TYPE_AND_INFO`."]}
{"SampleId": 6006977, "Origin": "Write a Chart series as columns in a CSV file.", "Reference": "Export a Chart series in columns in a CSV file.", "LLMCandidates": ["Writes a XYSeries chart as columns in a CSV file.", "Writes a XYSeries chart series as columns in a CSV file.", "Writes a XYSeries chart series as columns in a CSV file.", "Writes an XYSeries chart series as columns in a CSV file.", "Writes an XYSeries chart series as columns in a CSV file."]}
{"SampleId": 2061869, "Origin": "Determines whether a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "Reference": "Determines whether a BMP character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "LLMCandidates": ["The method is deprecated. Use the `Character#isLowerCase(char)` method for determining lowercase status.", "This method is deprecated. Use the appropriate method for determining character case.", "Indicates that a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}. This method is deprecated.", "The method is deprecated. Use `Character#isLowerCase(char)` for determining lowercase status.", "The method is deprecated. Use `Character#isLowerCase(char)` for case sensitivity determination."]}
{"SampleId": 2142578, "Origin": "Returns the split point number, 1-based.", "Reference": "Returns a unique id for each runAsync, 1-based.", "LLMCandidates": ["Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based."]}
{"SampleId": 3652742, "Origin": "Fails silently if no match found.", "Reference": "Fails silently if the student does not exist.", "LLMCandidates": ["Fails silently if no student is deleted.", "Fails silently if no student is deleted.", "Fails silently if no student is deleted.", "Fails silently if no student with the given course ID and email is deleted.", "Fails silently if no student is deleted."]}
{"SampleId": 3238740, "Origin": "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }", "Reference": "Objects of the following type(s) are allowed in the list\n{@link CTRelSizeAnchor }\n{@link CTAbsSizeAnchor }", "LLMCandidates": ["The type of elements in the list has been changed to `Object`.", "The type of elements allowed in the list remains unchanged.", "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor}\n{@link CTRelSizeAnchor}.", "The list now uses the generic type Object instead of the previously used type CTAbsSizeAnchor and CTRelSizeAnchor.", "The list now uses the generic type `Object` instead of the class-specific type `CTAbsSizeAnchor` and `CTRelSizeAnchor`."]}
{"SampleId": 5455337, "Origin": "Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling.", "Reference": "Sets item (of a request node) to self and waiter to null,\nto avoid garbage retention after matching or cancelling.", "LLMCandidates": ["Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling, or if data integrity is not\nmaintained.", "Sets item to self and waiter to null, to avoid garbage retention after asserting data integrity.", "Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling, or if data integrity is not maintained.", "Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling, asserting that the data is valid before setting the item.", "Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling, or when data integrity is not assured."]}
{"SampleId": 4589585, "Origin": "Create error value with given reason and error details.", "Reference": "Create error value with given type, reason and details.", "LLMCandidates": ["Creates an error value with the specified type, reason, and error details.", "Creates an error value with the specified type, reason, and error details.", "Creates an error value with the specified type, reason, and error details.", "Creates an error value with the specified type, reason, and error details.", "Creates an error value with the given type, reason and error details."]}
{"SampleId": 3566647, "Origin": "{@code protocol} and {@code proxy} will be non-null and {@code throwable} will be null when\nthe connection is successfully established.", "Reference": "{@code protocol} and {@code proxy} will be non-null and {@code ioe} will be null when\nthe connection is successfully established.", "LLMCandidates": ["When the connection is successfully established, the arguments `protocol` and `proxy` will be non-null, while `ioe` will be null.", "The provided exception type has been updated to `IOException` to reflect the change in the method signature.", "When the connection is successfully established, the provided protocol and proxy will be non-null, while the exception will be null.", "The protocol and proxy will be non-null and the IOException will be null when the connection is successfully established.", "The protocol and proxy will be non-null and the IOException will be null when the connection is successfully established."]}
{"SampleId": 2444066, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "LLMCandidates": ["Retrieves the set of custom providers registered for the given service provider contract in the underlying `InstanceManager` container.", "Gets the set of all custom providers registered for the given service provider contract in the given instance manager container.", "Retrieves the set of all custom providers registered for the given service provider contract in the underlying `InstanceManager` container.", "Get the set of all custom providers registered for the given service provider contract in the underlying `InstanceManager` container.", "Retrieves the set of custom providers registered for the given service provider contract in the provided instance manager container."]}
{"SampleId": 5452793, "Origin": "Basic test of Layer containing automatic modules", "Reference": "Basic test of layer containing automatic modules", "LLMCandidates": ["Test the functionality of Layer with automatically discovered modules.", "Test the functionality of Layer with automatically discovered modules.", "Test the functionality of Layer with automatically discovered modules.", "Test for automatic module discovery within a Layer.", "Test for automatic module discovery within a Layer."]}
{"SampleId": 6044163, "Origin": "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Reference": "Returns the sync d l object with the primary key or throws a {@link NoSuchDLObjectException} if it could not be found.", "LLMCandidates": ["Returns the sync d l object with the primary key or throws a `com.liferay.sync.NoSuchDLObjectException` if it could not be found.", "Returns the SyncDLObject with the primary key or throws a `com.liferay.sync.NoSuchDLObjectException` if it could not be found.", "Returns the SyncDLObject with the primary key or throws a `com.liferay.sync.NoSuchDLObjectException` if it could not be found.", "Returns the sync d l object with the primary key or throws a `com.liferay.sync.NoSuchDLObjectException` if it could not be found.", "Returns the sync d l object with the primary key or throws a `com.liferay.sync.NoSuchDLObjectException` if it could not be found."]}
{"SampleId": 3678304, "Origin": "This factory creates a {@code ZonedDateTime} from a date-time and time-zone.", "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time.", "LLMCandidates": ["Creates a `ZonedDateTime` from a local date-time and time-zone.", "Creates a `ZonedDateTime` from a local date-time and time-zone using the `ofLocal` method.", "Creates a `ZonedDateTime` from a local date-time and time zone using the `ofLocal()` method with the provided resolver.", "Creates a `ZonedDateTime` from a local date-time and time-zone.", "Creates a `ZonedDateTime` from a local date-time and time-zone using the `ofLocal` method with the provided resolver."]}
{"SampleId": 1672719, "Origin": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query", "Reference": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query", "LLMCandidates": ["Checks for internet connection and then initializes the recycler view with categories retrieved from the API, depending on whether the request is for a parent or subcategory category.", "Checks for internet connection and then initializes the recycler view with categories retrieved from the API.", "Checks for internet connection and then initializes the recycler view with categories retrieved from the API, using the provided category name prefixed with \"Category:\".", "Checks for internet connection and then initializes the recycler view with categories retrieved from the API, using `categoryClient` instead of `mwApi`.", "Checks for internet connection and then initializes the recycler view with categories retrieved from the API."]}
{"SampleId": 2533375, "Origin": "Creates CronDefinition instance matching quartz specification;", "Reference": "Creates CronDefinition instance matching Quartz specification", "LLMCandidates": ["Creates CronDefinition instance matching the quartz specification.", "Creates CronDefinition instance matching the quartz specification.", "Creates CronDefinition instance matching the quartz specification.", "Creates CronDefinition instance matching quartz specification.", "Creates CronDefinition instance matching quartz specification."]}
{"SampleId": 4396556, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive keystore password information redacted for security.", "Returns a string representation of this object, with sensitive keystore password information redacted for security.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data values redacted for security.", "Returns a string representation of this object; useful for testing and debugging, excluding sensitive data.", "Returns a string representation of this object; useful for testing and debugging, omitting sensitive data."]}
{"SampleId": 3710215, "Origin": "Remove the {@link Query} at the given position from this playlist", "Reference": "Remove the {@link PlaylistEntry} at the given position from this playlist", "LLMCandidates": ["Remove the entry at the given position from this playlist.", "Remove the entry at the given position from this playlist.", "Remove the entry at the given position from this playlist.", "Remove the {code:Query} at the given position from this playlist.", "Remove the entry at the given position from this playlist."]}
{"SampleId": 5450903, "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.", "LLMCandidates": ["The method now takes two arguments instead of three, and localizes the result using the LOCALIZER class.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "The localized wrapper task requires the JAX-WS {0} API, which is not available on the JDK6 platform.", "The method now takes two arguments instead of three, and utilizes the static LOCALIZER field instead of localizer.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."]}
{"SampleId": 2825249, "Origin": "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.", "Reference": "Allocate a block of memory of the given size in bytes and update memory allocation tracker accordingly.", "LLMCandidates": ["Allocates a block of memory of the given size in bytes and returns a pointer to that memory.", "Allocates a block of memory of the given size in bytes and returns a pointer to that memory.", "Allocates a block of memory of the given size in bytes and returns a pointer to that memory.", "Allocates a block of memory of the given size in bytes and returns a pointer to that memory.", "Allocates a block of memory of the given size in bytes and returns a pointer to that memory."]}
{"SampleId": 6048529, "Origin": "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Reference": "Returns the app with the primary key or throws a {@link NoSuchAppException} if it could not be found.", "LLMCandidates": ["Returns the app with the primary key or throws a `com.liferay.marketplace.NoSuchAppException` if it could not be found.", "Returns the app with the primary key or throws a `com.liferay.marketplace.NoSuchAppException` if it could not be found.", "Returns the App instance with the given primary key or throws a `com.liferay.marketplace.NoSuchAppException` if it cannot be found.", "Returns the App with the primary key or throws a `com.liferay.marketplace.NoSuchAppException` if it could not be found.", "Returns the app with the primary key or throws a `com.liferay.marketplace.NoSuchAppException` if it could not be found."]}
{"SampleId": 4245569, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to integer, returning default value if text is inconvertible.", "LLMCandidates": ["Convert to primitive types, returning defaultValue if text is not null. If conversion fails, an exception is logged.", "Convert to primitive types, returning the default value if text is null. If text is not null, attempts to convert it to an integer; otherwise, the default value is returned.", "Converts text to an integer value, returning the default value if the text is null or an error occurs during conversion.", "Converts text to an integer value, returning the default value if text is null or an error occurs during conversion.", "Converts text to an integer value, or returns the default value if text is null."]}
{"SampleId": 2603527, "Origin": "caller should not modify leavingEndpoints", "Reference": "caller should not modify leavingNodes", "LLMCandidates": ["Caller should not modify leavingNodes.", "Caller should not modify leavingNodes.", "Caller should not modify leavingNodes.", "Caller should not modify leavingNodes.", "Caller should not modify leavingNodes."]}
{"SampleId": 6363989, "Origin": "Waits until the given element is either hidden or deleted.", "Reference": "Waits until the given locator corresponds to either a hidden or a deleted element.", "LLMCandidates": ["Waits until the given element is no longer visible or has been removed from the DOM.", "Waits until the element identified by the given locator is no longer visible on the page.", "Waits until the element identified by the given locator is no longer visible on the page.", "Waits until the given element is hidden or removed from the DOM.", "Waits until the given element is no longer visible on the page."]}
{"SampleId": 2461871, "Origin": "Check that the default base section paint is not null, and that you\ncan never set it to null.", "Reference": "Check that the default section paint is not null, and that you\ncan never set it to null.", "LLMCandidates": ["Check that the default section paint is not null, and that you\ncan never set it to null.", "Check that the default section paint is not null, and that you\ncannot set it to null.", "Check that the default section paint is not null, and that you\ncan never set it to null.", "Check that the default section paint is not null, and that you\ncan never set it to null.", "Check that the default section paint is not null, and that you\ncannot set it to null."]}
{"SampleId": 5927567, "Origin": "Returns a new fresh folder with the given path under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given paths under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder recursively under the given paths, validating folder names and handling absolute paths.", "Creates a new folder recursively with the given paths under the specified root directory. Paths are validated to be relative.", "Creates a new folder recursively under the given paths, ensuring that none of the folders already exist. If any folder path is absolute, an exception is thrown.", "Creates a new folder recursively under the given paths, ensuring that none of the folders already exist. If any folder could not be created, an IOException is thrown with a descriptive message.", "Creates a new folder recursively with the given paths under the temporary folder. Now checks if any path is absolute and throws an error if so."]}
{"SampleId": 1563458, "Origin": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of oneTaskProcess2", "Reference": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of otherOneTaskProcess", "LLMCandidates": ["Deploys two process definitions and starts 4 instances of the 'oneTaskProcess' process and 1 instance of the 'otherOneTaskProcess' process.", "Deploys two process definitions and starts 4 instances of 'oneTaskProcess' and 1 instance of 'otherOneTaskProcess'.", "Deploys two process definitions and starts 4 instances of 'oneTaskProcess' and 1 instance of 'otherOneTaskProcess'.", "Deploys two process definitions and starts 4 instances of the `oneTaskProcess` process and 1 instance of the `otherOneTaskProcess` process.", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess."]}
{"SampleId": 3143525, "Origin": "Applies a list ontology changes to a collection of ontologies.", "Reference": "Apply ontology changes.", "LLMCandidates": ["Applies a list of ontology changes to a stream of ontologies.", "Applies a list of ontology changes to a stream of ontologies.", "Applies a list of ontology changes to a stream of ontologies.", "Applies a list of ontology changes to a stream of ontologies.", "Applies a list of ontology changes to a stream of ontologies."]}
{"SampleId": 3933924, "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.", "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.", "LLMCandidates": ["The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line. Note that the method now handles FileNotFoundException in case the data file cannot be loaded.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line. The dictionary is now a void return type.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line. Note that the method now handles FileNotFoundException in case the data file cannot be loaded.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line."]}
{"SampleId": 1357732, "Origin": "Using the starting mark found for each alteration item, defines all slices.", "Reference": "Using the starting mark found for each alteration item, defines all roi.", "LLMCandidates": ["Using the starting mark found for each alteration item, defines all slices based on the updated logic for slice definition.", "Using the starting mark found for each alteration item, defines all slices based on the updated logic for calculating the slice stop value.", "Creates slices based on the starting marks found for each alteration item.", "Uses the starting marks found for each alteration item to create slices.", "Uses the starting marks found for each alteration item to create slices."]}
{"SampleId": 3380827, "Origin": "It determines time duration that you should wait for permission and reserves it for you,\nif you'll be able to wait long enough.", "Reference": "It determines time duration that you should wait for the given number of permits\nand reserves it for you, if you'll be able to wait long enough.", "LLMCandidates": ["Calculates time duration to wait for and reserve permissions, if sufficient wait time is available.", "Calculates the time duration to wait for a permission and reserves it based on the given permits and timeout.", "Calculates time duration to wait for and reserve permits if available.", "Calculates the time duration to wait for a permission and reserves it if the wait time is sufficient.", "Calculates the time to wait for and reserves permissions based on the given permits and current state."]}
{"SampleId": 3920708, "Origin": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (listToString does the same thing)", "Reference": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (SentenceUtils.listToString does the same thing - why 2 separate classes)", "LLMCandidates": ["Iterates over the list of CoreMaps and appends their text annotations to a StringBuilder, separating them with spaces.", "Pieces a List of CoreMaps back together using word and setting a space between each word. TODO: remove this (listToString does the same thing)", "Pieces a List of CoreMaps back together using word and setting a space between each word. TODO: remove this (listToString does the same thing)", "Pieces a List of CoreMaps back together using word and setting a space between each word. TODO: remove this (listToString does the same thing)", "Pieces a List of CoreMaps back together using word and setting a space between each word. TODO: remove this (listToString does the same thing)"]}
{"SampleId": 6263783, "Origin": "Checks whether memory cache key (image URI) for current ImageView is actual", "Reference": "Checks whether memory cache key (image URI) for current ImageAware is actual", "LLMCandidates": ["Checks whether memory cache key (image URI) for the associated imageAware is actual.", "Checks whether memory cache key (image URI) for the current `imageAware` is actual.", "Checks whether memory cache key (image URI) for the current `imageAware` is actual.", "Checks whether memory cache key (image URI) for the provided ImageAware is actual.", "Checks whether memory cache key (image URI) for the provided ImageAware is actual."]}
{"SampleId": 113644, "Origin": "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "Reference": "Returns the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "LLMCandidates": ["Initializes the resource to edit based on the `uuid` provided via the tag's attribute \"uuid\". The method now returns the retrieved resource.", "Initializes the resource to edit based on the `cms` object and the `uuid` provided via the tag's attribute \"uuid\".", "Initializes the resource to edit based on the `uuid` provided via the tag's attribute.", "Retrieves the resource to edit based on the provided UUID.", "Initializes the resource to edit based on the `cms` object and the `uuid` provided via the tag's attribute."]}
{"SampleId": 6044910, "Origin": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Reference": "or throws a {@link NoSuchNotificationTemplateException} if it could not be found.", "LLMCandidates": ["Remains the same as the original comment.", "The method fetches the CalendarNotificationTemplate instance by its UUID and group ID. If not found, a\n{@link com.liferay.calendar.NoSuchNotificationTemplateException} is thrown.", "The persistence layer's `findByUUID_G` method is used to retrieve the CalendarNotificationTemplate entity based on its UUID and group ID.", "The method retrieves a notification template by its UUID and group ID from the persistence layer.", "The method retrieves the notification template by UUID and group ID or throws a `com.liferay.calendar.NoSuchNotificationTemplateException` if it could not be found."]}
{"SampleId": 5600464, "Origin": "For {@link Type#ERROR} or\n{@link Type#EXIT} actions this can be provided as part of the factory method.", "Reference": "For\n{@link ActionType#ERROR} or {@link ActionType#EXIT} actions this can be provided as part of the factory method.", "LLMCandidates": ["Overrides the superclass's `setStatusMessage` method to set the status message.", "Overrides the parent method to set the status message using the provided parameter.", "Overrides the parent method to set the status message using the provided parameter.", "This method delegates the setStatusMessage call to the parent class and then returns the current Action instance.", "Overrides the parent method to set the status message."]}
{"SampleId": 3467788, "Origin": "Appends a declaration of the given label to {@link #buf buf}.", "Reference": "Appends a declaration of the given label to {@link #stringBuilder}.", "LLMCandidates": ["Appends a declaration of the given label to the designated buffer.", "Appends a declaration of the given label to the designated buffer.", "Appends a declaration of the given label to the designated buffer.", "Appends the declaration of the given label to the designated buffer.", "Appends the declaration of the given label to the designated buffer."]}
{"SampleId": 570063, "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.", "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.", "LLMCandidates": ["Calculates the file extension by extracting the textual part after the last dot in the filename.", "Obtains the file extension as the textual part of the filename after the last dot.", "Obtains the file extension as the textual part of the filename after the last dot.", "Obtains the file extension as the textual part of the filename after the last dot.", "Obtains the file extension by extracting the textual part after the last dot in the filename."]}
{"SampleId": 2478241, "Origin": "Implements {@link PacketListener}.", "Reference": "Implements {@link StanzaListener}.", "LLMCandidates": ["Implements {@link StanzaListener} instead of PacketListener as the method now processes Stanza packets instead of Packet.", "Implements {@link StanzaListener}.", "Implements {@link StanzaListener} instead of PacketListener as the method now processes Stanza packets instead of Packet.", "Implements {@link StanzaListener} instead of {@link PacketListener} as the method now processes Stanza packets instead of Packet packets.", "Implements {@link StanzaListener} instead of PacketListener as the method now processes Stanza packets instead of Packet."]}
{"SampleId": 5425595, "Origin": "Returns the authenticating user's retweet of this tweet, or null when the tweet was created\nbefore this feature was enabled.", "Reference": "Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created\nbefore this feature was enabled.", "LLMCandidates": ["Returns the ID of the current user's retweet of this tweet, or null when the tweet was created before this feature was enabled.", "Returns the ID of the current user's retweet of this tweet, or null when the tweet was created before this feature was enabled.", "Returns the ID of the current user's retweet of this tweet, or null when the tweet was created before this feature was enabled.", "Returns the ID of the current user's retweet of this tweet, or null when the tweet was created before this feature was enabled.", "Returns the ID of the current user's retweet of this tweet, or null when the tweet was created before this feature was enabled."]}
{"SampleId": 84962, "Origin": "Removes and returns the node at the head of the frontier.", "Reference": "Primitive operation which removes and returns the node at the head of the frontier.", "LLMCandidates": ["Removes and returns the front node from the frontier.", "Removes and returns the node at the front of the frontier.", "Removes and returns the node at the front of the frontier.", "Removes and returns the node at the front of the frontier.", "Removes and returns the node at the front of the frontier."]}
{"SampleId": 2482289, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a contact query based on the given queryString and contact count.", "Creates a contact query using the given queryString and contact count.", "Creates a contact query based on the given queryString and contactCount.", "Creates a contact query based on the given queryString and contactCount.", "Creates a contact query based on the given queryString and contact count."]}
{"SampleId": 4476799, "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link", "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link", "LLMCandidates": ["The method now takes a {@link CreateKeyOptions#getExpires() expires} option and returns a response containing a {@link KeyVaultKey} object.", "The input key creation options expire when retrieved using the {@link CreateKeyOptions#getExpires() getExpires()} method.", "The method now takes a {@link CreateKeyOptions#getExpires() expires} key creation options object and returns a response containing a newly created key of type {@link KeyVaultKey}.", "The `CreateKeyOptions#getExpires()` expires and the method now handles `CreateKeyOptions` instead of `KeyCreateOptions`.", "The method input type has been updated to `CreateKeyOptions`."]}
{"SampleId": 4476803, "Origin": "The get key operation is\napplicable to all key types and it requires the {@code keys/get} permission.", "Reference": "This operation requires the {@code\nkeys/delete} permission.", "LLMCandidates": ["The method has been renamed to `beginDeleteKey` and now performs key deletion instead of retrieval.", "The method name has been changed to `beginDeleteKey` and it now performs deletion of a key.", "The method name has been changed to `beginDeleteKey` and it now operates on deleting keys.", "The method name has been changed to `beginDeleteKey` and it now operates on deleting keys rather than retrieving them.", "The method name has been changed to `beginDeleteKey` and it now operates on deleting keys."]}
{"SampleId": 2312760, "Origin": "Returns the (unbiased) skew of all the values within a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link Dataset}", "LLMCandidates": ["Returns the (unbiased) skewness of a subset of values within a {@link Dataset}.", "Returns the kurtosis of a subset of values within a {@link Dataset}.", "Returns the (unbiased) skewness of a sample of values within a {@link Dataset}.", "Returns the sample kurtosis of all the values within a `Dataset`.", "Returns the sample kurtosis of all the values within a given Dataset."]}
{"SampleId": 18791, "Origin": "Get Payroll movement with concept is paid and is invoiced", "Reference": "Get Payroll movement with concept is invoiced", "LLMCandidates": ["Retrieves payroll movements associated with concepts that are paid and invoiced.", "Retrieves payroll movements associated with paid and invoiced concepts.", "Retrieves payroll movements associated with concepts that are both paid and invoiced.", "Retrieves payroll movements associated with concepts that are both paid and invoiced.", "Retrieves payroll movements associated with concepts that are paid and invoiced."]}
{"SampleId": 1355443, "Origin": "Prepare the collection of CLI tasks (inputs, books, scripts, samples).", "Reference": "Prepare the collection of CLI tasks (inputs, books, samples).", "LLMCandidates": ["Prepares the collection of CLI tasks (inputs, books, scripts, samples) based on argument extensions.", "Prepare the collection of CLI tasks (inputs, books, scripts, samples) based on argument extensions.", "Prepare the collection of CLI tasks (inputs, books, scripts, and samples) based on argument extensions.", "Prepares the collection of CLI tasks (inputs, books, scripts, samples) based on argument extensions.", "Prepare the collection of CLI tasks (inputs, books, scripts, samples) based on argument extensions."]}
{"SampleId": 3467805, "Origin": "Checks a given class.", "Reference": "Checks the given class.", "LLMCandidates": ["Checks a given class file or class name.", "Checks a given class file or class name.", "Checks a given class file or class name.", "Checks the given class file or class name.", "Checks the given class file or class name."]}
{"SampleId": 1241791, "Origin": "Runs the pig script using PigRunner API if version VERSION or above.", "Reference": "Runs the pig script using PigRunner.", "LLMCandidates": ["Runs the pig script using PigRunner API to execute a Pig script. The Pig script is run using the `PigRunner.run()` method with the specified arguments.", "Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API for Pig version 0.8 or above.", "Runs the pig script using PigRunner API for Pig version 0.8 and above."]}
{"SampleId": 2388099, "Origin": "Provides a list of all connection wrappers corresponding to a given environment.", "Reference": "Provides a list of all connection configs corresponding to a given environment.", "LLMCandidates": ["Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configurations corresponding to a given environment."]}
{"SampleId": 5434288, "Origin": "If this lookup object has private access, then the caller class is the lookupClass.", "Reference": "If this lookup object has full privilege access, then the caller class is the lookupClass.", "LLMCandidates": ["If this lookup object has private access, then the caller class is the `lookupClass`.", "If this lookup object has private access, then the caller class is the `lookupClass`.", "If this lookup object has private access, then the caller class is the `lookupClass`.", "If the lookup object has private access, then the caller class is now identified as lookupClass.", "If this lookup object has private access, then the caller class is the `lookupClass`."]}
{"SampleId": 2911711, "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.", "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.", "LLMCandidates": ["The curves themselves are provided in `ScenarioMarketData`\nusing `RatesCurveId` as the identifier.", "The curves themselves are provided in `ScenarioMarketData` using `RatesCurveId` as the identifier.", "The curves themselves are provided in `ScenarioMarketData`\nusing `RatesCurveId` as the identifier.", "The curves themselves are provided in `ScenarioMarketData` using `RatesCurveId` as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier."]}
{"SampleId": 116635, "Origin": "Add a list of documents to the Solr server.", "Reference": "Add a list of documents to the Solr client.", "LLMCandidates": ["Adds a list of documents to the Solr client.", "Adds a list of documents to the Solr client.", "Adds a list of documents to the Solr client.", "Adds a list of documents to the Solr client.", "Adds a list of documents to the Solr client."]}
{"SampleId": 1358202, "Origin": "Report the pitch position of the nth item, within the given clef.", "Reference": "Report the pitch position of the nth item, within the given clef kind.", "LLMCandidates": ["Report the pitch of the nth item, based on the given clef kind.", "Report the pitch of the nth item, based on the given clef kind.", "Report the pitch of the nth item, based on the given clef kind.", "Report the pitch of the nth item, based on the given clef kind.", "Calculates the pitch of the nth item based on the given clef kind."]}
{"SampleId": 4470463, "Origin": "Creates a flux of {@link PagedResponse} starting from the first page.", "Reference": "Creates a Flux of {@link PagedResponse} starting from the first page.", "LLMCandidates": ["Retrieves the initial page data from the parent class.", "Retrieves the first page using the configured retriever and emits a flux of pages.", "Retrieves the first page using the configured retriever and emits a flux of pages.", "Retrieves the first page of data using the designated retriever and emits a flux of page elements.", "Retrieves the first page of results using the super implementation of `byPage()`."]}
{"SampleId": 661691, "Origin": "Kafka Consumer properties are generated as follows:", "Reference": "Kafka Consumer properties are generated as follows:\n1.", "LLMCandidates": ["Kafka Consumer properties are generated based on configuration context, including bootstrap servers, topics, and subscription patterns. Additional metadata for headers, offsets, and rebalancing is also initialized.", "Kafka consumer configuration is now derived from context properties, including pattern-based subscriptions and bootstrap servers. Additional fields for headers, offsets, rebalance flag, and properties map have been added.", "Kafka Consumer properties are generated based on the specified context. Additional configuration for pattern-based and topic list subscription has been added.", "Kafka Consumer properties are generated based on context configuration, including topics, bootstrap servers, and consumer timeout. Additional properties like batch size, batch duration and auto commit flag are also retrieved.", "Kafka Consumer properties are generated based on the configuration context. Additional headers, topic metadata, rebalance flag, and Kafka properties are initialized for pattern-based or topic list subscription. Bootstrap servers are required and consumer properties are set based on their configuration."]}
{"SampleId": 5051649, "Origin": "Returns the builder for the settings used for calls to labelAudio.", "Reference": "Returns the builder for the settings used for calls to listEvaluationJobs.", "LLMCandidates": ["Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs."]}
