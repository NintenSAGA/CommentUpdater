{"SampleId": 5075805, "Origin": "Save basic clusters.", "Reference": "Save cluster basic configuration.", "LLMCandidates": ["Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration."]}
{"SampleId": 668963, "Origin": "Configure a sslConfig for the server using the legacy configuration", "Reference": "Configure a SSLConfig.Builder for the server using the legacy configuration", "LLMCandidates": ["Configure an SSLConfig.Builder object for the server using the legacy configuration", "Configure an SSLConfig.Builder object for the server using the legacy configuration.", "Configure an SSLConfig.Builder object for the server using the legacy distributionConfig.", "Configure an SSLConfig builder for the server using the legacy configuration", "Configure an SSLConfig builder for the server using the legacy configuration"]}
{"SampleId": 5425047, "Origin": "If the wrapping fails,\nthen null is returned.", "Reference": "If wrapping fails, returns null.", "LLMCandidates": ["Wraps the given object into a JSONObject or JSONArray based on its type. If wrapping fails or the object is null, then null is returned.", "Wraps the given object into a JSON object or array if it's supported type, returns the input object itself if it is already a JSON object or array, otherwise returns null. If wrapping fails, then null is returned.", "If the object cannot be wrapped, null is returned.", "Wraps the given object into a JSONObject or JSONArray based on its type. If the wrapping fails, then null is returned.", "If the object cannot be wrapped directly or is of a Java or javax package, then null is returned."]}
{"SampleId": 2217833, "Origin": "Test of npara method, of class GeometricDistribution.", "Reference": "Test of length method, of class GeometricDistribution.", "LLMCandidates": ["Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution."]}
{"SampleId": 4708521, "Origin": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL", "Reference": "Bui (2015) \"CacheDiff: Fast Random Sampling\" URL", "LLMCandidates": ["Generates an array of n indices sampled randomly from the range [0, N), using a partial Fisher-Yates shuffle and keeping track of the selected indices in a HashMap. Throws IllegalArgumentException if n > N or N < 0. Based on CacheDiff: Fast Random Sampling. - Bui (2015)", "generates n random indices from the array of size N using partial Fisher-Yates shuffle and keeps track of selected indices using a HashMap.", "Draws a sparse sample of n indices from an array of size N using the Fisher-Yates shuffle algorithm and keeps track of moved elements using a HashMap.\n\nBui (2015) \"CacheDiff: Fast Random Sampling\" URL", "This method samples n indices from an array of length N using a partial Fisher-Yates shuffle algorithm and keeps track of moved elements using a HashMap.", "Draws a sparse sample of n indices from an array of size N using the Fisher-Yates shuffle algorithm and keeps track of already selected indices using a HashMap.\n\nBui (2015) \"CacheDiff: Fast Random Sampling\" URL"]}
{"SampleId": 339279, "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the search\nresult.", "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search\nresult.", "LLMCandidates": ["If it's successfully completed, {@link ListenableFuture#get()} will return a result of type {@link LibraryResult}. The search result can be obtained by calling {@link LibraryResult#getMediaItems()}.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link ListenableFuture#get()} will return a result of type {@link LibraryResult}. The search result can be obtained by calling {@link LibraryResult#getMediaItems()}.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result."]}
{"SampleId": 5629914, "Origin": "Sets the options.", "Reference": "Set the options.", "LLMCandidates": ["Sets the DialogNodeOutputOptionsElement list for further building.", "Sets the DialogNodeOutputOptionsElement list for further building operations.", "Sets the DialogNodeOutputOptionsElement list for further building operations.", "Sets the options for the builder instead of directly assigning it to this object and returns the builder instance for chaining.\n\npublic Builder options(List<DialogNodeOutputOptionsElement> options) {\n      this.options = options;\n      return this;", "Sets and updates the options with the given list"]}
{"SampleId": 2996629, "Origin": "Convenience method to get custom install file", "Reference": "Convenience method to get custom installation script", "LLMCandidates": ["Returns the installation properties from the given file path or classpath resource. If the file does not exist, an exception is thrown.", "Convenience method to load custom installation properties from either an absolute file path or the classpath based on the existence of the file.", "Convenience method to load custom installation properties from either an absolute file path or classpath resource based on availability.", "Returns the installation properties from the specified file or classpath resource\n\nIf a file path is provided via system property \"installation.script\", the method attempts to load the file and returns its contents as Properties object. If the file does not exist, it falls back to loading the file from the classpath using getClass().getClassLoader().getResourceAsStream()\n\nIf no file path is provided, an empty Properties object is returned. Logging messages indicate whether the installation script was loaded from an absolute path or classpath.\n\nThrows IOException and RuntimeException if loading the file fails. Closes the input stream in a finally block to ensure proper resource management.", "Convenience method to load and return custom installation properties based on file existence. If a file path is provided via system property, it will be loaded from the absolute path. Otherwise, it will be loaded from classpath."]}
{"SampleId": 5629994, "Origin": "Sets the confidence.", "Reference": "Set the confidence.", "LLMCandidates": ["Sets the confidence with this method returning a builder for chaining further calls.", "Sets the confidence with this method returning a Builder object for method chaining.", "Sets the confidence for this builder and returns it.", "Sets the confidence for this builder and returns it.", "Sets the confidence for this builder and returns it."]}
{"SampleId": 3992375, "Origin": "Request an update of the current cluster metadata info, return the current version before the update", "Reference": "Request an update of the current cluster metadata info, return the current updateVersion before the update", "LLMCandidates": ["Request an update of the current metadata info, return the current updateVersion before the update", "Request an update of the current metadata info, return the current updateVersion before the update", "Request an update of the current metadata info, return the current updateVersion before the update", "Request an update of the current metadata info, return the current updateVersion before the update", "Request an update of the current metadata info, return the current updateVersion before the update"]}
{"SampleId": 570076, "Origin": "Gets the full path from a full filename, which is the prefix + path.", "Reference": "Gets the full path from a full fileName, which is the prefix + path.", "LLMCandidates": ["Gets the full path from a given file name by calling doGetFullPath method with the provided fileName and setting the boolean argument to true.", "Gets the full path from a given file name by calling doGetFullPath method with the specified boolean argument of true", "Gets the full path from a given file name by calling doGetFullPath method with the specified boolean argument of true", "Gets the full path from a given file name, which is obtained by calling doGetFullPath with the provided fileName and setting the path argument to true.", "Gets the full path from a given file name by calling doGetFullPath with the provided fileName and setting the boolean argument to true"]}
{"SampleId": 5455336, "Origin": "Unlinks interior Node p with predecessor trail.", "Reference": "Unlinks interior Node p with predecessor pred.", "LLMCandidates": ["Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred."]}
{"SampleId": 6165700, "Origin": "Create a new client with the given connection string.", "Reference": "Create a new client with the given client settings.", "LLMCandidates": ["Create a new MongoClient instance using the given settings.", "Create a new MongoClient based on the given settings.", "Create a new MongoClient based on the given settings.", "Create a new MongoClient based on the given settings.", "Create a new MongoClient instance using the given settings."]}
{"SampleId": 5062276, "Origin": "The buffer resets\nafter this method is called, so this method should only be called once per BlobDescriptor.", "Reference": "The buffer\nresets after this method is called, so this method should only be called once per computation.", "LLMCandidates": ["This method computes the SHA-256 digest of the data accumulated so far and updates the descriptor digest with the new hash value. The buffer is reset after this method is called.", "This method computes the SHA-256 digest of the buffer up to the current position and updates the descriptorDigest field with the resulting DescriptorDigest instance. The buffer's position is reset to zero after this method is called, so it should only be invoked once per BlobDescriptor.", "This method computes the SHA-256 digest of the data held by this BlobDescriptor and updates its DescriptorDigest with the computed value.", "This method computes the SHA-256 digest of the data held by this BlobDescriptor and updates its descriptorDigest field accordingly.", "This method computes and stores the SHA-256 digest of the data held by the BlobDescriptor object. The hexadecimal representation of the digest is also generated and stored."]}
{"SampleId": 336204, "Origin": "Sets the host's {@link OnBackPressedDispatcherOwner}.", "Reference": "Sets the host's {@link OnBackPressedDispatcher}.", "LLMCandidates": ["Sets the host's OnBackPressedDispatcher.", "Sets the OnBackPressedDispatcher for this component.", "Sets the OnBackPressedDispatcher for this component.", "Sets the OnBackPressedDispatcher for the component.", "Sets the OnBackPressedDispatcher for the component."]}
{"SampleId": 1922872, "Origin": "Creates a {@link NativeLinkable} using sources compiled by the D compiler.", "Reference": "Creates a {@link NativeLinkableGroup} using sources compiled by the D compiler.", "LLMCandidates": ["Creates a NativeLinkable using sources compiled by the D compiler for an executable build target.", "Creates a NativeLinkable using sources compiled by the D compiler. Specifically, it filters BuildDeps of type NativeLinkableGroup instead of NativeLinkable.", "Creates a NativeLinkable using sources compiled by the D compiler for a build target.", "Creates a NativeLinkable using sources compiled by the D compiler for a build target.", "Creates a NativeLinkable using sources compiled by the D compiler, with modifications to filter BuildDeps based on NativeLinkableGroup instead of NativeLinkable."]}
{"SampleId": 3037028, "Origin": "Sets the CPU status (free or busy).", "Reference": "Sets the CPU status (free or busy since some ms).", "LLMCandidates": ["Sets the status indicating whether the object is busy or not. Previously named setIsBusy(boolean isBusy), now named setBusySince(int busySince) and accepts an integer argument representing the number of milliseconds since the object became busy.", "Sets the status of being busy for a certain period of time.", "Sets the busy status and sets the time in milliseconds that this object has been considered busy since the last reset.", "Sets the status indicating whether this builder is busy or not, with a given time duration since it became busy.", "Sets the status indicating whether this builder is busy or not, with a given time duration since it became busy."]}
{"SampleId": 6017988, "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the maximum for each pixel across all specified bands in the given {@link Planar} image, and updates the shape of the output image to match the input image.", "Computes the maximum for each pixel across all specified bands in the given {@link Planar} image, and sets the output image with the same width and height as the input image.", "Computes the maximum for each pixel across all specified bands in the given {@link Planar} image. The output will have the same width and height as the input image.", "Computes the maximum for each pixel across all specified bands in the {@link Planar} image, and sets the output image to have the same dimensions as the input image.", "Computes the maximum for each pixel across all specified bands in the given {@link Planar} image and updates the output image with the results."]}
{"SampleId": 4396494, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. If AccessToken is not null, it will be replaced with \"***Sensitive Data Redacted***\" in the generated string.", "Returns a string representation of this object; useful for testing and debugging. If AccessToken is not null, it will be hidden by \"***Sensitive Data Redacted***\" for security reasons.", "Returns a string representation of this object with sensitive AccessToken data redacted for security purposes.", "Returns a string representation of this object with sensitive AccessToken data redacted for security purposes.", "Returns a string representation of this object; useful for testing and debugging. If AccessToken is not null, it will be masked with \"***Sensitive Data Redacted***\" for security reasons."]}
{"SampleId": 4617099, "Origin": "Closes the Websocket-Connection.", "Reference": "Closes the WebSocket connection.", "LLMCandidates": ["Closes the WebSocket-connection without providing a reason.", "Closes the Websocket-connection.", "Closes the Websocket-connection.", "Closes the WebSocket connection without providing a reason.", "Closes the WebSocket connection without providing a reason."]}
{"SampleId": 3676014, "Origin": "For example, the period in hours between two times can be calculated\nusing {@code startTime.periodUntil(endTime, HOURS)}.", "Reference": "For example, the period in hours between two times can be calculated\nusing {@code startTime.until(endTime, HOURS)}.", "LLMCandidates": ["For example, the difference in hours between two LocalTimes can be calculated using {@code startTime.until(endTime, HOURS)}.", "Calculate the period between this LocalTime and another LocalTime in different time units using this method. For example, the period in hours can be calculated using {@code this.until(endTime, HOURS)}.", "Calculate the period between this time and another LocalTime in the given temporal unit. For example, the period in hours between two times can be calculated using {@code this.until(endTime, HOURS)}.", "For example, the duration between two LocalTimes can be calculated using {@code this.until(endTime, unit)", "For example, the difference in hours between two LocalTimes can be calculated using {@code startTime.until(endTime, HOURS)}."]}
{"SampleId": 5724303, "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 character bytes - each byte is a truncated\nchar.", "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated\nchar.", "LLMCandidates": ["Converts an array of binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated representation.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated character representation.", "Converts an array of binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated character."]}
{"SampleId": 2050129, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses downloads if they are currently running.", "Pauses downloads if they are currently running. Sets the 'downloadsPaused' flag to true and sends a message to set the state to 'paused'.", "Pauses downloads if they are currently not paused.", "Pauses downloads if they are currently not paused.", "Pauses downloads if they are currently not paused."]}
{"SampleId": 6190739, "Origin": "Loads the {@link Class} using the application {@link ArtifactClassLoader}.", "Reference": "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "LLMCandidates": ["Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the {@link Class} using the test runner plugin {@link ArtifactClassLoader}.", "Loads the specified {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the specified {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the specified {@link Class} using the test runner plugin {@link ArtifactClassLoader}."]}
{"SampleId": 440280, "Origin": "Convenient way to build a {@code BeamSqlRowType}.", "Reference": "Convenient way to build a {@link Schema}.", "LLMCandidates": ["Convenient way to build a BeamSqlSchema.", "Convenient way to build a BeamSqlSchema.", "Convenient way to build a BeamSqlSchema.", "Convenient way to build a BeamSqlSchema.", "Convenient way to build a BeamSqlSchema."]}
{"SampleId": 2357146, "Origin": "Calculates intersection of the image and the render filter region in the coordinate system relative to image.", "Reference": "Calculates intersection of the image and the render filter region in the coordinate system relative to the image.", "LLMCandidates": ["Calculates intersection of the image and the render filter region in the coordinate system relative to the image using the provided transformation matrix.", "Calculates intersection of the image and the render filter region using the provided ImageRenderInfo and the current rectangle in the coordinate system relative to image.", "Calculates intersection of the image and the render filter region using the given ImageRenderInfo and its CTM matrix in the coordinate system relative to the image.", "Calculates intersection of the image and the render filter region using the provided ImageRenderInfo's CTM matrix in the coordinate system relative to the image.", "Calculates intersection of the image and the render filter region in the coordinate system relative to the image using the given transformation matrix."]}
{"SampleId": 4471751, "Origin": "If keys = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "Reference": "If {@code keyFilter = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.", "LLMCandidates": ["Returns the current key filter value.", "Returns the specified key filter.", "Returns the specified key filter.", "Returns the key filter string.", "Returns the key filter string."]}
{"SampleId": 6100158, "Origin": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "Reference": "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "LLMCandidates": ["CAUTION: Does NOT recognize values only with a time format (......[+-Z]:----), but also accepts values matching the \"Now and Today\" format according to NowAndTodayUtil.", "CAUTION: Does NOT recognize values without timezone information (...[+-Z]...)}}\n\nThis method checks if the given ISO date string is in the \"time only\" format or matches the \"Now and Today\" format.\nIt does not recognize values with a timezone information (e.g. [+-Z]...).", "CAUTION: Does NOT recognize values only with a time representation (hh:mm:ss), but also accepts values in the format of \"Now\" or \"Today\".", "CAUTION: Does NOT recognize values with just a time format (hh:mm:ss), or a date-time format recognized by NowAndTodayUtil.isNowOrTodayFormat(...)", "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...). This method now also accepts values in the format of \"NowOrToday\" as defined by the helper class NowAndTodayUtil."]}
{"SampleId": 3403203, "Origin": "generic method for untyped messages.", "Reference": "generic method for untyped remoting.", "LLMCandidates": ["This method is used to send untyped messages with a given message ID and optional arguments to a specified actor using the scheduler.", "Dispatches a message with the given ID and arguments to the actor's scheduler.", "This method is used to send a message with given messageId and optional arguments to the actor's scheduler for processing. The call will be enqueued asynchronously with the sender as the caller.", "Dispatches a message with given ID and arguments to this actor using Akka scheduler.", "Dispatches untyped messages to the Akka actor system using Akka's enqueueCall method."]}
{"SampleId": 2912053, "Origin": "Sets the additional trade information, defaulted to an empty instance.", "Reference": "Sets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Sets the PortfolioItemInfo for additional trade information. Performs null check using JodaBeanUtils before assignment.", "Sets the PortfolioItemInfo for additional trade information. Validates the input and assigns it to the builder.", "Sets the PortfolioItemInfo for additional trade information. Validates the input and assigns it to the builder.", "Sets the PortfolioItemInfo for additional trade information, defaulted to a null instance if not provided. Performs validation using JodaBeanUtils.notNull(info, \"info\").", "Sets the PortfolioItemInfo for additional trade information, which should not be null."]}
{"SampleId": 6045146, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given classNameId and classPK could not be found.", "* Find the CalendarResource with the given classNameId and classPK.\n *\n * @param classNameId the primary key of the class\n * @param classPK the primary key of the resource\n * @return the CalendarResource with the given primary keys, or {@code null} if it could not be found\n * @throws com.liferay.calendar.NoSuchResourceException if the CalendarResource could not be found\n */", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given class ID and primary key could not be found.", "throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given classNameId and classPK cannot be found.", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given classNameId and classPK does not exist."]}
{"SampleId": 113779, "Origin": "Initializes and returns the hashtable of all permissions known in the system.", "Reference": "Initializes and returns the linked hash map of all permissions known in the system.", "LLMCandidates": ["Initializes and returns an immutable map of all permissions known in the system.", "Initializes and returns an immutable LinkedHashMap of all permissions known in the system. The map is initialized the first time this method is called, and subsequent calls will return the same instance.", "Initializes and returns an unmodifiable map of all permissions known in the system.", "Initializes and returns an unmodifiable LinkedHashMap of all permissions known in the system. The map is initialized only if it is null.", "Initializes and returns an immutable map of all known permissions in the system."]}
{"SampleId": 4474377, "Origin": "Grants the role read permissions on the resource.", "Reference": "Sets the read permission status.", "LLMCandidates": ["Sets the value of readPermission based on the input boolean parameter.", "Sets the read permission for this RolePermissions object based on the given boolean value.", "Sets the value of readPermission based on the given boolean parameter.", "Sets the value of readPermission based on the given boolean.", "Sets the value of readPermission based on the given boolean."]}
{"SampleId": 1843363, "Origin": "Waits during {@code timeout} until text extracted from specified {@code webElement} by {@link", "Reference": "Waits during {@code timeout} until value extracted from specified {@code element} by {@link", "LLMCandidates": ["Waits during {@code timeout} for the specified {@link WebElement}'s text to equal the given {@code expected} String.\nIf the text does not match, an error message will be displayed with the expected and actual values.", "Waits during {@code timeout} for the value of the specified {@code element} to equal {@code expectedValue}.\nIf the values do not match, an error message will be displayed with the actual and expected values.", "```vbnet\nWaits during {@code timeout} for the value of the given {@code element}'s text to equal {@code expectedValue}.\n```", "Waits during {@code timeout} for the specified {@code WebElement}'s value to equal the given {@code expected} String. If the value does not match after the timeout expires, an exception will be thrown with a message showing the current value and the expected one.", "Waits during {@code timeout} until the value extracted from the specified {@code element} matches the expected {@code expected} value.\nIf the value does not match after the specified timeout, an exception will be thrown with a message indicating the expected and actual values."]}
{"SampleId": 1311563, "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate", "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate", "LLMCandidates": ["// Scenario:\n// - no CA inherited trust\n// - gateway does not explicitly trust the service, but automatically validates against self-signed certificates\n// - service trusts gateway certificate\n//\n// Test case for allowing self-signed certificates in mutual TLS authentication between a gateway and an API.\npublic void shouldSucceedWhenAllowedSelfSigned() {\n...\n\n// The updated method connects to an API instead of a service, but the trust scenario remains the same.\n// The gateway trusts the self-signed certificate of the API and vice versa.", "Scenario:\n- no CA inherited trust\n- gateway does not explicitly trust the API, but automatically validates against self-signed\n- API trusts gateway certificate", "Scenario:\n- no CA inherited trust\n- gateway does not explicitly trust the API, but automatically validates against self-signed\n- API trusts gateway certificate.", "Scenario:\n- no CA inherited trust\n- gateway does not explicitly trust the API, but automatically validates against self-signed\n- API trusts gateway certificate", "// Scenario:\n// - no CA inherited trust\n// - gateway does not explicitly trust the service, but automatically validates against self-signed certificates\n// - api or service trusts gateway certificate\n\n// This test checks if the gateway can successfully connect to an API or service that presents a self-signed certificate,\n// when the gateway is configured to allow such connections.\n\n// Given:\n// - The gateway configuration allows self-signed certificates (TLS_ALLOWSELFSIGNED = true)\n\n// When:\n// - The gateway attempts to connect to an API or service using mutual TLS authentication, with the given request and required auth type\n// - The API or service presents a self-signed certificate\n\n// Then:\n// - The gateway should successfully establish the connection and return a non-error response from the callback handler."]}
{"SampleId": 1878506, "Origin": "Check if there is any negative cost (= improvement).", "Reference": "Find the smallest (most negative) value.", "LLMCandidates": ["Find the index of the minimum cost (= improvement) in the given array.", "Find the index of the minimum cost (= improvement) in an array of costs.", "Find the index of the minimum cost (= improvement) in the given array.", "Find the index of the minimum cost (= improvement) in the given array.", "Find the index of the minimum cost (= improvement) in the given array."]}
{"SampleId": 302612, "Origin": "see\nURL\nhtml", "Reference": "see\nURL", "LLMCandidates": ["@inheritdoc - Calling inspect on an ST instance may lead to an ArrayIndexOutOfBoundsException in 4.0.2. If interactive testing is enabled, inspect will wait for the visualization window to close before continuing, otherwise the windows are forced closed and all tests continue.", "@code testEarlyEval} renders a simple STG template file and checks if its rendered value matches the expected string. It also attempts to display the visualization of the evaluated template using {@link STViz}, but due to an ArrayIndexOutOfBoundsException in 4.0.2, it either waits for the close event or disposes and waits for all windows to close instead.", "@inheritdoc - Calling inspect on an ST instance may cause an java.lang.ArrayIndexOutOfBoundsException in some versions. This test checks if the inspection window can be closed interactively or not. If interactive is true, the inspection window will be allowed to close normally. Otherwise, it will be forcibly closed using a wait-and-dispose approach.", "@inheritdoc - Calling inspect on 'st' instance led to an ArrayIndexOutOfBoundsException in 4.0.2. If interactive mode is enabled, wait for the visualizer window to close. Otherwise, dispose the viewFrame and wait for all windows to be closed.", "@inheritdoc - Calling inspect on the 'ST' instance may lead to an ArrayIndexOutOfBoundsException in some versions. In interactive mode, it will wait for the inspection window to close; otherwise, it will dispose the inspection window and wait for all windows to close."]}
{"SampleId": 6192460, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "LLMCandidates": ["Create new Builder based on an existing CoreEvent instance.", "Create new Builder based on an existing CoreEvent instance.", "Create new Builder based on an existing CoreEvent instance.", "Create new Builder based on an existing CoreEvent instance.", "Create new Builder based on an existing CoreEvent instance."]}
{"SampleId": 2337369, "Origin": "User / Group may update meta data of nodes: rename files and folders, change classification, etc.", "Reference": "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "LLMCandidates": ["User / Group may update metadata of nodes: rename files and folders, change classification, etc. (getter method renamed to isChange)", "User / Group may update metadata of nodes: rename files and folders, change classification, etc. (getter method renamed from \"getChange\" to \"isChange\")", "User / Group may update metadata of nodes: rename files and folders, change classification, etc. (getter method renamed from \"getChange\" to \"isChange\")", "User / Group may update metadata of nodes: rename files and folders, change classification, etc. (changed to reflect method name modification from \"getChange\" to \"isChange\")", "User / Group may update metadata of nodes: rename files and folders, change classification, etc. (getter renamed to isChange())"]}
{"SampleId": 4396481, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging with sensitive value redacted}}\n\nFor example:\n\nName: John Doe, Value: ***Sensitive Data Redacted***", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging. If Value is not null, it will be redacted due to sensitivity.", "Returns a string representation of this object; useful for testing and debugging. If Value is not null, its value will be redacted with \"***Sensitive Data Redacted***\" instead.", "Returns a string representation of this object; useful for testing and debugging. If Value is not null, its value will be redacted with \"***Sensitive Data Redacted***\" instead."]}
{"SampleId": 1118960, "Origin": "See {@link SyslogConstants} and RFC 3164 for more information about the", "Reference": "See RFC 3164 for more information about the", "LLMCandidates": ["Sets the facility string based on the given syslog facility. If the given facility is null, no action will be taken. If the given facility is unknown, a warning message will be printed and the default syslog facility (USER) will be used instead. See {@link SyslogConstants} and RFC 3164 for more information about the different syslog facilities.", "Sets the facility for syslog messages based on the given String. If the facility is valid, sets the corresponding syslogFacility and facilityStr variables. Otherwise, prints an error message and defaults to USER facility.}\n\nSee {@link SyslogConstants} and RFC 3164 for more information about the available syslog facilities.", "Sets the facility for logging based on the given string. If the facility is valid, sets the syslogFacility and facilityStr accordingly. Prints an error message if an unknown facility is provided and defaults to USER facility. See {@link SyslogConstants} and RFC 3164 for more information about the available facilities.", "sets the facility for syslog messages based on the provided string. If the facility is valid, it converts it to the corresponding syslogFacility constant and sets facilityStr accordingly. Otherwise, it prints an error message and defaults to LOG_USER facility.}\n\nSee {@link SyslogConstants} and RFC 3164 for more information about the available syslog facilities.", "Sets the facility for syslog messages based on the given string. If the facility is valid, sets the corresponding syslogFacility and facilityStr accordingly. Prints an error message if an unknown facility is given. See {@link SyslogConstants} and RFC 3164 for more information about the available syslog facilities."]}
{"SampleId": 4388500, "Origin": "Once you've created\na DB parameter group, you need to associate it with your DB instance\nusing ModifyDBInstance .", "Reference": "Once you've created a DB parameter group,\nyou need to associate it with your DB instance using", "LLMCandidates": ["Creates a new DBParameterGroup based on the provided request and returns it. Use ModifyDBInstance to associate the newly created DBParameterGroup with your DB instance afterwards.", "Creates a new DBParameterGroup based on the given request and returns it. Use ModifyDBInstance to associate the created DBParameterGroup with your DB instance afterwards.", "Creates a DBParameterGroup object based on the given CreateDBParameterGroupRequest and invokes AWS service using the specified execution context and request metrics. Once created, you can use ModifyDBInstance to associate it with your DB instance.", "Creates a DBParameterGroup based on the given request and returns the created DBParameterGroup. Use ModifyDBInstance to associate it with your DB instance afterward.", "Creates a new DBParameterGroup using the provided CreateDBParameterGroupRequest and returns it. Use ModifyDBInstance to associate this newly created DBParameterGroup with your DB instance afterward."]}
{"SampleId": 2231080, "Origin": "Returns the list of configured WAN publisher targets for this WAN\nreplication.", "Reference": "Returns the list of custom WAN publisher implementations for this WAN\nreplication.", "LLMCandidates": ["Returns the list of configured CustomWAN publisher targets for this WAN replication.", "Returns the list of configured custom WAN publisher targets for this WAN replication.", "Returns the list of configured custom WAN publisher targets for this WAN replication.", "Returns the list of configured custom WAN publisher targets for this WAN replication.", "Returns the list of configured custom WAN publisher targets for this WAN replication."]}
{"SampleId": 3143529, "Origin": "RemoveAxiom change objects are automatically generated.", "Reference": "The appropriate RemoveAxiom change objects are automatically\ngenerated.", "LLMCandidates": ["Removes the given Axioms from the Ontology.\n\nNote: This method generates ChangeReport objects to represent the modifications made.\n\n(Assuming the original comment was \"RemoveAxiom change objects are automatically generated.\")", "Removes the given OWLAxioms from the specified ontology.", "Removes the given Axioms from the specified Ontology", "Removes the given Axioms from the specified Ontology", "Removes axioms from an Ontology. The given axioms are passed as an array."]}
{"SampleId": 2973497, "Origin": "Return a signature object containing the current signature state.", "Reference": "Return the signature.", "LLMCandidates": ["Generate and return the current signature as a byte array based on the key algorithm. Supported algorithms are RSA_SIGN, RSA_GENERAL, EDDSA, ECDSA, and DSA. If the key algorithm is unsupported, an UnsupportedOperationException is thrown.", "Generates and returns a PGPSignature based on the content signer's algorithm. If the key algorithm is RSA_SIGN, RSA_GENERAL, EDDSA, ECDSA or DSA, the method directly returns the signature in byte array format. Otherwise, an UnsupportedOperationException is thrown.", "Returns the signature bytes for the specified key algorithm: RSA, ECDSA, DSA or ED25519.\nThrows an UnsupportedOperationException if the key algorithm is not supported.", "Return a signature in its raw byte form based on the current key algorithm and hash algorithm used by the content signer object. If the key algorithm is not supported (RSA_SIGN, RSA_GENERAL, EDDSA, ECDSA or DSA), an UnsupportedOperationException will be thrown.", "Return a signature in its raw byte form if the key algorithm is RSA, DSA, ECDSA or ED25519. Throws an UnsupportedOperationException for other key algorithms."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "Reference": "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "LLMCandidates": ["Sets the label filter for selecting settings. The settings with a label matching the filter will be returned.", "Sets the label filter for selecting settings with a label matching the given filter.", "Sets the label filter for selecting settings with a label matching the given filter.", "Sets the label filter for selecting settings. The settings with a label matching the given filter will be returned.", "Sets the label filter for selecting settings based on the given filter string."]}
{"SampleId": 5724604, "Origin": "Adds a new URI to the list of redirects.", "Reference": "Adds a new URI to the collection.", "LLMCandidates": ["Adds a new URI to both the unique and all lists.", "Adds a new URI to both the unique and all lists.", "Adds a new URI to both the unique and all lists.", "Adds a new URI to both the unique and all lists.", "Adds a new URI to both the unique and all lists."]}
{"SampleId": 2312746, "Origin": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.", "Reference": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link PointSet} region of a {@link Dataset}", "LLMCandidates": ["Returns the estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset.", "Returns the estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset."]}
{"SampleId": 2842886, "Origin": "ArchaiusModule however is stateful in that much of its configuration\nis supplied externally to the Guice injector.", "Reference": "ArchaiusModule however is stateful in\nthat it is initially set up outside of Guice.", "LLMCandidates": ["This method checks if the given object is identical to this instance.", "This method checks for equality between two ArchaiusModule objects. The implementation now simply returns true if the objects are identical.", "This method checks for equality of ArchaiusModule objects. It now simply returns true if this object is equal to the passed obj.", "This method checks if the object is equal to this instance.", "This method checks if two ArchaiusModule objects are equal by comparing their object references."]}
{"SampleId": 3511327, "Origin": "The {@link EventContextKeys#MESSAGE_TARGET}, if any", "Reference": "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "LLMCandidates": ["The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any.", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any."]}
{"SampleId": 3349712, "Origin": "Create a new empty {@link Sequential} with atomic guarantees on all mutative\noperations.", "Reference": "Create a new empty {@link Swap} with atomic guarantees on all mutative\noperations.", "LLMCandidates": ["Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations."]}
{"SampleId": 2535867, "Origin": "Extract the values from the array's elements by applying an extracting function on them.", "Reference": "Extract the values from the array's elements by applying an extracting function on them, the resulting list becomes\nthe new object under test.", "LLMCandidates": ["Extract the values from the given list's elements by applying an extracting function on them.", "Extract the values from the list's elements by applying an extracting function on them.", "Extract the values from the list's elements by applying an extracting function on them.", "Extract the values from the list's elements by applying an extracting function on them.", "Extract the values from the given list's elements by applying an extracting function on them."]}
{"SampleId": 4117678, "Origin": "Sets the {@code Cipher} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "Reference": "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "LLMCandidates": ["Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data."]}
{"SampleId": 4829574, "Origin": "This method allows you to specify IterationListeners for this model.", "Reference": "This method allows you to specify trainingListeners for this model.", "LLMCandidates": ["This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model."]}
{"SampleId": 2049560, "Origin": "Sets data to be parsed by libflac.", "Reference": "Sets the data to be parsed.", "LLMCandidates": ["Sets the data to be parsed by libflac using the given ByteBuffer.", "Sets data for parsing by libflac.", "Sets data for parsing by libflac.", "Sets data for parsing by libflac.", "Sets data for parsing by libflac."]}
{"SampleId": 3677760, "Origin": "Returns the next day-of-week adjuster, which adjusts the date to be\nthe next of the specified day-of-week after the specified date.", "Reference": "Returns the next day-of-week adjuster, which adjusts the date to the\nfirst occurrence of the specified day-of-week after the date being adjusted.", "LLMCandidates": ["Returns the next WithAdjuster instance based on the given day-of-week.", "Returns the next WithAdjuster, which adjusts the date to be the next day-of-week after the given one.", "Returns the next WithAdjuster instance based on the specified day-of-week.", "Returns the next WithAdjuster, which adjusts the day-of-week to be the next of the specified day-of-week after the given one.", "Returns the next WithAdjuster instance based on the given day-of-week."]}
{"SampleId": 4476347, "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addSettingWithResponse#ConfigurationSetting}", "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}", "LLMCandidates": ["@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}\n\nAdds a new ConfigurationSetting to the configuration store with a response.\n\n@ServiceMethod(returns = ReturnType.SINGLE)\npublic Mono<Response<ConfigurationSetting>> addConfigurationSettingWithResponse(ConfigurationSetting setting) {\ntry {\nreturn withContext(context -> addConfigurationSetting(setting, context));\n} catch (RuntimeException ex) {\nreturn monoError(logger, ex);\n}", "@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}\n\nAdds a new configuration setting using the given ConfigurationSetting object and returns a Mono response containing the added ConfigurationSetting. If an error occurs during the process, a Mono error is returned instead.", "@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}\n\nAdd a configuration setting asynchronously and return the corresponding Response object.", "@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}\n\nAdd a configuration setting asynchronously and return the response object.", "@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}\n\nAdd a ConfigurationSetting with the given setting object and return a Mono response containing the added ConfigurationSetting."]}
{"SampleId": 2706903, "Origin": "Set Account Element.", "Reference": "Set Kontenart.", "LLMCandidates": ["Sets the value of C_ElementValue_ID for this instance.\n\nIf the given parameter is less than 1, then sets the column COLUMNNAME_C_ElementValue_ID to null. Otherwise, sets it to the given Integer parameter.", "Sets the value of the ColumnName \"C_ElementValue_ID\" with the given integer parameter", "Sets the value of the column 'C_ElementValue_ID' with the given integer value. If the value is less than 1, sets the column value to null.", "Sets the value of C_ElementValue_ID column based on the given integer parameter. If the parameter is less than 1, sets the column value to null; otherwise, sets it to the given integer value wrapped in an Integer object.", "Set the Account Element value based on the given ID"]}
{"SampleId": 5458940, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Computes the hash of the given algorithm, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of the given algorithm, returning it as a byte array.", "Computes the hash of the given algorithm, returning it as a byte array."]}
{"SampleId": 3506207, "Origin": "The\n{@code orderType} is an enum value located under the {@link #ORDER_TYPE}\nkey.", "Reference": "The\n{@code orderType} is an enum value located under the {@link HasOrderTypeUtil#ORDER_TYPE}\nkey.", "LLMCandidates": ["The {@code orderType} is an enum value located under the {@link #HAS_ORDER_TYPE_UTIL#ORDER_TYPE} key.", "The {@code orderType} is an enum value located under the {@link #HAS_ORDER_TYPE_UTIL#ORDER_TYPE} key.", "The {@code orderType} is an enum value located under the {@link #HAS_ORDER_TYPE_UTIL.ORDER_TYPE} key.", "The {@code orderType} is an enum value located under the {@link #HasOrderTypeUtil#ORDER_TYPE} key.", "The {@code orderType} is an enum value located under the {@link #HasOrderTypeUtil#ORDER_TYPE} key."]}
{"SampleId": 105839, "Origin": "Read an optional Long value (stored as string) form a JSON Object.", "Reference": "Read an optional Date value (stored as string) form a JSON Object.", "LLMCandidates": ["Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object."]}
{"SampleId": 3241612, "Origin": "Gets the parent object in the object tree representing the unmarshalled xml document.", "Reference": "Gets the value of the anchorId property.", "LLMCandidates": ["Gets the anchor ID string.", "Gets the anchor ID string representation from this object.", "Gets the anchor ID string representation from this object.", "Gets the anchor ID string representation from this object.", "Gets the anchor ID string of the current object."]}
{"SampleId": 1352302, "Origin": "If modified and not discarded, sheet material will be stored before being disposed of.", "Reference": "If modified or upgraded, sheet material will be stored before being disposed of.", "LLMCandidates": ["If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of.", "If modified or upgraded, sheet material will be stored before being disposed of."]}
{"SampleId": 5454975, "Origin": "Get the value of the {@code accessible} flag for this object.", "Reference": "Get the value of the {@code accessible} flag for this reflected object.", "LLMCandidates": ["@deprecated Since version 9. Get the value of the {@code override} flag for this object.", "@Deprecated(since=\"9\")\nGet the value of the {@code override} flag for this object.", "@Deprecated(since=\"9\") Get the value of the {@code override} flag for this object.", "@deprecated Since version 9. Get the value of the override flag for this object.", "@deprecated Since version 9. Get the value of the override flag for this object."]}
{"SampleId": 2248673, "Origin": "Get icon img and append to buf", "Reference": "Get 16x16 icon img and append to buf", "LLMCandidates": ["Appends image src and other attributes to buf based on name or provided iconpath", "Appends image for given name or iconpath to buf", "Appends image for given name or iconpath to buf", "Generate and append the icon image URL to buf based on given name or provided iconpath", "Generate and append icon image tag to buf based on given name and optional iconpath. If iconpath is provided, use it instead of checking for the name in _icons or specific hardcoded strings. Otherwise, fallback to default plugin image."]}
{"SampleId": 1879787, "Origin": "Testing the timesTranspose(vector, vector) method of VMath class.", "Reference": "Testing the timesTranspose(vector, vector) method of {@link VMath} class.", "LLMCandidates": ["Testing the timesTranspose(vector, vector) method of VMath class.\n\nThis test case checks if the product of two vectors transposed is equivalent to the standard matrix multiplication of the original vectors.", "Testing the timesTranspose(vector, vector) method of VMath class.\nVerifying that the dot product of two vectors is equal to the transpose of one vector multiplied by the other.", "Testing the timesTranspose(vector, vector) method of VMath class.\nVerifying that the matrix product of two vectors is equal to the transposed version of the product of the same two vectors.", "Testing the timesTranspose(vector, vector) method of VMath class.\nVerifies that the dot product of two vectors is equivalent to the transpose of one vector multiplied by the other.", "Testing the timesTranspose(vector, vector) method of VMath class.\nVerifies that the timesTranspose operation correctly computes the product of a matrix and its transpose, given two input vectors."]}
{"SampleId": 4396558, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive Plaintext data redacted for testing and debugging purposes.", "Returns a string representation of this object with sensitive data redacted for testing and debugging."]}
{"SampleId": 3734015, "Origin": "Otherwise, this qualifier must contain all the arrays in superType.", "Reference": "Otherwise, this qualifier must contain all the sequences in superType.", "LLMCandidates": ["This qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "This qualifier must contain all the sequences in superType."]}
{"SampleId": 2735158, "Origin": "Returns bounds of the split button part.", "Reference": "Returns bounds of the menu button part.", "LLMCandidates": ["Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part."]}
{"SampleId": 1309912, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously gets an API by its id.", "Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API by its ID.", "Asynchronously gets an API by its ID."]}
{"SampleId": 2137945, "Origin": "Returns true if the constructor method is locally empty (allows calls to empty init and super\nconstructor).", "Reference": "Returns true if the constructor method is locally empty (allows calls to init and super\nconstructor).", "LLMCandidates": ["Returns true if all statements in the constructor method allow calls to empty init and super constructor.", "Returns true if all statements in the constructor method are either empty init calls or implicit super calls.", "Returns true if all statements in the constructor method are either empty init calls or implicit super calls.", "Returns true if all statements in the constructor method are either implicit super calls or initialization calls.", "Returns true if all statements in the constructor method are either calls to empty init or super constructor."]}
{"SampleId": 6018465, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log( 1 + input(x,y)) of the value passed in for the second argument in the input image.", "Sets each pixel in the output image to the log base e of (1 + input(x,y)/val) of the corresponding pixel in the input image.", "Sets each pixel in the output image to the logarithm base e of (1 + input(x,y)) of the corresponding pixel in the input image.", "Sets each pixel in the output image to log(1 + input(x,y)) of the corresponding value in the input image. The log base is determined by the input image type: float for GrayF32 and double for other types.", "Sets each pixel in the output image to the log base e of (1 + input(x,y)/val) of the corresponding pixel in the input image."]}
{"SampleId": 1401991, "Origin": "Creates a schemaless instance of a provider with the given values for fields f1 and f2.", "Reference": "Creates an instance of a provider with the given values for fields f1 and f2.", "LLMCandidates": ["Creates a instance of a provider with the given values for fields f1 and f2.", "Creates a instance of a provider with the given values for fields f1 and f2.", "Creates a instance of a provider with the given values for fields f1 and f2.", "Creates a instance of a provider with the given values for fields f1 and f2.", "Creates a instance of a provider with the given values for fields f1 and f2."]}
{"SampleId": 4866566, "Origin": "Add two URI path segments.", "Reference": "Add two Decoded URI path segments.", "LLMCandidates": ["Add two URI path segments, handling cases where one or both of them end with or start with a slash.", "Add two URI path segments with proper handling of trailing slashes", "Add two URI path segments with proper handling of trailing slashes", "Add two URI path segments with proper handling of slashes at the end or beginning", "Concatenate two URI paths, handling leading slashes appropriately."]}
{"SampleId": 1052994, "Origin": "In alarm, only minute dimensionality\nindicators are expected to process.", "Reference": "In alarm, only minute dimensionality\nmetrics are expected to process.", "LLMCandidates": ["This method processes Metrics instead of Indicators in an alarm.", "This method processes Metrics objects instead of Indicator objects. Only minute dimensionality Metrics are expected to be processed.", "This method processes Metrics objects instead of Indicator objects.", "This method processes MetaInAlarm objects based on the provided Metrics. Only matching Metrics are added to the corresponding Window with the given period and time bucket.", "This method processes Metrics objects instead of Indicator objects."]}
{"SampleId": 1402632, "Origin": "If {@code thread} is null, the list\nis immutable.", "Reference": "Equivalent to {@code copyOf(null, elems)}.", "LLMCandidates": ["Creates an immutable copy of the given iterable using an internal implementation.", "Creates an immutable copy of the given iterable.", "Creates an immutable copy of the given iterable.", "Creates an immutable copy of the given iterable collection.", "Creates an immutable copy of the given iterable collection."]}
{"SampleId": 5652502, "Origin": "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "Reference": "Creates a callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "LLMCandidates": ["Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user. The method now accepts no additional arguments.", "Creates callable for executing Entry#doubleWhoAmI(String, String, ReAuthnType, String) as given user. Now accepts no additional arguments.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user. The callable now accepts no additional arguments.", "Creates callable for executing Entry#doubleWhoAmI(String, String, ReAuthnType, String) as given user. The callable now takes no additional argument.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user. The method now accepts no additional argument."]}
{"SampleId": 3105766, "Origin": "Validate that I have a Exuberant ctags program I may use", "Reference": "Validate that there is a Universal ctags program.", "LLMCandidates": ["Validate that I have a Universal ctags program I may use.", "Validate that I have a Universal ctags program I may use", "Validate that I have a Universal ctags program I may use.", "Validate that I have a Universal ctags program I may use.", "Validate that I have a Universal ctags program I may use."]}
{"SampleId": 236993, "Origin": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.", "Reference": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.\n\n Tests for retrieving the status of a file using the given URI and options.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method using GetStatusPOptions instead of GetStatusOptions.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method using GetStatusPOptions instead of GetStatusOptions.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.\n\nTests the behavior of the getStatus method in the BaseFileSystem class using AlluxioURI and GetStatusPOptions as arguments.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.\n\nTests the behavior of the getStatus method when called with an AlluxioURI and GetStatusPOptions object."]}
{"SampleId": 2336970, "Origin": "### Effects: Provided user receives email with reset token.", "Reference": "### Effects: Provided user receives email with password reset token.", "LLMCandidates": ["Invokes the requestPasswordResetWithHttpInfo method with the given body parameter.", "Invokes the requestPasswordResetWithHttpInfo method with the provided ResetPasswordRequest object.\n\nThe effect remains unchanged: Provided user receives email with reset token.", "// Effects: Sends a request to reset password and receives email with reset token upon successful response.", "Calls the requestPasswordResetWithHttpInfo method to reset user's password and send email with reset token.", "This method sends a request to reset user's password using the provided body and receives email with reset token."]}
{"SampleId": 5082490, "Origin": "Performs thread dump and prints all available info to the given log.", "Reference": "Performs thread dump and prints all available info to the given log with WARN logging level.", "LLMCandidates": ["Performs thread dump and prints all available info to the given log. (Calls dumpThreads method with a boolean argument set to false)", "Performs thread dump with optional logging and prints all available info}}\n\npublic static void dumpThreads(@Nullable IgniteLogger log, boolean printWithoutLog) {\n    if (printWithoutLog) {\n        ThreadMXBean mxBean = ManagementFactory.getThreadMXBean();\n\n        final Set<Long> deadlockedThreadsIds = getDeadlockedThreads(mxBean);\n\n        if (deadlockedThreadsIds.isEmpty())\n            System.out.println(\"No deadlocked threads detected.\");\n        else {\n                System.out.println(\"Deadlocked threads detected\" +\n                    \"[deadlockedThreadsCnt=\" + deadlockedThreadsIds.size() + ']');\n\n                ThreadInfo[] threadInfos = mxBean.dumpAllThreads(mxBean.isObjectMonitorUsageSupported(), mxBean.isSynchronizerUsageSupported());\n\n                GridStringBuilder sb = new GridStringBuilder(\"Thread dump at \")\n                    .append(new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss z\").format(new Date(U.currentTimeMillis())))\n                    .append(NL);\n\n                for (ThreadInfo info : threadInfos) {\n                    printThreadInfo(info, sb, deadlockedThreadsIds);\n\n                    sb.append(NL);\n\n                    if (info.getLockedSynchronizers() != null && info.getLockedSynchronizers().length > 0) {\n                        printSynchronizersInfo(info.getLockedSynchronizers(), sb);\n\n                        sb.append(NL);\n                    }\n                }\n\n                sb.append(NL);\n\n                System.out.println(sb.toString());\n            }\n    } else {\n        dumpThreads(log, false);\n    }", "Performs thread dump with optional logging and prints all available info}}\n\nIf logging is provided, the thread dump will be printed to the log. Otherwise, no output will be generated.", "Performs thread dump and prints all available info to the given log.}\n\n{Performs thread dump with optional flag to control detailed output.", "Performs thread dump and prints all available info to the given log. (Calls dumpThreads method with boolean argument set to false.)"]}
{"SampleId": 1721041, "Origin": "If the columnIdent doesn't have a path the return value is null", "Reference": "If the columnName doesn't have a path the return value is null", "LLMCandidates": ["If the columnIdent's path is empty, return null. Otherwise, create a new ColumnIdent with the first element of the path and the rest of the elements if the path size is greater than 1.", "If the columnIdent does not have a path, return null.", "If the columnIdent doesn't have a path with size zero, return null; Otherwise, return a new ColumnIdent object with the first element of the path as its label and the remaining elements as its sub-paths.", "If the columnIdent's path is empty, the return value is null", "If the columnIdent does not have a path, the return value is null. Otherwise, a new ColumnIdent object is returned with the first element of the path as its label and the rest of the elements as its sub-columns."]}
{"SampleId": 1612088, "Origin": "Checks if the given {@code DetailAST} node is matching line and column number.", "Reference": "Checks if the given {@code DetailAST} node is matching line number, column number and token\ntype.", "LLMCandidates": ["Checks if the given {@code DetailAST} node is matching line and column number and has the same token type.", "Checks if the given {@code DetailAST} node is matching line and column number and has the same token type.", "Checks if the given DetailAST node is matching line, column number, and token type.", "Checks if the given DetailAST node is matching line, column number, and token type.", "Checks if the given DetailAST node is matching line and column number and token type."]}
{"SampleId": 1575389, "Origin": "Persists running state to the {@link RemoteRuntimeDataset}.", "Reference": "Persists running state to the {@link RemoteRuntimeTable}.", "LLMCandidates": ["Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}."]}
{"SampleId": 5631500, "Origin": "An array of objects defining the nodes in the dialog.", "Reference": "An array of objects describing the dialog nodes in the workspace.", "LLMCandidates": ["Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog.", "Returns a list of DialogNode objects representing the nodes in the dialog.", "Return a list of DialogNode objects representing the nodes in the dialog.", "Return a list of DialogNode objects representing the nodes in the dialog."]}
{"SampleId": 471868, "Origin": "The amount of time (in millisecond) which adds to waiting time when\nusing Linear back off strategy.", "Reference": "Maximum amount of time (in millisecond) a thread wait before retrying\nfailed request.", "LLMCandidates": ["Sets the maximum waiting time (in millisecond) before retrying when using Linear back off strategy.", "Sets the maximum waiting time (in millisecond) for Linear back off strategy.", "Sets the maximum waiting time (in millisecond) before retrying when using Linear back off strategy.", "Sets the maximum waiting time (in millisecond) before retrying when using Linear back off strategy.", "Sets the maximum waiting time (in millisecond) before retrying when using Linear back off strategy."]}
{"SampleId": 5323489, "Origin": "Specify charsets associated with the configured {@link #setLocations(List)\nlocations}.", "Reference": "An alternative to {@link #setLocations(List)} that accepts a list of", "LLMCandidates": ["Specify values associated with the configured {@link #setLocations(List<String>) locations}.", "Set the values associated with the configured locations.", "Set the values associated with the configured locations.", "Set the values associated with the configured locations.", "Set the values associated with the configured locations."]}
{"SampleId": 5244566, "Origin": "Builds maps of obj id to\nmd5 and case.", "Reference": "Builds maps of obj id to\nvalue and case.", "LLMCandidates": ["This method builds maps of case ID to CommonAttributeValueList based on a given correlation type and filters on specific mime types. The map keys are the case IDs, and the values are the corresponding CommonAttributeValueLists.", "Constructs maps of case ID to CommonAttributeValueList based on the given filter conditions and correlation type.", "Constructs a map of case ID to CommonAttributeValueList based on the given correlation type and filters. If correlationType is FILES\\_TYPE\\_ID, the method selects data from the SleuthkitCase database using the provided mimeTypesToFilterOn. Otherwise, it processes data from the EamDb instance table using the correlationType and case ID.", "Maps the given case ID to a list of CommonAttributeValues based on the filtering mimeTypes and correlation type. If the correlation type is FILES_TYPE, it fetches file data using SleuthkitCaseDbAccessManager, otherwise it processes the InstanceTable in EamDb. Throws exceptions if any error occurs during the process. Returns an empty HashMap if fails to process.", "Constructs a map of case ID to CommonAttributeValueList based on correlationType and filters. For FILES_TYPE_ID, uses CaseDbAccessManager.select() method from SleuthkitCase to retrieve the data. Otherwise, uses dbManager.processInstanceTableWhere() method to filter the data. Throws EamDbException or TskCoreException if an error occurs during processing. If an error is encountered, an empty HashMap is returned."]}
{"SampleId": 2081192, "Origin": "Moves on to next top level domain in {@code topLevelDomainsList}.", "Reference": "Moves on to next top level domain in {@code tldCycleIterator}.", "LLMCandidates": ["Moves on to next element in {@code tldCycleIterator}.", "Moves on to next TLD (Top Level Domain) in {@code tldCycleIterator}.", "Moves on to next TLD (Top Level Domain) in {@code tldCycleIterator}.", "Moves on to next element in {@code tldCycleIterator}.", "Moves on to next element in {@code tldCycleIterator}."]}
{"SampleId": 5316049, "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.", "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.", "LLMCandidates": ["Add the given HandlerMethodArgumentResolver s to this composite resolver.", "Add the given HandlerMethodArgumentResolvers using addAll method instead of adding each resolver individually.", "Add the given {@link HandlerMethodArgumentResolver}s to this composite resolver by using addAll method instead of adding each one individually.", "Add the given HandlerMethodArgumentResolvers using addAll() method instead of adding each one individually.", "Add the given HandlerMethodArgumentResolvers using addAll() method instead of adding each one individually."]}
{"SampleId": 80067, "Origin": "Gets the Chemical Dissolution Chamber of the ItemStackInput in the parameters", "Reference": "Gets the Chemical Dissolution Chamber of the ItemStack in the parameters", "LLMCandidates": ["Gets the ItemStack recipe for chemical dissolution corresponding to the input ItemStack.", "Gets the ItemStackRecipe for gas production from the given ItemStack input in the parameters using Chemical Dissolution Chamber.", "Gets the ItemStack recipe for chemical dissolution using the given input ItemStack in parameters", "Gets the ItemStack recipe for chemical dissolution with the given Input ItemStack", "Gets the ItemStack recipe for chemical dissolution based on the given input ItemStack."]}
{"SampleId": 1346635, "Origin": "Runs operations for a single client.", "Reference": "Runs operations for a single session.", "LLMCandidates": ["Runs operations for a single session with a CopycatSession object.", "Runs operations for a single session with a given CopycatSession object", "Runs operations for a single session with a CopycatSession object.", "Runs operations for a single session with a CopycatSession object.", "Runs operations for a single session with a CopycatSession object."]}
{"SampleId": 2318037, "Origin": "inverse of {@link #jacksonBson(String)}", "Reference": "inverse of {@link #jacksonThenBson(String)}", "LLMCandidates": ["inverse of {@link #bsonJackson(String)} - writes a BSON document to a buffer using the given JSON string and then reads the same document back using Jackson. If the documents do not match, an error is thrown.", "inverse of {@link #bsonJackson(String)} - writes BSON to a buffer using MongoDB driver, then reads and compares the resulting document with Jackson.", "inverse of {@link #bsonJackson(String)} - method name change in javadoc comment.", "inverse of {@link #bsonJackson(String)}\n\nThis method reads a JSON string and writes it to a BSON document using the provided `ObjectMapper`. Then, it reads the same BSON document back into a JSON node using the `BsonParser` and checks if the original JSON string and the parsed one are equal. If they're not, it fails with an error message.", "inverse of {@link #bsonJackson(String)} - renames method name accordingly."]}
{"SampleId": 5720694, "Origin": "are specifically excluded\nexcept for carriage return, linefeed, and the horizontal tab.", "Reference": "are specifically excluded\nexcept for carriage return, line-feed, and the horizontal tab.", "LLMCandidates": ["Checks if each character in the given text conforms to the XML 1.0 specification. Specifically excluded are high and low surrogate pairs that are not properly formed, unless they form a valid Unicode character.", "checks for valid XML characters in a given string. Characters specifically excluded are high and low surrogate pairs that are not part of a valid pair,\n except for carriage return, linefeed, and the horizontal tab.", "Checks if each character in the given text conforms to XML specifications. Characters that are not XML characters, including high and low surrogate pairs that are not properly formed, are excluded.", "checks the XML character validity of each character in a given string text. Characters that are not ASCII and not part of a valid surrogate pair are considered invalid and returned as hexadecimal representation along with an error message. This method assumes that text is not null, otherwise it returns an error message stating that \"A null is not a legal XML value\".\n}\n\nFor the given code modification, I assumed the name `text` for input string remains the same since it didn't change in the code snippet provided. However, if the variable name was changed in the updated code, please update the comment accordingly.", "Checks if a String conforms to XML character data restrictions. Specifically excludes high and low surrogate pairs that are not part of a valid pair, except for carriage return, linefeed, and the horizontal tab."]}
{"SampleId": 5459533, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Computes the hash of this module using the specified algorithm and returns it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of the given algorithm, returning it as a byte array.", "Computes the hash of the given algorithm, returning it as a byte array.", "Computes the hash of the given algorithm, returning it as a byte array."]}
{"SampleId": 6330488, "Origin": "Calls the specified converter function with the current Single instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Applies the given SingleConverter function to this Single instance and returns the converted result.", "Applies the given SingleConverter function to this Single instance and returns the converted result.", "Applies the given SingleConverter function to the current Single instance and returns its converted result.", "Applies the given SingleConverter function to this Single instance and returns the converted result.", "Applies the given SingleConverter function to this Single instance and returns the converted result."]}
{"SampleId": 6047536, "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Reference": "or throws a {@link NoSuchArticleException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if the article with the given resourcePrimKey and version is not found.", "Throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if the article with the given resourcePrimKey and version is not found.", "Throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if the article with the given resourcePrimKey and version is not found.", "Throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if no article with the given resourcePrimKey and version is found.", "Throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if no article with the given resource primkey and version is found."]}
{"SampleId": 2250226, "Origin": "Comments in the same 10-minute bucket and otherwise equal\n are considered equal.", "Reference": "Comments within 10 minutes (not necessarily in same bucket)\n and otherwise equal are considered equal.", "LLMCandidates": ["Comments with the same time difference within a certain threshold and otherwise equal are considered equal.", "Comments with the same type and equal attributes, including rating, text, name, and ASCII values of their timestamps, are considered equal if their time difference is within the allowed maximum skew.", "Comments with the same 10-minute time difference are considered equal.", "Comments with the same 10-minute time difference are considered equal.", "Comments with the same time difference within a specified threshold and otherwise equal are considered equal."]}
{"SampleId": 1721041, "Origin": "creates a new columnIdent which just consists of the path of the given columnIdent\ne.g.", "Reference": "creates a new columnName which just consists of the path of the given columnName\ne.g.", "LLMCandidates": ["Creates a new ColumnIdent based on the given ColumnIdent's path. For paths with size 0, returns null. For paths with size 1, returns a new ColumnIdent with the first element of the path. Otherwise, returns a new ColumnIdent with the first element and the sublist of the remaining elements in the path.", "generates a new ColumnIdent based on the given path with the first element being extracted and the rest of the elements remaining in the list.", "creates a new ColumnIdent which just consists of the prefix of given path in a switch manner\ne.g.\n\nfor case 0: return null;\nfor case 1: return new ColumnIdent(path.get(0));\nfor default: return new ColumnIdent(path.get(0), path.subList(1, path.size()));", "creates a new ColumnIdent by shifting the given ColumnIdent's path to the right. For example:}\n\n- Original size of the path: 3, new ColumnIdent will be created with path: [\"A\", \"B\", \"C\"] -> [\"B\", \"C\"]\n- Original size of the path: 1, new ColumnIdent will be created with path: [\"A\"] -> [\"A\"]\n- Otherwise, new ColumnIdent will be created with path: [first element of the original path], [remaining elements of the original path]", "creates a new ColumnIdent which consists of the prefix of the given ColumnIdent's path.\ne.g.\n\nFor instance, if the given ColumnIdent's path is [\"table1\", \"columnA\"], this method will return a new ColumnIdent with path [\"table1\"]."]}
{"SampleId": 3833366, "Origin": "Returns the capacity specified for each node, or empty to leave this decision to provisioning", "Reference": "Returns the resources requested for each node, or empty to leave this decision to provisioning", "LLMCandidates": ["Returns the node resources, or empty to leave this decision to provisioning", "Returns an Optional containing the NodeResources or empty if not set", "Returns an Optional containing the NodeResources or empty if not set", "Returns the node resources, or empty to leave this decision to provisioning", "Returns the node resources, or empty to leave this decision to provisioning"]}
{"SampleId": 2906488, "Origin": "Returns an immutable copy of the current headers.", "Reference": "Returns an immutable copy of the Headers for this request.", "LLMCandidates": ["Returns an immutable copy of the current headers map, where each key is associated with a collection of string values for that header. Only non-empty collections are included in the returned map.", "Returns an immutable copy of the current headers map, where each key is associated with a list of values for the corresponding header. The lists are immutable and may contain one or more values for each header.", "Returns an immutable copy of the current headers map, with collections replaced by unmodifiable lists for non-empty values.", "Returns an immutable copy of the current headers. The method now constructs a new Map using a LinkedHashMap and populates it with key-value pairs from the original headers, only adding those with non-empty values.", "Returns an immutable copy of the current headers map, where each key is associated with an unmodifiable list of its corresponding header values. If a value is empty, it will not be included in the result."]}
{"SampleId": 1357584, "Origin": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential.", "Reference": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is exponential.", "LLMCandidates": ["Purge the population of parts candidates as much as possible, since the cost of their later combinations can increase significantly. If the number of remaining parts exceeds the maximum allowed count, the smallest parts will be removed to keep the count within the limit.", "Purge the population of parts candidates that do not intersect with a smaller core rectangle or have weight less than the minimum, to reduce the cost of their later combinations which is worse than exponential. If the number of remaining parts is greater than the maximum allowed, remove the parts with the smallest weights until the limit is reached.", "Purge the population of parts candidates that have weight less than the minimum required weight or do not intersect with the core rectangle. Additionally, if the number of remaining parts exceeds the maximum allowed count, remove excess parts in descending order of their weights.", "Purge the population of parts candidates that do not intersect with a smaller core rectangle or have a weight less than the minimum allowed, in order to reduce the cost of their later combinations as much as possible.", "Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. If the number of remaining parts exceeds a specified limit, remove the smallest weighted ones to keep the count within the limit."]}
{"SampleId": 6043600, "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where parentFolderId = ?.", "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?", "LLMCandidates": ["Returns the sync DL objects before and after the current sync DL object in the ordered set where repositoryId = ? and modifiedTime is less than or equal to the given value.", "Returns the sync DL objects before and after the current sync DL object in the ordered set where modifiedTime = ? and parentFolderId = ?.", "Returns the sync DL objects before and after the current sync DL object in the ordered set where repositoryId = <code>modifiedTime</code> and parentFolderId = <code>parentFolderId</code>.}}\n\nThis comment should reflect the changes made to the method signature, which includes updating the parameter name \"parentFolderId\" to \"repositoryId\" and renaming the method name \"findByParentFolderId\\_PrevAndNext\" to \"findByM\\_R\\_PrevAndNext\". Also, I have corrected the typos in the comment text by changing \"ordered set\" to \"sorted set\" and \"where parentFolderId = ?\" to \"where repositoryId = <code>modifiedTime</code> and parentFolderId = ...\".", "Retrieves the SyncDLObjects with IDs before and after the given one based on modified time and repositoryId in the ordered set.", "Returns the sync DL objects before and after the current sync DL object in the ordered set where modifiedTime = ? and parentFolderId = ?."]}
{"SampleId": 3646276, "Origin": "Calculates the cash flow for a single trade.", "Reference": "Calculates the cash flow for a single closed trade.", "LLMCandidates": ["Calculates the cash flow for a closed trade. Throws an exception if the trade is still open and no exit index is provided.", "Calculates the cash flow for a closed trade.", "Calculates the cash flow for a closed trade.", "Calculates the cash flow for a closed trade.", "Calculates the cash flow for a closed trade."]}
{"SampleId": 3073837, "Origin": "Assigns a native mirror object to the given RBaseObject object.", "Reference": "Assigns a native mirror object ID to the given RBaseObject object.", "LLMCandidates": ["Assigns a native mirror object to the given RBaseObject, creating one if it doesn't exist yet.", "Assigns a native mirror object to the given RBaseObject, creating one if it doesn't exist first.", "Assigns a native mirror object to the given RBaseObject if it doesn't already have one, then executes ToNativeNodeGen on the mirror object.", "Assigns a native mirror object to the given RBaseObject if it doesn't already have one, then executes ToNativeNodeGen for the mirror object instead.", "Assigns a native mirror object to the given RBaseObject, creating one if it doesn't exist yet."]}
{"SampleId": 1314727, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name"]}
{"SampleId": 5440430, "Origin": "Appends a quoted string to a given buffer.", "Reference": "Appends a quoted string to the given string buffer.", "LLMCandidates": ["Appends a quoted string represented by a given String object to a StringBuffer", "Appends a quoted string represented by a given String object to a StringBuffer", "Appends a quoted string represented by a given String object to a StringBuffer", "Appends a quoted string represented by a given String object to a StringBuilder, which is then appended to the target StringBuffer.", "Appends a quoted string represented by a given String object to a StringBuffer object. The String object's characters are escaped appropriately before being added to the buffer."]}
{"SampleId": 296746, "Origin": "Return -1 if there are no tokens\n on channel between i and 0.", "Reference": "Return -1\nif there are no tokens on channel between {@code i} and 0.", "LLMCandidates": ["Return the index of the previous token on channel i. If i is greater than or equal to the size of the token list, or the token at position i is an end-of-file token or has the specified channel, then return i. Otherwise, search for the previous token that matches the specified channel starting from index i and moving backwards until a matching token is found or the beginning of the list is reached. If no such token exists, return -1.", "Return the index of the previous token on channel i. If i is greater than or equal to the size of the tokens list or if the token at index i is an EOF token or has the specified channel, return i. Otherwise, search for a token with the specified channel starting from the index i and decrementing the index until a matching token is found or the beginning of the list is reached. If no such token exists, return -1.", "Returns the index of the previous token on the given channel before the current index i. If there is no token on the given channel between i and 0, it returns -1.", "Return the index of the previous token on channel i. If i is greater than or equal to the size of the tokens list or the token at index i is EOF or has the specified channel, return i. Otherwise, search for the previous token that matches the specified channel and return its index. If there are no such tokens, return -1.", "* Returns the index of the previous token on channel i. If there is no such token, returns -1.\n\t * \n\t * If i is out of bounds (i >= size()), then the EOF token is considered as the previous one on every channel.\n\t * \n\t * Note that this method takes a synchronized index i to prevent race conditions when accessing the shared data structure.\n\t * \n\t * If the given channel does not match any of the tokens' channels, the method will iterate through all the indices from i down to 0 until an appropriate one is found or the beginning of the list is reached.\n\t*"]}
{"SampleId": 585425, "Origin": "Construct the default web view object.", "Reference": "Construct the CordovaWebView object.", "LLMCandidates": ["Constructs the default web view object based on the specified web view class.", "Construct the web view object using the specified class name from preferences", "Construct the web view object using the specified class name from preferences", "Construct the default web view object based on the specified class name", "Construct the default web view object based on the specified class name"]}
{"SampleId": 6018468, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log(1 + input(x,y)) of the input image with the given value.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image with a given value val.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image with value val.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image with the given value val.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image with a given value val."]}
{"SampleId": 1402019, "Origin": "This returns false for unstampable rule classes and for rules in the\nhost configuration.", "Reference": "This returns false for unstampable rule classes and for rules used to build tools.", "LLMCandidates": ["This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for rules with unsupported stamp configuration or in tool configuration."]}
{"SampleId": 6018004, "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all specified bands in the {@link Planar} image and updates the output image with the results.", "Computes the median for each pixel across all bands in the {@link Planar} image. After the computation, the output image will be reshaped to have the same dimensions as the input image.", "Computes the median for each pixel across all bands in the {@link Planar} image. After computing the median values, the output image is reshaped to have the same dimensions as the input image.", "Computes the median for each pixel across all specified bands in the {@link Planar} image. The output image has the same width and height as the input image.", "Computes the median for each pixel across all specified bands in the {@link Planar} image, and reshapes the output image to have the same dimensions as the input image."]}
{"SampleId": 6235497, "Origin": "In this test, we close an internal stream in the priority tree but tree should not change.", "Reference": "In this test, we close an internal stream in the priority tree.", "LLMCandidates": ["In this test, we close an internal stream in the priority tree, and the total distributed bytes should remain unchanged.", "In this test, we close an internal stream in the priority tree, and the total bytes distributed among other streams should not change.", "In this test, we close an internal stream in the priority tree, and the total bytes distributed among other open streams should remain unchanged.", "In this test, we close an internal stream in the priority tree and verify that the total bytes distributed among other streams remain unchanged.", "In this test, we close an internal stream in the priority tree and verify that the bytes distributed among other streams remain unchanged."]}
{"SampleId": 1462784, "Origin": "Adds a (non-optional non-minus) node to a join group partition.", "Reference": "Adds a (non-optional non-minus) node to a join group partition and\nupdates the set of definitely produced variables accordingly.", "LLMCandidates": ["Adds a non-optional non-minus node to a join group partition.", "Adds a non-optional non-minus node to a join group partition.", "Adds a non-optional non-minus node to a join group partition.", "Adds a non-optional non-minus node to a join group partition.", "Adds a non-optional non-minus node to a join group partition."]}
{"SampleId": 4788910, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If the given Objects `expected` and `actual` are not equal, an AssertionFailedError is thrown.", "If the given Objects `expected` and `actual` are not equal, an AssertionFailedError is thrown.", "If the given Objects `expected` and `actual` are not equal, an AssertionFailedError is thrown.", "If they are not equal, an AssertionFailedError is thrown.", "If the given expected and actual objects are not equal, an AssertionFailedError is thrown."]}
{"SampleId": 2568441, "Origin": "Gets the value of the 'ValueType' field.", "Reference": "Gets the value of the 'valueType' field.", "LLMCandidates": ["Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field."]}
{"SampleId": 3643555, "Origin": "Adds remote file attributes to this remote file class.", "Reference": "Sets remote file attributes to this remote file class.", "LLMCandidates": ["Sets the remote file attributes for this remote file class with the given attribute object.", "Sets the remote file attributes for this remote file class with the specified attributes.", "Sets the remote file attributes of this remote file class with the given attribute object.", "Sets the remote file attributes of this remote file class with the given attribute object.", "Sets the remote file attributes for this remote file class using the given attribute object. The previous method \"addAttributes\" has been replaced with this method \"setAttributes\"."]}
{"SampleId": 1947847, "Origin": "Increment the count of triggered synchronous state updates (by one).", "Reference": "Increment the count of triggered synchronous state updates in Litho components (by one).", "LLMCandidates": ["Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one)"]}
{"SampleId": 4625642, "Origin": "Extracts options from the specified item.", "Reference": "Assigns options to the specified options.", "LLMCandidates": ["Assigns options from the specified item.", "Assigns options from the specified item.", "Assigns options from the specified item.", "Assigns options from the specified item.", "Sets the options based on the specified item."]}
{"SampleId": 1560718, "Origin": "Check whether we are executed on an expired entry before the\ntimer event for expiry was received.", "Reference": "Check whether we are executed on an expired entry before the\ntimer event for the expiry was received.", "LLMCandidates": ["Check whether we are executed on an entry that has expired before the timer event for expiry is received.", "Check whether we are about to mutate an entry that has expired or is going to expire soon.", "Check whether we are executing an expired entry before the expiry timer event is received.", "Check whether we are executed on an entry before its expiry time is reached", "Check whether we are executing an expired entry before the expiry timer event is received."]}
{"SampleId": 2913751, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined mapping.", "Obtains an instance from the specified name using a predefined mapping."]}
{"SampleId": 5454839, "Origin": "Checks if the given name is a legal binary name.", "Reference": "Checks if the given name is a legal type name.", "LLMCandidates": ["Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name."]}
{"SampleId": 4003873, "Origin": "StringMap\n      is created for the configuration property file and is passed\n      into the framework.", "Reference": "A case\ninsensitive StringMap is\ncreated for the configuration property file and is passed into the\nframework.", "LLMCandidates": ["Initializes and manages a Karaf framework instance using a Main object. Handles restarting and shutting down the framework based on certain conditions.", "This method is the main entry point for running the Karaf framework. It creates a new instance of Main class with provided arguments, launches it and handles the lifecycle of the framework based on timeout or error conditions. If an error occurs during the launch or shutdown process, the exit code will be set accordingly and the Virtual Machine is exited. The boolean variable 'restart' determines whether to restart the framework upon a timeout or an error.", "This method initializes and runs a Karaf framework. It handles restarting and shutting down of the framework based on certain conditions. The exit code is set accordingly to indicate whether the framework was successfully launched or not. The LifecycleManager is used for managing the framework's lifecycle. If an error occurs during launch or shutdown, an appropriate exit code is set and an error message is printed. If the \"karaf.restart\" system property is set to true, the method will restart the framework instead of exiting the VM upon encountering a timeout waiting for it to stop.", "This method initializes and runs a Karaf instance, handling exceptions and retries if necessary based on the \"karaf.restart\" system property. The Main object is created with the given arguments, and its launch() method attempts to create and start the framework using a LifecycleManager. If successful, the method waits for the framework to shut down before destroying it and checking whether to restart or exit based on the \"karaf.restart\" system property value. Otherwise, an error message is printed and the VM exits with a specific code.", "This method launches and manages the Karaf framework. It sets up properties, creates a new Main instance, tries to launch the framework, awaits its shutdown, cleans up on error or timeout, and restarts if needed."]}
{"SampleId": 4903011, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if the deletion policy can release some index commits based on the current maxSeqNoOfNextSafeCommit and global checkpoint.", "Checks if there are any index commits with a sequence number lower than the current global checkpoint.", "Checks if the deletion policy can release some index commits based on the current maxSeqNoOfNextSafeCommit and the global checkpoint.", "Checks if the deletion policy can release some index commits based on the current maxSeqNoOfNextSafeCommit and global checkpoint.", "Checks if the deletion policy can release some index commits with the latest global checkpoint based on the maxSeqNoOfNextSafeCommit."]}
{"SampleId": 236975, "Origin": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenameOptions)}\nmethod.", "Reference": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)}\nmethod.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method."]}
{"SampleId": 5454963, "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.", "Reference": "Resolves a collection of root modules to create a configuration.", "LLMCandidates": ["Resolves a collection of root modules to create configuration. This method no longer takes 'roots' as an argument for resolving requires and uses.", "Resolves a collection of root modules to create configuration using service binding", "Resolves a collection of root modules, using the given parents, to create a new Configuration.", "Resolves a collection of root modules to create configuration. (remove 'with service binding')", "Resolves a collection of root modules to create configuration. (remove 'with service binding')"]}
{"SampleId": 2887717, "Origin": "Returns the Java type corresponding to the given method descriptor.", "Reference": "Returns the {@link Type} corresponding to the given method descriptor.", "LLMCandidates": ["Returns the Java type corresponding to the given method descriptor by creating a new Type object using the provided character array and length.", "Returns the Java type corresponding to the given method descriptor. The method descriptor is converted to a char array before being processed.", "Creates a new Type object based on the given method descriptor character array}\n\n{Returns the Java type corresponding to the given method descriptor character array}\n\n[Note: The method signature has not changed. Only the way of obtaining and passing the char array has been modified.]", "Returns the Java type corresponding to the given method descriptor by creating a new Type object with the provided char array.", "Creates a new Type object based on the given method descriptor character array}\n\nReturns the Java type corresponding to the given method descriptor character array."]}
{"SampleId": 4386726, "Origin": "SHA256 tree hash does not match To ensure that part data is\nnot corrupted in transmission, you compute a SHA256 tree hash of the\npart and include it in your request.", "Reference": "SHA256 tree hash does not matchTo ensure that part data is not\ncorrupted in transmission, you compute a SHA256 tree hash of the part and\ninclude it in your request.", "LLMCandidates": ["This method uploads a multipart part using an AWS request and handles the response. The AWS request metrics are collected for performance monitoring. The request is marshalled and bound with the request metrics before sending it out. Upon receiving the response, the AWS response is returned.", "Uploads a multipart part using AWS SDK for Java and updates SHA256 tree hash upon successful completion. To ensure integrity of transmitted data, a SHA256 tree hash is computed for the part and included in the request.", "This method uploads a multipart part using the provided request and returns the result. The AWS request metrics are tracked throughout the process.", "Uploads a multipart part using AWS SDK and handles request metrics.", "Uploads a multipart part using AWS SDK and handles request metrics."]}
{"SampleId": 6326658, "Origin": "Returns an instance of a GLSL data type for the given {@link DataType}.", "Reference": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "LLMCandidates": ["Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "Returns an instance of a GLSL data type for the given {@link DataType}, with an additional ShaderVariable parameter.", "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "Returns an instance of a GLSL data type for the given {@link ShaderVariable}."]}
{"SampleId": 4615504, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["Returns an iterator that iterates over the nodes preceding this node in the tree. The nodes returned are not finalized by default and should be finalized via {@link ANode#finish()} if they are to be further used.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}. This method now uses the child iterator of the parent node instead of the children list.", "Returns an iterator over the preceding sibling nodes of this node in the document tree. If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.\n\nChanges made:\n- method name changed from \"precedingSibling\" to \"precedingSiblingIter\"\n- updated the reference to the children iterator in the code snippet.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}. This method returns an iterator for the preceding sibling nodes in the parent node's child iterable.", "Return an iterator over the preceding siblings of this node in the tree, or null if there are no such nodes. The nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."]}
{"SampleId": 711380, "Origin": "Tests if this string starts with any specified prefixes.", "Reference": "Tests if this CharSequence starts with any specified prefixes.", "LLMCandidates": ["Tests if the given CharSequence starts with any of the specified CharSequences", "Tests if the given CharSequence starts with any of the specified prefixes (passed as separate CharSequences).", "Tests if the given CharSequence starts with any of the specified prefixes (passed as separate CharSequences).", "Tests if the given CharSequence starts with any of the specified CharSequences", "Tests if the given CharSequence starts with any of the specified CharSequences"]}
{"SampleId": 6049196, "Origin": "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Reference": "Returns the user thread with the primary key or throws a {@link NoSuchUserThreadException} if it could not be found.", "LLMCandidates": ["Returns the UserThread with the primary key or throws a com.liferay.privatemessaging.NoSuchUserThreadException if it could not be found.", "Returns the UserThread with the specified primary key or throws a NoSuchUserThreadException if it could not be found.", "Returns the UserThread with the given primary key or throws a NoSuchUserThreadException if it could not be found.", "Returns the UserThread with the specified primary key or throws a NoSuchUserThreadException if it could not be found.", "Returns the UserThread with the primary key or throws a NoSuchUserThreadException if it could not be found."]}
{"SampleId": 3892009, "Origin": "Stub of {@link Plugin#willDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "Reference": "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "LLMCandidates": ["Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override"]}
{"SampleId": 5640472, "Origin": "Observer methods with other transaction phase\nare scheduled for the corresponding transaction phase.", "Reference": "Transactional observer methods are scheduled to be executed in the corresponding transaction phase.", "LLMCandidates": ["Notifies transaction observers in a transaction phase and then sync observers in a synchronous way. If metadata is not required by the observers, it will be set to null.", "Notifies transaction and sync observers for the given event and metadata. Schedules observer methods with other transaction phase if required. If metadata is not required, sets it to null. Also handles exceptions in transactionObserver notification.", "Notifies transaction and sync observers with given event and metadata. If metadata is not required by observers, it will be set to null. Observer methods with other transaction phase are executed in the corresponding transaction phase using an exception handler to collect exceptions.", "Notifies the given observers asynchronously with the provided event and metadata. Observer methods with other transaction phases are scheduled for their corresponding transaction phases using an exception handler to handle any exceptions.", "Notifies transaction phase observers first, then sync observers, followed by async observers for the given event. The ObserverExceptionHandler is added to handle exceptions in the observer notifications during this process."]}
{"SampleId": 5246023, "Origin": "Use the given SleuthkitCase to update the data used to determine the\navailable filters.", "Reference": "Update the data used to determine the available filters.", "LLMCandidates": ["Populate the filter data using the given SleuthkitCase. Add new datasources to the map if not already present and update tagNames with the current tag names in use.", "Populate the filter data using the given SleuthkitCase. If a datasource with the given id already exists in the datasourcesMap, it will not be added again. Throws TskCoreException if there is an error looking up a datasource.", "Populate the filter data using the given SleuthkitCase. Add new datasources to the map if they don't already exist and update tagNames with the current tag names in use.", "Syncronized method to update the data used to determine the available filters based on the given SleuthkitCase. The method adds the hash sets and datasources to the respective collections, and sets the tag names to those in use by the case. For each datasource ID in the event manager, the method looks up the corresponding data source object from the sleuthkit case and adds it to the map if not already present.", "Populate the filter data using the given SleuthkitCase. If a datasource with the given ID already exists in the map, it will be updated; otherwise, a new instance of the datasource will be added to the map. The available tags used in the case will also be set to the tagNames list."]}
{"SampleId": 2609132, "Origin": "Extract a user rating vector from a rating cursor.", "Reference": "Extract a user rating vector from a rating stream.", "LLMCandidates": ["Extract a user rating vector from an ObjectStream of ratings.", "Extract a user rating vector from an ObjectStream of ratings.", "Extract a user rating vector from an ObjectStream of ratings.", "Extract a user rating vector from an ObjectStream of ratings.", "Extract a user rating vector from an ObjectStream of ratings."]}
{"SampleId": 1644557, "Origin": "Adds a  to a buffer, with each  being separated by a \":\".", "Reference": "Adds a  to a ,\nwith each  being separated by a \":\".", "LLMCandidates": ["Appends aStringtos StringBuilder, with each String being separated by a \":\".", "Appends aStringtosubject, with each string being separated by a \":\" using StringBuilder instead of StringBuffer.", "Appends aStringtos StringBuilder, with eachString being separated by a \":\".", "Appends aStringtosubject StringBuilder, with each String being separated by a colon.", "Appends a String s to a StringBuilder b, with each String being separated by a colon."]}
{"SampleId": 5433548, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true."]}
{"SampleId": 1806089, "Origin": "Standard setter for the leftwardLabel String for this RelationshipType", "Reference": "Standard setter for the leftwardType String for this RelationshipType", "LLMCandidates": ["Setter for the leftwardType String for this RelationshipType", "Sets the value of leftwardType for this RelationshipType.", "Sets the value of leftwardType for this RelationshipType.", "Setter for the leftwardType String for this RelationshipType.", "Setter for the leftwardType String for this RelationshipType."]}
{"SampleId": 2444053, "Origin": "Create a {@link ServiceLocator}.", "Reference": "Create a {@link InstanceManager}.", "LLMCandidates": ["Create an instance manager based on the given parent and default class analyzer, with provided binders.", "Create an instance manager based on a given parent and set the default class analyzer.\n\n(Note: The method name and return type have changed from ServiceLocator to InstanceManager, and the parameters have been modified accordingly.)", "Create an instance manager with the given parent and default class analyzer, and register the bindings using the provided binders.", "Create an instance manager.", "Create an instance manager."]}
{"SampleId": 3490831, "Origin": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType, Module)}.", "Reference": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, Module)}.", "LLMCandidates": ["checks if a file should be excluded based on various conditions including unanalyzability and exclusions defined in global and project settings.", "checks if a file should be excluded based on various conditions including its analyzability and exclusions defined in SonarLint Global and Project Settings.", "Checks if files should be excluded based on various conditions. Firstly, it excludes files that cannot be analyzed using {@link #canAnalyze(VirtualFile, Module)}.", "Checks if the given file should be excluded from analysis based on various conditions. It first checks if the file cannot be analyzed using {@code canAnalyze(file, module)}. If the result is excluded, it returns the result directly. Then, it checks if power save mode is enabled and returns an excluded result if it is. Next, it checks if the file is in a source folder using {@code checkFileInSourceFolders(file, module)}. If the result is excluded, it returns the result. Finally, it checks if the file path matches any exclusions defined in global or project settings and returns an excluded result if it does. Otherwise, it returns a notExcluded result.", "This method checks if a file should be excluded from analysis based on various conditions. It first checks if the file cannot be analyzed using {@link #canAnalyze(VirtualFile, Module)}. If so, it returns the exclusion result. Then, it checks if power save mode is enabled and returns an exclusion result accordingly. Next, it checks if the file is in source folders and returns the exclusion result if it is. Finally, it checks if the file path matches any global or project exclusions and returns the corresponding exclusion result. If none of the above conditions are met, it returns a not excluded result."]}
{"SampleId": 3270265, "Origin": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableReference}", "Reference": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableAccess}", "LLMCandidates": ["If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess"]}
{"SampleId": 2706941, "Origin": "Set Account Type.", "Reference": "Set Kontenart.", "LLMCandidates": ["@override Sets the account type.", "Sets the account type. Overrides the parent class's setAccountType method.", "Sets the account type. Overrides the parent class's setAccountType method.", "Sets the account type.", "Sets the account type."]}
{"SampleId": 5051650, "Origin": "Returns the object with the settings used for calls to labelAudio.", "Reference": "Returns the object with the settings used for calls to getEvaluation.", "LLMCandidates": ["Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation", "Returns the object with the settings used for calls to getEvaluation"]}
{"SampleId": 3991859, "Origin": "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)}\nwith default options.", "Reference": "This is a convenience method for {@link #electLeaders(ElectionType, Set, ElectLeadersOptions)}\nwith preferred election type and default options.", "LLMCandidates": ["This is a deprecated convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options.", "This is a deprecated convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options.", "This is a deprecated convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options.", "This is a deprecated convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options.", "This is a deprecated convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options."]}
{"SampleId": 615862, "Origin": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't contain the param.", "Reference": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't have a value set for the parameter.", "LLMCandidates": ["Retrieves the value of a parameter by its info or returns the default value if it's not present in the params.", "Retrieves the value of the named parameter from the map or returns the default value defined in {@code info}, depending on whether the Params contains the param.", "Returns the value of the specified parameter with given info, or the default value defined in the {@code info} if this Params does not contain the param. The implementation has been updated to search for a parameter by name and alias in the {@code params} map, and handle cases where multiple parameters have the same name or alias.", "Retrieves the value of a parameter by its Info object, or returns the default value defined in the Info if the Params map does not contain the param.", "Returns the value of the specific parameter, if it exists in the params map, otherwise returns the default value defined in the info. If the param is not optional and does not have a default value, an exception is thrown."]}
{"SampleId": 3241790, "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}", "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}", "LLMCandidates": ["Create an instance of {@link JAXBElement <}{@link CTMoveFromRangeEnd @}{code >", "Create an instance of {@link JAXBElement <}{@link CTMoveFromRangeEnd @}{code >", "Create an instance of {@link JAXBElement <}{@link CTMoveFromRangeEnd }{>", "Create an instance of {@link JAXBElement <}{@link CTMoveFromRangeEnd @}{code >", "Create an instance of {@link JAXBElement <}{@link CTMoveFromRangeEnd @}{code >"]}
{"SampleId": 3734028, "Origin": "Is the value with this qualifier less than the length of any of the arrays?", "Reference": "Is the value with this qualifier less than the length of any of the sequences?", "LLMCandidates": ["Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?"]}
{"SampleId": 241096, "Origin": "Clears the given persisted files stored in {@link #mPersistedFiles}.", "Reference": "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.", "LLMCandidates": ["Clears the given persisted file IDs from {@link #mPersistedFilesInfo", "Clears the given persisted file identifiers stored in {@link #mPersistedFilesInfo}.", "Clears the given persisted file ids stored in {@link #mPersistedFilesInfo", "Clears the given persisted file IDs from {@link #mPersistedFilesInfo", "Clears the given persisted file IDs from {@link #mPersistedFilesInfo"]}
{"SampleId": 3679705, "Origin": "Compares this {@code LocalDateTime} to another date-time.", "Reference": "Compares this date-time to another date-time.", "LLMCandidates": ["Overrides the compareTo method for comparing this {@code ChronoLocalDateTime} with another date-time, taking into account both date and time parts. If the other object is of a different type, delegates the comparison to the superclass method.", "Compares this {@code ChronoLocalDateTime} to another date-time, performing instance check before invoking specialized comparison method if necessary.", "Compares this {@code ChronoLocalDateTime} to another date-time, taking into account both the date and time components. If the other object is of type {@code LocalDateTime}, it is passed on to a helper method for comparison; otherwise, the default implementation in {@code Object} class is used.", "Compares this {@code ChronoLocalDateTime} to another date-time, taking into account both the date and the time components. If the other object is an instance of {@code LocalDateTime}, calls the specialized method {@code compareTo0(LocalDateTime)} instead for better performance. Otherwise, uses superclass's implementation.", "Compares this {@code ChronoLocalDateTime} to another date-time, handling potential type mismatches. If the other object is of type {@code LocalDateTime}, it will be compared using the overloaded method compareTo0(LocalDateTime). Otherwise, the default comparison will be used via super.compareTo(other)."]}
{"SampleId": 2915631, "Origin": "This returns a trade based on the specified trade date.", "Reference": "This returns a trade based on the specified trade date and upfront fee.", "LLMCandidates": ["This method creates a CdsTrade based on the specified trade date. The accrual start is checked before determining the tenor to be used in the trade creation.", "This method creates a CdsTrade based on the given legalEntityId, tradeDate, buySell indicator, notional amount, fixed rate, upfront fee, and reference data. The accrual start date is checked to determine if it's an Immediate or a Regular trade and accordingly sets the tenor as the tradeDate or tradeDate plus one day when creating the trade object using the convention.", "This method creates a CdsTrade based on the provided legalEntityId, tradeDate, buySell indication, notional amount, fixed rate, upFrontFee, and referenceData. The accrualStart is taken into consideration to determine the tenor for the convention's toTrade method call. If accrualStart equals IMM_DATE, the method uses the provided tradeDate as tenor; otherwise, it uses the next day of the provided tradeDate as tenor.", "This method creates and returns a CdsTrade based on the specified trade date. The accrual start is checked before creating the trade with the given tenor or the next day of the given trade date.", "This method creates and returns a CdsTrade based on the specified trade date. The accrual start date is taken into consideration to determine the tenor for the trade creation. If the accrual starts on the trade date itself (IMM_DATE), then the convention is used directly to create the trade. Otherwise, the tenor is adjusted by one day to account for the accrual starting on the next day."]}
{"SampleId": 2247229, "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied function.", "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "LLMCandidates": ["Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.}}\n\nConfidence: 95%. The changes are limited to the method signature (Scheduler -> Executor) and variable name (fn -> uniApply). No typos were found in the original comment to correct.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.}}\n\nThis method returns a new Task that, when the current task completes normally, is executed using the provided Executor. The result of the current task will be passed as an argument to the supplied ExceptionalFunction.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.}}\n\nThis method returns a new Task instance. When the current task completes normally, the new Task will be executed using the provided Executor, and the result of the current task will be passed as an argument to the given ExceptionalFunction.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.}}\n\nThis method returns a new Task instance. When the current Task completes successfully, the new Task will be executed using the provided Executor and passed the result of the current Task as an argument to the supplied ExceptionalFunction."]}
{"SampleId": 2911098, "Origin": "This parses the specified byte source to determine if it appears to be FpML.", "Reference": "This checks the first part of the byte source to see if it appears to be FpML.", "LLMCandidates": ["This parses the specified byte source to determine if it starts with the FpML signature \"fpml\" or \"xml\" in both UTF-8 and UTF-16 encodings.", "This parses the specified byte source to determine if it starts with the FpML signature \"fpml\" or \"xml\" followed by \"party\" or \"trade\".", "This method checks if the given byte source starts with the FpML signature (\"fpml\" or \"xml\" followed by \"party\" or \"trade\"). If found, it returns true; otherwise, it returns false.", "This method checks if the given byte source starts with a valid FpML signature (either UTF-8 or UTF-16 encoded).", "This method checks if the specified byte source begins with the FpML signature."]}
{"SampleId": 4476807, "Origin": "The {@link KeyCreateOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateKeyOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The {@link CreateKeyOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if not specified when creating a new key.", "Creates a new key with the given options. The {@link CreateKeyOptions#isEnabled()} enabled field is set to true by Azure Key Vault, if not specified.\n\nReturns a newly created key.\n\nNote: The return type has been changed from Key to KeyVaultKey.", "Creates a new key in Azure Key Vault using the provided options. The {@link CreateKeyOptions#isEnabled()} enabled field is set to true by Azure Key Vault, if not specified.\n\nReturns: A newly created {@link KeyVaultKey}.", "Creates a new KeyVaultKey based on the provided CreateKeyOptions. The {@link CreateKeyOptions#isEnabled()} enabled field is set to true by Azure Key Vault, if not specified.", "Creates a new key with the given options in the Key Vault. The {@link CreateKeyOptions#isEnabled()} enabled field is set to true by Azure Key Vault, if not specified."]}
{"SampleId": 3629279, "Origin": "See Immutable List Static Factory Methods for details.", "Reference": "See Unmodifiable Lists for details.", "LLMCandidates": ["See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details."]}
{"SampleId": 3428160, "Origin": "Helper to parse the imported file into an {@link ImportedGradeWrapper} depending on its type", "Reference": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "LLMCandidates": ["Helper to parse the imported file into an ImportedSpreadsheetWrapper depending on its type", "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "Helper to parse the imported file into an ImportedSpreadsheetWrapper depending on its type", "Helper to parse the imported file into an ImportedSpreadsheetWrapper depending on its type", "Helper to parse the imported file into an ImportedSpreadsheetWrapper depending on its type"]}
{"SampleId": 4715193, "Origin": "Fixes a bug with the Swing JFileChooser: if you entered a new\nfilename in the save dialog and press Enter the \nmethod returns  instead of the filename.", "Reference": "Swing JFileChooser: if you entered a new filename in the save dialog and\npress Enter the  method returns\n instead of the filename.", "LLMCandidates": ["saves a Swing component by writing it to a file using the selected file filter and writer. If the selected file does not have the appropriate extension, it is appended to the file path. The method uses a JFileChooser dialog for selecting the file and checks if the user pressed the 'Cancel' button before saving. Additionally, it allows setting custom dimensions for the saved component.", "Saves the given component by displaying a save dialog, selecting a file using the JFileChooser, and writing the component to the specified file with the given writer. If the selected file extension does not match the writer's extension, the file path is updated accordingly before writing. Additionally, this method sets the custom dimensions of the component if the 'Custom Dimensions' checkbox is selected in the dialog, or uses the default dimensions otherwise.", "This method saves a component by displaying a save dialog, allowing the user to select a file and set a custom width and height if desired. The selected file is then written to using the provided writer with the specified extension, scale, and custom dimensions if applicable. If an exception occurs during the writing process, it is caught and printed to the console. Previously, there was an issue with the display of the save dialog not properly handling user-entered filenames when pressing Enter; this has been fixed.", "saves a Swing component by writing it to a file using the selected file filter and writer, displaying a save dialog before saving the file.", "This method saves a component by showing a save dialog using the JFileChooser and writing the component to a file specified by the user. It handles custom dimensions for the saved image."]}
{"SampleId": 1326993, "Origin": "Returns the operation enum value.", "Reference": "Returns the operation constant name.", "LLMCandidates": ["Returns the operation constant in upper camelCase and underscore notation based on the given method descriptor.", "Returns the operation constant value in upper camel case based on the method descriptor name.", "Returns the operation constant value in upper camel case based on the method descriptor name.", "Returns the operation constant represented by the given MethodDescriptorProto object.", "Returns the operation constant in upper camelcase with underscores from the given method descriptor."]}
{"SampleId": 3937267, "Origin": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "Reference": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "LLMCandidates": ["Saves all entries from the dictionary with a count greater than the given threshold. Note: feature indices are changed to contiguous values starting at 0.", "Saves all entries from the dictionary with a count greater than threshold. Note: feature indices are changed to contiguous values starting at 0.", "Saves all entries of the dictionary with a count greater than threshold. Note: feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries with count greater than threshold}\n\n[Note: feature indices are changed to contiguous values starting at 0.]", "Saves all entries from the dictionary that appear more than threshold times. Note: feature indices are changed to contiguous values starting at 0."]}
{"SampleId": 3036919, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["This method sets network rules for an InstancePort based on its NetworkType. Currently, SONA supports Tunnel (VXLAN and GRE), VLAN and FLAT modes.", "This method sets network rules for an InstancePort based on the network type. Currently, SONA supports Flat, VXLAN, and GRE (instead of VLAN) modes.", "This method sets network rules based on the given network type. Currently, SONA supports Flat, VXLAN, and GRE (instead of VXLAN and VLAN) modes.", "Currently, SONA supports Flat, VXLAN, and GRE modes.", "Currently, SONA supports Flat, VXLAN, and GRE modes."]}
{"SampleId": 2443799, "Origin": "Create new instance of {@link InstanceManagerStore}.", "Reference": "Create new instance of {@link InjectionManagerStore}.", "LLMCandidates": ["Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}."]}
{"SampleId": 2018806, "Origin": "Sets dependency options.", "Reference": "Sets the dependency management options.", "LLMCandidates": ["Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options.", "Sets the dependency options."]}
{"SampleId": 1611711, "Origin": "Setter for comment format.", "Reference": "Setter for comment pattern.", "LLMCandidates": ["Sets the comment pattern format for the JavaDoc comments.", "Sets the comment pattern format for the comments.", "Sets the comment pattern for formatting JavaDoc comments based on the given Pattern object.", "Sets the comment pattern for formatting JavaDoc comments based on the given Pattern object.", "Sets the comment pattern."]}
{"SampleId": 2484705, "Origin": "Sets the entity attribute of this User to\nentity", "Reference": "Sets the entity attribute of this User's element\nto entity", "LLMCandidates": ["Sets the entity attribute of this UserElement to entity.", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity"]}
{"SampleId": 5456635, "Origin": "More specifically, the root modules are resolved as if by calling\n{@code resolveRequires}.", "Reference": "More specifically, the root modules are resolved as if by calling\n{@code resolve}.", "LLMCandidates": ["More specifically, the root modules are resolved and bound as if by calling resolve().", "More specifically, the root modules are resolved and bound as if by calling {@code resolve} followed by {@code bind}.", "More specifically, the root modules are resolved and bound as if by calling resolveAndBind().", "More specifically, the root modules are resolved and bound as if by calling resolveAndBind().", "More specifically, the root modules are resolved and bound as if calling {@code resolve} and then {@code bind}."]}
{"SampleId": 2443742, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.", "LLMCandidates": ["Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying InstanceManager container (previously named injectionManager).", "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying InjectionManager container.", "Get the set of all custom providers registered for the given service provider contract in the underlying InjectionManager container."]}
{"SampleId": 132533, "Origin": "Generates the form to post to the dialog frame.", "Reference": "Generates the dialog parameters.", "LLMCandidates": ["Generates the map of parameters to post to the dialog frame.", "Generates a Map of parameters to be used in posting to the dialog frame.", "Generates the Map of parameters to post to the dialog frame.", "Generates the Map of parameters to post to the dialog frame.", "Generates a map of parameters to be used in posting to the dialog frame."]}
{"SampleId": 1042147, "Origin": "Returns  If the\n is greater than the .", "Reference": "Returns  If the\n is greater than the  and \n is not used.", "LLMCandidates": ["Checks if the updateTime is greater than the lowWatermark value and also meets the maxLookBackTime requirement.}\n\nReturns {true} if the updateTime is both greater than the lowWatermark.getValue() and before the maxLookBackTime. Otherwise, {false}.", "checks if is greater than the . If is before the maximum lookback time, returns false.", "Returns  If the updateTime is greater than the lowWatermark.value(), but only if the updateTime is not before maxLookBackTime.", "Checks if the updateTime is greater than the lowWatermark. If the current updateTime is within the maxLookBackTime, returns false.", "Checks if the update time is greater than the low watermark, but only if the update time is not too old."]}
{"SampleId": 2048399, "Origin": "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate.", "Reference": "After calling this method, call {@link\n#configure(AudioFormat)} to start using the new sample rate.", "LLMCandidates": ["Set the new output sample rate by passing the desired value to this method. No need to call {@link #configure(int, int, int)} afterwards.", "Set the new output sample rate by passing the integer value to this method. No need to call #configure(int, int, int) after this call.", "Sets the new sample rate for output. After calling this method, call {@link #configure(int)} to start using the new sample rate.", "Set the new output sample rate by calling this method with the desired sample rate value. Configure the updated rate using {@link #configure(int)} method afterwards.", "After calling this method, call {@link #configure(int)} to start using the new sample rate."]}
{"SampleId": 3846374, "Origin": "Move this TouchDisplay to a new x-y position and bounds.", "Reference": "Move this TouchDisplay to a new x-y position.", "LLMCandidates": ["Move this TouchDisplay to a new x-y position", "Move this TouchDisplay to a new x-y position", "Move this TouchDisplay to a new x-y position", "Move this TouchDisplay to a new x-y position, adjusting its position based on the bounds of the circle.", "Move this TouchDisplay to a new x-y position."]}
{"SampleId": 6019207, "Origin": "Triangulate two view using the Discrete Linear Transform (DLT)", "Reference": "Triangulate two view using the Discrete Linear Transform (DLT) with an uncalibrated camera.", "LLMCandidates": ["Triangulate two views using the Discrete Linear Transform (DLT), but now it returns an instance of WrapTwoViewsTriangulateUncalibratedDLT class instead.", "Triangulate two views using the Discrete Linear Transform (DLT), however, the returned object is now an instance of WrapTwoViewsTriangulateUncalibratedDLT.", "Triangulate two views using the Discrete Linear Transform (DLT), but with the calibration step removed", "Triangulate two views using the Discrete Linear Transform (DLT), but now returns an instance of WrapTwoViewsTriangulateUncalibratedDLT class instead.", "Triangulate two views using the Discrete Linear Transform (DLT), but with uncalibrated data"]}
{"SampleId": 3942113, "Origin": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the right returned tree.", "Reference": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the left returned tree.", "LLMCandidates": ["Split the given tree at the specified split point such that the terminals leading up to the split point are in the left returned tree and those following the split point are in the right returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the first returned tree and those following are in the second returned tree.", "Split the given tree at a specified point such that the terminals leading up to the point are in the left returned tree and those following are in the right returned tree.", "Split the given tree at the specified split point. The terminals leading up to the split point are assigned to the left returned tree and those following the split point to the right returned tree.", "Split the given tree at the specified split point such that the terminals leading up to the split point are in the left returned tree and those following are in the right returned tree."]}
{"SampleId": 570069, "Origin": "Gets the full path from a full filename, which is the prefix + path,\nand also excluding the final directory separator.", "Reference": "Gets the full path from a full fileName, which is the prefix + path,\nand also excluding the final directory separator.", "LLMCandidates": ["Gets the full path from a file name, which is the prefix + path, and also excluding the final directory separator.}\n\n{Obtains the complete path from a given file name. The result includes the prefix and the path up to the last directory separator but does not include the last directory separator.", "Gets the full path from a file name, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a file name, which is the prefix + path, and also excluding the final directory separator.}\n\n{Gets the full path from a fileName, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a file name, which is the prefix plus path, and also excluding the final directory separator.", "Gets the full path from a file name, which is the prefix + path, and also excluding the final directory separator."]}
{"SampleId": 3322433, "Origin": "As the name\nimplies,  indicates whether the train or cart is in the process\nof leaving the track.", "Reference": "As the name\nimplies, {@code trainLeaving} indicates whether the train or cart is in the process\nof leaving the track.", "LLMCandidates": ["Calculates the locked status of the train or cart based on certain conditions.", "This method checks if the train or cart is currently leaving the track. If it is, then the lock status is set to false. If not, the lock status is set to true and the waiting time is incremented. The method also sends an update to the client when the wait time reaches 1.", "calculates the locked status of the train or cart. If the current cart is null, waited is set to 0. If redstone is false or waited is greater than or equal to delay, the train or cart is considered not locked and waiting is reset. If the train or cart is not leaving and isSameCart is true, the train or cart is considered locked. If the current cart is not null and is locked, waited is incremented and sendUpdateToClient() is called if waited is 1.", "Calculates whether the current train or cart is locked or not based on certain conditions.", "Calculates the locked status of the current train or cart. If the train or cart is not null and locked, waits for a certain delay before sending an update to the client. If redstone is not set or the waiting period has elapsed, sets the locked status to false and clears the wait timer. If the train or cart is the same as the previous one, sets the 'trainLeaving' flag to true when leaving the track. Otherwise, sets the locked status to true and resets the 'trainLeaving' flag."]}
{"SampleId": 4396607, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Generates a JSON-like string representation of this object; useful for testing and debugging, especially when dealing with sensitive data such as secrets which are redacted by replacing them with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted by replacing them with \"***Sensitive Data Redacted***\".", "Generates a string representation of this object with sensitive data redacted for testing and debugging purposes.", "Generates a string representation of this object with sensitive data redacted for testing and debugging purposes."]}
{"SampleId": 234560, "Origin": "When the context is being reinitialized, this call blocks until the reinitialization succeeds\nor fails.", "Reference": "When the context is being reinitialized, this call returns an empty optional.", "LLMCandidates": ["Acquires a resource that blocks further reinitialization attempts until the acquisition succeeds or fails.", "Acquires a resource that blocks reinitialization from being performed. If the count of reinitializations is less than or equal to zero, an empty Optional is returned. Otherwise, an Optional containing a CountResource instance is returned.", "Acquires a resource that blocks the reinitialization process until it succeeds or fails. If the current count is less than or equal to zero, returns an empty Optional.", "Acquires a resource that blocks further reinitialization attempts until the method call completes successfully or fails due to an IOException.", "Acquires a resource that prevents further reinitialization attempts until the resource is released or an IOException is thrown."]}
{"SampleId": 5437406, "Origin": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the default.", "Reference": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the specified default.", "LLMCandidates": ["Initializes the timeout length based on the specified property. If the property is not set or its value is negative, sets the timeout length to the default given by def.", "If the property specified by prop is not set or has a negative value, set the timeout length to def.", "If the property \"prop\" has not been set or if its value is negative, set the timeout length to \"def\".", "If the property specified by prop is not set or has a negative value, set the timeout length to def.", "If the property \"prop\" has not been set or if its value is negative, set the timeout length to \"def\"."]}
{"SampleId": 4386732, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["Deletes vault notifications using the given request and returns the result.\n\nAccess Control Using AWS Identity and Access Management (IAM) for authorizing the method call.", "Deletes vault notifications using the given request and returns the result in DeleteVaultNotificationsResult format.\nAccess Control Using AWS Identity and Access Management (IAM) is required for method authorization.", "Deletes vault notifications using the provided request object and returns the result in DeleteVaultNotificationsResult format. The AWS request metrics are started at the beginning and ended after the invocation of the service call.", "Deletes vault notifications using the given request object and returns the response.\n\nAccess Control Using AWS Identity and Access Management (IAM) is required to call this method securely.", "Deletes vault notifications using the given DeleteVaultNotificationsRequest and handles the response as DeleteVaultNotificationsResult.\nAccess Control Using AWS Identity and Access Management (IAM) for method execution."]}
{"SampleId": 1459126, "Origin": "Verify that a named subquery exists for each INCLUDE.", "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.", "LLMCandidates": ["Verify that a named subquery exists for each INCLUDE in the given context.", "Verify that a named subquery exists for each INCLUDE in the given context.", "Verify that a named subquery exists for each INCLUDE in the given context.", "Verify that a named subquery exists for each INCLUDE in the given context.", "Verify that a named subquery exists for each INCLUDE in the given context."]}
{"SampleId": 1435989, "Origin": "Make a copy of a range of bytes from the passed in data array.", "Reference": "Make a copy of a range of bytes from the passed in array.", "LLMCandidates": ["Create a copy of a specified range of bytes from the input byte array \"original\".", "Make a copy of a specified range of bytes from the given byte array.", "Creates a copy of a specified range of bytes from the given byte array", "Make a copy of a range of bytes from the passed in byte array \"original\", starting at index \"from\" and ending at index \"to\".", "Create a copy of a range of bytes from the given byte array 'original'."]}
{"SampleId": 5440918, "Origin": "Returns {@code true} if there is a value in the current thread's copy of\nthis thread-local variable, even if that values is {@code null}.", "Reference": "Returns {@code true} if there is a value in the current strand's copy of\nthis thread-local variable, even if that values is {@code null}.", "LLMCandidates": ["Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that value is {@code null}.", "Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that values is {@code null}.", "Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that value is {@code null}.", "Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that values is {@code null}.", "Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that value is {@code null}."]}
{"SampleId": 3678109, "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "LLMCandidates": ["Applications should use the {@code adjustInto(TemporalAdjuster)} method on the date-time object to apply the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(TemporalAdapter)} method on the date-time object to apply the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(TemporalAdjuster)} method on the date-time object to apply the adjustment passed in this argument.", "Applications should use the {@code adjustInto(TemporalAdjuster)} method on the date-time object to apply this adjustment.", "Applications should use the {@code adjustInto(TemporalAdjuster)} method on the date-time object to make the adjustment passing this as the argument."]}
{"SampleId": 4386719, "Origin": "Glacier provides you a unique archive ID, an opaque string of\ncharacters.", "Reference": "Amazon Glacier\nprovides you a unique archive ID, an opaque string of characters.", "LLMCandidates": ["This method initiates a job using the provided InitiateJobRequest and returns the InitiateJobResult. It also manages AWS request metrics.", "Initializes a job in Glacier using the given request\n\nThe method initiates a new job in Amazon Glacier using the provided InitiateJobRequest object. It starts the client execution time metrics and handles any necessary marshalling of the request. Once the request is successfully processed, it returns the AWS response containing the job details. The method also includes error handling and ends client execution time metrics upon completion.", "This method initializes a new job in the system using the provided InitiateJobRequest. It creates an ExecutionContext and an AWSRequestMetrics object, starts ClientExecuteTime event, marshals the request using InitiateJobRequestMarshaller, sends the request, receives and unmarshals the response using InitiateJobResultJsonUnmarshaller, returns the response and ends ClientExecution by stopping events.", "Initializes a job using the provided request object and returns the InitiateJobResult. The method also starts and ends AWS request metrics for ClientExecuteTime and RequestMarshallTime events.", "Initializes a new job using the provided request and returns the InitiateJobResult object. The method uses AWSRequestMetrics to measure and record the time taken for client execution, request marshalling, and the response handling."]}
{"SampleId": 2701561, "Origin": "Set Zu ber.", "Reference": "Set Zu berechn.", "LLMCandidates": ["Sets the value of QtyToInvoiceInPriceUOM column.", "Sets the QtyToInvoiceInPriceUOM", "Sets the QtyToInvoiceInPriceUOM", "Sets the value of QtyToInvoiceInPriceUOM column.", "Sets the value of QtyToInvoiceInPriceUOM column."]}
{"SampleId": 5440227, "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .", "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .", "LLMCandidates": ["This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\nReturns the index of the try-catch block associated with the given targetTypeAndInfo.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\nReturns the index of the try-catch block in the code unit associated with the given targetTypeAndInfo.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\nReturns the index of the try-catch block in the corresponding exception table.\n\nThe updated variable name is 'targetTypeAndInfo'.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\nReturns the index of the try-catch block in the corresponding exception table.\n\nThe updated variable name is 'targetTypeAndInfo'.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\nReturns the index of the try-catch block in the corresponding exception table.\n\nThe updated name of the variable is 'targetTypeAndInfo'."]}
{"SampleId": 2393774, "Origin": "See {@link ClientsClassDefinition#getWhitelistedProperties()}", "Reference": "See {@link ClientsClassDefinition#getIncludedProperties()}", "LLMCandidates": ["See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()"]}
{"SampleId": 2230496, "Origin": "Ensures that the quorum is present if the quorum is configured and the operation service is quorum aware.", "Reference": "Ensures that there is no split brain if the split brain protection is configured and the operation\nservice is split brain protection aware.", "LLMCandidates": ["Ensures that no split brain condition is met for the given operation. Only applicable if the operation service supports split brain protection.", "Ensures that the split brain protection is enforced if the operation service is split brain aware.", "Ensures that the split brain protection is enforced if the operation service is split brain aware.", "Ensures that the split brain condition is not met for the given operation", "Ensures that the no split brain condition is met if the node engine has a SplitBrainProtectionService and the operation service is split brain aware."]}
{"SampleId": 4477703, "Origin": "Sets the {@link RetryPolicy} that is used when each request is sent.", "Reference": "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "LLMCandidates": ["Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent."]}
{"SampleId": 1842058, "Origin": "Provides the location to dockerfile", "Reference": "Provides the location to devfile yaml file", "LLMCandidates": ["Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile"]}
{"SampleId": 2113430, "Origin": "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true\nin which case the enriched (split) binding will be returned.", "Reference": "For a split parent package this will include potentially enriching with siblings,\nin which case the enriched (split) binding will be returned.", "LLMCandidates": ["Adds a package binding to the knownPackages map with the given compoundName and tagBits. No check for split siblings is performed.", "Adds a package binding to the knownPackages map with the given compoundName and returns it. If HasMissingType tag bit is not set for the element, clearMissingTagBit() is called first.", "Adds a package binding to the known packages with the given compound name. If the element tag does not have the HasMissingType bit set, the missing tag bit is cleared first.", "Adds a package binding to the known packages with the given compound name, if it's not already present. No check for split siblings is performed.", "Adds a package binding to the known packages with the given compoundName and moduleBinding. If HasMissingType tag bit is not set for the element, clearMissingTagBit() is called first."]}
{"SampleId": 402718, "Origin": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link Components#AMBARI_SERVER}.", "Reference": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link RootComponent#AMBARI_SERVER}.", "LLMCandidates": ["Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}."]}
{"SampleId": 4386724, "Origin": "Glacier, you first initiate a job, and after the job completes, you\ndownload the data.", "Reference": "To retrieve an archive or retrieve a vault inventory from Amazon Glacier,\nyou first initiate a job, and after the job completes, you download the\ndata.", "LLMCandidates": ["This method initiates a request to list jobs with provided request object and returns the response.", "This method initiates a request to list available jobs in Glacier and returns the corresponding ListJobsResult object after the request completion.", "This method initiates a list of jobs using the provided request object, and returns the result in the form of ListJobsResult upon completion. The AWSRequestMetrics are used for measuring various events related to client execution time and request marshalling.", "This method initiates a list jobs request to AWS Glacier using the provided ListJobsRequest object, and returns the response containing the list of available jobs. The AWSRequestMetrics are tracked throughout the process.", "This method initiates a ListJobs request with given parameters using AWS SDK, and returns the ListJobsResult object after successful execution of the request."]}
{"SampleId": 2223749, "Origin": "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "Reference": "Derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "LLMCandidates": ["Generate secret key by PBKDF2 algorithm (1000 iterations of SHA256) using the provided fileKey instead of password.", "Generate secret key using PBKDF2 algorithm (1000 iterations of SHA256) with given fileKey instead of password.", "Generate secret key using PBKDF2 algorithm (1000 iterations of SHA256) with given fileKey instead of password.", "Generate secret key using PBKDF2 algorithm (1000 iterations of SHA256) with given fileKey instead of password.", "Generate secret key by PBKDF2 algorithm (1000 iterations of SHA256) using the provided fileKey instead of password."]}
{"SampleId": 3105252, "Origin": "Convert statistics object into JSONObject.", "Reference": "Convert statistics object into JSON.", "LLMCandidates": ["Convert statistics object into JSON string using ObjectMapper from Jackson library.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper."]}
{"SampleId": 4404105, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["Deprecates a workflow type with eventual consistency.", "This operation is eventually consistent for deprecating a workflow type.", "This operation is eventually consistent for deprecating a workflow type using the given request.", "This operation is eventually consistent for deprecating a workflow type using the given request.", "This operation is eventually consistent for deprecating a workflow type."]}
{"SampleId": 4776216, "Origin": "Gets a Vector pointing in the direction that this Location is facing", "Reference": "Gets a unit-vector pointing in the direction that this Location is\nfacing.", "LLMCandidates": ["Gets a Vector pointing in the direction that this Location is facing based on its yaw and pitch angles.", "Gets a Vector pointing in the direction that this Location is facing based on its yaw and pitch angles.", "Gets a Vector pointing in the direction that this Location is facing based on its yaw and pitch angles.", "Gets a Vector pointing in the direction that this Location is facing based on its yaw and pitch angles.", "Gets a Vector pointing in the direction that this Location is facing based on its yaw and pitch angles"]}
{"SampleId": 6049496, "Origin": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "Reference": "or throws a {@link NoSuchMemberRequestException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.so.NoSuchMemberRequestException} if the MemberRequest with the given key could not be found.", "Throws a {@link com.liferay.so.NoSuchMemberRequestException} if no MemberRequest with the given key is found.", "Throws a {@link com.liferay.so.NoSuchMemberRequestException} if the MemberRequest with the given key could not be found.", "Throws a {@link com.liferay.so.NoSuchMemberRequestException} if the MemberRequest with the given key could not be found.", "Throws a {@link com.liferay.so.NoSuchMemberRequestException} if the MemberRequest with the given key could not be found."]}
{"SampleId": 2647087, "Origin": "Given a bunch of NodeRefs, create SimpleFeatures from the results.", "Reference": "Given a bunch of NodeRefs, create Features from the results.", "LLMCandidates": ["Given a bunch of NodeRefs, create Features from the results using the given schema and geometry factory.", "Given a bunch of NodeRefs, create Features from the results using the given schema and geometry factory.", "Given a bunch of NodeRefs, create Features from the results using the given schema and geometry factory.", "Given a bunch of NodeRefs, create Features from the results using the given schema and GeometryFactory.", "Given a bunch of NodeRefs, create Features from the results using the given schema and GeometryFactory."]}
{"SampleId": 2706905, "Origin": "Get Import Account.", "Reference": "Get Import - Kontendefinition.", "LLMCandidates": ["Get the ID value of the I_ElementValue.", "Gets the value of the column I_ElementValue_ID as an integer.", "Gets the ID of the I_ElementValue associated with this record.", "Gets the ID of the I_ElementValue associated with this record.", "Get the ID value of the I_ElementValue."]}
{"SampleId": 3082050, "Origin": "For adding classpath elements that are not normally on the classpath in the Java version: svm\njars, truffle jars etc.", "Reference": "For adding classpath elements that are only on the classpath in the context of native-image\nbuilding.", "LLMCandidates": ["For adding classpath elements that are not typically present on the Java classpath, such as SVM jars and Truffle jars.", "For adding classpath elements that are not typically present on the classpath, such as SVM jars and Truffle jars.", "For adding classpath elements that are not typically included in the Java classpath, such as SVM jars and Truffle jars.\n\n[Note: Ensure that 'imageClasspath' and 'customImageClasspath' are empty before adding a new entry to 'imageProvidedClasspath'.]", "For adding classpath elements that are not part of the normal Java classpath, such as SVM jars or Truffle jars.", "Adds a classpath element that is not normally on the Java classpath, such as for svm jars or Truffle jars. Ensures that imageClasspath and customImageClasspath are empty before adding the new path."]}
{"SampleId": 1142556, "Origin": "Create a GeoCircle of the right kind given the specified bounds.", "Reference": "Create a GeoCircle from a center and a cutoff angle.", "LLMCandidates": ["Create a GeoCircle of the right kind given the specified latitude, longitude and cutoff angle.", "Create a GeoCircle of the right kind given the specified latitude, longitude and cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle with the given planet model, latitude, longitude and cutoff angle."]}
{"SampleId": 5630009, "Origin": "Set the nodeType.", "Reference": "Set the newType.", "LLMCandidates": ["Set the newType.", "Set the newType.", "Set the newType.", "Set the newType.", "Set the newType."]}
{"SampleId": 1134393, "Origin": "Sets a new value by changing the offset and docID.", "Reference": "Sets a new value by changing the offset.", "LLMCandidates": ["Sets the offset value. Also updates the corresponding offset in packedValueDocID.", "Sets the offset value for a document ID.", "Sets the offset value for both packedValue and packedValueDocID.", "Sets the offset value for both packedValue and packedValueDocID.", "Sets the offset value"]}
{"SampleId": 2241419, "Origin": "The MD5 hash of the file.", "Reference": "The hash of the file.", "LLMCandidates": ["The content hash of the file.", "The content hash of the file.", "The content hash of the file.", "The content hash of the file.", "The content hash of the file."]}
{"SampleId": 5632363, "Origin": "Creates a list of default files to check for credentials.", "Reference": "Creates a list of files to check for credentials.", "LLMCandidates": ["Creates a list of files to check for credentials, including one specified by the environment variable IBM_CREDENTIALS_FILE if it exists.", "Creates a list of files to check for credentials. If an environment variable \"IBM\\_CREDENTIALS\\_FILE\" is set, it will be added to the list along with the default files in the user home directories and project directory.", "Returns a list of files to check for credentials. If a user-specified path is provided via environment variable \"IBM\\_CREDENTIALS\\_FILE\", that file will be added to the list, in addition to the default files located in the UNIX home directory, and the Windows first and second home directories, as well as the project directory.", "Returns a list of files to check for credentials, including one specified by the user through an environment variable and the default files based on system properties.", "Creates a list of files to check for credentials, including one specified by the user and default ones based on the user's home directories and project directory."]}
{"SampleId": 6018464, "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where sgn is a constant value passed as an argument.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where sgn is a constant value passed as an argument.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where sgn is a constant value passed as an argument.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image. Where sgn is a constant value 'val' for all pixels.", "Sets each pixel in the output image to sgn*log(1+sgn*input(x,y)) of the input image, where sgn is a constant value 'val' for all pixels."]}
{"SampleId": 4396523, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with the Password field masked as \"***Sensitive Data Redacted***\" for security.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; sensitive data such as password is redacted for security.", "Returns a string representation of this object; sensitive data is redacted for password.", "Returns a string representation of this object; sensitive data is redacted for password."]}
{"SampleId": 5454801, "Origin": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes.", "Reference": "The entries in the file are assumed to be the fully-qualified\n    class names of provider classes.", "LLMCandidates": ["The entries in the file are assumed to be the fully-qualified module names for providers. If no entries are provided, an empty ModuleFinder is returned. Otherwise, a ModuleFinder instance is created using ModulePath.of(entries).", "```java\n/**\n * Creates a new {@code ModuleFinder} instance with the given paths. If no paths are provided, an empty instance is returned.\n *\n * @param entries the paths to search for modules\n */\nstatic ModuleFinder of(Path... entries) {\n    // special case zero entries\n    if (entries.length == 0) {\n        return new ModuleFinder() {\n            @Override\n            public Optional<ModuleReference> find(String name) {\n                Objects.requireNonNull(name);\n                return Optional.empty();\n            }\n\n            @Override\n            public Set<ModuleReference> findAll() {\n                return Collections.emptySet();\n            }\n        };\n    }\n\n    // modification: call ModulePath.of instead of creating a new instance directly\n    return ModulePath.of(entries);\n}\n```", "The entries in the file are assumed to be the fully-qualified names of the ModulePath objects. If there are no entries, an empty ModuleFinder is returned.", "The entries in the file are assumed to be the fully-qualified names of the ModulePath objects. Returns a ModuleFinder instance with the given paths.", "The entries in the file are assumed to be the fully-qualified names of the paths to be used by the ModulePath constructor."]}
{"SampleId": 3296178, "Origin": "The key for a max value, or null if everything is NaN (no max).", "Reference": "The key for a max value; null if empty or everything is NaN (no max).", "LLMCandidates": ["The key for the maximum value or null if all elements are NaN (no max key).", "Returns the key corresponding to the maximum value, or null if all values are NaN.", "The key corresponding to the maximum value or null if all values are NaN (No Max).", "Returns the key corresponding to the maximum value, or null if all values are NaN.", "Returns the key corresponding to the maximum value, or null if all values are NaN."]}
{"SampleId": 3773833, "Origin": "Gets the editor component generator for this Column.", "Reference": "Gets the grid that this column belongs to.", "LLMCandidates": ["Gets the grid component for this EditorComponentGenerator.", "Gets the parent Grid component for this Column.", "Gets the parent Grid component for this Column.", "Gets the Grid component for this EditorComponentGenerator.", "Gets the Grid component for this EditorComponentGenerator."]}
{"SampleId": 3156674, "Origin": "Whenever a minion with Deathrattle is summoned, gain +1/+1", "Reference": "Whenever a minion with Deathrattle is summoned, gain +1 Attack", "LLMCandidates": ["Whenever a minion with Deathrattle is summoned, gain +1 attack", "Whenever a minion with Deathrattle is summoned by the same player, gain +1 attack", "Whenever a minion with Deathrattle is summoned and this minion belongs to the same player side, gain +1 attack.", "Whenever a minion with Deathrattle is summoned by the same player, gain +1 attack", "Whenever a minion with Deathrattle is summoned for this player, gain +1 attack"]}
{"SampleId": 2916283, "Origin": "Gets the Ibor index.", "Reference": "Gets the name of the volatilities.", "LLMCandidates": ["Returns the name of the IborCapletFloorletVolatilities.", "Returns the name of IborCapletFloorletVolatilities.", "Returns the name of IborCapletFloorletVolatilities.", "Gets the name of the IborCapletFloorletVolatilities.", "Gets the name of the IborCapletFloorletVolatilities."]}
{"SampleId": 2913740, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map."]}
{"SampleId": 6219026, "Origin": "Returns a {@link Date} representing the date of the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "Reference": "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "LLMCandidates": ["Returns a {@link StoredBlock} representing the checkpoint before or at the given height. This method searches through the map of stored blocks, starting from the first one and finding the one with the smallest height greater than or equal to the specified height. If no such block is found, it returns the genesis block instead.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given block height. This method is useful when you want to know the checkpoint preceding a specific height, such as the checkpoint just before the last block that your wallet had processed. If no checkpoint is found before the specified height, this method returns the genesis block with height 0.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given height. This method is useful when you want to obtain the checkpoint that exists before or at a specific height in the blockchain.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given block height. This method is useful when you want to know the checkpoint preceding a specific height, for instance, typically you would be interested in the checkpoint just before the last block that was processed by the wallet.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given block height. This method is used to retrieve the latest checkpoint that has a height less than or equal to the specified height. If no such checkpoint exists, it returns the genesis block instead."]}
{"SampleId": 2783374, "Origin": "Deletes the specified variable from the configuration.", "Reference": "Deletes the specified variable from the CONFIGURATION.", "LLMCandidates": ["Sets the specified boolean variable to be removed from the CONFIGURATION}\n\nDeletes the specified variable from the configuration. (fixed typo: configuration -> CONFIGURATION)", "Sets the specified boolean variable to be removed from the CONFIGURATION.", "Sets the specified boolean variable to be removed from the CONFIGURATION.", "Deletes the specified variable from the CONFIGURATION.", "Deletes the specified variable from the CONFIGURATION."]}
{"SampleId": 2624222, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "LLMCandidates": ["Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.\n\nChanged:defaultVirtualHostBuilder to virtualHostTemplate.", "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.\n\nThis method sets up the security protocol for the server using the provided key manager factory and customizations.", "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.\n\nThis method sets up the security protocols for the server, using the provided {@code keyManagerFactory} and {@code tlsCustomizer}. The default virtual host is affected by this modification.", "Configures SSL or TLS of the current virtual host from the specified keyManagerFactory and tlsCustomizer.", "Configures SSL or TLS of the current {@link VirtualHost} template from the specified {@code keyManagerFactory} and {@code tlsCustomizer}."]}
{"SampleId": 234560, "Origin": "If it fails, an exception is thrown and the read lock will not be locked.", "Reference": "If the reinitialization fails, an exception is thrown.", "LLMCandidates": ["Acquires a resource that prevents further acquisitions of this lock. If it fails, an exception is thrown and no resource is acquired.", "Acquires a resource that blocks further reinitialization attempts. If it fails, an exception is thrown and the resource is not acquired.", "Acquires a resource that prevents further calls to this method until it is released, returning an Optional wrapping a CountResource instance. If an exception occurs during the process, the method fails and the resource remains unacquired.", "Acquires a resource that blocks reinitialization of this instance. If it fails, an exception is thrown and the resource will not be acquired.", "Acquires a resource that prevents further reinitialization attempts. If it fails, an exception is thrown and the resource will not be acquired."]}
{"SampleId": 6272767, "Origin": "Returns true if the specified String name, is found within JsonArray checks.", "Reference": "Returns true if the expectedName, is found within JsonArray checks.", "LLMCandidates": ["Checks if the specified String \"expectedName\" exists within JsonArray \"checks\".", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName is found within JsonArray checks.", "Returns true if the specified String expectedName is found within JsonArray checks.", "Returns true if the specified String expectedName is found within JsonArray checks."]}
{"SampleId": 4232775, "Origin": "Create a new {@link ICrypter} for the given context.", "Reference": "Create a new {@link ICrypter}.", "LLMCandidates": ["Create a new {@link ICrypter} instance.", "Creates a new instance of {@link ICrypter}.", "Creates a new instance of {@link ICrypter}.", "Creates a new instance of {@link ICrypter}.", "Creates a new instance of {@link ICrypter}."]}
{"SampleId": 3923667, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["@Deprecated // Produces a Collapsed SemanticGraph with no extras.", "@deprecated Produces a Collapsed SemanticGraph with no extras.", "@Deprecated Method produces a Collapsed SemanticGraph with no extras.", "@Deprecated Method produces a Collapsed SemanticGraph with no extras.", "@Deprecated // Produces a Collapsed SemanticGraph with no extras."]}
{"SampleId": 3221596, "Origin": "WorkItemLifecycleEvent} and calls the {@link #publish(WorkItemLifecycleEvent)} method", "Reference": "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "LLMCandidates": ["publishes a WorkItemLifecycleEvent object and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "Publish a WorkItemLifecycleEvent object and calls the #{link \"#publish(WorkItemLifecycleEvent)\"} method.", "Publish a WorkItemLifecycleEvent object and calls the #{link \"#publish(WorkItemLifecycleEvent)\"} method", "Publish a WorkItemLifecycleEvent object and calls the #{link \"#publish(WorkItemLifecycleEvent)\"} method", "Publish a WorkItemLifecycleEvent object and calls the #{link \"#publish(WorkItemLifecycleEvent)\"} method"]}
{"SampleId": 3512230, "Origin": "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_VARIANT llama variant}.", "Reference": "Gets the {@link Value.Mutable} for the {@link LlamaType} of this\n{@link Llama}.", "LLMCandidates": ["Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}."]}
{"SampleId": 4850294, "Origin": "Set a new {@link JacksonResourceProvider} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "Reference": "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "LLMCandidates": ["Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data."]}
{"SampleId": 5631112, "Origin": "Lists a feedback entry with a specified `feedback_id`.", "Reference": "Gets a feedback entry with a specified `feedback_id`.", "LLMCandidates": ["Retrieves a feedback entry with the given `feedbackId` using HTTP request.", "Retrieves a feedback entry with the specified `feedbackId` from the server using HTTP GET request.", "Retrieves a feedback entry with the specified `feedbackId` from the Compare Comply API using the given options and sets up the appropriate headers. If model is provided in the options, it will be added as a query parameter to the API call. Returns a ServiceCall instance for further processing of the response.", "Retrieves a feedback entry with the specified `feedbackId` using the given options and sends an HTTP request to the server.", "Retrieves a feedback entry with the specified `feedbackId` from the Compare Comply API."]}
{"SampleId": 5459588, "Origin": "Adds an export.", "Reference": "Sets module opens.", "LLMCandidates": ["Sets the opens for the builder.\n\n(Note: The method name has changed from \"exports\" to \"opens\", and it now accepts an array of Opens instead of a String.)", "Sets the opens for the builder.\n\n(Note: I assumed \"pn\" in the original comment referred to an export name, and updated the comment accordingly based on the new method signature and variable name.)", "Sets the opens for the builder.\n\n(Note: Based on the updated method name and parameter type.)", "Sets the opens for the builder object.", "Sets the opens for the builder object."]}
{"SampleId": 1837504, "Origin": "If the new address is {@code null}, a pending flight is cancelled and an\nongoing handshake is failed.", "Reference": "If the new address is {@code null}, an ongoing handshake is failed.", "LLMCandidates": ["Sets the peer address. If an established session is present, its peer is updated. If the new address is {@code null}, a pending handshake is cancelled and an ongoing one is failed. Throws an IllegalArgumentException when trying to update the peer address without an established session.", "Sets the peer address. If the new address is {@code null} or an established session is not present, an ongoing handshake will be failed. Otherwise, the session's peer address is updated. throws IllegalArgumentException if a new address is provided without an established session.", "Sets the peer address and updates the established session if present. If the new address is null, an ongoing handshake is failed.", "Sets the peer address. If the new address is {@code null}, an ongoing handshake is failed. Throws an IllegalArgumentException if there's no established session.", "sets the peer address, cancels a pending flight and fails an ongoing handshake if the new address is null, or throws an IllegalArgumentException if no established session exists."]}
{"SampleId": 2624576, "Origin": "Binds the specified {@link Service} at the specified path pattern.", "Reference": "Binds the specified {@link HttpService} at the specified path pattern.", "LLMCandidates": ["Binds the specified {@link HttpService} at the specified path pattern.", "Binds the specified {@link HttpService} at the specified path pattern.", "Binds the specified {@link HttpService} at the specified path pattern.", "Binds the specified {@link HttpService} at the specified path pattern.", "Binds the specified {@link HttpService} at the specified path pattern."]}
{"SampleId": 2823477, "Origin": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor2)}.", "Reference": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "LLMCandidates": ["Maps all index descriptors according to #indexReference(IndexDescriptor)", "Maps all index descriptors according to #indexReference(IndexDescriptor).", "Maps all index descriptors according to #indexReference(IndexDescriptor)", "Maps all index descriptors according to #indexReference(IndexDescriptor)", "Maps all index descriptors according to #indexReference(IndexDescriptor)."]}
{"SampleId": 2482288, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Queries this contact source for the given queryString and renames the method to createContactQuery.", "Queries this contact source for the given queryString and renames the method to createContactQuery.", "Queries this contact source for the given queryString and renames the method to createContactQuery.", "Queries the contact source for the given queryString and renames the method to createContactQuery.", "Queries this contact source for the given queryString and returns a ContactQuery object."]}
{"SampleId": 5425070, "Origin": "Get the next value.", "Reference": "Returns the next value from the input.", "LLMCandidates": ["Get the next value based on the input character. If it's a quote or an escape character, return the corresponding string. If it's a '{', return a JSONObject. If it's a '[' or ']', return a JSONArray. Otherwise, interpret it as a literal value and call readLiteral() method.", "Get the next JSON value. If it is a string, return it after reading its content. If it is an object or an array, read and return it accordingly. Otherwise, move the position back and read the literal value.", "Get the next value based on the input character. If the character represents a JSON object or array, return it. Otherwise, read and return the corresponding literal value.", "Get the next value based on the token read from the input stream. If the token is a string literal, return it. Otherwise, if the token is '{' or '[', return the corresponding JSONObject or JSONArray respectively. If the token is any other character, backtrack and read the next literal value.", "Get the next value based on the input character. If it's a formatting character or a quoted text, return the corresponding value. Otherwise, read and parse a literal value."]}
{"SampleId": 4624009, "Origin": "Normalizes the specified URL and creates a new instance of this class.", "Reference": "Normalizes the specified URI and creates a new instance of this class.", "LLMCandidates": ["Creates a new instance of this class by normalizing the given URI.", "Converts the given URI string to a file path and returns it.", "Converts the given URI string to a file path and returns it.", "Creates a new instance of this class by normalizing the given URI.", "Creates a new instance of this class by normalizing the given URI."]}
{"SampleId": 3467749, "Origin": "Makes the given visitor visit all of the instructions in this list.", "Reference": "Makes the given visitor visit all the instructions in this list.", "LLMCandidates": ["Visits and makes the given MethodVisitor object traverse all instructions in this AbstractInsnNode list.", "Accepts and visits all instructions in the given list using the provided MethodVisitor.", "Accepts and visits all of the instructions in the given list by the provided MethodVisitor.", "Accepts and visits all of the instructions in the given list by the provided MethodVisitor.", "Visits all instructions in this list, passing each one to the given MethodVisitor."]}
{"SampleId": 4132919, "Origin": "Removes the trace associated with this CallableStatement\nfrom the Connection that created it.", "Reference": "Removes the trace associated with this CallableStatement from the", "LLMCandidates": ["Closes any open ResultSet's associated with this CallableStatement before invoking super.passivate() method.", "Removes the trace associated with this CallableStatement from the Connection that created it.\n\nThis method sets the closedInternal flag to true and removes the trace of this CallableStatement from the associated Connection. It also closes all open ResultSets, as required by the JDBC specification.", "Removes the trace associated with this CallableStatement from the Connection that created it.\n\nThis method sets the internal closed flag to true and removes any existing trace for this CallableStatement from its associated Connection if one exists. Additionally, it closes any open ResultSet objects in the trace list and clears the trace before calling the superclass's passivate() method.", "Removes the trace associated with this CallableStatement from the Connection that created it.\nUpdates the state of this CallableStatement to indicate that it is closed internally.\n\nIf a Connection object is currently associated with this CallableStatement, then the trace list maintained by the Connection is updated to remove the reference to this CallableStatement.\n\nAdditionally, any open ResultSet objects are closed and the trace list maintained by this CallableStatement is cleared.", "Removes the trace associated with this CallableStatement from the Connection that created it. This method is now a public method instead of protected."]}
{"SampleId": 3380964, "Origin": "If you actual latency will be lower than \"desirableOperationLatency\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "Reference": "If you actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "LLMCandidates": ["Sets the threshold for considering a call slow based on the specified \"desirableOperationLatency\". If the actual latency is lower than this value, no action will be taken. Otherwise, the difference between the actual and desired latencies may be used to configure the maximum wait time for subsequent calls.", "Sets the desired slow call duration threshold for this builder, which will be used to configure the {@link BulkheadConfig}. If the actual latency is lower than \"desirableOperationLatency\", no action will be taken. Otherwise, the difference between the actual and desirable latency will be used as the {@link BulkheadConfig}.maxWaitTime.", "Sets the desired call duration threshold for slow calls. If the actual call duration is longer than this value, BulkheadConfig.maxWaitTime will be calculated based on the difference.", "Sets the desired slow call duration threshold for this builder. If the actual latency is greater than \"slowCallDurationThreshold\", calculates the difference and uses it as {@link Builder#config.maxWaitTime}.", "If you actual latency will be lower than \"desirableOperationLatity\" (sic), set the threshold for considering a call slow based on this value."]}
{"SampleId": 1946076, "Origin": "Provide the implementation of the PlatformDecoder for the current platform using the provided", "Reference": "Provide the implementation of the PlatformDecoder for the current platform using the\nprovided PoolFactory", "LLMCandidates": ["Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag."]}
{"SampleId": 1052905, "Origin": "add partition of buffer to consume", "Reference": "add whole buffer to consume", "LLMCandidates": ["Adds a QueueBuffer<T> as a data source to the DataSources collection", "Add a QueueBuffer<T> to the list of data sources", "Add a QueueBuffer<T> to the list of data sources", "Add a QueueBuffer<T> to the dataSources", "Add a QueueBuffer<T> as a data source to the consumer."]}
{"SampleId": 4713376, "Origin": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b.", "Reference": "The defintion\nof subsumption is: Rule a subsumes rule b, if a subsumes b AND a has got\nleast the same expected predictive accuracy as b.", "LLMCandidates": ["Rule item a subsumes rule item b if a's consequence equals to b's consequence and a has at least the same expected predictive accuracy as b.", "Rule a subsumes rule b, if a's consequence equals to b's consequence\nAND\na has got at least the same expected predictive accuracy as b.", "Rule item a subsumes rule item b, if a's consequence matches b's consequence AND a has at least the same expected predictive accuracy as b.", "Rule a subsumes rule b, if and only if:\n1. The consequence of rule a is equal to that of rule b.\n2. The accuracy of rule a is no less than that of rule b.", "Rule a subsumes rule b if and only if a's consequence equals to b's consequence AND a has at least the same expected predictive accuracy as b."]}
{"SampleId": 5433550, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true."]}
{"SampleId": 361244, "Origin": "Saves all writable accounts and the default account, which can later be obtained\nwith {@link #getDefaultAccount}.", "Reference": "Saves the default account, which can later be obtained with {@link #getOnlyOrDefaultAccount}.", "LLMCandidates": ["Sets the default account using the given AccountWithDataSet object.", "Sets the default account in the preferences. If defaultAccount is null, clears the current default account. Otherwise, sets the given AccountWithDataSet as the new default account.", "Sets the default account using the given AccountWithDataSet object.", "Sets the default account using the given AccountWithDataSet object.", "Sets the default account in the preferences. If a null AccountWithDataSet is passed, clears the current default account."]}
{"SampleId": 1531004, "Origin": "Returns the full set of traversal parameters specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "Reference": "Returns the full set of traversal intervals specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "LLMCandidates": ["Returns the list of traversal parameters specified on the command line, including parsed intervals without merging. If unmapped records are included in the intervals, the flag 'traverseUnmapped' is set to true. Otherwise, it returns the list of SimpleIntervals for the provided intervals.", "Returns the list of intervals specified on the command line without merging, for traversal purposes. If unmapped records are included in the request, this flag will be set accordingly. Intervals are loaded non-merging using IntervalUtils and converted to SimpleIntervals for usage with TraversalParameters.", "Returns the list of intervals specified on the command line without merging them together, for use in traversing sequence data with GATK. Throws an exception if no intervals are specified.", "Returns the list of traversal parameters specified without merging intervals, based on the given SAMSequenceDictionary. Throws an exception if no intervals are specified.", "Returns the list of traversal parameters specified without merging intervals, including any requested for unmapped records if present. The given sequence dictionary is used to parse the provided interval strings."]}
{"SampleId": 4396524, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging. Sensitive data such as password is redacted with '***Sensitive Data Redacted***'.", "Returns a string representation of this object; useful for testing and debugging, with password field redacted as \"***Sensitive Data Redacted***\".", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with password redacted using asterisks for testing and debugging."]}
{"SampleId": 5433639, "Origin": "Sets {@link HtmlOptions#createOverview} field to true.", "Reference": "Sets {@code HtmlOptions.createOverview} field to true.", "LLMCandidates": ["Sets the {@link HtmlOptions#createOverview} field to true, if no overview is not specified or if an overview path is provided or if there are multiple modules or if there are packages when there are no modules.", "Sets the {@link HtmlOptions#createOverview} field to true if noOverview() returns false and either overviewPath() is not null, or there are multiple modules, or there is at least one package.", "Sets the createOverview field to true if noOverview() returns false and either overviewPath() is not null or there is more than one module or there is at least one package.", "Sets the {@link HtmlOptions#createOverview()} field to true, if noOverview() is false and either overviewPath() is not null or there are multiple modules or there is at least one package.", "Sets the {@link HtmlOptions#createOverview} field to true if no overview option is not set or if there are multiple modules or more than one package."]}
{"SampleId": 4476930, "Origin": "This operation requires the {@code secrets/get} permission.", "Reference": "This operation requires the {@code secrets/delete} permission.", "LLMCandidates": ["This operation requires the \"{@code secrets/delete}\" permission for deleting a secret with the given name.", "This operation requires the \"secrets/delete\" permission for deleting a secret with the given name using the beginDeleteSecret method.", "This operation requires the \"secrets/delete\" permission for deleting a secret with the given name.", "This operation requires the \"{@code secrets/delete}\" permission for deleting a secret with the given name.", "This operation requires the {@code secrets/delete} permission for deleting a secret with the given name using the beginDeleteSecret method."]}
{"SampleId": 2443728, "Origin": "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Reference": "Binds a new instance {@link Binding} using the information from the Jersey descriptor {@link InstanceBinding}.", "LLMCandidates": ["Binds a new instance of an active descriptor using the information from the Jersey dynamic configuration.\n\n(Assuming that \"Descriptor\" in the original comment is referring to ActiveDescriptor and not Descriptor class)", "Binds a new instance of an ActiveDescriptor using the information from the Jersey DynamicConfiguration.\n\nThe updated code uses a Set<AliasBinding> instead of a Set<AliasDescriptor>. Therefore, the comment should reflect this change. However, since the rest of the comment is accurate, only the beginning needs to be changed.", "Binds a new instance of an active descriptor using the information from the Jersey dynamic configuration.\n\n(Assuming \"Descriptor\" is the correct type name in the original comment and it remains unchanged.)", "Binds a new instance of {@link Descriptor} using the information from the Jersey dynamic configuration {@link DynamicConfiguration}.", "Binds a new instance of {@link Descriptor} using the information from the Jersey dynamic configuration {@link DynamicConfiguration}."]}
{"SampleId": 6191403, "Origin": "The {@link MessagingExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to\nhandle any errors that occur.", "Reference": "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle\nany errors that occur.", "LLMCandidates": ["The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur."]}
{"SampleId": 708321, "Origin": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException.", "Reference": "Adds an error to the message set and throws CompilationFailedException.", "LLMCandidates": ["Adds a fatal exception to the message set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the error set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the error set and throws the unit as a CompilationFailedException.", "Adds a fatal error message to the existing errors and throws CompilationFailedException.", "Adds a fatal exception to the error set and throws the unit as a CompilationFailedException."]}
{"SampleId": 5245177, "Origin": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.", "Reference": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use simply that the\ncheckbox allowing configuration is checked on the options panel.", "LLMCandidates": ["If the option to use a central repository has been selected, determines if the central repository is allowed for use.", "If the option to use a central repository has been selected, determines whether the central repository is allowed for use.", "If the option to use a central repository has been selected, determines if the central repository is allowed for use.", "If the option to use a central repository is allowed, does not indicate whether or not the central repository is configured for use.", "Indicates whether allowance is given to use a central repository. Note that in almost all situations, EamDb.isEnabled() should be used instead of this method, as it will call this method as well as check if the selected type of central repository is not DISABLED."]}
{"SampleId": 1354136, "Origin": "Report the ending barline.", "Reference": "Report the ending PartBarline.", "LLMCandidates": ["Returns the right PartBarline.", "Reports the right PartBarline.", "Reports the right PartBarline.", "Reports the right PartBarline.", "Reports the right PartBarline."]}
{"SampleId": 6006999, "Origin": "Add a series for a X-Y type chart using Lists with error bars", "Reference": "Add a series for a X-Y type chart using Lists", "LLMCandidates": ["Add a series for an X-Y type chart using List data with error bars and handle different data types (Date or Number).", "Add a series for a X-Y type chart using Lists with error bars and handling different data types for x-axis (Date or Number)", "Add a series for an X-Y type chart using Lists with error bars. The method now determines and handles the data type of the xData list before creating the new XYSeries instance. For Date type, it calls addSeries with converted Double arrays from DateList and NumberList. Otherwise, it calls addSeries with default DataType as Number.", "Add a series for a X-Y type chart using List data with error bars and performing data type conversion if necessary.", "Add a series for a X-Y type chart using Lists of given data types and error bars\n\nNote: The method now checks the data type of xData before processing it accordingly. If xData is of Date type, the method converts it to Double Array and calls addSeries(...) with DataType.Date as an argument. Otherwise, it proceeds with the default implementation and sets DataType to Number."]}
{"SampleId": 4396496, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging with sensitive data redacted", "Returns a string representation of this object with sensitive data redacted using placeholders; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging. If AccessToken is not null, its value will be redacted with \"***Sensitive Data Redacted***\" instead.", "Returns a string representation of this object; useful for testing and debugging. If AccessToken is not null, it will be redacted as \"***Sensitive Data Redacted***\" in the output."]}
{"SampleId": 1606491, "Origin": "Get the hex color for the primary displayed usernote of a user", "Reference": "Get the color for the primary displayed usernote of a user", "LLMCandidates": ["Get the int representation of the hex color for the primary displayed user note of a user.", "Get the int value representing the hex color for the primary displayed user note of a user.", "Get the int representation of the hex color for the primary displayed usernote of a user", "Get the int representation of the hex color for the primary displayed usernote of a user", "Get the int representation of the hex color for the primary displayed usernote of a user."]}
{"SampleId": 2542310, "Origin": "Rotate this vector the specified radians about the given rotation axis.", "Reference": "Rotate this vector the specified radians around the given rotation axis.", "LLMCandidates": ["Rotate this vector the specified angle around the given axis.", "Rotate this vector the specified radians about the given rotation axis using rotateAxis method instead of rotateAbout method.", "Rotate this vector the specified radians about the given rotation axis using rotateAxis method instead of rotateAbout method.", "Rotate this vector the specified radians about the given rotation axis using rotateAxis instead of rotateAbout.", "Rotate this vector the specified radians about the given rotation axis using rotateAxis method instead of rotateAbout method."]}
{"SampleId": 4245480, "Origin": "Does nothing if\nthe given node is currently not visible or target is .", "Reference": "Does nothing if\nthe given node is currently not visible or target is {@code null}.", "LLMCandidates": ["Updates the given node in the target if it matches the passed model. Does nothing if the given node is currently not visible or target is null.", "updates the given node in the tree if it is currently visible and target is not null", "Updates the given node in the target if the node model matches the provided model.", "Updates the given node in the target if the node model matches the provided model.", "Updates the given node in the target if the node's model matches the provided one."]}
{"SampleId": 2014106, "Origin": "Tests that apply works.", "Reference": "See issue\n1683.", "LLMCandidates": ["Tests the behavior of freezing numeric properties in objects.", "Tests the behavior of freezing numeric properties in objects.", "Tests the behavior of freezing numeric properties in objects.", "Tests the behavior of freezing numeric properties in objects.", "Tests the behavior of freezing numeric properties in objects."]}
{"SampleId": 5653269, "Origin": "Returns the value of the node as a module identifier, or null if the node is undefined.", "Reference": "Returns the value of the node as a module identifier.", "LLMCandidates": ["Returns a ModuleIdentifier instance initialized with the string value of the given ModelNode. If the ModelNode is undefined, returns null.", "Returns a new ModuleIdentifier initialized with the value of the given ModelNode as a string. If the ModelNode is undefined, returns null.", "Returns a ModuleIdentifier instance from the given ModelNode's string value.", "Returns a ModuleIdentifier object initialized with the string value of the given ModelNode. If the ModelNode is undefined, null will be returned.", "Returns a ModuleIdentifier object constructed from the string representation of the given ModelNode. If the ModelNode is undefined, returns null."]}
{"SampleId": 4615504, "Origin": "Returns a lightweight, low-level preceding-sibling axis iterator.", "Reference": "Returns a light-weight, low-level preceding-sibling axis iterator.", "LLMCandidates": ["Returns a low-level preceding-sibling axis iterator.", "Returns a lightweight, low-level preceding-sibling axis iterator using the childIter() method instead of children().", "Returns a lightweight, low-level preceding-sibling axis iterator using the childIter() method instead of children().", "Returns a lightweight, low-level iterator for the preceding sibling axis.", "Returns a lightweight, low-level iterator for the preceding sibling axis."]}
{"SampleId": 1879788, "Origin": "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class.", "Reference": "Testing the normalizeVector) and normalizeEquals(Vector) methods of the\n{@link VMath} class.", "LLMCandidates": ["Testing the normalize(double[]) method of the VMath class to ensure it and the normalizeEquals(double[]) method return a normalized vector with length 1, and verify that the result is identical for both methods. Additionally, checking if the normalized vector multiplied by the euclidean length of the original vector results in the original vector itself.", "Testing the normalize(double[]) method of the VMath class.", "Testing the normalize(double[]) method of the VMath class.", "Testing the normalize(double[]) method of the VMath class and ensuring it returns a normalized vector with length 1.", "Testing the normalize(double[]) method of the VMath class."]}
{"SampleId": 1390765, "Origin": "Adds a 'followingUser' type notification with the specified request json object.", "Reference": "Adds a 'following - user' type notification with the specified request json object.", "LLMCandidates": ["Adds a 'following_user' type notification with the specified request json object.", "Adds a 'following_user' type notification with the specified request json object.", "Adds a 'following_user' type notification with the specified request json object.", "Adds a 'following_user' type notification with the specified request json object.", "Adds a 'following_user' type notification with the specified request json object."]}
{"SampleId": 3964762, "Origin": "Turn a toX of Either3 into a single Either with Lists of values.", "Reference": "Turn an IterableX of Either3 into a single Either with Lists of values.", "LLMCandidates": ["Transforms an IterableX of Either3 instances into a single LazyEither3 with ReactiveSeqs of values.", "Transforms a collection of Either3 instances into a single Either with ReactiveSeqs of values.", "Turn a Iterable of Either3 into a single Either with ReactiveSeq of values.", "Turn a Iterable of Either3 into a single Either with ReactiveSeq of values.", "Transform a stream of Either3s into a single Either with ReactiveSeq of values."]}
{"SampleId": 4617610, "Origin": "Tests {@link Array#from(Value...)}.", "Reference": "Tests {@link XQArray#from(Value...)}.", "LLMCandidates": ["Tests {@link XQArray#from(Value[])}.", "Tests {@link XQArray#from(Value[])} instead of {@link Array#from(Value...)}.", "Tests {@link XQArray#from(Value[])} instead of {@link Array#from(Value...)}.", "Tests {@link XQArray#from(Value[])", "Tests {@link XQArray#from(Value[])"]}
{"SampleId": 1220434, "Origin": "Ingest a Matrix into an H2O Frame.", "Reference": "Ingest a Mahout Matrix into an H2O DRM.", "LLMCandidates": ["Create an H2ODrm object from a given Matrix by populating an empty Frame with its data and optionally creating a label vector if the matrix is string labeled.", "Create an H2ODrm object from a Matrix by initializing an empty frame with the given dimensions and filling it with data from the Matrix. If the Matrix is labeled, create an auxiliary vector for the labels as well.", "Ingest a Matrix into an H2O Frame with given minimum and exact hints.", "Populate an H2O Frame from a given Matrix with optional minimum and exact hints for memory management.", "Ingest a Matrix into an H2O Frame with specified minimum and exact hints."]}
{"SampleId": 2734301, "Origin": "Returns {@link List} of collapsed {@link AccordionPane}s", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Returns a list of accordion panes that will be collapsed based on the given ids.", "Collapses the list of AccordionPanes identified by the given ids.\n\nReturns: none.", "Returns a list of {@link AccordionPane}s with the given ids collapsed in the model.", "Returns a list of {@link AccordionPane}s with the given ids collapsed in the model.", "Returns a list of accordion panes that will be collapsed based on the provided ids."]}
{"SampleId": 2008719, "Origin": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException and TimeoutException as an OperationCancellation.", "Reference": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException as an OperationCancellation.", "LLMCandidates": ["Throws InterruptedException and TimeoutException as OperationCancellation when waiting for result with given timeout.}\n\nSame as {@link #awaitResult(long, TimeUnit)},\nbut wraps InterruptedException and TimeoutException exceptions into OperationCancellation.", "Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException directly instead of wrapping it in an OperationCancellation exception. Throws TimeoutException separately.", "Same as {@link #awaitResult(long, TimeUnit)}, but throws InterruptedException and TimeoutException directly as OperationCancellation.", "Throws InterruptedException and TimeoutException as OperationCancellation when awaitResult times out or is interrupted.", "Throws InterruptedException and TimeoutException as OperationCancellation when waiting for result with given timeout}\n\nSame as {@link #awaitResult(long, TimeUnit)},\nbut throws InterruptedException and TimeoutException as OperationCancellation."]}
{"SampleId": 3863845, "Origin": "shows full-screen preview of the passed media", "Reference": "show full-screen preview of the item and the passed position", "LLMCandidates": ["displays full-screen preview of the passed PhotoPickerItem", "displays full-screen preview of the passed PhotoPickerItem", "displays full-screen preview of the passed PhotoPickerItem", "displays full-screen preview of the passed PhotoPickerItem", "Displays full-screen preview of the selected PhotoPickerItem"]}
{"SampleId": 237074, "Origin": "Handles a netty RPC callable with logging.", "Reference": "Handles a streaming RPC callable with logging.", "LLMCandidates": ["Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging."]}
{"SampleId": 6305223, "Origin": "Build an HTTP Ok without any content.", "Reference": "Build an HTTP No content.", "LLMCandidates": ["Build an HTTP no-content response with the given message.", "Build an HTTP no-content response with the given message.", "Build an HTTP response with status code NO\\_CONTENT and no content.", "Build an HTTP response with status code NO\\_CONTENT and no content.", "Build an HTTP response with no content and status code NO\\_CONTENT for the given message and context."]}
{"SampleId": 2230477, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the split brain protection name for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the split brain protection name for operations."]}
{"SampleId": 3270031, "Origin": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "Reference": "Returns the node to the left of the \"::\".", "LLMCandidates": ["Returns the primary expression to the left of this node in the parse tree.", "Retrieves and returns the first child of this node, which is expected to be an ASTPrimaryExpression.", "Returns the left expression of the current node which is not null.", "Gets the primary expression to the left of this expression}\n\n{Returns the result as a non-null value", "Gets the primary expression to the left of this expression}\n\n{Returns the result as a non-null value"]}
{"SampleId": 2825133, "Origin": "Determine type of a store base on a store file name.", "Reference": "Determine type of a store base on provided database file.", "LLMCandidates": ["Determine type of a store based on a DatabaseFile instance.", "Determine type of a store based on a database file.", "Determine type of a store based on a database file.", "Determine type of a store based on a DatabaseFile object.", "Determine type of a store based on a DatabaseFile object."]}
{"SampleId": 4472680, "Origin": "Set name of the Cosmos DB table.", "Reference": "Set the resource value.", "LLMCandidates": ["Sets the TableGetPropertiesResource for this object.", "Sets the TableGetPropertiesResource for this TableGetResultsInner object.", "Sets the TableGetPropertiesResource object for this instance.", "Sets the TableGetPropertiesResource object for this instance.", "Set the `TableGetPropertiesResource` object associated with this instance."]}
{"SampleId": 6233845, "Origin": "Returns prefix {@code byte} for this type.", "Reference": "Returns length of this type.", "LLMCandidates": ["Returns the length of this Redis type in units of bytes based on the value. If value is null, returns 0.", "Returns the length of this Redis constant value, which is either the length of the given value if it's not null, or 0 otherwise.", "Returns the length of this Redis type value, which is either the specified constant for non-null values or zero for null values.", "Returns the length of this Redis type value in bytes. If the value is null, returns 0.", "Returns the length of this Redis type in bytes if it is not null, otherwise returns 0."]}
{"SampleId": 4617576, "Origin": "Adds part of another token to the token.", "Reference": "Adds the part of a token to the token.", "LLMCandidates": ["Adds a specified portion of a byte array to this TokenBuilder", "Adds a portion of a byte array token to the existing TokenBuilder instance.}}\n\nThis method appends a specified portion of a given byte array token into the TokenBuilder object. It takes three arguments: the input byte array token, start index, and end index that define the sub-sequence to be appended. The length of the sub-sequence is calculated as the difference between the end and start indices. If the combined length of the current content and the new sequence exceeds the capacity of the internal char array, it will be resized accordingly before the new data is copied over. Eventually, the size of the TokenBuilder object is updated to reflect the new length.", "Adds a specified portion of a byte array to this TokenBuilder instance", "Adds a specified portion of a byte array to this TokenBuilder instance", "Adds a specified portion of a byte array to this TokenBuilder instance"]}
{"SampleId": 6043598, "Origin": "and repositoryId = ?.", "Reference": "and type = ?.", "LLMCandidates": ["@override Searches for the next and previous SyncDLObject based on repositoryId and type instead of companyId and modifiedTime.", "Finds the previous and next SyncDLObject based on repositoryId and type instead of companyId and modifiedTime.", "Finds the previous and next SyncDLObject based on repositoryId and type instead of companyId and modifiedTime.", "Finds the previous and next SyncDLObject based on repositoryId and type instead of companyId and modifiedTime.", "Searches for the next and previous SyncDLObject based on repositoryId and type instead of companyId and modifiedTime."]}
{"SampleId": 2327545, "Origin": "Generates random trits for a transaction.", "Reference": "Generates trits for a hash.", "LLMCandidates": ["Generates random trits for a transaction (renamed to getTransactionHash)", "Generates random trits for a transaction (renamed to getTransactionHash)", "Generates random trits for a transaction, renamed to getTransactionHash.", "Generates random trits for a transaction, renamed to getTransactionHash.", "Generates random trits for a transaction (renamed to getTransactionHash)"]}
{"SampleId": 704476, "Origin": "Thread signaled test for {@link PredicateLock#waitForever()}", "Reference": "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)}", "LLMCandidates": ["Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)} with a timeout of 5 minutes", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)"]}
{"SampleId": 6045130, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchResourceException} if the CalendarResource with the given UUID and group ID could not be found."]}
{"SampleId": 2218209, "Origin": "n choose k. Returns 0 if n is less than k.", "Reference": "The n choose k. Returns 0 if n is less than k.", "LLMCandidates": ["n choose k. Returns 0 if n is less than k.\n\nUpdated method name is 'floor' instead of 'Math.floor'. And the function 'exp' and 'logChoose' are renamed to 'exp' and 'lchoose' respectively.", "n choose k. Returns 0 if n is less than k.\n\nCalculates the probability of choosing k items from a set of n distinct items.", "n choose k. Returns 0 if n is less than k. Note: 'choose' now calls 'floor' and 'exp' instead of 'Math.floor' and 'Math.exp', respectively.", "Calculates the value of n choose k using the formula: n choose k = floor(0.5 + exp(lchoose(n, k))) where n and k are non-negative integers. Returns 0 if n is less than k.", "n choose k. Returns 0 if n is less than k.\n\nCalculates the binomial coefficient of n choosing k using the logarithmic method and returns the result as a double value."]}
{"SampleId": 6311227, "Origin": "Show {@link Toast} for exception", "Reference": "Show {@link Toast} for throwable", "LLMCandidates": ["Show {@link Toast} for exception or throwable.", "Show {@link Toast} for Throwable exception\n\nNote: The type of exception passed to the method has been changed from \"Exception\" to \"Throwable\".", "Show {@link Toast} for throwable exception", "Show {@link Toast} for throwable exception", "Displays a {@link Toast} for the given exception or a default message if no exception is provided."]}
{"SampleId": 3357845, "Origin": "List a range of recording descriptors which match a channel and stream id.", "Reference": "List a range of recording descriptors which match a channel URI fragment and stream id.", "LLMCandidates": ["List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id."]}
{"SampleId": 437801, "Origin": "Register the runnable to process the specific pTransformId.", "Reference": "Register the runnable to process the specific pTransformId and track its execution time", "LLMCandidates": ["Register the runnable with the given pTransformId and associate it with the corresponding metrics state.", "Register the runnable with the given pTransformId and set up associated execution state and metrics.", "Register the runnable with the given pTransformId and associate it with the specified labels metadata and execution state before processing it.", "Register the runnable to process the specific pTransformId with associated Metrics and execution state tracking.", "Register the runnable to process the specified pTransformId and track its execution time using the provided MetricsContainerImpl."]}
{"SampleId": 1879510, "Origin": "Robust computation of the inverse covariance matrix.", "Reference": "Update the cholesky decomposition.", "LLMCandidates": ["Performs an update of the Cholesky decomposition for the covariance matrix.", "Computes the inverse of a symmetric positive definite covariance matrix using Cholesky decomposition. If the matrix is not SPD, a singularity cheat is applied to resolve potential zero determinant issues.", "Computes the inverse of a symmetric positive definite covariance matrix using Cholesky decomposition. If the covariance matrix is singular or nearly singular, a small value is added to the diagonal and the decomposition is recomputed until a valid result is obtained. The determinant of the covariance matrix is also computed and stored for normalization purposes.", "Computes the inverse of a symmetric positive definite covariance matrix using Cholesky decomposition.", "Computes the inverse of a symmetric positive definite covariance matrix using Cholesky decomposition. If the input covariance matrix is not symmetric positive definite, a singularity cheat is applied to attempt to resolve the issue before computing the inverse."]}
{"SampleId": 4117678, "Origin": "See the\n{@link BlowfishCipher} class-level JavaDoc for more information and why it might be good to provide your own.", "Reference": "See the\nclass-level JavaDoc for more information and why it might be good to provide your own.", "LLMCandidates": ["Sets the CipherService to be used instead of directly setting a Cipher.\nSee the {@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own implementation.", "Sets the CipherService instead of Cipher.\nSee the {@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "Sets the CipherService instead of the Cipher.\n\nSee the {@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "Set the `CipherService` instance instead of the `Cipher` instance.\n\nSee the {@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "Sets the instance variable for the CipherService.\nSee the {@link CipherService} class-level JavaDoc for more information and why it might be good to provide your own."]}
{"SampleId": 3357566, "Origin": "Get the channel parameter for the cluster log and snapshot replay channel.", "Reference": "Set the counter for the current state of the cluster backup.", "LLMCandidates": ["Sets the state counter for this object with the given Counter instance.", "Sets the state counter for this object with the given Counter instance.", "Sets the state counter for this object with the given Counter instance.", "Set the state counter parameter for this object.", "Set the state counter parameter for this object."]}
{"SampleId": 1142511, "Origin": "Reset the leader election throttle.", "Reference": "Reset the leader election throttles.", "LLMCandidates": ["Reset the leader election throttles.", "Resets the leader throttle list.", "Reset the leader election throttles.", "Reset the leader election throttles.", "Reset the leader election throttles."]}
{"SampleId": 2544552, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix."]}
{"SampleId": 4476357, "Origin": "Fetches the configuration settings that match the {@code options}.", "Reference": "Fetches the configuration settings that match the {@code selector}.", "LLMCandidates": ["Fetches the configuration settings that match the given selector and context.", "Fetches the configuration settings that match the selector, to be used for the specified context.", "Fetches the configuration settings that match the given selector and context.", "Fetches the configuration settings that match the given selector and context.", "Fetches the configuration settings that match the given selector and context."]}
{"SampleId": 5316646, "Origin": "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext.", "Reference": "Autodetect a {@link FreeMarkerConfig} object in the {@code ApplicationContext}.", "LLMCandidates": ["Autodetect a FreeMarkerConfig object via the ApplicationContext in an application context (may be inherited).", "Autodetect a FreeMarkerConfig object via the ApplicationContext in this application context (may be inherited). FreeMarkerConfigurer is the usual implementation. This bean may be given any name.", "Autodetect a FreeMarkerConfig object via the ApplicationContext in the application context (may be inherited).", "Autodetect a FreeMarkerConfig object via the ApplicationContext in an application context (may be inherited).", "Autodetect a FreeMarkerConfig object via the ApplicationContext in an application context (may be inherited)."]}
{"SampleId": 1294322, "Origin": "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite", "Reference": "Invoked when the txn has been removed from the queue and is starting to execute at a local PartitionExecutor", "LLMCandidates": ["Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite (now named pm_queue_exec)", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite (now named pm_queue_exec)", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite (now named pm_queue_exec)", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite (now named pm_queue_exec)", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite (now named pm_queue_exec)"]}
{"SampleId": 1985691, "Origin": "Then return all - block to get the trapped water", "Reference": "Then return total - blocks to get the trapped water.", "LLMCandidates": ["Calculate and return the amount of water trapped between the left and right pointers based on the height of the bars in the given array.", "// Calculate the amount of trapped water by iterating through the array from left to right.\n// At each step, find the minimum height between the current and next index.\n// If this minimum is greater than the current level, add the volume of water that could be trapped to the total.\n// Update the current level and increment or decrement the index accordingly based on the height comparison.\n// Keep track of the number of blocks that are occupied as we move through the array.\n// Subtract this number from the total amount of trapped water at the end to get the final result.", "Calculate and return the amount of water trapped between the left and right pointers based on the height of the barricades. The calculation is done by subtracting the number of blocks occupied from the total volume of water that could be trapped without any blocks being occupied.", "Calculate and return the amount of trapped water based on the height of given blocks. First, determine the total amount of water that could be trapped without any blocks being occupied. Then, subtract the water blocked by the blocks to get the final result.", "Calculate and return the amount of water trapped between the left and right pointers based on the height of the bars at each position. The trapped water is the difference between the total amount of water that could be trapped in the area between the pointers and the volume of blocks occupied by the bars."]}
{"SampleId": 2337095, "Origin": "Delete RADIUS Configuration\n### Functional Description:   Delete existing RADIUS configuration.", "Reference": "Delete RADIUS configuration\n### Functional Description:   Delete existing RADIUS configuration.", "LLMCandidates": ["Delete existing RADIUS configuration. Calls deteteRadiusConfigWithHttpInfo(xSdsAuthToken) method internally.", "Delete existing RADIUS configuration through a call to deteteRadiusConfigWithHttpInfo(xSdsAuthToken) method.", "Delete existing RADIus Configuration\n### Functional Description:   Remove the existing RADIUS configuration using a DELETE API call.", "Delete existing RADIUS configuration.\\\n ### Functional Description:\\\n Delegate the deletion of RADIUS configuration to `deteteRadiusConfigWithHttpInfo` method.", "Delete existing RADIUS configuration.\n ### Functional Description:\n Deletes the existing RADIUS configuration."]}
{"SampleId": 1259760, "Origin": "Check whether the given member is a proxy member of a proxy object.", "Reference": "Check whether the given member is a proxy member of a proxy object or is a static proxy member.", "LLMCandidates": ["Checks if the given Member is a proxy member of the specified object. If the Member is not static and the object is not a proxy, returns false. Otherwise, checks if the Member is already cached as a proxy member and returns the cached value if present. If not present in cache, calculates the value using isSpringProxyMember method and caches it.", "Checks whether the given member is a proxy member of the specified object. If the member is not static and the object is not a proxy, returns false. Otherwise, checks if the member is already in the cache and returns the cached value if present. Calculates and caches the result of isSpringProxyMember(member).", "Checks whether the given Member is a proxy member of the given Object, only if the Member is not static and the Object is a proxy.", "Check whether the given member is a proxy member of a static or dynamic proxy object.", "Checks whether the given member is a proxy member of the given object. If the member is not static and the object is not a proxy, returns false. Otherwise, checks if the member is already cached as a proxy member and returns the cached value if present. Then, determines whether the member is a Spring proxy member and caches the result before returning it."]}
{"SampleId": 4396574, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Generates a string representation of this object with sensitive data redacted for testing and debugging purposes.", "Returns a string representation of this object; useful for testing and debugging. Sensitive data is now redacted by appending \"***Sensitive Data Redacted***\" to the corresponding fields.", "Returns a string representation of this object with sensitive data redacted for testing and debugging.", "Returns a string representation of this object with sensitive data redacted for testing and debugging.", "Generates a string representation of this object with sensitive data redacted for security."]}
{"SampleId": 1875792, "Origin": "Get the normalized variation of information (normalized, 0 = equal) NVI = 1\n- NMI_Joint", "Reference": "Get the normalized variation of information (normalized, small values are\ngood).", "LLMCandidates": ["Get the normalized variation of information (normalized, 0 = identical) NVI = 1 - (MutualInformation / entropyJoint)", "Get the normalized variation of information (normalized, 0 = identical) NVI = 1 - mutualInformation / entropyJoint", "Get the normalized variation of information (normalized, 0 = identical) NVI = 1 - (NMI / entropyJoint)", "Get the normalized variation of information (normalized, 0 = identical) NVI = 1 - (NMI / entropyJoint)", "Get the normalized variation of information (normalized, 0 = identical) NVI = 1 - mutualInformation / entropyJoint"]}
{"SampleId": 1309906, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a API, used to index the API in ES.", "LLMCandidates": ["Generates a valid document ID for an Api, used to index the Api in ES.", "Generates a valid ID for an API, used to index the API in ES.", "Generates a valid ID for an API, used to index the API in ES.", "Generates a valid API ID for an Api, used to index the API in ES.", "Generates a valid API ID for an Api, used to index the API in ES."]}
{"SampleId": 4132872, "Origin": "Returns the JDBC connection {@link #username} property.", "Reference": "Returns the JDBC connection {@link #userName} property.", "LLMCandidates": ["Returns the JavaBeans component property for the {@link #userName} instance variable.", "Returns the Java Bean property for user name.", "Returns the Java Bean property for user name.", "Returns the JavaBean property userName.", "Returns the JavaBean property userName."]}
{"SampleId": 1629435, "Origin": "When the insertion is complete, the\n{@code ticker} will be {@link CountUpLatch#countUp() incremented} by 1.", "Reference": "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "LLMCandidates": ["When the indexing is complete, the {@link CountUpLatch tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the indexing is complete, the {@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the indexing is complete, the {@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the indexing is complete, the {@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the indexing is complete, the {@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1."]}
{"SampleId": 1442385, "Origin": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of AtomContacts", "Reference": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of Contacts containing the indices of the pair and the calculated distance.", "LLMCandidates": ["Calculates all distances of atoms within the cell, returning those that are within the given cutoff as a list of Contacts.", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts", "Calculates all distances of atoms within the current cell and returns those that are within the given cutoff as a list of Contacts.", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts.", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts"]}
{"SampleId": 291293, "Origin": "Converts milliseconds to a string containing hours and minutes", "Reference": "Converts milliseconds to a string containing hours and minutes or minutes and seconds", "LLMCandidates": ["Converts milliseconds to a string containing hours and minutes. If durationIsInHours is true, then the string will display hours and minutes; otherwise, it will display minutes and seconds.", "Converts milliseconds to a string containing hours and minutes, taking into account whether the duration is given in hours or minutes.", "Converts milliseconds to a string containing hours and minutes. The first part of the duration is now represented in hours or minutes depending on the durationIsInHours parameter.", "Converts milliseconds to a string containing hours and minutes, taking into account whether the duration is given in hours or minutes.", "Converts milliseconds to a string containing hours and minutes, taking into account whether the duration is given in hours or minutes."]}
{"SampleId": 4019592, "Origin": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage.", "Reference": "They are assigned to a WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.", "LLMCandidates": ["* Checks if markers are dirty.\n * Throws an UnsupportedOperationException since IsDirty is not supported on tombstones.", "This method checks if markers are dirty. It has been simplified to be a method without any parameter.", "This method checks if markers are dirty. It has been simplified to be a method without any parameter.", "* Checks if markers are dirty.\n * Throws an UnsupportedOperationException since IsDirty is not supported on tombstones.\n */", "* Indicates if markers are dirty for a WebPage.\n * Throws an UnsupportedOperationException since IsDirty is not supported on tombstones."]}
{"SampleId": 2912049, "Origin": "Gets the price that was traded, in decimal form.", "Reference": "Gets the price that was traded, together with the trade date, optional.", "LLMCandidates": ["Gets an Optional containing the traded price, if available, instead of directly returning the price in decimal form.", "Gets an Optional containing the traded price, if it exists.", "Gets an Optional containing the traded price, if it exists.", "Gets an Optional containing the traded price, if it exists.", "Returns an Optional containing the traded price. If tradedPrice is null, the returned Optional will be empty."]}
{"SampleId": 6291857, "Origin": "Create a TripTimeSubset from a given trip pattern, date and time window.", "Reference": "Create a TripTimeSubset from a given trip pattern, bitset of services running, and time window.", "LLMCandidates": ["Create a TripTimeSubset from a given trip pattern, Graph, BitSet representing servicesRunning on that date, and time window defined by startTime and endTime.", "Create a TripTimeSubset from a given trip pattern, date, and bit set representing the running services, and time window.", "Create a TripTimeSubset from a given trip pattern, date, and time window using the provided BitSet of servicesRunning instead of checking if each service is running individually.", "Create a TripTimeSubset from a given trip pattern, Graph object representing services running status, and time window defined by startTime and endTime.", "Create a TripTimeSubset from a given trip pattern, Graph, BitSet representing services running on that date, and time window."]}
{"SampleId": 4383855, "Origin": "Availability Zone in the same Region to increase fault tolerance in\nthe event of a service disruption.", "Reference": "Zone in the same Region to increase fault tolerance in the event of a\nservice disruption.", "LLMCandidates": ["Updates the availability options for a given request within the same region to increase fault tolerance in case of service disruptions.", "Processes a request to update availability options for a resource within the same Region for increased fault tolerance in case of service disruptions.", "Updates the availability options for a resource in the same Region to increase fault tolerance in case of a service disruption.", "Updates the availability options for the given request within the same Region to increase fault tolerance in the event of a service disruption.", "Updates the availability options for the given request within the same Region to increase fault tolerance in case of a service disruption."]}
{"SampleId": 3344326, "Origin": "RxRatpack.promise(new AsyncService().observe(\"foo\"))\n    ).getValue();", "Reference": "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "LLMCandidates": ["RxRatpack.promiseAll(new AsyncService().observable(\"foo\"))\n    .getValue();", "Returns a Promise that completes with a List containing all items emitted by the given Observable stream.\n\nUsing 'promiseAll' instead of 'promise'.", "The promise all version of result can be obtained by observing an Observable, using this method.\n\nRxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "Returns a Promise that completes with a List of values emitted by the given ObservableStream.\n\nIf you meant to name the method \"promiseAll\" instead of \"promise\", please update the method signature accordingly in both code and comment.", "```java\n/**\n * Completes a Promise with an Observable's emitted values as a List.\n *\n * @param observable the Observable to subscribe to\n */\nRxRatpack.promiseAll(observable)\n    .getValue();\n```"]}
{"SampleId": 6044273, "Origin": "Returns all the push notifications devices where platform = ?.", "Reference": "Returns all the push notifications devices where userId = any ?", "LLMCandidates": ["Returns all the push notifications devices where platform = ? and userIds are in the given array.", "Returns all the push notifications devices where platform = ? and userIds are in the given array.", "Returns all the push notifications devices where platform equals given value and userIds are in the given array.", "Returns all the push notifications devices where platform = ? and the userIds are in the given array.", "Returns all the push notifications devices where platform = ? for the given userIds."]}
{"SampleId": 1985765, "Origin": "| Then we can use this range we retrieve levels from the map.", "Reference": "| Then this range can be used to retrieve column values from the map.", "LLMCandidates": ["We can use this range to retrieve columns from the map.", "Using this range, we retrieve columns from the map instead of levels", "Using this range, we retrieve columns from the map instead of levels", "We can use this range to retrieve columns from the map.", "We can use this range to retrieve columns from the map."]}
{"SampleId": 4850466, "Origin": "Gets the user's avatar URL, if present and in a supported format.", "Reference": "Gets the user's avatar URL, if present.", "LLMCandidates": ["Gets the user's avatar URL if present, regardless of format.", "Gets the user's avatar URL, if present.", "Gets the optional avatar URL based on the given format. If an avatar is present, its URL is returned wrapped in an Optional. Otherwise, an empty Optional is returned.", "Gets the user's avatar URL if it exists.", "Gets the optional user avatar URL based on the given image format."]}
{"SampleId": 4781233, "Origin": "Return  if {@link ITokenTypeAttribute#TF_COMMON_WORD} is set.", "Reference": "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "LLMCandidates": ["Return if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set."]}
{"SampleId": 2048822, "Origin": "Calls {@link #reset()} and releases any held DRM resources.", "Reference": "Calls {@link #reset()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Calls {@link #reset()} and releases any held DRM session references in the metadata queue.", "Calls {@link #reset()} and releases any held DRM session references in the metadata queue.", "Calls {@link #reset()} and releases any held DRM session references in the metadata queue.", "Releases any held DRM session references and calls {@link #reset()}.", "Releases any held DRM session references and calls {@link #reset()}."]}
{"SampleId": 2478395, "Origin": "Removes given PacketExtension from the list of child packet\nextensions.", "Reference": "Removes given ExtensionElement from the list of child packet\nextensions.", "LLMCandidates": ["Removes given ExtensionElement from the list of child extensions.", "Removes given ExtensionElement from the list of child extensions.", "Removes given ExtensionElement from the list of child extensions.", "Removes given ExtensionElement from the list of child extensions.", "Removes given ExtensionElement from the list of child extensions."]}
{"SampleId": 5078149, "Origin": "Prepare task event for execution on agent.", "Reference": "Prepare exe params for send REST request on node.", "LLMCandidates": ["Prepare execution parameters for Visor Gateway task on agent.", "Prepare execution parameters for Visor Gateway Task on Ignite cluster.", "Prepare execution parameters for Visor Gateway task on agent.", "Prepare execution parameters for Visor Gateway task on agent.", "Prepare the execution parameters for a Visor Gateway task on the agent."]}
{"SampleId": 5452379, "Origin": "This method returns an interface that is\nboth \"up\" and supports multicast.", "Reference": "This method returns the first interface that\nis both \"up\" and supports multicast.", "LLMCandidates": ["This method returns an interface that is up, supports multicast, and has both IPv4 and IPv6 addresses.", "This method returns an interface that is \"up\", supports multicast, and has both IPv4 and IPv6 addresses.", "This method returns an interface that is \"up\", supports multicast, and has both IPv4 and IPv6 addresses.", "This method returns an interface that is up, supports multicast, and has both IPv4 and IPv6 addresses.", "This method returns an interface that is \"up\", supports multicast, and has both IPv4 and IPv6 addresses."]}
{"SampleId": 101881, "Origin": "Return true if the given CmsTreeItem or its children is selected.", "Reference": "Return true if at least one child of the given tree item is selected.", "LLMCandidates": ["Return true if the given CmsTreeItem or any of its descendants is selected.", "Return true if the given CmsTreeItem or any of its descendants is selected.", "Determine if the given CmsTreeItem or any of its descendants is selected based on their ids in the map.", "Determine if the given CmsTreeItem or any of its descendants is selected.", "Return true if the given CmsTreeItem or any of its descendants is selected."]}
{"SampleId": 6191662, "Origin": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle.", "Reference": "Note that this performs chains\nconstruction but will not inject {@link MuleContext} or perform any lifecycle.", "LLMCandidates": ["Constructs a MessageProcessorChain with optional processing strategy from the given list of processors. If there's only one processor and it's an instance of MessageProcessorChain, returns it directly. Otherwise, builds the chain using DefaultMessageProcessorChainBuilder and sets the processingStrategy if provided.", "Constructs a MessageProcessorChain from a list of processors with an optional processing strategy. If the list contains only one element that is an instance of MessageProcessorChain and not ExplicitMessageProcessorChain, it returns that instance; otherwise, it builds a new chain using the provided processing strategy and processors. Note that this method does not inject MuleContext or FlowConstruct or perform any lifecycle management.", "Constructs a MessageProcessorChain from the given list of processors. If there is only one processor and it is an instance of MessageProcessorChain and not ExplicitMessageProcessorChain, returns that instance directly. Otherwise, builds a new chain using DefaultMessageProcessorChainBuilder and sets the processing strategy if present.", "constructs MessageProcessorChain instances based on the given list, but does not inject MuleContext or FlowConstruct nor performs any lifecycle management. If there is a single MessageProcessorChain instance in the list and it's not an ExplicitMessageProcessorChain, returns that instance directly. Otherwise, builds a DefaultMessageProcessorChain using the provided processingStrategy and processors.", "Constructs a MessageProcessorChain from the given list of processors. If there is only one processor and it is an instance of MessageProcessorChain and not ExplicitMessageProcessorChain, then that processor is returned directly. Otherwise, a new DefaultMessageProcessorChainBuilder is used to build the chain with the given processing strategy (if present) and processors."]}
{"SampleId": 4386724, "Origin": "NOTE: Amazon Glacier retains recently completed jobs for a\nperiod before deleting them; however, it eventually removes completed\njobs.", "Reference": "Amazon Glacier retains recently completed jobs for a period before\ndeleting them; however, it eventually removes completed jobs.", "LLMCandidates": ["Processes a ListJobs request and returns the corresponding ListJobsResult object using the provided AWSRequestMetrics for request measurement. Amazon Glacier retains completed job records before deleting them.", "Processes list jobs requests and returns the corresponding ListJobsResult. The AWS request metrics are used to measure various events during this process. Amazon Glacier retains completed jobs for a certain period before deleting them.", "process and handle list jobs requests using Amazon Web Services, tracking request metrics for client execution time and request marshalling.", "Lists the jobs for the given request with AWS request metrics tracking. Amazon Glacier retains completed jobs before deleting them.", "Handles listing of jobs with Amazon Glacier, note that Amazon Glacier retains completed jobs for a certain period before deleting them."]}
{"SampleId": 5440480, "Origin": "Appends the information about the given handle to {@link #buf buf}.", "Reference": "Appends a string representation of the given handle to {@link #stringBuilder}.", "LLMCandidates": ["Appends the information about the given Handle to StringBuilder.variable buf.", "Appends the information about the given Handle to StringBuilder.obj.", "Appends the information about the given Handle to StringBuilder.obj.", "Appends the information about the given Handle to {@link #stringBuilder stringBuilder}.", "Appends the information about the given handle to StringBuilder.variable buf."]}
{"SampleId": 5177566, "Origin": "Handler method converting a Jetty Connection into a Restlet Call.", "Reference": "Handler method converting a Jetty HttpChannel into a Restlet Call.", "LLMCandidates": ["Handler method converting a Jetty Channel into a Restlet JettyServerCall.", "Handler method converting a Jetty Channel into a Restlet JettyServerCall.", "Handler method converting a Jetty Channel into a Restlet ServerCall for the helped instance.", "Handler method converting a Jetty Channel into a Restlet JettyServerCall.", "Handler method converting a Jetty Channel into a Restlet JettyServerCall."]}
{"SampleId": 5631550, "Origin": "The timestamp for creation of the synonym.", "Reference": "The timestamp for creation of the object.", "LLMCandidates": ["Gets the timestamp for creation of this instance.", "Returns the timestamp for creation of this object.", "Returns the timestamp for creation of this object.", "Returns the timestamp for creation of this object.", "Returns the timestamp for creation of this instance."]}
{"SampleId": 2312757, "Origin": "Returns the (unbiased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "LLMCandidates": ["Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset}}\n\nThis method computes the (unbiased) kurtosis of all the values in the given region of the input Dataset using an unbiased kurtosis function. The result is returned as a double value.", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset}}\n\n(Note: assuming that \"RealSkewUnbiasedFunction\" becomes \"RealSampleKurtosisFunction\" is the only change in the code and method name)", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset"]}
{"SampleId": 5218994, "Origin": "remove space for SQL expression and outside parentheses", "Reference": "remove space for SQL expression", "LLMCandidates": ["remove spaces for SQL expression.", "remove spaces for SQL expression.", "Remove spaces for SQL expression.", "Remove spaces for SQL expression.", "Remove spaces for SQL expression."]}
{"SampleId": 1311345, "Origin": "Reads the inbound request headers from the request and sets them on\nthe {@link ServiceRequest}.", "Reference": "Reads the inbound request headers from the request and sets them on\nthe {@link ApiRequest}.", "LLMCandidates": ["Reads the inbound request headers from the HttpServletRequest and sets them on the ApiRequest.", "Reads the inbound request headers from the HttpServletRequest and sets them on the ApiRequest.", "Reads the inbound request headers from the HttpServletRequest and sets them on the ApiRequest.", "Reads the inbound request headers from the HttpServletRequest and sets them on the ApiRequest.", "Reads the inbound request headers from the HttpServletRequest and sets them on the ApiRequest."]}
{"SampleId": 594031, "Origin": "Returns the input stream of this message content.", "Reference": "Returns the CachedOutputStream of this message content.", "LLMCandidates": ["Returns the CachedOutputStream of this message content.", "Returns the CachedOutputStream of this message content.", "Returns the CachedOutputStream of this message content.", "Returns the CachedOutputStream of this message content.", "Returns the CachedOutputStream of this message content."]}
{"SampleId": 1404511, "Origin": "The value is {@link ArtifactFileMetadata#PLACEHOLDER} if the artifact's metadata is not\nfully captured in {@link #additionalOutputData}.", "Reference": "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully\ncaptured in {@link #additionalOutputData}.", "LLMCandidates": ["The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's data is not fully captured in {@link #artifactData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's data is not fully captured in {@link #artifactData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's data is not fully captured in {@link #artifactData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's data is not fully captured in {@link #artifactData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's value is not fully captured in {@link #additionalOutputData}."]}
{"SampleId": 3036959, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["Currently, SONA supports Flat, VXLAN, and GRE modes.", "This method sets network rules based on the given InstancePort and installation status. Currently, SONA supports Flat, VXLAN, and GRE (instead of VLAN) modes.", "Currently, SONA supports Flat, VXLAN, and GRE modes.", "Currently, SONA supports Flat, VXLAN, and GRE modes.", "Currently, SONA supports Flat, VXLAN, and GRE modes."]}
{"SampleId": 5459561, "Origin": "Returns {@code true} if this module reflectively exports the given\npackage package to the given module.", "Reference": "Returns {@code true} if this module reflectively exports or opens given\npackage package to the given module.", "LLMCandidates": ["Returns {TRUE} if this module reflectively exports or opens the given package name to the given module.", "Returns {@code true} if this module reflectively exports or opens the given package to the given module.", "Returns {true} if this module reflectively exports or opens the given package name to the given module.", "Returns {@code true} if this module reflectively exports or opens the given package name to the given module.", "Returns {@code true} if this module reflectively exports or opens the given package {@code pn} to the given module {@code other}."]}
{"SampleId": 5451749, "Origin": "Search for package name in the sorted regular expression\nlist, if found return the group name.", "Reference": "Search for element name in the sorted regular expression\nlist, if found return the group name.", "LLMCandidates": ["Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name."]}
{"SampleId": 2615604, "Origin": "Returns the keyFrames[] array where all the TextureRegions of the animation are stored.", "Reference": "Returns the keyframes[] array where all the frames of the animation are stored.", "LLMCandidates": ["Returns the keyFrames array where all the T objects of the animation are stored.", "Returns the keyFrames array where all the T objects of the animation are stored.", "Returns the keyFrames array where all the T objects of the animation are stored.", "Returns the keyFrames array where all the T objects of the animation are stored.", "Returns the keyFrames array where all the T objects of the animation are stored."]}
{"SampleId": 2443539, "Origin": "Get the current {@link RequestScope.Instance request scope instance}\nand mark it as suspended.", "Reference": "Get the current {@link RequestContext request scope context}\nand mark it as suspended.", "LLMCandidates": ["Get the current {@link RequestContext request scope context} and mark it as suspended by suspending its reference.", "Get the current {@link RequestContext request scope context} and mark it as suspended by obtaining its reference and suspending it.", "Get the current {@link RequestContext request scope context} and mark it as suspended by obtaining its reference and suspending it.", "Get the current {@link RequestContext request scope context} and mark it as suspended.", "Get the current {@link RequestContext request scope context} and mark it as suspended."]}
{"SampleId": 5377094, "Origin": "Whether to group the REST resources together.", "Reference": "How to group the REST resources together.", "LLMCandidates": ["Returns the value of groupRestResources as a String.", "Returns the value of groupRestResources as a String.}\n\n{Whether the method returns or gets the value of 'groupRestResources' as a String.", "Returns the value of the group REST resources.", "Checks if the group REST resources string is set.\n\n(Note: The method signature has changed from boolean return type to String and the method name has also been updated accordingly)", "Returns the value of groupRestResources as a String."]}
{"SampleId": 1353529, "Origin": "Assign available voices to the chords that have no voice assigned yet.", "Reference": "Assign available voices to the chords in this measure with no voice assigned yet.", "LLMCandidates": ["Assign available voices to the incoming chords that have no voice assigned yet in the given measure.", "Assign available voices to the chords in the given measure that have no voice assigned yet, using the first voice available in the part and with staff continuity whenever possible.", "Assign available voices to the incoming chords of a given measure that have no voice assigned yet, using the first voice available in the part and with staff continuity whenever possible.", "Assign available voices to the chords in the given measure that have no voice assigned yet, using the first voice available in the part and with staff continuity whenever possible.", "Assign available voices to the incoming chords that have no voice assigned yet in the given measure, using the first voice available in the part and with staff continuity whenever possible."]}
{"SampleId": 4404113, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["This operation is eventually consistent.", "This operation is eventual consistency.", "NOTE: This operation is eventually consistent. (no changes required)", "NOTE: This operation is eventually consistent. (no changes required)", "This operation is eventually consistent."]}
{"SampleId": 2403174, "Origin": "Ensures server received authentication request.", "Reference": "Ensures server received an extensions request.", "LLMCandidates": ["Ensures server has received an extension request.", "Enensures server has received a request, specifically an empty extension request.", "Enensures server received a request. The empty string is passed as an argument to the called method assertExtensions(server, \"\").", "Enensures server received a request. The empty string is passed as an argument to the called method assertExtensions(server, \"\").", "Enensures server received a request. The empty string is passed as argument."]}
{"SampleId": 470385, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:\n type.", "LLMCandidates": ["Sets the data frame property with the given value.", "Sets the data frame property with the given value.", "Sets the data frame property with the given value.", "Sets the property \"dataFrame\" with the given Object.", "Sets the property \"dataFrame\" with the given Object."]}
{"SampleId": 5446194, "Origin": "Returns true if the given class loader is in the system domain\nin which all permissions are granted.", "Reference": "Returns true if the given class loader is the bootstrap class loader\nor the platform class loader.", "LLMCandidates": ["Returns true if the given class loader is in the system domain, which includes the bootstrap ClassLoader and the extended ClassLoader.", "Returns true if the given class loader is in the system domain, which includes the bootstrap ClassLoader and the ExtClassLoader.", "Returns true if the given class loader is in the system domain, which includes the bootstrap ClassLoader and the PlatformClassLoader.", "Returns true if the given class loader is in the system domain, which includes both a null loader and the platform class loader.", "Returns true if the given class loader is in the system domain, which includes both a null loader and the platform class loader."]}
{"SampleId": 4404087, "Origin": "IMPORTANT:Because the number of workflow history events for a\nsingle workflow execution might be very large, the result returned\nmight be split up across a number of pages.", "Reference": "Because the number of workflow history events for a single\nworkflow execution might be very large, the result returned might be\nsplit up across a number of pages.", "LLMCandidates": ["Polls for a DecisionTask based on the given request and returns the response. The number of workflow history events for a single workflow execution might be large, leading to potentially multiple pages in the result.", "polls for a DecisionTask based on the provided request. The AWSRequestMetrics are used to measure and record the time taken for client execution and request marshalling. The response may be split across multiple pages due to the potentially large number of workflow history events for a single workflow execution.", "Processes a request to get the next DecisionTask from the workflow execution. The number of DecisionTasks might be split across multiple pages due to potential large size.", "polls for a DecisionTask based on the given request, collecting AWS request metrics throughout the process. The result may be returned in multiple pages due to the large number of workflow history events.", "polls for a DecisionTask based on the given PollForDecisionTaskRequest and returns the response containing the DecisionTask. Since the number of workflow history events for a single workflow execution might be large, the result may be returned across multiple pages."]}
{"SampleId": 3774087, "Origin": "The default resolution is {@link Resolution#DAY} since Vaadin VERSION.", "Reference": "The default resolution is {@link DateResolution#DAY} since Vaadin VERSION.", "LLMCandidates": ["The default resolution is {@link R#DEFAULT} since Vaadin VERSION.", "The default resolution is {@link R#DEFAULT} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY}."]}
{"SampleId": 2734304, "Origin": "Returns {@link List} of expanded {@link AccordionPane}s.", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Returns a void value after collapsing the specified AccordionPane(s) identified by the given ids.", "This method collapses the specified {@link AccordionPane}s based on their given ids.", "This method collapses the specified {@link AccordionPane}s based on their given ids.", "This method collapses the specified {@link AccordionPane}s based on their given IDs when a model is available.", "Collapses the given {@link String} identified accordion panes.\n\nReturns: void"]}
{"SampleId": 1348111, "Origin": "Initializes the execution of a task.", "Reference": "Initializes the state machine.", "LLMCandidates": ["Initializes the state machine with the given context. If the stateMachine is an instance of SessionListener, adds it to the sessions listener list.", "Initializes the state machine with the given context", "Initializes the state machine with the given context. If the state machine is an instance of SessionListener, it will be added as a listener to the sessions collection. The stateMachine.init() method is called internally.", "Initializes the state machine with the given context. If the state machine is an instance of SessionListener, adds it as a listener to the sessions. Then, calls the init method of the stateMachine passing 'this' as argument.", "Initializes the state machine with the given context if it is an instance of SessionListener and calls its init method."]}
{"SampleId": 1578397, "Origin": "Removes the specified properties of the {@link NamespacedEntityId}.", "Reference": "Removes the specified properties of the {@link MetadataEntity}.", "LLMCandidates": ["Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}."]}
{"SampleId": 3074972, "Origin": "Called in response to the {@link RContext#destroy} method.", "Reference": "Called in response to the {@link RContext#dispose} method.", "LLMCandidates": ["Called in response to the RContext#dispose method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method."]}
{"SampleId": 5315712, "Origin": "Each class must represent an annotated class.", "Reference": "Each class must represent a component class.", "LLMCandidates": ["Each class must represent an annotated component.}}\n\nThis updated comment reflects the change of \"annotatedClasses\" to \"componentClasses\". The meaning of the comment remains the same.", "Each class must represent an annotated component.", "Each class must represent an annotated component.", "Each class must represent an annotated component.}}\n\nThis comment should reflect the change from \"annotated classes\" to \"componentClasses\". Since the rest of the comment remains unchanged, it only needs a minor update.", "Each class must represent an annotated component.}}\n\nIn the updated code, the comment should reflect that the classes being registered are now components instead of just annotated classes."]}
{"SampleId": 1989254, "Origin": "Add the specified {@link Graph} to the cache.", "Reference": "Add the specified {@link Store} to the cache.", "LLMCandidates": ["Add the specified Store to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache."]}
{"SampleId": 4311215, "Origin": "High order byte is serverId, next 5\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "Reference": "High order 1 byte is serverId, next\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "LLMCandidates": ["The high order byte is serverId, next 5 bytes are from timestamp, and the last 2 bytes are zeroes.", "The high order byte is serverId, next 5 bytes are from timestamp, and low order 2 bytes are zeros. ( renamed initializeNextSession to initializeNextSessionId )", "Generates the next session ID by combining 5 bytes from the current timestamp and a server ID (high order byte).", "Generates the next session ID by combining 5 bytes from the current timestamp and a server ID (high order byte).", "The high order byte is serverId, next 5 bytes are from timestamp, and the lowest 2 bytes are zeros. (corrected \"bytes\" to \"bits\")"]}
{"SampleId": 1135686, "Origin": "Common test method to be able to check security from any authentication plugin", "Reference": "Common test method to be able to check auth metrics from any authentication plugin", "LLMCandidates": ["Private method to validate minimum expected metrics for a given prefix against the current metrics in the security system. This method uses the provided prefix and corresponding metric counts to check if they meet or exceed the expected minimum values. If not, it retries after pausing for 2 seconds before rechecking. The method also checks if requestTimes count is greater than 1 and totalTime is greater than 0 when requests have been recorded.", "checks the minimum metric values for given authentication prefixes against the expected ones from the specified security metrics map.", "checks the minimum metric values for given authentication prefixes against the expected ones from the specified security metrics map.", "This method checks that the minimum expected values for specified authentication metrics in the given prefix match or exceed the current metric counts.", "Tests the minimum metric requirements for given authentication metrics based on a prefix.\n\nThis common test method compares the expected and actual authentication metrics for the specified prefix to ensure they meet the minimum requirement. If the comparison fails, it retries the check after a delay before throwing an assertion error. The method also checks that the requestTimes and totalTime have values greater than 0 if requests are detected in the counts."]}
{"SampleId": 5230482, "Origin": "An example of a valid direction is\n{@code new Vector(1, 0, 1)}.", "Reference": "An example of a valid direction is\n{@code new BlockVector3(1, 0, 1)}.", "LLMCandidates": ["An example of a valid direction is {@code new BlockVector3(1, 0, 1)} or any other instance of {@link BlockVector3}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}..", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}..", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)"]}
{"SampleId": 4478306, "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.", "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "LLMCandidates": ["Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}."]}
{"SampleId": 2050142, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses downloads if they are currently not paused.", "Pauses downloads if they are currently running. Setting the 'downloadsPaused' flag to true and sending a message to update the status.", "Pauses downloads if they are currently not paused.", "Pauses downloads if they are currently not paused.", "Pauses downloads if they are currently not paused."]}
{"SampleId": 1118538, "Origin": "Decodes a String representing a number of events into a Vector of LoggingEvents", "Reference": "Decodes a String representing a number of events into a", "LLMCandidates": ["Decodes a String containing encoded events into a Vector of LoggingEvents", "Decodes a String representing multiple events into a Vector of LoggingEvents", "Decodes a String representing multiple events into a Vector of LoggingEvents", "Decodes a String representing multiple events into a Vector of LoggingEvents", "Decodes a String representing multiple events into a Vector of LoggingEvents"]}
{"SampleId": 4245364, "Origin": "Checks whether or not resources in the WEB-INF folder can be access.", "Reference": "Checks whether or not resources in the web root folder can be access.", "LLMCandidates": ["Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the WEB-INF folder can be accessed is now checked for roots resources instead."]}
{"SampleId": 2705593, "Origin": "Get Stringwert.", "Reference": "Get Eingaberegister Name.", "LLMCandidates": ["Get the String value of DataEntry_Tab_Name.", "Get the String value of DataEntry_Tab_Name.", "Get the String value of DataEntry_Tab_Name.", "Get the String value of DataEntry_Tab_Name.", "Gets the String value of DataEntry_Tab_Name."]}
{"SampleId": 617199, "Origin": "Compare the two queues containing operator/task output by converting them to an array first.", "Reference": "Compare the two queues containing operator/task output by converting them to an array first, sort array by\ncomparator.", "LLMCandidates": ["Compares the two collections containing sorted operator/task outputs by converting them to sorted arrays.", "Compare the two collections containing the sorted operator/task output.", "Compare the two collections containing the sorted operator/task output.", "Compares the two collections containing expected and actual output by converting them to sorted arrays.", "Compares the two collections containing expected and actual output by converting them to sorted arrays."]}
{"SampleId": 4132895, "Origin": "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Reference": "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original", "LLMCandidates": ["Wrapper for close of ResultSet, removing this object from being traced by AbandonedTrace and then calling close on the original ResultSet, Statement and Connection.", "Wrapper for close of this ResultSet which removes it from being traced by the AbandonedTrace and then calls close on the underlying ResultSet.", "Wrapper for close of ResultSet, removing this ResultSet from being traced prior to calling close on the original ResultSet.", "Wrapper for close of ResultSet, removing this ResultSet from being traced prior to calling close on the original ResultSet.", "Wrapper for close of this Statement which removes it from being traced then calls close on the original Statement and ResultSet."]}
{"SampleId": 4372852, "Origin": "Sets the Single character used to indicate a row should be ignored when present at the start of a row.", "Reference": "Sets the character used to indicate a row should be ignored when present at the start of a row.", "LLMCandidates": ["Sets the Single character used to indicate a row should be ignored when present at the start of a row. If a Character is provided, it will be converted to a String before being set.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row. Now, this method converts the Character parameter to a String before setting it.", "Sets the single character comment indicator. Calls charToString method with the provided character argument.", "Sets the comment character by converting it to a string before setting it.", "Sets the comment character by converting it to a string before setting it."]}
{"SampleId": 2443544, "Origin": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestScope.Instance scope instance}.", "Reference": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestContext scope context}.", "LLMCandidates": ["Changes the current thread's request context to the new one defined by the {@link RequestContext.Instance instance}.", "Changes the current thread's request context to the new one defined by the {@link RequestContext.Instance instance}.", "The current thread might already be in any request context and in that case the context will be changed to the context defined by the {@link RequestContext#getInstance() instance}.", "The current thread might already be in any request context and in that case the context will be changed to the context defined by the {@link RequestContext#Instance instance}.", "The current thread might already be in any request context and in that case the context will be changed to the one defined by the {@link RequestContext#Instance instance}."]}
{"SampleId": 2891684, "Origin": "and \"..\" in file names.", "Reference": "and \"..\" in {@link File} names.", "LLMCandidates": ["Retrieves the parent directory of a given file by traversing up the directory tree and skipping directories named \".\" or \"..\" as necessary", "Finds the parent directory of a given file by traversing up the file system hierarchy. Skips directories named \".\" and \"..\" in file names.", "Returns the parent directory of the given file, skipping over \".\" and \"..\" in file names.", "Returns the parent directory of the given file, skipping over \".\" and \"..\" in file names.", "Returns the parent directory of the given file, skipping over \".\" and \"..\" directories."]}
{"SampleId": 2616150, "Origin": "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Vector2} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the Vector2 represented by the given string according to the format of this.set() method.", "Parses the Vector2 represented by the given string according to the format of this method.", "Parses the Vector2 represented by the given string according to the format of this method.", "Parses the Vector2 represented by the given string according to the format of toString(). Returns a new Vector2 object with the parsed x and y values using set() method instead of constructing a new Vector2 object directly.", "Parses the Vector2 represented by the given string according to the format of this.set() method."]}
{"SampleId": 4624426, "Origin": "Returns the function annotations.", "Reference": "Returns the function body expression.", "LLMCandidates": ["Returns the last expression in the list of expressions as the annotated element.", "Returns the last expression in the list of expressions as an AnnList of annotations.", "Returns the last expression in the list of expressions. If the last expression is not an FItem, then returns null.", "Returns the body expression's annotations.", "Returns the body expression's annotations."]}
{"SampleId": 5360172, "Origin": "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type.", "Reference": "Configure an {@link RSocketOutboundGateway.Command} for the RSocket request type.", "LLMCandidates": ["Configure an RSocketOutboundGateway.Command for interaction model in RSocket request type. (Deprecated: use interactionModel method instead)", "Configure an RSocketOutboundGateway.Command for interaction model request type (deprecated, use interactionModel method instead).", "Configures a {@link RSocketOutboundGateway.Command} for interaction model in RSocket request type. (Deprecated: use interactionModel method instead)", "Deprecated method for configuring a {@link RSocketOutboundGateway.Command} for RSocket request type. Now uses interactionModel instead.", "Configure a RSocketOutboundGateway.Command for interaction model in RSocket request type. (Deprecated: Use interactionModel method instead)"]}
{"SampleId": 1630674, "Origin": "Inserts a {@link Set} to the {@link Dataset}", "Reference": "Inserts a {@code Set} to the {@link Dataset}.", "LLMCandidates": ["Inserts a Set of DatasetEntry objects to the Dataset and returns the number of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry} objects into the {@link Dataset}, and returns the number of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry} objects into the {@link Dataset}, returning the number of successfully inserted entries.", "Inserts a Set of {@link DatasetEntry<E, A, V>} to the Dataset and returns the number of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry} objects into the {@link Dataset}, returning the number of successfully inserted entries."]}
{"SampleId": 402253, "Origin": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}", "Reference": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}", "LLMCandidates": ["Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName"]}
{"SampleId": 242261, "Origin": "Then log4j invokes the {@link #setAppenderName(String)}\nmethod to set the value of {@link #mAppenderName}.", "Reference": "Then log4j invokes the {@link #setProcessType(String)}\nmethod to set the value of {@link #mProcessType}.", "LLMCandidates": ["Sets the value of {@link #mProcessType} based on the given process type argument.\n\nPreviously, this method was used to set the appender name in log4j.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "The logging framework invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Sets the value of {@link #mProcessType} based on the given process type parameter."]}
{"SampleId": 6047022, "Origin": "Returns the status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.", "Reference": "Returns the status with the primary key or throws a {@link NoSuchStatusException} if it could not be found.", "LLMCandidates": ["Returns the Status object with the given primary key or throws a NoSuchStatusException if it could not be found.", "Returns the Status object with the given primary key or throws a com.liferay.chat.NoSuchStatusException if it could not be found.", "Returns the Status with the given primary key or throws a NoSuchStatusException if it could not be found.", "Returns the Status object with the given primary key or throws a NoSuchStatusException if it could not be found.", "Returns the Status object with the given primary key or throws a NoSuchStatusException if it could not be found."]}
{"SampleId": 4388500, "Origin": "IMPORTANT: After you create a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group.", "Reference": "After you create a DB parameter group, you should wait at least 5 minutes\nbefore creating your first DB instance that uses that DB parameter group\nas the default parameter group.", "LLMCandidates": ["creates a new DBParameterGroup using the provided CreateDBParameterGroupRequest. The request is marshalled and sent to the AWS service using the invoke method. Once the response is received, the AwsResponse is returned. After creation, it's recommended to wait at least 5 minutes before creating a DB instance that uses this DBParameterGroup as its default parameter group.", "Creates a new DBParameterGroup using the provided CreateDBParameterGroupRequest and invokes AWS service with request metrics tracking.\n\nIMPORTANT: After you create a DB parameter group, wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "Creates a new DBParameterGroup using the given CreateDBParameterGroupRequest. The AWS request metrics are started and bound to the request. Then, the AWS service is invoked to create the DBParameterGroup. Finally, the client execution is ended and the created DBParameterGroup is returned.\n\nImportant note: After creating a DB parameter group, it's recommended to wait at least 5 minutes before using it as the default parameter group for any new DB instance.", "Creates a new DBParameterGroup based on the provided CreateDBParameterGroupRequest and invokes AWS service using the specified request metrics.\n\nImportant note: After creating a DB parameter group, please wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "Creates a new DBParameterGroup using the given CreateDBParameterGroupRequest. The request metrics are started before marshalling the request and ended after receiving the response. After creating the DBParameterGroup, remember to wait at least 5 minutes before creating a DB instance that uses this group as its default parameter group."]}
{"SampleId": 2484703, "Origin": "Sets the state attribute of this User to\nstate", "Reference": "Sets the state attribute of this User's element to\nstate", "LLMCandidates": ["Sets the state attribute of this User by setting the userElement's attribute to state's string representation.", "Sets the state attribute of this User's userElement to state.", "Sets the state attribute of this User's associated userElement to state.", "Sets the state attribute of this User's userElement to state.", "Sets the state attribute of this User's userElement to state."]}
{"SampleId": 3084770, "Origin": "This call returns true in the interpreter or a low tier compilation that does profiling.", "Reference": "This call returns true in the interpreter or a low grade compilation that does profiling.", "LLMCandidates": ["This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling."]}
{"SampleId": 4117768, "Origin": "Returns the InetAddress associated with the client who created/is interacting with this Subject.", "Reference": "Returns the host name or IP associated with the client who created/is interacting with this Subject.", "LLMCandidates": ["Returns the host associated with this Subject. (assuming 'this.host' refers to the hostname or IP address of the subject)", "Returns the host associated with the client who created/is interacting with this Subject.", "Returns the host associated with this Subject.", "Returns the host associated with this Subject.", "Returns the host associated with the client who created/interacts with this Subject."]}
{"SampleId": 4479674, "Origin": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHTTPHeaders, Map, BlobAccessConditions)}", "Reference": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)}", "LLMCandidates": ["Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)"]}
{"SampleId": 5600561, "Origin": "class|delay|cron", "Reference": "class|intervalSchedule|cron", "LLMCandidates": ["Classes or pattern for creating a task in statement\n\nThis method returns a Matcher object for matching the given statement against the regular expression associated with creating a new task. This method uses the PAT_CREATE_TASK pattern to match the input statement.\n\nPlease note that this comment may require further modifications if the code or context changes, but it reflects the current state of the method accurately.", "Class or pattern for matching create task statement. \"}\n\nclass|task|statement\n\nNote: Changed 'create schedule' to 'create task'.", "class|CreateTask|statement}\n\nThis method creates a Matcher object by using the given statement and the regular expression represented by PAT\\_CREATE\\_TASK.", "class|delay|task\n\n Method to match the creation statement of a task.", "class|delay|task\n\n Method to match the creation statement of a task."]}
{"SampleId": 3083932, "Origin": "The returned context supplier is intended to be cached in the currently adopted\nAST.", "Reference": "The returned context reference is intended to be cached in the currently adopted\nAST.", "LLMCandidates": ["The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST."]}
{"SampleId": 291294, "Origin": "Converts short duration string (HH:MM) to milliseconds.", "Reference": "Converts short duration string (XX:YY) to milliseconds.", "LLMCandidates": ["Converts short duration string (HH:MM) to milliseconds. The conversion now takes an optional boolean argument 'durationIsInHours' which if true, modifies the calculation accordingly.", "Converts short duration string (HH:MM) to milliseconds. The conversion takes into account whether the duration is given in hours or minutes, based on the provided boolean parameter.", "Converts short duration string (HH:MM) to milliseconds. If the duration is given in hours, multiply each part by 60 before calculating the milliseconds.", "Converts short duration string (HH:MM) to milliseconds. Takes an optional boolean parameter 'durationIsInHours' which if true, multiplies the minutes and hours by 60 before conversion.", "Converts short duration string (HH:MM) to milliseconds based on whether the duration is given in hours or minutes."]}
{"SampleId": 5927587, "Origin": "Returns a new fresh folder with the given name under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given path under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder with the given relative path under the root directory. Throws an IOException if the folder already exists or if the folder name is absolute.", "Creates a new folder with the given relative path under the root directory. Throws an IOException if the folder already exists or if the given folder name is absolute.", "Creates a new relative folder with the given name under the temporary directory. Throws an IOException if the folder already exists or if the folder name is absolute.", "Creates a new folder with the given relative path under the temporary folder. Throws an IOException if the given folder name is absolute or a folder with the same name already exists.", "Creates a new folder with the given relative path under the root directory. Throws an IOException if the folder already exists or is an absolute path."]}
{"SampleId": 5319337, "Origin": "Adds a new CONSTANT_Double_info to the constant pool of this symbol table.", "Reference": "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol\ntable.", "LLMCandidates": ["Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer\\_or\\_Float\\_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer\\_or\\_Float\\_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_or_Float-info to the constant pool of this symbol table."]}
{"SampleId": 5447625, "Origin": "timed invokeAll(empty collection) returns empty collection", "Reference": "timed invokeAll(empty collection) returns empty list", "LLMCandidates": ["timed invokeAll with empty collection returns an empty collection.", "timed invokeAll with an empty collection returns an empty List", "timed invokeAll with empty collection returns an empty collection", "Tests the behavior of timed invokeAll with an empty collection", "Tests the behavior of timed invokeAll with an empty collection"]}
{"SampleId": 2337267, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user", "Created by user", "Created by user", "Created by user", "Created by user"]}
{"SampleId": 2337065, "Origin": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.", "Reference": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is **NOT** supplied.", "LLMCandidates": ["### Deprecated: Returns the BrandingServerInfo object by calling getBrandingServerInfoWithHttpInfo() method and getting its data.", "get BrandingServerInfo from server using deprecated method, returns BrandingServerInfo object.", "### Effects:\n\nThis method now returns the `BrandingServerInfo` object directly by calling `getBrandingServerInfoWithHttpInfo()` and retrieving the data from its response. The deprecated method is used for backward compatibility. No `brandingServerBrandingId` or `brandingServerCustomer` parameter is supplied in this method.", "### Effects:\n   * Returns the BrandingServerInfo object from the Branding API.\n   * Deprecated in favor of using getBrandingServerInfoWithHttpInfo() and then accessing the data property of the returned HttpResponse<BrandingServerInfo>.", "### Deprecated: Returns the BrandingServerInfo object by calling getBrandingServerInfoWithHttpInfo() and getting the data from the response."]}
{"SampleId": 2544551, "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.", "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.", "LLMCandidates": ["In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)} instead.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)} instead.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}. This method checks the properties of the current matrix and calls the appropriate rotation function based on its state.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)} instead.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)} instead."]}
{"SampleId": 1574727, "Origin": "When translated into a QueryTerm object, search terms\ncontaining an operator have the operator removed from the string representation.", "Reference": "When translated into a QueryTerm object, search terms\ncontaining a qualifying operator have the operator removed from the string representation.", "LLMCandidates": ["Parses a given query string into a list of QueryTerm objects. Each term is obtained by splitting the input query using space separator and then parsing it to a QueryTerm object.", "Parses a given query string into a list of QueryTerm objects. Each term is trimmed and split by space separator before being parsed into a QueryTerm object.", "Parses a given query string and returns a list of QueryTerm objects. Each term is created by calling parseQueryTerm method with the corresponding input.", "Parses a given query string into a list of QueryTerm objects by splitting it based on space separator and parsing each term separately.", "Parses a given query string into a list of QueryTerm objects. The input query string is split by space separator and each term is parsed into a QueryTerm object using parseQueryTerm method."]}
{"SampleId": 4962979, "Origin": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching.", "Reference": "This method is mostly used for root-level serializer\nhandling to allow for simpler caching.", "LLMCandidates": ["This method performs a two-phase lookup for a JSON serializer for the given JavaType. If a serializer is found locally or in the shared cache, it is returned. Otherwise, a new serializer is composed by finding the value serializer and type serializer, wrapping them together if necessary, and caching the result if requested.", "This method performs two-phase lookups for a serializer for the given JavaType, using both local non-shared and shared caches. If not found, it composes one by calling findValueSerializer and finding an appropriate TypeSerializer. If caching is enabled, the resulting serializer is added to the shared cache.", "Performs two-phase lookups for a typed value serializer. First, it checks the local non-shared cache, then the shared cache. If not found in either cache, it composes a new serializer from findValueSerializer and TypeWrappedSerializer. If caching is enabled, the new serializer is added to the shared cache before being returned.", "This method performs a two-phase lookup for a JsonSerializer object for the given JavaType. It first checks the local non-shared cache, then the shared cache. If not found in either cache, it composes a new JsonSerializer by finding the ValueSerializer and TypeSerializer. Finally, if caching is enabled, the new JsonSerializer is added to the shared cache before being returned.", "This method performs a two-phase lookup for a JsonSerializer for the given JavaType. It first checks if it is already known in the local non-shared cache and then in the shared cache. If not found, it composes one from findValueSerializer and TypeSerializer. If caching is enabled, it adds the new serializer to the shared cache."]}
{"SampleId": 2891318, "Origin": "Appends BCC address.", "Reference": "Appends CC address.", "LLMCandidates": ["Appends CC address using an EmailAddress object.", "Appends CC address using an EmailAddress object.", "Appends cc email address to the list of Carbon Copy recipients.", "Appends cc email address to the list of Carbon Copy recipients.", "Appends CC address using an EmailAddress object."]}
{"SampleId": 3758384, "Origin": "Look for contract stored by given slot contract id.", "Reference": "Look for the contract stored using the given slot contract id.", "LLMCandidates": ["Look for contract stored by given slot id, origin id, and contract id.", "Look for contract stored by given slot id, origin id and contract id.", "Queries the contract data from the given slot id and origin id (if provided), returns the byte array of contract data.", "Look for contract stored by given slot id, origin id, and contract id.", "Look for contract stored by given slot id. The origin id and contract id are optional parameters."]}
{"SampleId": 4237630, "Origin": "Sets the {@link IClassCache} for the given application.", "Reference": "Sets the {@link IGetAndSetLocator} for the given application.", "LLMCandidates": ["Sets the {@link IClassCache} for an application, creating and populating a map of getters and setters within it.", "Sets the IClassCache for the given application and initializes the getters and setters map if necessary.", "Sets the IClassCache for the given application and initializes a getter and setter map for the specified class within the cache.", "Sets the IClassCache for the given application by initializing a getter and setter locator using the provided IClassCache.", "Sets the IClassCache for the given application and initializes a new getter and setter map within it."]}
{"SampleId": 236986, "Origin": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to\ncomplete successfully.", "Reference": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to\ncomplete successfully.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to complete successfully with GetStatusPOptions instead of GetStatusOptions.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to complete successfully, using GetStatusPOptions instead of GetStatusOptions and OpenFilePOptions instead of OpenFileOptions in the call.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to complete successfully with GetStatusPOptions instead of GetStatusOptions and OpenFilePOptions instead of OpenFileOptions."]}
{"SampleId": 3576038, "Origin": "If there is any regular output or error\noutput, it is appended to the given s.", "Reference": "If there is any regular output or error\noutput, it is appended to the given {@code StringBuilder}s.", "LLMCandidates": ["Runs a shell command with given arguments and appends any output or error output to the corresponding StringBuilder.", "This method runs a shell command with given arguments and appends the output and error lines to the respective StringBuilder objects.", "Runs the given shell command and appends any output or error output to the respective StringBuilder.", "This method runs a shell command using the given array of commands. If there is any output or error output, it is appended to the respective StringBuilder objects passed in as arguments.", "This method executes a shell command using an array of strings as arguments. If there is any regular output or error output, it is appended to the given StringBuilder objects 'outputLines' and 'errorLines', respectively."]}
{"SampleId": 2048820, "Origin": "Calls {@link #discardToEnd()} and releases any held DRM resources.", "Reference": "Calls {@link #discardToEnd()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Calls #{#discardToEnd} and releases any held DRM session references from metadataQueue.", "Calls #{#discardToEnd} and releases any held DRM session references from {@link metadataQueue}.", "Calls {@link #discardToEnd()} and releases any held DRM session references in the metadata queue.", "Calls {@link #discardToEnd()} and releases any held DRM session references in the metadata queue.", "Calls #{#discardToEnd()}} and releases any held DRM session references in the metadata queue."]}
{"SampleId": 2913862, "Origin": "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations and 1% of the observation are above that level.", "Reference": "This is measured from the bottom, that is, Thus the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["This method returns the quantile value based on the given level from the sorted sample in the DoubleArray.", "Calculates the quantile value from a sorted sample array at the specified level. The returned value represents the quantile estimation with the given level, which corresponds to the element that separates the lowest X% observations from the remaining (100% - X)%. Here, X is defined as the input parameter 'level'.", "Returns the quantile value from the sorted sample array at the specified level.", "Calculates the quantile from a sorted DoubleArray based on a given level. The calculated value is obtained by invoking quantileResultFromUnsorted method and returning the result's Value.", "Calculates the quantile value from the given sorted sample array at the specified level. The returned value represents the quantile estimation with the level percentage corresponding to the specified observation in the sorted array."]}
{"SampleId": 339673, "Origin": "Add a Content {@link Uri} to observe", "Reference": "Adds a content {@link Uri} for system observation", "LLMCandidates": ["Add a Content URI to be observed\n\nThis method takes a URI object and a boolean value, then adds a new Trigger instance to the list of triggers based on the given parameters. The trigger is responsible for notifying any registered observers when the corresponding content changes, and optionally, it checks for changes in its descendants as well.", "Add a ContentUri to observe", "Add a Content URI to the observed list", "Add a Content URI to the observed list", "Add a Content URI to the observed list"]}
{"SampleId": 367563, "Origin": "Preference summary should be the activated device name", "Reference": "Preference summary should be device's name", "LLMCandidates": ["Preference summary should reflect the name of the active Bluetooth device.", "The preference summary should reflect the name of the active Bluetooth device", "The preference summary should reflect the name of the active Bluetooth device", "Preference summary should reflect the name of the active Bluetooth device.", "The preference summary should reflect the name of the active Bluetooth device."]}
{"SampleId": 3467627, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT_INDEX TYPE_ARGUMENT_INDEX}."]}
{"SampleId": 528022, "Origin": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync).", "Reference": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync), and in\nthe treatment of failures.", "LLMCandidates": ["This method attempts to archive a file using the given path and name. It checks if the archiveCommand is empty before proceeding. If it's not empty, it adds the task of archiving the specified file to the executor queue. The runnable task now includes a try-catch block to handle any IOException that may occur during the execution.", "This method attempts to archive a file using the given path and name. It checks if the archiveCommand is set before proceeding with archiving. If archiveCommand is empty, it returns without doing anything. Otherwise, it adds the task of archiving the specified file to the executor queue.", "This method attempts to archive a file using the given path and name. It checks if the archiveCommand is empty before proceeding. If not, it adds the Runnable task to the executor queue with the specified path and name. The command string is constructed by replacing {name} and {path} placeholders in the archiveCommand string with their respective values using Matcher.\n\nDifferences from the previous version include changing the WrappedRunnable to a plain Runnable, and adding error handling for IOException when executing the command.", "Archives a file with the given name and path using the archiveCommand. If archiveCommand is empty, no action is taken.", "This method attempts to archive a file using the specified path and name. It checks if an archive command exists before proceeding. If it does, it adds the task of archiving the file to a queue for execution."]}
{"SampleId": 5630798, "Origin": "Gets the description.", "Reference": "Gets the code.", "LLMCandidates": ["Gets the code.", "Gets the code.", "Gets the code.", "Gets the code.", "Gets the code."]}
{"SampleId": 1136150, "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Reference": "Result is returned them in sorted order (most recent 1st)", "LLMCandidates": ["Parses the collection list from the given aliases and returns the entries in reverse sorted order based on their timestamps (most recent 1st)", "Parses the timestamp from the given collection alias list and returns them in reverse sorted order (most recent first) for the given alias.", "Parses the timestamp from the given collection alias list and returns them in reverse sorted order (most recent 1st)", "Parses the timestamp from the given collection alias list and returns them in reverse sorted order (most recent first)", "Parses the timestamp from the given collection alias list and returns them in reverse sorted order (most recent first)"]}
{"SampleId": 3574164, "Origin": "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Reference": "Does a simple HEAD request to a configuration endpoint to check if it's reachable.", "LLMCandidates": ["Performs a HEAD request to the given configUrl endpoint to ensure it's reachable. Throws an IllegalStateException if the response status code is not 200.", "Performs a HEAD request to the specified configUrl endpoint to verify its availability.", "Performs a HEAD request to the specified configUrl endpoint to check its availability", "Performs a HEAD request to the specified configUrl endpoint to check its reachability.", "Performs a HEAD request to the specified configUrl endpoint to check its reachability."]}
{"SampleId": 4475929, "Origin": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, AppendBlobRequestConditions,", "Reference": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions,", "LLMCandidates": ["appends a block of data with given length to an append blob and returns the response, including the committed block count.\\\nThe MD5 checksum of the data is also passed as an additional parameter. \\\n\npublic void appendBlock2(byte[] data, long length) throws NoSuchAlgorithmException {\n        // BEGIN: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse#byte-array-long-byte-AppendBlobAccessConditions-Duration-Context\n        byte[] md5 = MessageDigest.getInstance(\"MD5\").digest(data);\n        AppendBlobRequestConditions accessConditions = new AppendBlobRequestConditions()\n            .setAppendPosition(POSITION)\n            .setMaxSize(maxSize);\n        Context context = new Context(\"key\", \"value\");\n\n        System.out.printf(\"AppendBlob has %d committed blocks%n\",\n            client.appendBlockWithResponse(data, length, md5, accessConditions, timeout, context)\n                .getValue().getBlobCommittedBlockCount());\n        // END: com.azure.storage.blob.specialized.AppendBlobClient.appendBlockWithResponse#byte-array-long-byte-AppendBlobAccessConditions-Duration-Context", "appends a block of data to an append blob with MD5 checksum and updates the Javadoc comment for the {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)} method.\n\npublic void appendBlock2() throws NoSuchAlgorithmException {\n        byte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n        AppendBlobRequestConditions accessConditions = new AppendBlobRequestConditions()\n            .setAppendPosition(POSITION)\n            .setMaxSize(maxSize);\n        Context context = new Context(\"key\", \"value\");\n\n        System.out.printf(\"AppendBlob has %d committed blocks%n\",\n                client.appendBlockWithResponse(data, length, md5, accessConditions, timeout, context)\n                        .getValue().getBlobCommittedBlockCount());", "appends a block of data to an append blob with MD5 checksum and returns the response\n\npublic void appendBlock2() throws NoSuchAlgorithmException {\n        byte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n        AppendBlobRequestConditions accessConditions = new AppendBlobRequestConditions()\n            .setAppendPosition(POSITION)\n            .setMaxSize(maxSize);\n        Context context = new Context(\"key\", \"value\");\n\n        System.out.printf(\"AppendBlob has %d committed blocks%n\",\n            client.appendBlockWithResponse(data, length, md5, accessConditions, timeout, context)\n                .getValue().getBlobCommittedBlockCount());", "appends a block of data with given length to an append blob using MD5 checksum instead of InputStream\n\npublic void appendBlock2() throws NoSuchAlgorithmException {\n    byte[] md5 = MessageDigest.getInstance(\"MD5\").digest(\"data\".getBytes(StandardCharsets.UTF_8));\n    AppendBlobRequestConditions accessConditions = new AppendBlobRequestConditions()\n        .setAppendPosition(POSITION)\n        .setMaxSize(maxSize);\n    Context context = new Context(\"key\", \"value\");\n\n    System.out.printf(\"AppendBlob has %d committed blocks%n\",\n        client.appendBlockWithResponse(data, length, md5, accessConditions, timeout, context)\n            .getValue().getBlobCommittedBlockCount());", "appendBlockWithResponse method of AppendBlobClient with InputStream, long, byte[] instead of InputStream, and additional md5 parameter."]}
{"SampleId": 2395154, "Origin": "Returns true if the class has the specified annotation class.", "Reference": "Returns true if the class has the specified annotation type.", "LLMCandidates": ["Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation with the given type name.", "Returns true if the class has the specified annotation with the given type name.", "Returns true if the class has the specified annotation with the given type name.", "Returns true if the class has the specified annotation type."]}
{"SampleId": 2911558, "Origin": "A typical use case would be to convert index names to curve names valid for an underlying system.", "Reference": "A typical use case would be to convert parameter metadata tenors to be valid for an underlying system.", "LLMCandidates": ["Modifies the ParameterMetadata of each CurrencyParameterSensitivity using the provided function.", "Applies the provided function mdFn to update the parameter metadata of each typed sensitivity before constructing the new CurveSensitivities object.", "This method applies a given function to the parameter metadata of each sensitivity and returns a new CurveSensitivities object with the updated metadata.", "Applies a function to update the parameter metadata of each CurrencyParameterSensitivity in this CurveSensitivities object.", "Applies a given function to update the parameter metadata of each CurrencyParameterSensitivity within the list before building the new CurveSensitivities object."]}
{"SampleId": 2111867, "Origin": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module or within the default imports.", "Reference": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module.", "LLMCandidates": ["This method checks for types that are marked as unresolved but can be found amongst the module's imports or within the default imports.", "checks for missing types that can be found amongst the module's imports or within default imports.", "checks for missing types that can be found amongst the module's imports or within default imports.", "Checks for missing types that can be found amongst the module's imports or within the default imports.", "Checks for missing types that can be found amongst the module's imports or default imports."]}
{"SampleId": 5455011, "Origin": "Checks a name to ensure that it's a legal type name.", "Reference": "Checks a name to ensure that it's a legal qualified class name.", "LLMCandidates": ["Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name."]}
{"SampleId": 1348848, "Origin": "Returns the log compactor.", "Reference": "Returns the log writer.", "LLMCandidates": ["Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer."]}
{"SampleId": 5631506, "Origin": "This property is not returned if the dialog node has no parent.", "Reference": "This property is omitted if the dialog node has no parent.", "LLMCandidates": ["This method returns the value of the parent property. If the dialog node has no parent, this property is not returned.", "Returns the value of the parent property. If the dialog node has no parent, this property is not returned.", "This property is returned as the value of the parent method.", "This method returns the value of the 'parent' variable.\nIf the dialog node has no parent, this property is not returned.", "This method returns the value of the 'parent' variable.\nIf the dialog node has no parent, this property is not returned."]}
{"SampleId": 3847346, "Origin": "Parses {@link SparseVector} from the given Matrix Market string.", "Reference": "Parses {@link SparseVector} from the given Matrix Market.", "LLMCandidates": ["Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream."]}
{"SampleId": 4479574, "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHTTPHeaders)}", "Reference": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}", "LLMCandidates": ["Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)"]}
{"SampleId": 5841626, "Origin": "Get the gradle paths for the given list of modules and all the tested projects (if it is a test app).", "Reference": "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "LLMCandidates": ["Get the gradle paths for the given module (if not null) and all the tested projects (if it is a test app).", "Gets the gradle paths for the given module (if not null) and all the tested projects (if it is a test app).", "Gets the gradle paths for a given module and all the tested projects (if it is a test app).", "Get the gradle path for a single module and all the tested projects (if it is a test app)", "Get the gradle path for the given module (if it is not null) and all the tested projects (if it is a test app)."]}
{"SampleId": 5176845, "Origin": "Getter for {@link #exposeHeaders}", "Reference": "Getter for {@link #allowHeaders}", "LLMCandidates": ["Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders"]}
{"SampleId": 4237183, "Origin": "Creates a {@link Behavior} that uses the given {@link WicketConsumer consumer}\nto do something with the component's tag.", "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do\nsomething with the component's tag.", "LLMCandidates": ["Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer}\nto do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag.", "Creates a <code>Behavior</code> that uses the given <code>SerializableConsumer</code> to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag."]}
{"SampleId": 3964812, "Origin": "Accumulate secondarys into a LinkedListX (extended Persistent List) and Right with the supplied combiner function", "Reference": "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function", "LLMCandidates": ["Accumulate secondarys into a LazySeq (extended Lazy Sequence) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy Sequence) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy Sequence) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy Sequence) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy Sequence) and Right with the supplied combiner function"]}
{"SampleId": 2872597, "Origin": "Retrieves the position in the list corresponding to itemId.", "Reference": "Retrieves the position in the list corresponding to itemId, subtracting any header views.", "LLMCandidates": ["Retrieves the adjusted position in the list corresponding to itemId.", "Retrieves the adjusted position in the list corresponding to itemId.", "Retrieves the adjusted position in the list corresponding to itemId.", "Retrieves the adjusted position in the list corresponding to itemId.", "Retrieves the adjusted position in the list corresponding to itemId."]}
{"SampleId": 2624224, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "LLMCandidates": ["Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}. <br>\nNote: Now it is virtualHostTemplate that handles the SSL configuration instead of defaultVirtualHostBuilder.", "Configures SSL or TLS of the current {@link VirtualHost} template from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}."]}
{"SampleId": 2337239, "Origin": "Phone Number", "Reference": "Phone number", "LLMCandidates": ["@ApiModelProperty(value = \"Phone number\")}\n\nThis method returns the value of the phone number property.", "Phone number", "Phone number", "Phone number", "Phone number"]}
{"SampleId": 3991730, "Origin": "Set the number of expected records for this task.", "Reference": "Set the number of expected records for this connector.", "LLMCandidates": ["Sets the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task.", "Sets the number of expected records for this task."]}
{"SampleId": 2134050, "Origin": "predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["predict the rating given a sparse vector for user <code>userId</code> and item <code>itemId</code>.", "predict the rating given a SparseVector with specific userID and itemId.", "predict the rating given a SparseVector with specific userID and itemId.", "predict the rating given a SparseVector with specified user id and item id.", "* predict the rating given a sparse vector for user <code>userId</code> and item <code>itemId</code>"]}
{"SampleId": 3760874, "Origin": "Each of the available players is passed the provided information\nand the first that reports it is compatible will be returned.", "Reference": "Each of the available {@link Player} instances are\npassed the provided information and the first that reports that it is\ncompatible will be returned.", "LLMCandidates": ["Searches for a compatible player among all available players based on the provided resource. If a compatible player is found, it will be returned; otherwise, null will be returned.", "Searches for a player that is compatible with the given resource and returns it if found. If no compatible player is found, null is returned.", "Searches for a compatible player among the available ones based on the provided resource information and returns the first one that matches.", "Searches for a Player object that is compatible with the given DLNAResource and returns it if found. If no compatible player is found, null is returned.", "Searches for a compatible player among all available players based on the provided resource"]}
{"SampleId": 617914, "Origin": "Adding fields to a POJO as operator state should require a state migration.", "Reference": "Adding fields to a POJO as operator state should succeed.", "LLMCandidates": ["Adding fields to a POJO as operator state should trigger a state migration.", "Adding fields to a POJO as operator state should trigger a state migration if no exception is thrown.", "Adding fields to a POJO as operator state should trigger a state migration if no exception is thrown.", "Tests the serializer upgrade process with additional field as true operator state. Requires state migration if present.", "Adding fields to a POJO as operator state should trigger a state migration."]}
{"SampleId": 5630039, "Origin": "Sets the sensitivity.", "Reference": "Set the sensitivity.", "LLMCandidates": ["Sets the sensitivity and returns a Builder for chaining", "Sets the sensitivity for the builder and returns it.", "Sets the sensitivity for this builder object and returns it for method chaining.", "Sets the sensitivity for this builder object and returns it for method chaining.", "Sets the sensitivity for the builder instead of a simple method.\n\npublic Builder sensitivity(String sensitivity) {\n      this.sensitivity = sensitivity;\n      return this;"]}
{"SampleId": 340617, "Origin": "Requests that the player prefetch a media item with the media id for playback.", "Reference": "Requests that the player prepare a media item with the media id for playback.", "LLMCandidates": ["Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback."]}
{"SampleId": 4476666, "Origin": "Creates a new block blob, or updates the content of an existing block blob.", "Reference": "Creates a new block blob.", "LLMCandidates": ["Creates a new block blob or updates the content of an existing block blob with parallel transfer option enabled but without sending metadata and blob HTTP headers in response.", "Creates a new block blob or updates the content of an existing block blob with parallel transfer options and without returning a response object.", "Creates a new block blob or updates the content of an existing block blob with parallel transfer option.", "Creates a new block blob or updates the content of an existing block blob with parallel file transfer enabled.", "Creates a new block blob or updates the content of an existing block blob with parallel file transfer enabled."]}
{"SampleId": 4479525, "Origin": "Get the etag property: The etag property.", "Reference": "Get the eTag property: The eTag property.", "LLMCandidates": ["Get the eTag property: The eTag property.", "Get the eTag property: The eTag property.", "Get the eTag property: The eTag property.", "Get the eTag property: The eTag property.", "Get the eTag property: The eTag property."]}
{"SampleId": 2484852, "Origin": "Causes  to have its \nmethod called in the event dispatch thread with low priority.", "Reference": "Causes runnable to have its run method called in the\nevent dispatch thread with low priority.", "LLMCandidates": ["Causes the given Runnable to be invoked in the event dispatch thread with low priority. The Toolkit object is obtained through the defaultToolkit variable.", "Causes the given runnable's method to be called in the event dispatch thread with low priority using the default toolkit.", "Causes the given Runnable's method to be called in the event dispatch thread with low priority using the default Toolkit.", "Causes the given Runnable's method to be called in the event dispatch thread with low priority using the default Toolkit.", "Causes the given runnable's method to be called in the event dispatch thread with low priority using the default toolkit."]}
{"SampleId": 4903008, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if the deletion policy can release some index commits based on the current maxSeqNoOfNextSafeCommit and the global checkpoint", "Checks if the deletion policy can release some index commits up to the current safe commit with the global checkpoint", "Checks if the deletion policy can release some index commits up to the current safe commit with the latest global checkpoint.", "Checks if the latest safe commit index can be released with the current global checkpoint", "Checks if the latest safe commit index can be released with the current global checkpoint"]}
{"SampleId": 617915, "Origin": "Removing fields from a POJO as keyed state should require a state migration.", "Reference": "Removing fields from a POJO as keyed state should succeed.", "LLMCandidates": ["Tests the serializer upgrade process when a POJO has a missing field with keyed state.", "Removing the absence of a field from a POJO as keyed state should trigger a state migration.", "Removing fields from a POJO as keyed state may require a state migration.", "Removing fields from a POJO as keyed state may require a state migration.", "Testing the handling of missing fields during POJO serializer upgrade with keyed state."]}
{"SampleId": 5845110, "Origin": "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources\njust like the app does.", "Reference": "When a layout is rendered in the layout editor, it is getting resources from the app resource repository: it should see all\nthe resources just like the app does.", "LLMCandidates": ["Retrieves the app resource repository instance. If it is null, creates a new one using the given facet and library resources, then registers the disposer to manage its lifecycle.", "This method fetches the app resource repository: it should return a non-null LocalResourceRepository instance.", "This method fetches the app resource repository: it should return a non-null LocalResourceRepository instance.", "This method returns the app resources repository. It initializes the repository if it is null.", "This method retrieves the app resource repository. If the repository is null, it creates a new one using the given facet and library resources, then registers the disposer to manage its lifecycle. The returned object is guaranteed not to be null."]}
{"SampleId": 6034464, "Origin": "Enables initial {@literal PING} barrier before any connection is usable.", "Reference": "Returns the {@link ProtocolVersion} to use.", "LLMCandidates": ["// Returns the protocol version used by this instance.\n//\n// Deprecated: This method is no longer used. Instead, use the getProtocolVersion() method.\n//\n// Replaced by:\n// public ProtocolVersion getProtocolVersion() {\n//     return protocolVersion;\n//", "Checks and returns the current protocol version.\n\n(Note: The method signature has changed from \"isPingBeforeActivateConnection\" to \"getProtocolVersion\" and the variable name \"pingBeforeActivateConnection\" has been removed.)", "// Returns the protocol version used by this instance.\n// This method replaces the deprecated isPingBeforeActivateConnection() method.", "This method returns the current protocol version.\n\n(Previously: Enables initial PING barrier before any connection is usable.)", "This method returns the protocol version used by this instance. (Deprecated: The previous method isPingBeforeActivateConnection() has been removed.)"]}
{"SampleId": 3242213, "Origin": "Get the content of this element.", "Reference": "Gets the value of the content property.", "LLMCandidates": ["Get the content of this element. If the list is null, create a new ArrayList and assign it to the variable before returning it.", "Get the content of this element. If the list is null, create a new ArrayList and assign it to the list variable before returning it.", "Get the content of this element. If the list is null, create a new ArrayList and assign it to the instance variable.", "Get the content of this element. If the list is null, initialize it with an empty ArrayList.", "Get the content of this element. If the list is null, initialize it with an empty ArrayList."]}
{"SampleId": 2535872, "Origin": "Extract the values of given field or property from the array's elements under test into a new array, this new array\nbecoming the array under test.", "Reference": "Extract the values of given field or property from the array's elements under test into a new list, this new list\nbecoming the object under test.", "LLMCandidates": ["Extract the values of given field or property from the array's elements under test into a new AbstractList or List, this new collection becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new List, this new List becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new List, this new List becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new list, this new list becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new AbstractList, this new list becoming the array under test."]}
{"SampleId": 671354, "Origin": "Converts a JSON document into a PdxInstance", "Reference": "Converts a Byte Array JSON document into a PdxInstance", "LLMCandidates": ["Converts a JSON document into a PdxInstance with given identityFields", "Converts a JSON document into a PdxInstance with given identityFields", "Converts a JSON document into a PdxInstance with given identityFields\n\n(Note: The method now accepts an optional variable 'identityFields' which is an array of strings.)", "Converts a JSON document into a PdxInstance with given identityFields", "Converts a JSON document into a PdxInstance with the given identityFields"]}
{"SampleId": 3512219, "Origin": "Gets the current {@link Art} value represented by this {@link Painting}.", "Reference": "Gets the current {@link ArtType} value represented by this {@link Painting}.", "LLMCandidates": ["Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}."]}
{"SampleId": 3894604, "Origin": "In error message, exclude {@code @rultor} from list of commanders (REF).", "Reference": "QnAskedBy can exclude {@code @rultor} from list of commanders (REF).", "LLMCandidates": ["Excludes {@code @rultor} from the list of authorized commanders in the error message.", "Excludes {@code @rultor} from the list of authorized commanders in the reply message.", "In error message, exclude {@code @rultor} from list of authorized commanders.", "In error message, exclude {@code @rultor} from list of authorized commanders.", "Excludes {@code @rultor} from the list of authorized commanders."]}
{"SampleId": 1843359, "Origin": "WebElement#getText()} equals to provided {@code expectedText}.", "Reference": "WebElement#getText()} equals to provided {@code expected} one.", "LLMCandidates": ["Waits for the text of given WebElement to equal the expected text within the specified timeout. If the text does not match, an error message will be printed with the difference between the expected and actual texts.", "Waits for the given WebElement's text to equal the specified {@code expected} string within the given {@code timeout}. If the text does not match, an error message will be displayed indicating the current and expected values.", "Waits for the given {@code WebElement}'s text to equal the provided {@code expected} String within the specified {@code timeout}. If the text does not match, an exception will be thrown with a message containing the expected and actual texts.", "Waits for the text of the given {@code WebElement} to equal the provided {@code expected} string within the specified {@code timeout}. If the text does not match, an exception will be thrown with a message indicating the expected and actual text.", "Waits for given {@code WebElement} to display the text equal to the provided {@code expected}. If not met within the specified {@code timeout}, an error message will be displayed."]}
{"SampleId": 2700102, "Origin": "Set UPC/EAN.", "Reference": "Set CU-UPC.", "LLMCandidates": ["Sets the value of UPC\\_CU.", "Set UPC or CU number.", "Sets the UPC or EAN code for the given record without validation.", "Sets the UPC or EAN code for the given record without validation.", "Sets the UPC or EAN code with the given value for the column named \"UPC\\_CU\"."]}
{"SampleId": 4396695, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. Replaces null values with \"***Sensitive Data Redacted****\" for security reasons.", "Returns a string representation of this object; useful for testing and debugging. With sensitivity to potential sensitive data: if AuthenticationToken or Query is not null, replace their values with \"***Sensitive Data Redacted****\" in the returned string.", "Returns a string representation of this object with sensitive data redacted for testing and debugging.", "Generates a string representation of this object with sensitive data redacted for security.", "Generates a string representation of this object with sensitive data redacted for security."]}
{"SampleId": 4236719, "Origin": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface()} for important\nsecurity-related information.", "Reference": "WARNING: Read the javadoc of {@link Component#canCallListener()} for important\nsecurity-related information.", "LLMCandidates": ["WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information."]}
{"SampleId": 2916154, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}."]}
{"SampleId": 4396563, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. If getVariables() returns a non-null value, it will be replaced with \"***Sensitive Data Redacted***\" in the output.", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted", "Return a string representation of this object; useful for testing and debugging. If getVariables() returns a non-null value, append the tag \"Variables: ***Sensitive Data Redacted***\" instead.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted when getVariables() is not null.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 3771649, "Origin": "Checks whether caption and description are interpreted as html or plain\ntext.", "Reference": "Checks whether caption and description are interpreted as HTML or plain\ntext.", "LLMCandidates": ["Checks whether HTML content is allowed based on the current state.", "Checks whether htmlContentAllowed flag is allowed based on the current state.", "Checks whether htmlContentAllowed flag is allowed based on the current state.", "Checks whether htmlContentAllowed flag is allowed based on the current state", "Checks whether htmlContentAllowed flag is allowed based on the current state"]}
{"SampleId": 278863, "Origin": "Determines if this BeaconManager instance is part of the process hosting the beacon scanning\nservice.", "Reference": "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning\nservice.", "LLMCandidates": ["Determines if this BeaconManager instance is not part of the process hosting the beacon scanning service.", "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning service.", "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning service.", "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process than the beacon scanning service."]}
{"SampleId": 5873660, "Origin": "The domain portion of the ObjectName in the query if useObjDomain is set to true\n3. else, the Class Name of the MBean.", "Reference": "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true\n3. else, the Class Name of the MBean.", "LLMCandidates": ["Adds an identifier for the MBean based on the query setting and Result object. If useObjDomain is true in the query, appends the ObjectDomain from the Result; otherwise, appends the ClassName.", "Appends the MBean identifier to the query's StringBuilder object. If a keyAlias exists, it is appended instead. If useObjDomain is true in the query, the objDomain is used as the identifier. Otherwise, the className is used.", "Adds an identifier for an MBean based on the keyAlias or objectDomain of a Result in a query. If useObjDomain is true in the query, the domain portion of the ObjectName is used; otherwise, the Class Name of the MBean is used.", "Adds an identifier for the MBean based on the query configuration and Result object. If useObjDomain is set to true in the query, then the objDomain property of the Result object is used as the identifier, otherwise the className property is used.", "Generates the identifier for an MBean based on the given Result object. If useObjDomain is true in the query, appends the objDomain of the result to the StringBuilder. Otherwise, appends the className of the result."]}
{"SampleId": 5762169, "Origin": "Forget all entries that match the scheme+host+port of the given key, so\nthat they can be crawled again if discovered again.", "Reference": "Forget all entries that match the scheme+host+port of the given url, so\nthat they can be crawled again if discovered again.", "LLMCandidates": ["Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forgets all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forgets all entries that match the scheme+authority of the given URL from the cache so they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again."]}
{"SampleId": 5640433, "Origin": "Keys and values are separated by {@value #SEPARATOR}.", "Reference": "Keys and values are separated by {@value #KEY_VALUE_SEPARATOR}.", "LLMCandidates": ["Processes filters, each key-value pair separated by {@value #SEPARATOR}.", "Process filters specified by the given string. Keys and values are paired and passed to the processFilter method for processing. The separator between keys and values is {@value #SEPARATOR}.", "Processes filters specified in a string, with keys and values separated by {@value #SEPARATOR}. The method now uses {@link Map#entrySet()} to iterate through key-value pairs instead of splitting the filters string directly.", "Process filters specified by the given string. Keys and values are separated by {@value #SEPARATOR}. For each valid filter, call processFilter(key, value).", "Process filters specified by the given string using a map. Keys and values are separated by {@value #SEPARATOR}."]}
{"SampleId": 3357863, "Origin": "Set the time a publication will linger in nanoseconds after being drained.", "Reference": "Set the time a network publication will linger in nanoseconds after being drained.", "LLMCandidates": ["Sets the time a publication will linger in nanoseconds after being drained (using Long type).", "Sets the time a publication will linger in nanoseconds after being drained (using Long type instead of Integer).", "Sets the time a publication will linger in nanoseconds after being drained (changed to Long type).", "Sets the time a publication will linger in nanoseconds after being drained. The linger value cannot be negative.", "Sets the time a publication will linger in nanoseconds after being drained. The linger value cannot be negative."]}
{"SampleId": 4474502, "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubDirectory#string}", "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#string}", "LLMCandidates": ["@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#String}\n\nCreates a new subdirectory under the current directory. The name of the new subdirectory is specified by the parameter 'subdirectoryName'.\n\nIf the creation of the subdirectory is successful, a ShareDirectoryClient object representing the newly created directory will be returned; otherwise, an empty ShareDirectoryClient object will be returned with no associated directory.", "@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#String}\n\nCreates a new subdirectory in the root directory of the share with the specified name.\n\nThis method asynchronously creates a new subdirectory under the current directory, and returns an instance of ShareDirectoryClient representing the newly created subdirectory.\n\n@param subdirectoryName The name of the subdirectory to create.\n\n@return A ShareDirectoryClient instance that represents the created subdirectory. If no such subdirectory already exists, a new one will be created asynchronously and its value will be returned in the future. Otherwise, null will be returned immediately.", "@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#String}\n\nCreates a new subdirectory under the current share directory with the given name.\n\nParameters:\nsubdirectoryName - The name of the new subdirectory to be created.\n\nReturns:\nA ShareDirectoryClient object that represents the newly created subdirectory.", "@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#String}\n\nCreates a new subdirectory in the share directory with the given name.\n\nIf the operation is successful, a ShareDirectoryClient object representing the newly created subdirectory will be returned. Otherwise, an exception will be thrown.", "@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#String}\n\nCreates a new subdirectory under the specified directory in the share using the provided name.\n\nIf successful, this method returns an instance of ShareDirectoryClient representing the newly created subdirectory. Otherwise, it returns null."]}
{"SampleId": 2337263, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user", "Created by user", "Created by user", "Created by user", "Created by user"]}
{"SampleId": 1578381, "Origin": "Retrieves the metadata for the specified {@link NamespacedEntityId}.", "Reference": "Retrieves the metadata for the specified {@link MetadataEntity}.", "LLMCandidates": ["Retrieves the metadata for the specified {@link MetadataEntity", "Retrieves the metadata for the specified MetadataEntity.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}."]}
{"SampleId": 4477036, "Origin": "BlobRange, ParallelTransferOptions, ReliableDownloadOptions, BlobRequestConditions, boolean)}", "Reference": "BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean)}", "LLMCandidates": ["Downloads a blob to the specified file using the given options.\n\n - BlobRange: The byte range of the blob to download.\n - DownloadRetryOptions: Options for retrying download requests.", "downloadToFileWithResponse#String-BlobRange-ParallelTransferOptions-DownloadRetryOptions-BlobRequestConditions-boolean", "Downloads a blob to the specified file with given range, download options and request conditions using `downloadToFileWithResponse` method.\n\n- The first comment block remains unchanged as no modification was made to it.\n- In the second comment block, we updated \"ParallelTransferOptions\" to \"DownloadRetryOptions\". So, the corresponding change is made in the comment accordingly.", "downloadToFileWithResponse method accepts DownloadRetryOptions instead of ReliableDownloadOptions.", "downloadToFile method with options to use DownloadRetryOptions instead of ReliableDownloadOptions."]}
{"SampleId": 5270017, "Origin": "Request for graceful stop then blocks until process is stopped.", "Reference": "Request for quick stop then blocks until process is stopped.", "LLMCandidates": ["Requests for forceful stop then blocks until process is terminated.", "Request for hard stop then blocks until process is forcefully terminated.", "Request for hard stop then blocks until process is forcefully terminated.", "Request for hard stop then blocks until process is stopped.", "Request for hard stop then blocks until process is stopped."]}
{"SampleId": 2384658, "Origin": "For now, just consume the message and throw it away.", "Reference": "Consume the message and save it.", "LLMCandidates": ["Reads a message line by line until a \".\" is reached. If a line starts with a \".\", it is treated as data and added to the output. The accumulated data is then set as the message.", "Consumes the message line by line until a \".\" is reached. Lines starting with \".\" are printed to the message instead of being consumed.", "Consumes the message, starts with \".\" and appends each line except the last one to a byte array using PrintWriter, then sets the message with the resulting byte array.", "Reads a message line by line until the terminator \".\" is reached. The lines starting with \".\" are treated as prefixes and removed before being set as the method's return value using the setMessage() method.", "Consumes the message line by line. If a line starts with a \".\", it is treated as a command and is ignored. The consumed lines are set as the message."]}
{"SampleId": 2887747, "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).", "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).", "LLMCandidates": ["This signature represents the method's formal description as given by its declaration in the code.", "Processes the given method or class signature based on its content, by visiting the corresponding SignatureVisitor elements.\n\nThe signature is stored in the 'signatureValue' variable of the current object and can be either a MethodSignature or a ClassSignature, depending on its first character. If it starts with '<', it represents TypeParameters followed by one or more ReferenceTypeSignatures (class bounds and interface bounds). Otherwise, it begins with the method or class name and is followed by zero or more JavaTypeSignatures for method parameters, return type, and exception types if applicable.\n\nThe accept() method iterates through the given SignatureVisitor and calls visitFormalTypeParameter(), visitClassBound(), visitInterfaceBound(), visitParameterType(), visitReturnType(), visitExceptionType(), visitSuperclass(), or visitInterface() based on the parsed signature information at each step.", "Accepts a SignatureVisitor to parse and process the method or class signature represented by this object's 'signatureValue' property.", "This signature is the one specified in the constructor (see {@link #SignatureReader(String) SignatureReader}). Parses the given signature string according to its type (MethodSignature or ClassSignature), and visits each JavaTypeSignature within it using SignatureVisitor.", "This signature represents the given Java method or class definition, depending on the context of its usage within the provided SignatureVisitor."]}
{"SampleId": 237013, "Origin": "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} object with a\nmatching Alluxio storage type.", "Reference": "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a\nmatching Alluxio storage type.", "LLMCandidates": ["Converts a {@link CreateFileOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFileOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFileOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} or {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} or {@link OpenFilePOptions} object with a matching Alluxio storage type."]}
{"SampleId": 1314716, "Origin": "Called when the user reorders the policies in a service.", "Reference": "Called when the user reorders the policies in a API.", "LLMCandidates": ["Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API."]}
{"SampleId": 1880460, "Origin": "This lacks a mathematical argument, but is a handcrafted heuristic to avoid\nnumerical problems.", "Reference": "This lacks a thorough mathematical argument, but is a handcrafted heuristic\nto avoid numerical problems.", "LLMCandidates": ["This heuristic estimates the initial value of beta using a handcrafted method to avoid numerical problems in intrinsic t-Stochastic Neighbor Embedding. It calculates the sum of distances between the given ignore DBID and all other DBIDs, excluding the ignore one. In degenerate cases where the sum is zero or positive infinity, it sets the initial value of beta as 1.", "This heuristic estimates the initial value of beta for the Intrinsic t-Stochastic Neighbor Embedding algorithm. It avoids numerical problems in degenerate cases by returning 1 instead of the calculated value.", "This heuristic is a handcrafted approach to avoid numerical issues in the estimation of initial beta value. It is based on the intrinsic t-Stochastic Neighbor Embedding method described in [Schubert, E. and Gertz, M., 2017]. The calculation proceeds by summing up the double values of all DBIDs except the one to be ignored, and dividing the result by the perplexity multiplied by (number of DBIDs - 1), as long as the sum is positive and not infinite. In degenerate cases, the method returns a default value of 1 instead.", "This heuristic estimates the initial value of beta using a handcrafted formula based on the given ignore parameter, DoubleDBIDListIter iter, and perplexity. It avoids numerical problems by checking for zero sum and ensuring finite values.", "This heuristic estimates an initial value for beta using a handcrafted formula based on the sum of distances to all DBIDs excluding the ignored one. In degenerate cases where the sum is zero or positive infinity, it returns 1 instead."]}
{"SampleId": 2608946, "Origin": "Tests {@code globalRecommend(Set, int, Set, Set)}.", "Reference": "Tests {@code recommendRelatedItems()(Set, int, Set, Set)}.", "LLMCandidates": ["Tests the {@code recommendRelatedItems(Set, int, Set, Set)} method.", "Tests the {@code recommendRelatedItems(Set, int, Set, Set)} method.", "Tests the {@code recommendRelatedItems(Set, int, Set, Set)} method.", "Tests the {@code recommendRelatedItems(Set, int, Set, Set)} method.", "Tests the {@code recommendRelatedItems(Set, int, Set, Set)} method."]}
{"SampleId": 1759643, "Origin": "Setter for the output directory where the data files are stored.", "Reference": "Setter for the directory where the data files are stored.", "LLMCandidates": ["Setter for the directory property where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored."]}
{"SampleId": 4470079, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["In case of failure, the {@link CosmosContinuablePagedFlux} will return an empty continuation instead of error.", "In case of failure, the {@link CosmosContinuablePagedFlux} will be empty and additional calls to the server might be required to fetch the next page.", "In case of failure, the returned {@link CosmosContinuablePagedFlux} will not complete and instead return a new page when called again with the same parameters.", "In case of failure, the returned {@link CosmosContinuablePagedFlux} will emit an empty page and a {@code Mono} with a {@code FluxEmptySignal} signal.", "In case of failure, the {@link CosmosContinuablePagedFlux} will return an empty continuable paged flux instead of error."]}
{"SampleId": 4404087, "Origin": "Note that you do not call", "Reference": "Note that you do\nnot call  with this\n.", "LLMCandidates": ["Polls for a DecisionTask using the given request and returns the AWS response.\n\nNote that you do not call unmarshaller in the updated code. Instead, use SdkJsonProtocolFactory.createResponseHandler to handle the response.", "Note that you do not call `SdkJsonProtocolFactory.createResponseHandler(...)` before `invoke(...)`.", "// Polls for a DecisionTask based on the provided request and returns the response.\n// The AWS request metrics are started before marshalling the request and ended after receiving the response.\npublic override DecisionTask pollForDecisionTask(PollForDecisionTaskRequest pollForDecisionTaskRequest) {\n// ...\n}\n\n// Updated comment:\n// Polls for a DecisionTask based on the provided request, marshals it using the PollForDecisionTaskRequestMarshaller,\n// sets the AWS request metrics to the request and invokes the API call.\n// The AWS request metrics are started before marshalling the request and ended after receiving the response.\npublic override DecisionTask pollForDecisionTask(PollForDecisionTaskRequest pollForDecisionTaskRequest) {\n// ...", "This method polls for a DecisionTask using the provided PollForDecisionTaskRequest. It initializes an ExecutionContext and AWSRequestMetrics, starts the ClientExecuteTime event, marshals the request, invokes the service call, unmarshals the response, ends the ClientExecuteTime event, and returns the AwsResponse.", "@Override\npublic DecisionTask pollForDecisionTask(PollForDecisionTaskRequest pollForDecisionTaskRequest) {\n/// <summary>\n/// Polls for the next available decision task.\n/// </summary>\n/// <param name=\"pollForDecisionTaskRequest\">The request object to specify the polling parameters.</param>\n/// <returns>The DecisionTask that is ready for processing, or null if none are found.</returns>\n/// <remarks>\n/// This method starts two timing events for collecting AWS request metrics: 'ClientExecuteTime' and 'RequestMarshallTime'.\n/// It creates the PollForDecisionTaskRequest object from the input parameters using the PollForDecisionTaskRequestMarshaller.\n/// After that, it sends the request to the service and receives the response, then unmarshals the DecisionTask from it.\n/// Finally, it ends the two timing events and returns the DecisionTask or null if none were found.\n/// </remarks>"]}
{"SampleId": 5452026, "Origin": "Adds a qualified \"exports dynamic\" directive to the declaration.", "Reference": "Adds a qualified \"opens\" directive to the declaration.", "LLMCandidates": ["Adds a qualified \"opens\" directive to the declaration, specifying the given package and module.", "Adds a qualified \"opens\" directive to the declaration, exporting the specified package to the given module.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Sets a \"opens\" directive to export the given package and module."]}
{"SampleId": 1985765, "Origin": "| 2. if it's a right child, it should have a incremented column value.", "Reference": "| If it's a right child, its column should increment by 1.", "LLMCandidates": ["The right child will have a column value incremented.", "The right child node should have a column value incremented.", "The right child node should have a column value incremented.", "If it's a right child, it should have a increased column value.", "If it's a right child, it should have a increased column value."]}
{"SampleId": 2482285, "Origin": "Queries this search source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Queries this search source for the given queryString. Renamed method to reflect new name: createContactQuery", "Queries this search source for the given queryString. Renamed to reflect method signature change.", "Queries this search source for the given queryString. Renamed to reflect method signature change.", "Queries this search source for the given queryString using its createContactQuery method.", "Queries this search source for the given queryString. Renamed method to reflect updated functionality."]}
{"SampleId": 4470466, "Origin": "Gets the list of {@link CertificateProperties CertificateProperties} on this page.", "Reference": "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "LLMCandidates": ["Gets an IterableStream of {@link CertificateProperties CertificateProperties} on this page.", "Gets an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Gets an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Gets an iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Gets an iterable stream of {@link CertificateProperties CertificateProperties} on this page."]}
{"SampleId": 2312346, "Origin": "Users\ncannot poke the threshold values via this Condition.", "Reference": "Users must not poke the threshold values via this Condition.", "LLMCandidates": ["Returns the condition based on the 'conditionWithin' variable instead of 'condition'.", "Users cannot poke the threshold values via this ConditionWithin.", "Returns the condition with respect to a specific range within the long array.\nUsers cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin."]}
{"SampleId": 2616149, "Origin": "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Rectangle} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the Rectangle represented by the given string according to the format of this.set().", "Parses the Rectangle represented by the given string according to the format of this.set() method.", "Parses the Rectangle represented by the given string according to the format of this.set() method.", "Parses the Rectangle represented by the given string according to the format of this.set() method.", "Parses the {@code Rectangle} represented by the given string according to the updated format of {@link #fromString()}."]}
{"SampleId": 3573462, "Origin": "Set name of the noun.", "Reference": "Set the noun.", "LLMCandidates": ["Sets the value of the noun.", "Set the value of the noun.", "Set the noun property", "Set the noun property", "Set the noun property"]}
{"SampleId": 2302360, "Origin": "Delegateaction to the track(s) clicked on.", "Reference": "Delegate action to the track(s) clicked on.", "LLMCandidates": ["Handles mouse click events for each Track within the contained MouseableRegion. Delegates action to the selected track.", "Handles mouse click events by delegating action to the track(s) clicked on.", "Processes mouse click events for the track(s) beneath the clicked point.", "Processes mouse click events for the track(s) beneath the clicked point.", "Handles mouse click events by delegating action to the track(s) clicked on."]}
{"SampleId": 1052994, "Origin": "Receive indicator result from persistence, after it is saved into storage.", "Reference": "Receive metrics result from persistence, after it is saved into storage.", "LLMCandidates": ["Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage."]}
{"SampleId": 1328525, "Origin": "Sets the journal serializer, returning the builder for method chaining.", "Reference": "Sets the journal namespace, returning the builder for method chaining.", "LLMCandidates": ["Sets the namespace, returning the builder for method chaining.", "Sets the namespace for the builder, returning the builder for method chaining.", "Sets the namespace for the builder, returning the builder for method chaining.", "Sets the namespace for the builder, returning the builder for method chaining.", "Sets the namespace for the builder, returning the builder for method chaining."]}
{"SampleId": 1066822, "Origin": "Return the {@code Graph} from the underlying switchable.", "Reference": "Return the {@code Graph} from the underlying DatasetGraph", "LLMCandidates": ["Return the Graph from the underlying DataFlowGraph (DSG), with default graph if no GraphName is provided.", "Returns the base Graph from the Dataflow SchemaGraph. If no graph name is specified, returns the default graph instead.", "Return the Graph from the underlying DataflowStructureGraph (DSG), using the given graph name if provided, otherwise return the default graph.", "Return the base Graph from the Dataflow Sandbox Graph object based on the given graph name. If no graph name is provided, return the default graph instead.", "Return the {@code Graph} from the underlying DataFlowSchemaGraph (DSG). If no graph name is provided, return the default graph instead."]}
{"SampleId": 1353787, "Origin": "(Try to) create a Flag inter (either standard FlagInter or SmallFlagInter).", "Reference": "(Try to) create and add a Flag inter (either standard FlagInter or SmallFlagInter).", "LLMCandidates": ["Create a Flag inter (either FlagInter or FlagInterWithAdded), given its glyph, shape and grade, by instantiating it and looking up its link with the provided system stems. If found, add it to the system signature and apply the link transformation.", "Creates a Flag inter (either StandardFlagInter or FlagInter) with the given glyph, shape, and grade. If a valid link exists between the system stems and the created flag inter, adds the flag inter to the system's sig and applies the link transformation to it. Otherwise, returns null.", "Creates a Flag inter (either StandardFlagInter or FlagInter), given its glyph, shape, grade, system information, and list of system stems.", "Creates a Flag inter with the given glyph, shape, grade, system information, and system stems. If a valid link is found, adds the Flag inter to the system signature and applies the link transformation.", "Creates a new FlagInter object with the given glyph, shape, grade, system, and systemStems. If a valid link is found for the new flag inter, it will be added to the system's sig and applied the link transformation."]}
{"SampleId": 4396618, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. If getPayload() is not null, it will be replaced with \"***Sensitive Data Redacted***\" for security reasons.", "Returns a string representation of this object; useful for testing and debugging with sensitive payload data redacted", "Returns a string representation of this object; useful for testing and debugging. The \"Payload\" field is now masked with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging. If getPayload() is not null, it will be replaced with \"***Sensitive Data Redacted***\" in the returned string.", "Returns a string representation of this object; useful for testing and debugging. If getPayload() is not null, it will be replaced with \"***Sensitive Data Redacted***\" in the string representation."]}
{"SampleId": 5435232, "Origin": "If the new lookup class is not within the same package member\nas the old one, private members will not be accessible, and protected members\nwill not be accessible by virtue of inheritance.", "Reference": "If the new lookup class is not within the same package member\n as the old one, private members will not be accessible, and protected members\n will not be accessible by virtue of inheritance,\n i.e.", "LLMCandidates": ["If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible.", "If the requested lookup class is not within the same package or module as the current lookup class, then the private and protected members will not be accessible.", "If the new lookup class is not within the same package or module as the old one, private and protected members will not be accessible.", "If the new lookup class is not within the same package or module as the old one, access to private and protected members will be restricted.", "If the requested lookup class is not within the same package or module as the old one, the new lookup class will not have access to private members and the protected members will be accessible only through inheritance."]}
{"SampleId": 2913759, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using the NAMES parser."]}
{"SampleId": 1356182, "Origin": "Report the ID of the sample sheet that contains the provided sample.", "Reference": "Report the name of the sample sheet that contains the provided sample.", "LLMCandidates": ["Report the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample.", "Returns the name of the sample sheet that contains the provided sample."]}
{"SampleId": 576503, "Origin": "The format used is ISO 8601-like:\nH:m:s.S.", "Reference": "The format used is ISO 8601-like: {@code HH:mm:ss.SSS}.", "LLMCandidates": ["The format used is ISO 8601 with hour in HH instead of H.", "The format used is ISO 8601 with hour represented by HH instead of H.", "The format used is ISO 8601 with hours represented by HH instead of H: HH:mm:ss.SSS.", "The format used is ISO 8601 with hour represented by HH instead of H:\nHH:mm:ss.SSS.", "The format used is ISO 8601 with hours capitalized: HH:mm:ss.SSS."]}
{"SampleId": 2251648, "Origin": "Get the object, and return it, throws RuntimeException", "Reference": "Get the object, and return it, throws RuntimeException if not found", "LLMCandidates": ["Retrieves the object associated with the given key from the HashMap and returns it. Throws RuntimeException if the key is not found.", "Get the object associated with the given key string, and return it, throws RuntimeException if the key is not found in the data map.", "Retrieves the value associated with the given key from the map and returns it, throws RuntimeException if the key is not found.", "Retrieves the object associated with the given key from the map, and returns it, throws RuntimeException if the key is not found.", "Retrieves the object associated with the given key from the HashMap and returns it. Throws RuntimeException if the key is not found."]}
{"SampleId": 2939253, "Origin": "This polling job tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "Reference": "This function tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "LLMCandidates": ["Checks for and creates missing UPnP services. Calls checkCreateManualConnection() after creating services.", "Checks for missing UPnP services and creates handlers for them. Additionally, calls checkCreateManualConnection() method.", "Checks for and creates missing UPnP services. Also calls checkCreateManualConnection().", "This method checks for missing UPnP services and creates handlers for them, as well as calls checkCreateManualConnection()}\n\nThe logger indicates the start of the process. For each discovered device in the registry, the createService() method is invoked to establish a handler. Afterwards, checkCreateManualConnection() is executed. If upnpService is not null, the registry adds this object as a listener.", "Checks for and creates missing UPnP services. Called devices are of any type supported by upnpService. Also calls checkCreateManualConnection method."]}
{"SampleId": 4474437, "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubDirectory#String}", "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}", "LLMCandidates": ["@param subdirectoryName The name of the subdirectory to be deleted.\n\n@return A Mono representing the deletion operation. If the subdirectory is not found or is empty, this method returns a Mono.Empty. If an error occurs during the deletion process, an exception will be propagated through the returned Mono.", "@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String\n\n Deletes a sub-directory under the current directory asynchronously.\n\n @param subdirectoryName Name of the sub-directory to be deleted.", "@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String\n\n Deletes the specified subdirectory in the Data Lake File System asynchronously.\n\n @param subdirectoryName The name of the subdirectory to delete.", "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}\n\n Deletes a sub-directory with the given name under the current directory. If the sub-directory does not exist, an empty Mono is returned. Throws a RuntimeException if an error occurs during the deletion process.", "/{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}\n\nDeletes the sub-directory with the given name from the current directory in the Data Lake Storage account. If the specified sub-directory does not exist, this method will have no effect and will return a Mono<Void> emitting an empty signal. Otherwise, all files and subdirectories under the specified sub-directory will be deleted recursively.\n\n@param subdirectoryName The name of the sub-directory to delete. @return A Mono<Void> that emits an empty signal when completed successfully or an error Mono<Throwable> if an error occurs while deleting the sub-directory."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"\\0\"}, settings without any label are returned.", "Reference": "If {@code labelFilter = \"\\0\"}, settings without any label are returned.", "LLMCandidates": ["Sets the label filter for selecting settings. If {@code labelFilter = \"\\0\"} or empty string, all settings are returned. Otherwise, only settings with labels matching the given filter will be selected.", "Sets the label filter for the SettingSelector.", "Sets the label filter for this SettingSelector instance. The provided filter string is stored internally and will be used to filter the displayed labels in subsequent calls. If the filter string is empty or null, no filtering will be applied.", "Sets the label filter for the SettingSelector. If {@code labelFilter} is an empty String, settings without a label are returned.", "Sets the label filter for this SettingSelector object. The given string will be used to filter which labels are displayed. If the filter is empty, no labels are returned."]}
{"SampleId": 6165109, "Origin": "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace.", "Reference": "The namespace document is a BsonDocument containing the values associated with a MongoNamespace.", "LLMCandidates": ["@BsonProperty(\"ns\")\nThe namespaceDocument is a potentially null BsonDocument containing the values associated with a MongoNamespace.", "The getNamespaceDocument method returns a BsonDocument representing the values associated with a MongoNamespace. It can now return null.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace. It can be null.", "The namespaceDocument is a BsonDocument representing the values associated with a MongoNamespace. It may be null.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace. It can be null."]}
{"SampleId": 3083929, "Origin": "Returns a supplier that returns the current language instance.", "Reference": "Returns a reference that returns the current language instance.", "LLMCandidates": ["Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance."]}
{"SampleId": 5203568, "Origin": "After the recreation, it brings back its lifecycle state to the resumed state.", "Reference": "After the recreation, it brings back its lifecycle state to the original state.", "LLMCandidates": ["This method recreates an ActivityController instance and restores its lifecycle state based on the previous one.", "This method recreates an ActivityController instance by setting the Activity's mChangingConfigurations flag and simulating the Android framework calls to recreate the Activity. After the recreation process, it restores the previous lifecycle state of the Activity, except for transient states (PAUSED or STOPPED), which are brought back to RESUMED state.", "This method simulates the recreation process of an Activity by setting the mChangingConfigurations flag and then restoring the lifecycle state based on the original state before the recreation. It also ensures that non-configuration instances are retained during the process.", "This method updates the activity controller by simulating the recreation process on behalf of ActivityThread. It sets the Activity#mChangingConfigurations flag and manages the activity lifecycle stages accordingly.", "This method recreates an ActivityController instance and restores its lifecycle state based on the previous lifecycle stage."]}
{"SampleId": 3242255, "Origin": "Create an instance of {@link CTWebProperties }", "Reference": "Create an instance of {@link CTRel }", "LLMCandidates": ["Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel"]}
{"SampleId": 2337259, "Origin": "Classification ID (for files only): * `1` - public * `2` - for internal use only * `3` - confidential * `4` - strictly confidential", "Reference": "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "LLMCandidates": ["Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential"]}
{"SampleId": 1750901, "Origin": "Appends to a collection column, as in {@code SET l+=?}.", "Reference": "Appends to a collection column, as in {@code SET l=l+?}.", "LLMCandidates": ["Appends an assignment to a column with the given identifier and suffix term.", "Appends an assignment to a column with the given identifier and suffix term.", "Appends an expression to a column, as in {@code SET column_name += suffix}.", "Appends an assignment to a column with the given identifier and suffix term.", "Appends an assignment to a column with the given identifier and suffix term."]}
{"SampleId": 2127259, "Origin": "Start a Task with a Tag to identify it and with a time threshold; a task represents some work\nthat spans some time, and you are interested in both its start time and end time.", "Reference": "End a Task with a Tag to identify it; a task represents some work that spans some time, and\nyou are interested in both its start time and end time.", "LLMCandidates": ["End a Task with a Tag to identify it.", "Start a Task with a Tag to identify it; a task represents some work that spans some time and you are interested in its end time.", "End a Task with a Tag to identify it", "Starts a Task with a Tag to identify it; a task represents some work that spans some time, and you are interested in its end time.", "End a Task with a Tag to identify it"]}
{"SampleId": 2913708, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map."]}
{"SampleId": 6048292, "Origin": "or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Reference": "or throws a {@link NoSuchAccountException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.mail.NoSuchAccountException} if the account with the given userId and address could not be found.", "Throws a {@link com.liferay.mail.NoSuchAccountException} if an account with the specified userId and address could not be found.", "Throws a {@link com.liferay.mail.NoSuchAccountException} if the account with the given userId and address could not be found.", "Throws a {@link com.liferay.mail.NoSuchAccountException} if an account with the given userId and address is not found.", "Throws a {@link com.liferay.mail.NoSuchAccountException} if an account with the given userId and address is not found."]}
{"SampleId": 5828271, "Origin": "Loads the update center data, if any and if modified since last read.", "Reference": "Loads the update center data, if any.", "LLMCandidates": ["Retrieves the Data object if it has been initialized with JSONObject or returns null otherwise.", "Retrieves the Data object if it has been initialized with JSONObject or returns null otherwise.", "Retrieves the Data object if it exists or initializes a new one from JSONObject.", "Retrieves the Data object if it exists or initializes a new one from JSONObject.", "Retrieves the Data object if it exists or creates a new one based on the JSONObject."]}
{"SampleId": 3923671, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["@deprecated Produces a Collapsed SemanticGraph with no extras.", "@Deprecated Produces a Collapsed SemanticGraph with no extras.", "@Deprecated Produces a Collapsed SemanticGraph with no extras.", "@deprecated Produces a Collapsed SemanticGraph with no extras.", "@Deprecated Produces a Collapsed SemanticGraph with no extras."]}
{"SampleId": 5218897, "Origin": "Is has plain column or not.", "Reference": "Contains plain column or not.", "LLMCandidates": ["Checks if the given logic table contains a plain column", "Checks if a given logic table contains a plain column or not.", "Checks if the given logic table contains a plain column or not.", "Checks if the given logic table contains a plain column or not.", "Checks if a given logic table contains a plain column or not."]}
{"SampleId": 1352583, "Origin": "Report the note which if vertically farthest from stem tail.", "Reference": "Report the highest note by default.", "LLMCandidates": ["Returns the note which is vertically highest among all notes in this chord.", "Returns the note with the highest pitch among all notes in this chord.", "Returns the note with the highest pitch among all notes in this chord.", "Returns the note with the highest pitch among all notes in this chord.", "Returns the note with the highest pitch among all notes in this chord."]}
{"SampleId": 5589244, "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getContentLanguage(Context)}.", "Reference": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "LLMCandidates": ["If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}."]}
{"SampleId": 5844942, "Origin": "Creates an Android framework resource repository without using a persistent cache.", "Reference": "Creates an Android framework resource repository.", "LLMCandidates": ["Creates an Android framework resource repository with optional persistent cache and executor for cache creation.", "Creates an Android framework resource repository with optional persistent cache and custom executor for cache creation.", "Creates an Android framework resource repository with optional persistent cache and custom cache creation executor.", "Creates an Android framework resource repository with optional persistent cache and custom Executor for cache creation.", "Creates an Android framework resource repository with the given options for cache usage."]}
{"SampleId": 5631353, "Origin": "Convert file to HTML.", "Reference": "Convert document to HTML.", "LLMCandidates": ["Convert file to HTML using provided options\n\nIf a model is provided in the ConvertToHtmlOptions object, include it as query parameter in the request. Otherwise, exclude it. Add SDK headers to the request and set Accept header to application/json.", "Convert file to HTML using the specified options and model, if provided.", "Convert file to HTML using the specified options and model, if provided.", "Convert file to HTML using provided options.", "Convert file to HTML using provided options."]}
{"SampleId": 1354710, "Origin": "Try to detect link between this Slur instance and head on left side\nplus head on right.", "Reference": "Try to detect link between this Slur instance and head on left side\nplus head on right side.", "LLMCandidates": ["Look up potential link pairs between this Slur instance and heads on both sides based on their proximity and chord relationships.", "Determine link pairs between this Slur instance and heads on both sides using given system information.", "Try to detect links between this Slur instance and heads on both sides.", "Looks up and returns a collection of potential link pairs between this Slur instance and heads on both sides based on their spatial proximity and chordal relationships.", "Look up potential link pairs between this Slur instance and heads on both sides based on their defined areas and candidate chords."]}
{"SampleId": 1548425, "Origin": "Slight performance increase over {@link #render(BufferBuilder)}.", "Reference": "Slight performance increase over {@link #render(VertexBuffer)}.", "LLMCandidates": ["Renders the block using a VertexBuffer instead of BufferBuilder for potential performance improvement.", "Renders the block model using the provided VertexBuffer instead of BufferBuilder for potential performance improvement.", "Slight performance increase over #{link #render(VertexBuffer)}.", "Slight performance increase over #{link #render(VertexBuffer)}.", "Renders the block using the VertexBuffer instead of BufferBuilder for potential performance improvements."]}
{"SampleId": 2133750, "Origin": "Calculate a sample's standard deviation.", "Reference": "Calculate the standard deviation.", "LLMCandidates": ["Calculate a sample's standard deviation using a Collection of Numbers instead of a double array and call it standardDeviation method.", "Calculate a sample's standard deviation for a Collection of Number types.", "Calculate a sample's standard deviation for a Collection of Number types.", "Calculate a sample's standard deviation for a Collection of Numbers.", "Calculate a sample's standard deviation for a Collection of Numbers."]}
{"SampleId": 2545534, "Origin": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation.", "Reference": "When transforming a vector by the resulting matrix the rotation - and possibly scaling - transformation will be applied first and then the translation.", "LLMCandidates": ["Applies a translation followed by a rotation transformation to this matrix. The given translation vector is applied last.", "This method applies a translation followed by a rotation transformation to the current matrix.", "This method applies a translation followed by a rotation transformation to the current matrix.", "This method applies a translation followed by a rotation transformation to the given matrix.", "Applies a translation followed by a rotation transformation to the matrix."]}
{"SampleId": 6049369, "Origin": "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Reference": "Returns the foo with the primary key or throws a {@link NoSuchFooException} if it could not be found.", "LLMCandidates": ["Returns the Foo with the given primary key or throws a NoSuchFooException if it could not be found.", "Returns the Foo with the given primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Retrieves the Foo with the given primary key or throws NoSuchFooException if it does not exist.", "Returns the Foo with the given primary key or throws a NoSuchFooException if it could not be found.", "Returns the Foo with the given primary key or throws a NoSuchFooException if it could not be found."]}
{"SampleId": 2882033, "Origin": "Gets the String or Long id from the key, or null if incomplete", "Reference": "Gets the String or Long id from the key as a Value, or null if incomplete", "LLMCandidates": ["Gets the Long or String id value from the given IncompleteKey, or null if it's not a complete Google Cloud Datastore Key.", "Gets the Value<S> representing the id or name of an IncompleteKey from Google Cloud Datastore, or null if incomplete", "Gets the Value<S> representing the id or name from the IncompleteKey, which is either a LongValue or a StringValue, or null if the key is incomplete.", "Gets the Long or String id value from the key, depending on its completeness. Returns null if the key is incomplete.", "Gets the Long or String id value from the incomplete key, depending on its completeness. Returns null if the key is not complete."]}
{"SampleId": 1327914, "Origin": "Returns a list of backup nodes.", "Reference": "Returns a list of follower nodes.", "LLMCandidates": ["Returns a list of follower MemberIds.", "Returns a list of follower MemberIds.", "Returns a list of follower MemberIds.", "Returns a list of follower MemberIds.", "Returns a list of follower MemberIds."]}
{"SampleId": 1542632, "Origin": "This method creates a temporary VCF file and it's appropriately named index file, and will delete them on exit.", "Reference": "This method creates a temporary VCF or Bam file and its appropriately named index file, and will delete them on exit.", "LLMCandidates": ["This method creates a temporary file with given prefix and suffix, and optionally its index file if the suffix is vcf, vcf.gz or bam. The files will be deleted on exit.", "This method creates a temporary file with given prefix and suffix, and if the suffix is \"vcf.gz\", \".vcf\", or \".bam\", also creates an appropriately named index file. The files will be deleted on exit.", "This method creates a temporary file with given prefix and suffix, and if the suffix is vcf or vcf.gz, it also creates an appropriately named index file. The files will be deleted on exit.", "This method creates a temporary file with given prefix and suffix, and if the suffix is \"vcf.gz\", \".vcf\", or \".bam\", also creates an appropriately named index file for it. The files will be deleted on exit.", "This method creates a temporary file with given prefix and suffix, and if the suffix is vcf or vcf.gz, it also creates an appropriately named index file for the VCF or compressed VCF. The files will be deleted on exit."]}
{"SampleId": 2050311, "Origin": "Starts the service if not started already and starts all downloads.", "Reference": "Starts the service if not started already and resumes all downloads.", "LLMCandidates": ["Starts the service if not already running and resumes all downloads.", "Starts the service if not already started and resumes all downloads.", "Starts the service if not already started and resumes all downloads.", "Starts the service if not already started and resumes all downloads.", "Starts the service if not started already and resumes all downloads."]}
{"SampleId": 125737, "Origin": "Helper method to retrieve the parent folder type.", "Reference": "Helper method to retrieve the parent folder type or  if none available.", "LLMCandidates": ["Retrieves the folder type of the parent folder given a root path", "Helper method to retrieve the parent folder type based on the given root path. The parent folder's type is obtained from the map of folder types stored in m_folderTypes. If the parent folder is null, then null is returned.", "Helper method to retrieve the parent folder type of a given root path. If the parent folder exists in the cache, return its corresponding type; otherwise, return null.", "Retrieves the folder type of the parent directory given its root path.", "Helper method to retrieve the parent folder type given a root path. The method reads the configuration data first and then returns the folder type of the parent directory of the given root path from the cache. Note that the folder type may be null if the parent directory is not found in the cache."]}
{"SampleId": 6235650, "Origin": "The input stream should\ncontain an X.509 certificate chain in PEM format.", "Reference": "The input stream should\ncontain an X.509 certificate collection in PEM format.", "LLMCandidates": ["The input stream should contain a valid X.509 certificate collection in PEM format.", "The input stream should contain a X.509 certificate collection in PEM format.", "The input stream should contain a valid X.509 certificate collection in PEM format.", "The input stream should contain a valid X.509 certificate collection in PEM format.", "The input stream should contain a valid X.509 certificate collection in PEM format."]}
{"SampleId": 3389056, "Origin": "Unregister the given event from the current context (provided).", "Reference": "Unregister all methods observing the given event from the provided context.", "LLMCandidates": ["Removes the given event registration for the specified instance from the current context's registrations set.", "Removes the given event registration for the specified instance from the current context's registrations set.", "Removes the given event registration for the specified instance from the current context's registrations set.", "Removes an observer of the given event instance from the current context.", "Removes an observer of the given event instance from the current context's registrations."]}
{"SampleId": 1328163, "Origin": "Sets the storage serializer.", "Reference": "Sets the storage namespace.", "LLMCandidates": ["Sets the namespace for the builder.", "Sets the namespace for the builder.", "Sets the namespace for the builder.", "Sets the namespace for the builder.", "Sets the namespace for the builder."]}
{"SampleId": 2912410, "Origin": "Gets the groups used to find an issuer curve.", "Reference": "Gets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Gets the groups used to find an issuer based on its LegalEntityId.", "Gets the groups used to find an issuer based on its LegalEntityId.", "Gets the groups used to find an issuer based on its LegalEntityId", "Gets the groups used to find an issuer based on its LegalEntityId", "Gets the groups used to find an issuer based on its LegalEntityId"]}
{"SampleId": 1578587, "Origin": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}", "Reference": "Returns a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}.", "LLMCandidates": ["Appends the given key-value pair to the existing ones in this MetadataEntity and returns a new MetadataEntity with the updated details.", "Appends a new key-value pair to the existing MetadataEntity. The new key-value will have the same metadata entity object but updated details map.", "Appends a new key-value pair to the existing MetadataEntity.", "Appends the given key-value pair to the existing ones in this MetadataEntity.", "Appends a new key-value pair to the existing MetadataEntity. The newly added key-value will be stored under the given key and the provided value."]}
{"SampleId": 4396433, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with sensitive data redacted for testing and debugging.", "Generates a JSON-like string representation of this object, hiding sensitive data such as UserName and FirstName.", "Generates a JSON-like string representation of this object, masking sensitive data such as UserName and FirstName with \"***Sensitive Data Redacted****\".", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted.", "Generates a string representation of this object with sensitive data redacted for debugging and testing purposes."]}
{"SampleId": 3677761, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).", "LLMCandidates": ["Returns a new instance of RelativeDayOfWeek with an offset of 3 days from the given dayOfWeek.", "Returns a WithAdjuster object representing a day that is one week prior to the given DayOfWeek.", "Returns a WithAdjuster object representing the previous DayOfWeek relative to the given day.", "Returns a new instance of RelativeDayOfWeek with a relative value of 3 days before the given dayOfWeek.", "Returns a new RelativeDayOfWeek instance representing the previous day of the given DayOfWeek."]}
{"SampleId": 3993404, "Origin": "Complete the request.", "Reference": "2.", "LLMCandidates": ["This method marks the completion of a batch production process and sets the final state accordingly. It logs the base offset and success or failure status, and if successful, calls the completeFutureAndFireCallbacks() method to notify any registered listeners. If the final state has already been set, it logs an appropriate message and returns false.", "Complete the request with the given baseOffset, logAppendTime and exception. If successful, mark this ProducerRecordBatch as completed and call associated callbacks. Otherwise, record the failure in logging and keep the batch state unchanged. Be aware that a SUCCESSFUL batch must not attempt another state change afterwards.", "Complete the request based on the given baseOffset, logAppendTime, and exception status. If successful, set the final state to SUCCEEDED and complete the future, otherwise set the final state to FAILED if it's the first failure or ignore subsequent failures. Log appropriate messages for successful and failed batches and their corresponding states.", "Complete the production process with given baseOffset and logAppendTime. If successful, set FinalState to SUCCEEDED and call completeFutureAndFireCallbacks(). Otherwise, set FinalState to FAILED and log the failure with baseOffset and exception. Be careful not to attempt another state change once a batch has already been completed.", "Complete the production process with given baseOffset, logAppendTime and exception status. If successful, update final state and call callback functions; otherwise, ignore and maintain current state."]}
{"SampleId": 2060821, "Origin": "It tests that the method {@code addEdge}\nwill silently add the missing nodes to the graph, then add the edge connecting them.", "Reference": "Tests that the method {@code addEdge} will silently add the missing nodes to the graph, then\nadd the edge connecting them.", "LLMCandidates": ["It tests that the mutable {@code addEdge} method will silently add the missing nodes to the graph and then add the edge connecting them.", "It tests that the method `addEdge` of a mutable graph will silently add missing nodes to the graph and then add the edge connecting them.", "It tests that the mutable {@code addEdge} method will silently add the missing nodes to the graph before adding the edge connecting them.", "Tests that the method {@code addEdge} will silently add missing nodes to the mutable graph and then add the edge connecting them.", "It tests that the method {@code addEdge} of a mutable graph will silently add the missing nodes to the graph and then add the edge connecting them."]}
{"SampleId": 6104045, "Origin": "Will set Object as TAG to this request, wrapped by WeakReference", "Reference": "Will set Object as TAG to underlying AsyncHttpRequest", "LLMCandidates": ["Sets the request tag with the given Object. If the request is not null, sets the request tag with the given object. Otherwise does nothing.", "Sets the request tag with the given Object. If the request is not null, sets its tag to the given object. Otherwise, does nothing.", "Sets the request tag to the given Object", "Sets the request tag to the given Object", "Sets the request tag with the given Object."]}
{"SampleId": 3492756, "Origin": "Whether the channel product is a beta product", "Reference": "Whether the channel product is a betaMarker product", "LLMCandidates": ["Checks if the product marker indicates that this is a beta version}\n\nWhether the product marker indicates that this is a beta version.", "Whether the product marker is set to \"Y\" to indicate a beta product", "Whether the product marker is set to \"Y\" for a beta product.", "Whether the product marker is set to \"Y\" for a beta product.", "Whether the channel product is marked as a beta product"]}
{"SampleId": 6006976, "Origin": "Write a Chart series as rows in a CSV file.", "Reference": "Export a XYChart series into rows in a CSV file.", "LLMCandidates": ["Write a CSV file with rows representing an XYSeries chart", "Write a CSV file with rows representing an XYSeries.\n\nThis method writes the x and y data of a given series as separate rows in a CSV file, located in the specified directory, using the series name as the file name. If the series has extra values, they will also be written as separate rows.\n\nThe method uses BufferedWriter to write the CSV content into the created or updated file with UTF-8 character encoding.", "Write a CSV file representing the given XYSeries with the specified path.", "Write a CSV file representing the given XYSeries with the specified path.", "Write a CSV file with rows representing an XYSeries.\n\nThe method writes the series data as comma-separated values into a new file, with each value on a new line. If the series has extra values, they will also be written to the file. The file is saved in the specified directory using the series name for the file name."]}
{"SampleId": 3677760, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).", "LLMCandidates": ["This method returns a new instance of RelativeDayOfWeek by providing a DayOfWeek parameter. The number of days to move forward is fixed to 2.", "Returns a new WithAdjuster object by increasing the given DayOfWeek by two.", "Returns a new instance of RelativeDayOfWeek with an offset of 2 from the given dayOfWeek.", "Returns a new WithAdjuster object by adding 2 days to the given DayOfWeek", "Returns a new WithAdjuster object by adding 2 days to the given DayOfWeek"]}
{"SampleId": 2700520, "Origin": "Set Bewegungsdatum.", "Reference": "Set Inventurdatum.", "LLMCandidates": ["Set InventoryDate in the database.", "Set InventoryDate in the table.", "Set InventoryDate in the table.", "Set InventoryDate in the table.", "Sets the InventoryDate."]}
{"SampleId": 5631504, "Origin": "Gets the dialogNodeId.", "Reference": "Gets the dialogNode.", "LLMCandidates": ["Returns the value of dialogNode.", "Returns the value of dialogNode.", "Returns the value of dialogNode.", "Returns the value of dialogNode.", "Gets the dialog node identifier.\n changed to:\n public String dialogNode();\n Therefore, the comment should be updated to:\n \"Gets the identifier of the dialog node."]}
{"SampleId": 2959054, "Origin": "the barChartProperties of the chart", "Reference": "the chartProperties of the chart", "LLMCandidates": ["Gets the chart properties instead of barChartProperties.", "Gets the chart properties of the chart.", "Gets the chart properties of the chart.", "Gets the chart properties of the chart.", "Gets the chart properties."]}
{"SampleId": 3037217, "Origin": "Gets forwarding function type of the forwarding objective.", "Reference": "Attempts to guess the forwarding function type of the given forwarding\nobjective.", "LLMCandidates": ["Gets the ForwardingFunctionType based on the provided ForwardingObjective and its criteria. The method determines the most suitable ForwardingFunctionType by filtering candidates based on their expected criterion types and matching or mismatching criteria in the objective.", "Determines the forwarding function type based on the criteria in the given ForwardingObjective and its metadata.", "Gets forwarding function type based on the criteria in the given forwarding objective.", "Gets forwarding function type of the given ForwardingObjective based on its criteria.", "Gets the ForwardingFunctionType of a given ForwardingObjective based on the criteria it includes."]}
{"SampleId": 5749203, "Origin": "Returns an iterator of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "Reference": "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "LLMCandidates": ["Returns a collection of all of the registered SaslClientFactory objects where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered SaslClientFactory instances where the order is based on the order of Provider registration and/or class path order.", "Returns a collection of all of the registered SaslClientFactory instances where the order is based on the order of Provider registration and/or class path order.", "Returns a collection of all of the registered SaslClientFactory objects where the order is based on the order of Provider registration and/or class path order.", "Returns a collection of all of the registered SaslClientFactory objects where the order is based on the order of Provider registration and/or class path order."]}
{"SampleId": 2229197, "Origin": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code cursor#getNext()} to the result.", "Reference": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code pathCursor#getNext()} to the result.", "LLMCandidates": ["Traverses all objects in the given array and adds their scalar values or objects with named attributes ({@code pathCursor#getNext()}) to the result. If an object is encountered that does not have a named attribute, or if there are no more elements in the current object's array or nested objects, then the scalar value or object is added to the result and traversal moves on to the next object in the array.", "If the current token is not a start array, return null. Otherwise, traverse all objects in the given array and add their scalar values or nested objects named {code pathCursor#getNext()} to the result.", "Traverses all objects in given array and adds their scalar values or nested objects named {@code pathCursor#getNext()} to the result. If an object is a START\\_OBJECT, it checks if the desired attribute exists using {@code findAttribute(parser, pathCursor)}. If so, it adds its value to the result. If not or the object is a START\\_ARRAY, it skips the children. The process continues until the end of the array is reached.", "Traverses all objects in the given array and adds their scalar values or nested objects at the specified path to the result.", "Traverses all objects in given array and adds their scalar values or nested objects with named attributes ({@code pathCursor#getNext()}) to the result."]}
{"SampleId": 1665715, "Origin": "This method is run everytime the service is executed", "Reference": "This method is run every time the service is executed", "LLMCandidates": ["This method automatically backs up all books in the database.", "This method automatically backs up all books in the database.", "This method automatically backs up all books in the database.", "This method automatically backs up all books in the database.", "This method is run every time the service is executed to perform automatic backups for all books by compressing and saving their data using given file URIs."]}
{"SampleId": 4933730, "Origin": "If one param is a float, the other is converted to a float.", "Reference": "a/b If one param is a\nfloat, the other is converted to a float.", "LLMCandidates": ["If one parameter is an int, the other is also an int. If not, both are floats.", "If one parameter is an int, the other is unchanged. If both parameters are floats, they remain floats.", "If one parameter is an int, the other is an int; if not, both are floats.", "If one parameter is an int, the other is an int; if not, both are floats.", "If one parameter is an int, the other is an int; if one or both are floats, no type conversion is performed."]}
{"SampleId": 4478592, "Origin": "Get the fileContentType property: Sets the MIME content type of the\nfile.", "Reference": "Get the contentType property: Sets the MIME content type of the\nfile.", "LLMCandidates": ["Gets the contentType property: Sets the MIME content type of the file.", "Gets the contentType property: Sets the MIME content type of the file.", "Gets the contentType property: Sets the MIME content type of the file.", "Gets the contentType property: Sets the MIME content type of the file.", "Gets the contentType property: Sets the MIME content type of the file."]}
{"SampleId": 4390872, "Origin": "For more information about managing snapshot copy grants, go to", "Reference": "For more information about managing snapshot copy grants, go to Amazon Redshift Database Encryption in the Amazon Redshift", "LLMCandidates": ["Creates a new snapshot copy grant based on the given request.\n\nThe method starts by creating an ExecutionContext and AWSRequestMetrics object. It then begins measuring the ClientExecuteTime event. The CreateSnapshotCopyGrantRequest is marshalled using CreateSnapshotCopyGrantRequestMarshaller, and AWSRequestMetrics are bound to the request. The method invokes the service with the marshalled request, handles the response using StaxResponseHandler, and returns the SnapshotCopyGrant object upon success. Finally, the ClientExecution time event is ended. For more information about managing snapshot copy grants, go to [Amazon Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.ModifyingItemsUsingSnapshotCopyGrant.html).", "For more information about creating snapshot copy grants, refer to the AWS documentation.", "Creates a SnapshotCopyGrant based on the given request. Manages request metrics and invokes AWS service using the provided ExecutionContext. For more information about managing snapshot copy grants, go to [Amazon S3 User Guide](https://docs.aws.amazon.com/s3/latest/userguide/CreateSnapshotCopyGrant.html).", "Creates a new snapshot copy grant based on the provided request. The method starts measuring client execution time and request marshalling time using AWSRequestMetrics, then sends the request and returns the response as SnapshotCopyGrant object.", "Creates a SnapshotCopyGrant based on the given request and returns the response object.\n\nManages the creation of snapshot copy grants using the provided CreateSnapshotCopyGrantRequest and handles the corresponding AWSResponse."]}
{"SampleId": 2061801, "Origin": "Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\nnumber of keys.", "Reference": "Uses a hash table to map keys to value collections, initialized to expect the specified\nnumber of keys.", "LLMCandidates": ["Uses a {@link Map} from {@code Platform}, initialized to expect the specified number of keys.", "Uses a {@link Map} from {@code Platform}, initialized to expect the specified number of keys.", "Uses a {@link Map} implemented by {@code Platform.newHashMapWithExpectedSize(expectedKeys)} to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link Map} from the Platform package to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link Map} from the Platform package to map keys to value collections, initialized to expect the specified number of keys."]}
{"SampleId": 4620088, "Origin": "Returns the number of occurrences, or {@code -1} if the exact number is unknown.", "Reference": "Returns the result size, or {@code -1} if the exact size is unknown.", "LLMCandidates": ["Returns the size, or {@code -1} if the exact size is unknown.", "Returns the size, or -1 if the exact size is unknown.", "Returns the size, or {@code -1} if the exact size is unknown.", "Returns the size, or {@code -1} if the exact size is unknown.", "Returns the size of this instance, or 0 if it is empty, or -1 if the size is unknown."]}
{"SampleId": 1467613, "Origin": "Log rule execution statistics.", "Reference": "Log rule execution statistics @ INFO.", "LLMCandidates": ["Log rule execution statistics for a given IRunningQuery object and its children, if any.", "Log rule execution statistics for a given query object and its children, if any.", "Log rule execution statistics for a given IRunningQuery object and its children, if any.", "Log rule execution statistics for a given query and its children, if any.", "Log rule execution statistics for a given query and its children, if any."]}
{"SampleId": 2217836, "Origin": "Test of var method, of class HyperGeometricDistribution.", "Reference": "Test of variance method, of class HyperGeometricDistribution.", "LLMCandidates": ["Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution."]}
{"SampleId": 275709, "Origin": "Load all profile names.", "Reference": "A task that reads all profile names.", "LLMCandidates": ["Read all profile names from the specified directory.", "Read all profile names from the specified directory.", "Read all profile names from the specified directory.", "Read all profile names from the specified directory.", "Read all profile names from the specified directory."]}
{"SampleId": 337244, "Origin": "Get the {@link SessionConfiguration} for the specified camera id.", "Reference": "Get the {@link SessionConfig} for the specified camera id.", "LLMCandidates": ["Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id."]}
{"SampleId": 3677731, "Origin": "Obtains an instance of {@code ZoneOffset} from a date-time object.", "Reference": "Obtains an instance of {@code ZoneOffset} from a temporal object.", "LLMCandidates": ["Obtains an instance of {@code ZoneOffset} from a given {@link TemporalAccessor}. If the given object is already of type {@code ZoneOffset}, it will be returned as is. Otherwise, an attempt is made to obtain the offset in seconds and create a new {@code ZoneOffset} instance using that value. In case of any exception during this process, a {@link DateTimeException} will be thrown with an appropriate error message.", "Obtains an instance of ZoneOffset from a date-time object. If the given object is already an instance of ZoneOffset, it will be returned directly. Otherwise, attempts to obtain the offset in seconds from the TemporalAccessor and converts it into a ZoneOffset using ofTotalSeconds method. In case of any exception during the process, a DateTimeException is thrown with an appropriate error message.", "Obtains an instance of ZoneOffset from a given TemporalAccessor. If the TemporalAccessor is already an instance of ZoneOffset, it will be returned directly. Otherwise, attempts to obtain the offset in seconds and create a new ZoneOffset using that value. If an exception occurs during the process, a DateTimeException will be thrown with an appropriate error message.", "Obtains an instance of {@code ZoneOffset} from a date-time object. If the given object is not already an instance of {@code ZoneOffset}, it tries to obtain the offset in seconds and creates a new instance based on that value. In case of failure, an exception will be thrown.", "Obtains an instance of {@code ZoneOffset} from a given {@code TemporalAccessor}. If the given object is already an instance of {@code ZoneOffset}, it will be returned as-is. Otherwise, attempts to obtain the offset in seconds using the {@code OFFSET_SECONDS} field and creates a new {@code ZoneOffset} instance using that value. In case of any exception during the process, re-throws a {@code DateTimeException} with an appropriate error message."]}
{"SampleId": 4245995, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Convert to Long type if text is not empty.", "Convert to Long type, returning null if text is empty (using Strings.isEmpty method).", "Convert to Long type, returning null if text is empty (as per Strings.isEmpty())", "Convert to Long type, returning null if text is empty (as per Strings.isEmpty())", "Checks if text is empty string before converting to Long object. Returns null if text is empty."]}
{"SampleId": 3384765, "Origin": "Returns the attack range for a {@link robocode.SentryRobot SentryRobot}.", "Reference": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}\nfrom the border.", "LLMCandidates": ["Returns the size of the border for a {@link robocode.SentryRobot SentryRobot}.", "Returns the size of the border for a {@link robocode.SentryRobot SentryRobot}.", "Returns the size of the border for a {@link robocode.SentryRobot SentryRobot}.", "Returns the size of the border for a {@link robocode.SentryRobot SentryRobot}.", "Returns the size of the border for a {@link robocode.SentryRobot SentryRobot}."]}
{"SampleId": 3036764, "Origin": "Decode an action profile member to PI action group member.", "Reference": "Decode an action profile member to PI action profile member.", "LLMCandidates": ["Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member."]}
{"SampleId": 3734139, "Origin": "If not, returns -1.", "Reference": "If not, returns null.", "LLMCandidates": ["Returns the minimum length value annotated on the given tree using the provided factory. If not present, returns null.", "* Returns the minimum length of a Tree annotated with @MinLen by using ValueAnnotatedTypeFactory instead of MinLenAnnotatedTypeFactory.\n *\n * If not, returns null.", "* Returns the minimum length annotated on a tree using the provided factory.\n * If no minimum length is found, returns null.\n *\n * @param tree the tree to get the minimum length from\n * @param valueAnnotatedTypeFactory the factory used to extract the minimum length information from the tree\n */", "If not, returns null.\n\nThe method gets the minimum length value from an annotated type associated with a Tree object using ValueAnnotatedTypeFactory instead of MinLenAnnotatedTypeFactory.", "Returns the minimum length value annotated on the given Tree using ValueAnnotatedTypeFactory. If not present, returns null."]}
{"SampleId": 2230461, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the splitBrainProtectionName for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the splitBrainProtectionName for operations.", "Sets the name for split brain protection"]}
{"SampleId": 2142909, "Origin": "Visit class header and get class name, access , and intefraces\ninformatoin (step 1,2, and 3) for SVUID computation.", "Reference": "Visit class header and get class name, access , and interfaces\ninformation (step 1,2, and 3) for SVUID computation.", "LLMCandidates": ["Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. This method overrides a superclass visit method.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. This method overrides the parent class visit method.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. This method overrides the visit method of the superclass.", "Visit class header and get class name, access, and interface information (steps 1, 2, and 3) for SVUID computation. This method overrides the superclass visit method.", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. This method overrides the visit method of its superclass."]}
{"SampleId": 3677731, "Origin": "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}.", "Reference": "This factory converts the arbitrary temporal object to an instance of {@code ZoneOffset}.", "LLMCandidates": ["This factory converts an arbitrary date-time object to an instance of ZoneOffset. If the input is already an instance of ZoneOffset, it will be returned directly. Otherwise, a attempts to obtain the offset in seconds from the TemporalAccessor and creates a new ZoneOffset using that value. In case of failure, an exception is thrown.", "This factory converts an arbitrary date-time object to an instance of ZoneOffset, handling potential exceptions when obtaining the offset from TemporalAccessor.", "This factory converts the arbitrary date-time object to an instance of ZoneOffset. If the TemporalAccessor is already an instance of ZoneOffset, it will be returned directly. Otherwise, an attempt will be made to obtain the offset in seconds from the TemporalAccessor and create a new ZoneOffset using that value. In case of failure, a DateTimeException will be thrown.", "This factory converts an arbitrary date-time object to an instance of ZoneOffset. If the input is already a ZoneOffset instance, it will be returned directly. Otherwise, an attempt is made to obtain the offset in seconds from the given TemporalAccessor and create a ZoneOffset instance based on it. In case of failure, a DateTimeException is thrown.", "This factory converts an arbitrary date-time object of type TemporalAccessor to an instance of ZoneOffset. If the input is already an instance of ZoneOffset, it will be returned directly. Otherwise, the method attempts to obtain the offset in seconds from the TemporalAccessor and creates a new ZoneOffset using that value. However, if there's an issue obtaining the offset, an exception will be thrown for further handling."]}
{"SampleId": 1381360, "Origin": "Validates that trailing checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "Reference": "Validates that checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "LLMCandidates": ["Validates that trailing checksums should be enabled for a given SdkRequest based on the {@link ClientType} and the presence or absence of specific S3 headers.", "Validates that checksums should be enabled for a given SdkRequest based on the {@link ClientType} and the presence or absence of specific headers.", "Validates that checksums should be enabled for a given SdkRequest based on the ClientType and the presence or absence of specific headers.", "Validates that checksums should be enabled based on ClientType and the presence or S3 specific headers for a PutObject request.", "Validates that trailing checksums should be enabled for a given {@link SdkRequest} based on {@link ClientType} and the presence or absence of specific headers."]}
{"SampleId": 6044783, "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.calendar.NoSuchBookingException} if the CalendarBooking with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchBookingException} if the CalendarBooking with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchBookingException} if the CalendarBooking with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchBookingException} if the CalendarBooking with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchBookingException} if the CalendarBooking with the given UUID and group ID could not be found."]}
{"SampleId": 4862706, "Origin": "This method will called {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "Reference": "This method calls {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "LLMCandidates": ["This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured. The check for an empty buffer is now done using the utility class method {@link BufferUtil#isTheEmptyBuffer(ByteBuffer)}.", "Releases the given buffer to the pool if a buffer pool has been configured.", "Releases the given buffer to the pool if a buffer pool has been configured.", "Releases the given ByteBuffer to the pool if a buffer pool has been configured.", "Releases the given ByteBuffer to the pool if a buffer pool has been configured."]}
{"SampleId": 5242834, "Origin": "Generate and write the html page that shows the snapshot and the state of\nthe ZoomParams", "Reference": "Generate and write the html page that shows the snapshot and the ZoomState", "LLMCandidates": ["Generate and write the html page that shows the snapshot and the state of the ZoomState", "Generate and write the html page that shows the snapshot and the state of the ZoomState", "Generate and write the html page that shows the snapshot and the state of the ZoomState", "Generate and write the html page that shows the snapshot and the state of the ZoomState", "Generate and write the html page that shows the snapshot and the state of the ZoomState"]}
{"SampleId": 4476928, "Origin": "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)}.", "Reference": "SecretProperties secret} and call {@link SecretClient#getSecret(String, String)}.", "LLMCandidates": ["Returns an iterable of SecretProperties for the given secret name, allowing paged access to its versions and their associated properties.", "Returns a paged iterable of SecretProperties for the given secret name. Call {@link SecretClient#listPropertiesOfSecretVersions(String, Context)} to get the list.", "Lists the properties of secret versions with given name and returns a paginated iterable of SecretProperties. Then calls {@link SecretClient#getSecretProperties(SecretProperties)} for each returned item.", "Returns a PagedIterable of SecretProperties corresponding to the named secret's versions, each containing their associated properties. The returned objects are obtained by calling {@link SecretClient#listPropertiesOfSecretVersions(String, Context)}.", "Lists the properties of secret versions with given name.}\n\nSecretProperties secretProperties { return and call {@link SecretClient#getSecretProperties(SecretProperties)} instead."]}
{"SampleId": 2615723, "Origin": "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and\ncell, column, and row defaults.", "Reference": "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties\nand cell, column, and row defaults.", "LLMCandidates": ["Removes all actors and children from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all children from the table (same as {@link #clearChildren()}) and additionally resets all table properties and\ncell, column, and row defaults.", "Removes all actors and children from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors and children from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors and children from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults."]}
{"SampleId": 1220435, "Origin": "If the number of missing elements is\n    32 x times the number of present elements, treat it as sparse", "Reference": "If the number of missing elements is 32x times the number of present\nelements, consider it as sparse.", "LLMCandidates": ["/**\n * MRTask to aggregate precalculated per-chunk sparse lengths\n */", "/**\n * MRTask to aggregate precalculated per-chunk sparse lengths\n */\n}\n\nIf the ratio of missing elements to present elements is greater than 32, treat the frame as sparse.", "/**\n * MRTask to aggregate precalculated per-chunk sparse lengths\n */", "/**\n * MRTask to aggregate precalculated per-chunk sparse lengths\n */", "/**\n * MRTask to aggregate precalculated per-chunk sparse lengths\n */\n}\n\nIf the number of missing elements is more than 32% of the number of present elements, treat it as sparse."]}
{"SampleId": 3629306, "Origin": "Returns an immutable set containing one element.", "Reference": "Returns an unmodifiable set containing one element.", "LLMCandidates": ["Returns an immutable set containing one element. The implementation has been changed from ImmutableCollections to Unmodifiable.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an immutable set containing one element using Unmodifiable instead of ImmutableCollections.", "Returns an immutable set containing one element using Unmodifiable instead of ImmutableCollections."]}
{"SampleId": 1956974, "Origin": "Compute the number of bytes that would be needed to encode a {@code uint32} field.", "Reference": "Compute the number of bytes that would be needed to encode a varInt.", "LLMCandidates": ["Compute the number of bytes that would be needed to encode a raw uint32 field.", "Compute the number of bytes that would be needed to encode a uint32 raw value field.", "Compute the number of bytes that would be needed to encode a raw int32 field.", "Compute the number of bytes that would be needed to encode a raw int32 field.", "Compute the number of bytes required to encode a {@code int} field using variable length encoding (VInt32)."]}
{"SampleId": 3344422, "Origin": "Create a new read/write access object.", "Reference": "Create a new read/write access object with the given default timeout.", "LLMCandidates": ["Create a new read/write access object with the given default timeout.", "Create a new read/write access object with the given default timeout.", "Create a new read/write access object with the given default timeout.", "Creates a new read/write access object with the given default timeout.", "Creates a new read/write access object with the given default timeout."]}
{"SampleId": 2535861, "Origin": "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName}\nis null.", "Reference": "Filter the array under test into a list composed of the elements whose property or field specified\nby {@code propertyOrFieldName} are null.", "LLMCandidates": ["Filter the collection under test keeping only elements whose specified property or field named by {@code propertyOrFieldName} is null. However, due to the usage of soft assertions proxying mechanism, calling filteredOn(String propertyOrFieldName, null) does not work properly. Instead, use filter method and pass propertyOrFieldName and null as arguments to get a filtered Iterable, then create a newListAssertInstance using an ArrayList created from this filtered Iterable.", "Filter the collection under test keeping only elements whose specified property or field named {@code propertyOrFieldName} is null.", "Filter the collection under test keeping only elements whose specified property or field named by {@code propertyOrFieldName} is null. However, it cannot be called with null argument directly due to the limitations of our soft assertions proxying mechanism. Instead, it uses an intermediate filtering step and returns a new list assert instance based on the filtered iterable.", "Filter the collection under test keeping only elements whose specified property or field named {@code propertyOrFieldName} is null.", "Filter the collection under test keeping only elements whose specified property or field named {@code propertyOrFieldName} is null. However, due to the soft assertions proxying mechanism, calling filteredOn(propertyOrFieldName, null) is not supported. Instead, use filter(actual).with(propertyOrFieldName, null).get() and create a newListAssertInstance from the resulting Iterable."]}
{"SampleId": 1135007, "Origin": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given coreName.", "Reference": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given blobName.", "LLMCandidates": ["This method deletes all blobs prefixed by the given blobName from the BlobStore.", "This method sends a request to the BlobStore and gets a list of all blob files summaries prefixed by the given blobName.", "This method sends a request to the BlobStore and gets a list of all blob files summaries prefixed by the given blobName.", "Deletes all blobs with the given blobName from the BlobStore by sending a request to the BlobStore and getting a list of all blob file summaries prefixed by the given blobName.", "This method sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName."]}
{"SampleId": 2624584, "Origin": "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s.", "Reference": "Creates a new HTTP authorization {@link HttpService} decorator using the specified\n{@link Authorizer}s.", "LLMCandidates": ["Creates a new HTTP authorization function decorator using the specified Authorizers.", "Creates a new HTTP authorization function decorator using the specified Authorizers.", "Creates a new HTTP authorization function decorator using the specified Authorizers.", "Creates a new HTTP authorization function decorator using the specified Authorizer iterable.", "Creates a new HTTP authorization function decorator using the specified Authorizer iterable."]}
{"SampleId": 2034558, "Origin": "Method that returns code to access a named state parameter.", "Reference": "Method that returns code to access a named prop parameter.", "LLMCandidates": ["Method that returns code to access a named property variable.", "Method that returns code to access a named property variable.", "Method that returns code to access a named property variable.", "Method that returns code to access a named property variable.", "Method that returns code to access a named property variable."]}
{"SampleId": 5433545, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link Options#noComment} is set to true."]}
{"SampleId": 2404072, "Origin": "Executes {@link Pems#privateKeySpec(InputSupplier)} on the string which contains an encoded private key in PEM\nformat.", "Reference": "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM\nformat.", "LLMCandidates": ["Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format.", "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format.", "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format.", "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format.", "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format."]}
{"SampleId": 4233858, "Origin": "Verify that at most {@code maxEntries} per session can be put in the cache", "Reference": "Verify that at most {@code maxEntries} per session can be put in the store", "LLMCandidates": ["Verify that at most {@code maxEntries} entries can be added to a session context in the cache", "Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache.", "Verify that at most {@code maxEntries} entries can be added to a session context in the cache"]}
{"SampleId": 1449477, "Origin": "Creates RedeemData for P2PKH or P2PK input.", "Reference": "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "LLMCandidates": ["Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input."]}
{"SampleId": 1131869, "Origin": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed", "Reference": "Return a new {@link Terms} in which terms for the {@code coreNodeName} are removed", "LLMCandidates": ["Return a new Terms in which terms of either {@code coreNodeName} or its recoveringTerm are removed.", "Return a new Terms object with the term of coreNodeName or recoveringTerm(coreNodeName) removed from the current Terms object.", "Return a new Terms object with the term of coreNodeName or recoveringTerm(coreNodeName) removed", "Return a new Terms object with the term of either coreNodeName or its recoveringTerm removed from the current Terms object.", "Returns a new Terms object with the term of coreNodeName or recoveringTerm(coreNodeName) removed from the current map. If both keys do not exist in the map, null will be returned."]}
{"SampleId": 239880, "Origin": "Typically used for RPCs\nat best efforts (e.g., async cache).", "Reference": "This method is typically used for RPCs\nproviding best efforts (e.g., async cache).", "LLMCandidates": ["This method sends a ProtoMessage asynchronously without waiting for a response. It is typically used for RPCs with best effort reliability (e.g., async cache).", "This method sends a message without waiting for a response. It's typically used for RPCs at best efforts.", "Method for sending a message asynchronously without waiting for response. Typically used for RPCs at best efforts.", "This method is used to send a ProtoMessage without waiting for a response or handling any potential exceptions. It is typically utilized in RPCs at best efforts (e.g., async cache).", "Used for RPCs with a fire-and-forget strategy."]}
{"SampleId": 5149993, "Origin": "Create an initial optimistic locking value according the {@link VersionType}\ncontract for the version property if required and inject it into\nthe snapshot state.", "Reference": "Create an initial optimistic locking value according the {@link VersionSupport}\ncontract for the version property if required and inject it into\nthe snapshot state.", "LLMCandidates": ["Create an initial optimistic locking value according to the {@link VersionDescriptor} contract for the given version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according to the {@link VersionDescriptor} contract for the specified version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according to the {@link VersionType} contract for the given version descriptor's position in the snapshot state if required and inject it into the snapshot array.", "Set an initial optimistic locking value according to the given VersionDescriptor and the {@link VersionType} contract for the specified version property if required, and inject it into the snapshot state.", "Create an initial optimistic locking value according to the given VersionDescriptor and the {@link VersionType} contract for the version property if required, and inject it into the snapshot state."]}
{"SampleId": 4850223, "Origin": "Returns the number of allowed parallel requests the configured {@link Router} should adhere to.", "Reference": "Returns the currently configured {@link ExchangeStrategies}.", "LLMCandidates": ["Returns the instance of ExchangeStrategies used by this object.", "Returns the instance of ExchangeStrategies that represents the exchange strategies to be used for trading operations.", "Returns the instance of ExchangeStrategies used by this object.", "Returns the instance of ExchangeStrategies object.", "Returns the instance of ExchangeStrategies object."]}
{"SampleId": 5079050, "Origin": "Checks that collection {@param col} doesn't contains string {@param str}.", "Reference": "Checks that collection {@param col} doesn't contains element {@param str}.", "LLMCandidates": ["Checks that collection {@param col} doesn't contain element {@param elem} of type {@code T}.", "Checks that collection {@param col} doesn't contain element {@param elem}.", "Checks that collection {@param col} doesn't contain element of type {@param T} {@param elem}.", "Checks that collection {@param col} doesn't contain element {@param elem} of type {@code T}.", "Checks that collection {@param col} doesn't contain element {@param elem} of type T."]}
{"SampleId": 5442858, "Origin": "Return the initial pixel size used to define initial arrays\n(tile AA chunk, alpha line, buckets)", "Reference": "Return the initial pixel height used to define initial arrays\n(buckets)", "LLMCandidates": ["Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)"]}
{"SampleId": 4117755, "Origin": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without an inetAddress is valid or not.", "Reference": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without a host is valid or not.", "LLMCandidates": ["It is up to the Authenticator implementation processing this token if a host without an InetAddress is valid or not.", "Sets the host value passed as argument. It is up to the Authenticator implementation processing this method if an authentication attempt without a host is valid or not.", "Sets the host value. It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not.", "It is up to the Authenticator implementation processing this String (host) if an authentication attempt without it is valid or not.", "Set the host value for this object. It is up to the Authenticator implementation processing this object if a host without an InetAddress is valid or not."]}
{"SampleId": 2988281, "Origin": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example.", "Reference": "(Also, useful because the granularity\nof the clock on some systems is low, so doing a Thread.sleep(10) may not give you a different clock value", "LLMCandidates": ["This method waits for a clock tick with a more fine-grained granularity than before. The new implementation checks the clock every 100 milliseconds instead of 1 millisecond.", "Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value in milliseconds, for example.", "This method waits for a clock tick with a higher granularity than Thread.sleep(1). Useful when dealing with systems having low clock resolution.", "This method waits for a clock tick by checking if the current time in seconds has changed since the last check.", "This method waits for a clock tick with a granularity of 100 milliseconds, which may be necessary on some systems where the clock's granularity is low."]}
{"SampleId": 340520, "Origin": "Sets {@link MediaItem2} object to render using VideoView2.", "Reference": "Sets {@link MediaItem} object to render using VideoView2.", "LLMCandidates": ["Sets the MediaItem object to render using VideoView.", "Sets the MediaItem object to render using VideoView.", "Sets the MediaItem object to render using VideoView instead of MediaItem2.", "Sets the MediaItem object to render using VideoView instead of MediaItem2.", "Sets the MediaItem object to render using VideoView."]}
{"SampleId": 3579668, "Origin": "Otherwise,\nthe specified consumer is invoked with the leader index metadata fetched from the remote cluster.", "Reference": "Otherwise, the specified consumer is invoked with the cluster state and leader index metadata\nfetched from the remote cluster.", "LLMCandidates": ["This method checks the remote cluster license, fetches the leader index metadata and history UUIDs, and optionally, fetches nodes from a remote Elasticsearch cluster. The specified consumer is invoked with a Tuple containing the ClusterState and IndexMetaData.", "This method checks the remote cluster license and fetches the leader index metadata and history UUIDs from the specified remote Elasticsearch cluster. If the leader index exists in the remote cluster and the current user has required privileges, the consumer is invoked with a tuple of the remote ClusterState and IndexMetaData. Otherwise, an exception is passed to the onFailure consumer. The boolean flag 'fetchNodes' determines whether to fetch nodes information along with metadata.", "Otherwise, the specified consumer is invoked with a Tuple<ClusterState, IndexMetaData> containing the remote cluster state and leader index metadata.", "Otherwise, the specified consumer is invoked with the leader index metadata and cluster state fetched from the remote cluster.", "This method fetches the leader index metadata and history UUIDs from a remote Elasticsearch cluster, checks for remote license compliance, and invokes the specified consumer with the ClusterState and IndexMetaData. The remote cluster state, including nodes information (if `fetchNodes` is true), is also retrieved."]}
{"SampleId": 368454, "Origin": "Returns true if the currently set key guard matches our minimum quality requirements.", "Reference": "Returns true if the currently set key guard violates our minimum quality requirements.", "LLMCandidates": ["Returns true if the currently set password for the user meets our minimum quality requirements.", "Checks if the currently set active password for the user meets the minimum quality requirements. Returns true if it does.", "Checks if the currently set active password meets or exceeds the minimum quality requirements for the user.", "Checks if the currently set active password for the user meets the minimum quality requirements.", "Checks if the currently set active password for the user meets the minimum quality requirements."]}
{"SampleId": 2939584, "Origin": "It incorporates the zone, bulb type and command\ncategory.", "Reference": "It incorporates the bridge, zone, bulb type and command\ncategory.", "LLMCandidates": ["Calculates the unique identifier by incorporating the bridgeOffset, config.zone, typeOffset and commandCategory.", "This method calculates the unique identifier by incorporating the bridgeOffset, config.zone, typeOffset, and commandCategory.", "Incorporates the bridgeOffset, config.zone, typeOffset, and command category.", "This method calculates and returns a unique identifier for a command based on the bridge offset, config zone, type offset, and command category.", "This method incorporates the bridgeOffset, config.zone, typeOffset, and command category."]}
{"SampleId": 1706012, "Origin": "Restore redundancy with backoff.", "Reference": "Restore redundancy with an exponential backoff.", "LLMCandidates": ["Restore redundancy with backoff using a supplier and returning the result of tryRestoreRedundancyAndMergeSegments}}\n\nThis method attempts to restore redundancy by calling tryRestoreRedundancyAndMergeSegments, using RestorationExponentialBackOff for backoff if necessary. It now returns a boolean value indicating the success or failure of the operation.", "Restore redundancy with exponential backoff. Returns a boolean value indicating if the restoration was successful.", "Restores redundancy with backoff using exponential backoff and returns a boolean indicating success or failure.", "Restores redundancy with backoff using exponential backoff and returns a boolean indicating success or failure.", "Restores redundancy with backoff using exponential backoff and returns a boolean indicating success."]}
{"SampleId": 4479778, "Origin": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, URI)}", "Reference": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)}", "LLMCandidates": ["Generates a code sample for using FileClient#uploadRangeFromUrl(long offset, long length, long position, String sourceUrl)", "Generates a code sample for using FileClient#uploadRangeFromUrl(long, long, long, String)", "Generates a code sample for using FileClient#uploadRangeFromUrl(long offset, long length, long position, String sourceUrl)", "Generates a code sample for using FileClient#uploadRangeFromUrl(long offset, long length, long position, String sourceUrl)", "Generates a code sample for using FileClient#uploadRangeFromUrl(long, long, long, String)"]}
{"SampleId": 3731150, "Origin": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "Reference": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns {@code null}.", "LLMCandidates": ["If typeVar is a captured wildcard, returns that WildcardType; otherwise returns null.", "If typeVar represents a captured wildcard, returns that wildcard; otherwise returns null.", "If typeVar is a captured wildcard with a CapturedType annotation, returns that wildcard's WildcardType; otherwise returns null.", "If typeVar represents a captured wildcard type, returns that WildcardType; otherwise returns null.", "If typeVar represents a captured wildcard type, returns that wildcard; otherwise returns null."]}
{"SampleId": 2543276, "Origin": "Set this quaternion to be a representation of the supplied axis and\nangle (in radians).", "Reference": "Set this quaternion to be a representation of the supplied axis and\nangle (in degrees).", "LLMCandidates": ["Set this quaternion to be a representation of the supplied axis and angle (in degrees). The angles are converted to radians before being used in the calculation.", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees).", "Set this quaternion to be a representation of the supplied axis and angle (in degrees).", "Sets this quaternion to be a representation of the supplied axis and angle (in degrees)."]}
{"SampleId": 437253, "Origin": "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link\nPCollection}.", "Reference": "Like {@link #readGenericRecords(Schema)}, but for a {@link PCollection} of {@link", "LLMCandidates": ["Reads a collection of Avro generic records using the given schema and sets the desired bundle size to a default value. Like {@link #readGenericRecords(Schema)}.", "Like {@link #readGenericRecords(Schema)}, but reads each GenericRecord from the input {@link PCollection} using the given schema. The desired bundle size is now set to a default value.", "reads each GenericRecord from the input PCollection using the provided Schema and sets the desired bundle size to the default value. Similar to {@link #readGenericRecords(Schema)}.", "Reads a collection of Avro GenericRecords from input PCollection using the provided schema, and returns a ReadAll object. Similar to {@link #readGenericRecords(Schema)}, but reads each filepattern in the input PCollection.", "Returns a ReadAll object for reading GenericRecord data from files matched by the input PCollection, using the provided schema."]}
{"SampleId": 6310269, "Origin": "Returns the whitelisted regular expressions.", "Reference": "Returns the white regular expressions.", "LLMCandidates": ["Returns the array of whitelisted regular expressions.", "Returns the array of whitelisted regular expressions.", "Returns the array of whitelisted regular expressions.", "Returns the array of whitelisted regular expressions.", "Returns the whitelisted regular expressions as an array."]}
{"SampleId": 613054, "Origin": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph or merge the resource consumed by state backend.", "Reference": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph.", "LLMCandidates": ["Used by system internally to merge the other resources of chained operators when generating the job graph or merging the resource consumed by state backend. Specifically, it adds the CPU cores, heap memory (now taskHeapMemory and taskOffHeapMemory), on-heap managed memory, off-heap managed memory of this resource specification to those of the other resource specification. Additionally, it puts all extended resources from the other resource specification into the target resource specification and merges any conflicts.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merging the resource consumption of state backends. The cpuCores, heap memory (taskHeapMemory and taskOffHeapMemory), and managed memory (onHeapManagedMemory and offHeapManagedMemory) are merged accordingly.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merging the resources consumed by state backend. The merged ResourceSpec object includes the sum of cpuCores, heapMemory (the sum of taskHeapMemory and taskOffHeapMemory), managedMemory (the sum of onHeapManagedMemory and offHeapManagedMemory).", "Used by system internally to merge the other resources of chained operators when generating the job graph or merging the resource consumed by state backend. The cpuCores, taskHeapMemory, taskOffHeapMemory, onHeapManagedMemory, and offHeapManagedMemory are added together from this and other ResourceSpec objects. Additionally, extendedResources are merged using the merge method for each individual resource with the same name in the other ResourceSpec object.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merging the heap memory and off-heap memory consumed by state backends."]}
{"SampleId": 2911559, "Origin": "Adds a single sensitivity to the builder using metadata.", "Reference": "Adds a single sensitivity to the builder.", "LLMCandidates": ["Adds a single sensitivity with specified currency to the builder using metadata.", "Adds a sensitivity with given metadata and currency to the builder for the specified CurveSensitivitiesType and CurveName.", "Adds a sensitivity with given metadata and currency to the builder for the specified curve type.", "Adds a sensitivity with given metadata and currency to the builder for the specified curve type.", "Adds a single sensitivity with given Currency to the builder using metadata."]}
{"SampleId": 3653159, "Origin": "Creates a Course object and an Instructor object for the Course.", "Reference": "Creates a course and an associated instructor for the course.", "LLMCandidates": ["Creates a Course object with given attributes and an Instructor object for the Course using the provided instructor Google ID.", "Creates a Course object with given attributes and an Instructor object for the Course using the provided instructor Google ID.", "Creates a Course object with given attributes and an Instructor object for the Course with the provided instructor Google Id.", "Creates a Course object with given attributes and an Instructor object for the Course using the provided instructor Google ID.", "Creates a Course object with given attributes and an Instructor object for the Course with the provided instructor Google Id."]}
{"SampleId": 5240878, "Origin": "Indicates if the display name of the XRY meta key is a recognized type.", "Reference": "Indicates if the display name of the XRY key is a recognized type.", "LLMCandidates": ["Determines if the given name corresponds to any recognized XRY meta key.", "checks if the given name is a recognized XRY meta key display name.", "Checks if the given name corresponds to any XRY meta key constant. If yes, returns true; otherwise, returns false.", "Checks if the given name corresponds to an existing XRY meta key", "Checks if the given name corresponds to an existing XRY meta key"]}
{"SampleId": 2217816, "Origin": "Test of var method, of class BinomialDistribution.", "Reference": "Test of variance method, of class BinomialDistribution.", "LLMCandidates": ["Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution."]}
{"SampleId": 2133792, "Origin": "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "Reference": "bold driver: Gemulla et al., Large-times matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "LLMCandidates": ["/**\n * Update the learning rate based on the current iteration and other factors.\n * <p>\n * If the learning rate is negative, no update is performed and the last loss is saved.\n * <p>\n * If isBoldDriver is true and the iteration is greater than 1, the learning rate is adjusted based on the difference between the current and previous losses.\n * <p>\n * Otherwise, if there is a constant decay, the learning rate is multiplied by the decay factor.\n * <p>\n * The learning rate is then limited to the maximum learnable rate.\n * <p>\n * Ref: {@link Gemulla_et_al_KDD2011} for bold driver update and {@link Niu_et_al} for constant decay.\n */", "/**\n * Updates the learning rate based on the current iteration and other conditions. This method is inspired by the following research papers:\n * <p>\n * bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011.\n * constant decay: Niu et al, Hogwild!\n * </p>\n */", "```java\n/**\n * Update the learning rate based on the current iteration and other conditions.\n * \n * bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011.\n * constant decay: Niu et al, Hogwild!\n */\n```", "/**\n  * Update learning rate based on current iteration.\n  * <p>\n  * If isBoldDriver is true and the current iteration is greater than one, update learnRate using a fixed rule.\n  * Otherwise, decrease learnRate by a constant rate if decay is set and greater than zero.\n  * Finally, limit learnRate to maxLearnRate.\n  * <p>\n  * References:<br>\n  * bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011.<br>\n  * constant decay: Niu et al, Hogwild!\n  */", "/**\n * Updates the learning rate based on certain conditions.\n *\n * bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011.\n * constant decay: Niu et al, Hogwild!\n *\n * @param iter the current iteration number\n */"]}
{"SampleId": 2062875, "Origin": "With natural ordering,\n{@link Ordering#natural()} is returned.", "Reference": "Ordering#natural()} is returned.", "LLMCandidates": ["@Deprecated With natural ordering, {@link Ordering#natural()} is returned.", "@Deprecated\nWith natural ordering,\n{@link Ordering#natural()} is returned.\nNote: This method is deprecated and may be removed in a future release. Use {@link #comparator(Comparator)} instead.", "With natural ordering, @Deprecated {@link Ordering#natural()} is returned.", "@Deprecated With natural ordering, {@link Ordering#natural()} is returned.", "@Deprecated\nWith natural ordering, {@link Ordering#natural()} is returned."]}
{"SampleId": 2404068, "Origin": "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM\nformat.", "Reference": "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM\nformat.", "LLMCandidates": ["Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format."]}
{"SampleId": 4004239, "Origin": "This method schedules the disablement for asynchronous execution.", "Reference": "This method deactivates and disables the component immediately.", "LLMCandidates": ["Performs the disablement of this component directly without scheduling for asynchronous execution.", "This method directly disables the component without scheduling it for asynchronous execution.", "This method directly disables the component without scheduling it for asynchronous execution.", "This method directly disables the component without scheduling it for asynchronous execution.", "This method disables the component asynchronously by directly calling the disableInternal method without scheduling an task."]}
{"SampleId": 5588757, "Origin": "Switch to the given page, update the highlighted episode.", "Reference": "Switch to the episode at the given position.", "LLMCandidates": ["Set the current page and update the view if in single pane mode", "Set the current page and update the view if in single pane mode.", "Set the current page and update the view if in single pane mode.", "Set the current page and update the view if in single pane mode.", "Set the current page and update the view if in single pane mode."]}
{"SampleId": 1968999, "Origin": "Repairs the metadata table.", "Reference": "Repairs the schema history table.", "LLMCandidates": ["Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table."]}
{"SampleId": 3629275, "Origin": "Returns an immutable list containing three elements.", "Reference": "Returns an unmodifiable list containing three elements.", "LLMCandidates": ["Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements."]}
{"SampleId": 3306952, "Origin": "Sets SSLHostConfig infos.", "Reference": "Sets SslHostConfig infos.", "LLMCandidates": ["Sets SSLHostConfigInfos (instead of infos) for this object.", "Sets the SSLHostConfigInfos list.", "Sets the SSLHostConfigInfos list.", "Sets the SSLHostConfigInfos list.", "Sets the SSLHostConfigInfos list."]}
{"SampleId": 3629303, "Origin": "See Immutable Set Static Factory Methods for details.", "Reference": "See Unmodifiable Sets for details.", "LLMCandidates": ["See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details."]}
{"SampleId": 2404091, "Origin": "Sets the CSS pages for the Static Website.", "Reference": "Sets the listings CSS page for the Static Website.", "LLMCandidates": ["Sets the CSS pages for the Static Website using the given key (STATIC_WEB_LISTINGS_CSS).", "Sets the CSS pages for the Static Website using the given key (STATIC_WEB_LISTINGS_CSS).", "Sets the CSS pages for the Static Website using the given key (STATIC_WEB_LISTINGS_CSS).", "Sets the CSS pages for the Static Website using the given key (STATIC\\_WEB\\_LISTINGS\\_CSS).", "Sets the CSS pages for the Static Website using the given key (STATIC\\_WEB\\_LISTINGS\\_CSS)."]}
{"SampleId": 4002573, "Origin": "Returns a literal for the {@link Reference} policy.", "Reference": "Returns a literal for the {@link ScrService.Reference} policy.", "LLMCandidates": ["Returns a literal for the ScrService.Reference policy.", "Returns a literal for the ScrService.Reference policy.", "Returns a literal for the ScrService.Reference policy.", "Returns a literal for the ScrService.Reference policy.", "Returns a literal for the ScrService.Reference policy."]}
{"SampleId": 3772633, "Origin": "Expands the given row.", "Reference": "Expands the given item at given index.", "LLMCandidates": ["Expands the given item in the tree.", "Expands the given item if it is not already expanded. If successful, it will add the new rows to the mapper and refresh the item.", "Expands the given item in the tree.", "Expands the given item in the tree.", "Expands the given item and possibly adds its children to the cache if it is not already expanded."]}
{"SampleId": 340561, "Origin": "Sets playback rate using {@link PlaybackParams2}.", "Reference": "Sets playback rate using {@link PlaybackParams}.", "LLMCandidates": ["Sets playback params using given {@link PlaybackParams}.", "Sets playback params using {@link PlaybackParams}.", "Sets playback params using {@link PlaybackParams}.", "Sets playback params using {@link PlaybackParams", "Sets playback params using {@link PlaybackParams"]}
{"SampleId": 4617700, "Origin": "Adds the specified argument as XQuery string.", "Reference": "Adds the specified argument unchanged.", "LLMCandidates": ["Adds the specified argument as a string to the command builder if it is not null.", "Sets the command argument at specified index as a space-separated value in the command builder.", "Sets the command argument at specified index as a space-separated value in the command builder.", "Adds the specified argument as a string to the command builder if it is not null.", "Appends the specified argument as a string, if it is not null."]}
{"SampleId": 6043581, "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?", "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?", "LLMCandidates": ["Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId, parentFolderId are also specified.", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ?, parentFolderId = ?.", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId and parentFolderId are also specified.", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId and parentFolderId are also specified.", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ?, parentFolderId = ?"]}
{"SampleId": 2913863, "Origin": "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to\nthe average of the smallest 99% of the observations.", "Reference": "This is measured from the bottom, that is, Thus the expected shortfall with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["This method computes the expected shortfall at a given level from the sorted sample. It returns the value obtained from the expectedShortfallResultFromUnsorted method applied to the input level and sortedSample.", "This method computes the expected shortfall at a given level from the sorted sample data. The result is obtained by getting the value of expectedShortfallResultFromUnsorted(level, sortedSample).", "This method calculates the expected shortfall at a given level from the sorted input sample using the result of the method \"expectedShortfallResultFromUnsorted\".", "Measures the expected shortfall at a given level from the sorted sample by retrieving the result of the unsorted method and obtaining its value. The level corresponds to the percentage of observations below which the expected shortfall is calculated.", "This method calculates the expected shortfall at a given level from the sorted sample using the result of expectedShortfallResultFromUnsorted method."]}
{"SampleId": 3652786, "Origin": "The base URL will be the application URL.", "Reference": "The base URL will be the application back-end URL.", "LLMCandidates": ["Generates the URL for backend application with the given relative path.", "Returns the URL for the backend application with the given relative path.", "Returns the URL for the backend application with the given relative path.", "Returns the URL for the backend application with the given relative path.", "This method returns a new AppUrl object by appending the given relativeUrl to the base URL, which is now named APP_URL_BACKEND."]}
{"SampleId": 4863800, "Origin": "Atomically updates the current hi value with the results of\napplying the given delta, returning the updated value.", "Reference": "Atomically adds the given delta to the current hi value, returning the updated hi value.", "LLMCandidates": ["Atomically adds the given delta to the current hi value and returns the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value."]}
{"SampleId": 3562209, "Origin": "Returns the report builder for the rootmost component that contains any of the duplicate\nbindings.", "Reference": "Returns the report builder for the rootmost component that contains any of the {@code\nbindings}.", "LLMCandidates": ["Returns the report builder for the rootmost component that contains any of the bindings.", "Returns the report builder for the rootmost component that contains any of the given bindings.", "Returns the report builder for the rootmost component that contains any of the given bindings.", "Returns the report builder for the rootmost component that contains any of the given bindings.", "Returns the report builder for the rootmost component that contains any of the given bindings."]}
{"SampleId": 3906717, "Origin": "Centres this dialog on the main fame.", "Reference": "Centres this dialog on the parent window.", "LLMCandidates": ["Centres this dialog on its ancestor window.", "Centres this dialog on its ancestor window", "Centres this dialog on its ancestor window.", "Centres this dialog on its ancestor window.", "Centres this dialog on its ancestor window."]}
{"SampleId": 1790907, "Origin": "Gets the value of the source property.", "Reference": "Gets the value of the parameter property.", "LLMCandidates": ["Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property."]}
{"SampleId": 4465302, "Origin": "If an event\nlistener is assignable to {@link EventListener} it will registered as is.", "Reference": "If an event\nhandler is assignable to {@link EventMessageHandler} it will registered as is.", "LLMCandidates": ["If an event handler is assignable to {@link EventHandler} it will be registered.", "If an event handler is assignable to {@link EventHandler} it will be registered as is.", "If an event handler is assignable to {@link EventHandler} it will be registered as is.", "If an event handler is assignable to {@link EventHandler} it will be registered as is.", "If an event handler is assignable to {@link EventHandler} it will be registered as is."]}
{"SampleId": 4239806, "Origin": "use_credentials: Cross-origin CORS requests for the element will have the credentials flag set.", "Reference": "USE_CREDENTIALS: Cross-origin CORS requests for the element will have the credentials flag set.", "LLMCandidates": ["Sets the value of crossOrigin for this object.}\n\nuse_credentials: Cross-origin CORS requests for the element will have the credentials flag set. (No changes needed in this line)", "Sets the value of crossOrigin for this object.", "Sets the cross-origin configuration with the given Cors object.\nuse_credentials: Cross-origin CORS requests for the element will have the credentials flag set.}\n\n{Sets the crossOrigin property with the given Cors object.\nuse_credentials: Cross-origin CORS requests for the element will have the credentials flag set.", "Sets the value of crossOrigin for this object.", "Sets the value of crossOrigin for this object."]}
{"SampleId": 3081518, "Origin": "Allocates an array of the specified length in unmanaged memory to hold references to objects\non the Java heap.", "Reference": "Allocates an array of the specified length to hold references to objects on the Java heap.", "LLMCandidates": ["Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap. The method name has been changed from createUnmanagedObjectArray to createObjectArray.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap. The method name has been changed from \"createUnmanagedObjectArray\" to \"createObjectArray\".", "Allots an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap. The method name has been changed from \"createUnmanagedObjectArray\" to \"createObjectArray\".", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap. The method name has been changed from \"createUnmanagedObjectArray\" to \"createObjectArray\"."]}
{"SampleId": 1351493, "Origin": "Nota: the defining points are meant to be the extrema points inside the ribbon.", "Reference": "Nota: the defining points are meant to be the precise extrema Point2D values on the\nborders of the ribbon.", "LLMCandidates": ["// Generates a vertical ribbon with given width around the median Shape.\n// The defining points are meant to be the extrema points inside the ribbon.\n\n// Left line\npath.append(median.getPathIterator(AffineTransform.getTranslateInstance(-dx, 0)), false);\n\n// Right line (reversed)\npath.append(ReversePathIterator.getReversePathIterator(median, AffineTransform.getTranslateInstance(dx, 0)), true);\n\n// Close the path\npath.closePath();\n\nreturn new Area(path);", "```java\n// Note: the defining points are meant to be the extreme points inside the ribbon.\n```", "Nota: the defining points are meant to be the extrema points inside the ribbon. The half width is calculated and used for translating the shape for creating the left and right lines.", "Nota: The defining points are meant to be the extrema points inside the ribbon. The half width is adjusted by dx.", "// Generates a vertical ribbon around the given median Shape with the specified width\n\nNota: the defining points are meant to be the extrema points inside the ribbon. (Updated positions for translateInstance arguments)"]}
{"SampleId": 2337343, "Origin": "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Reference": "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "LLMCandidates": ["Customer lock status: * `false` - unlocked * `true` - locked  This property indicates whether the customer is locked or not. When set to `true`, all users of this customer will be blocked and cannot login anymore. (default: `false`)", "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore."]}
{"SampleId": 1878720, "Origin": "A comparison of document clustering techniques\nKDD workshop on text mining, 2000", "Reference": "A Comparison of Document Clustering Techniques\nKDD workshop on text mining.", "LLMCandidates": ["@Reference(authors = \"M. Steinbach, G. Karypis, V. Kumar\", //\n  title = \"A Comparison of Document Clustering Techniques\", //\n  booktitle = \"KDD workshop on text mining. Vol. 400. No. 1\", //\n  url = \"http://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\", //\n  bibkey = \"conf/kdd/SteinbachKK00\")\n\n  /**\n   * Computes the F1 measure for document clustering results.\n   */\n  public double f1Measure() {\n    return Util.f1Measure(purity(), inversePurity());\n  }", "@Reference(authors = \"M. Steinbach, G. Karypis, V. Kumar\", //\n          title = \"A Comparison of Document Clustering Techniques\", //\n          booktitle = \"KDD workshop on text mining. Vol. 400. No. 1\", //\n          url = \"http://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\", //\n          bibkey = \"conf/kdd/SteinbachKK00\")\n     public double f1Measure()}\n     // A Comparison of Document Clustering Techniques\n     // KDD workshop on text mining, 2000", "@Reference(authors = \"M. Steinbach, G. Karypis, V. Kumar\", //\n      title = \"A Comparison of Document Clustering Techniques\", //\n      booktitle = \"KDD workshop on text mining. Vol. 400. No. 1\", //\n      url = \"http://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\", //\n      bibkey = \"conf/kdd/SteinbachKK00\")\n  \n  /**\n   * Compute the F1-measure for document clustering result\n   */\n  public double f1Measure() {\n    return Util.f1Measure(purity(), inversePurity());", "@Reference(authors = \"M. Steinbach, G. Karypis, V. Kumar\", //\n              title = \"A Comparison of Document Clustering Techniques\", //\n              booktitle = \"KDD workshop on text mining. Vol. 400. No. 1\", //\n              url = \"http://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\", //\n              bibkey = \"conf/kdd/SteinbachKK00\")\n            public double f1Measure() {\n              return Util.f1Measure(purity(), inversePurity());\n            }\n          }\n\n          A Comparison of Document Clustering Techniques\n          KDD workshop on text mining, 2000", "@Reference(authors = \"M. Steinbach, G. Karypis, V. Kumar\", //\n      title = \"A Comparison of Document Clustering Techniques\", //\n      booktitle = \"KDD workshop on text mining. Vol. 400. No. 1\", //\n      url = \"http://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\", //\n      bibkey = \"conf/kdd/SteinbachKK00\")\n\n A comparison of document clustering techniques\n KDD workshop on text mining, 2000"]}
{"SampleId": 437086, "Origin": "Doesn't support date types.", "Reference": "Doesn't support date types or structs.", "LLMCandidates": ["Converts a TableRow to a Row using the provided Schema, without requiring a TableSchema object. Previously, this method also accepted a TableSchema argument but it is now being deprecated in favor of this function due to redundancy and serialization issues with TableSchema objects.", "This function converts a TableRow to a Row using the given Schema without requiring a TableSchema. It no longer supports accessing BQSchema in this method due to redundancy and serializability concerns.", "This function attempts to convert TableRows without requiring the corresponding TableSchema due to redundant information and difficulty of serialization. It does not support date types in the Schema object.", "This function converts a TableRow into a Beam Row object without requiring a TableSchema. It supports all data types except for date types.", "This function converts a TableRow into a Row object based on the provided Schema, without requiring a TableSchema. It does not support date types and is an alternative to the deprecated toBeamRow(Schema, TableSchema, TableRow) function."]}
{"SampleId": 5749488, "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#start()}.", "LLMCandidates": ["Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a new instance of RemoteCacheManager(false) as an argument instead of (true).", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a new instance of RemoteCacheManager initialized with the argument 'false'.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a newly initialized RemoteCacheManager (false for autostart).", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()} with a new instance of RemoteCacheManager initialized with false parameter.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}. Initializes a new instance of {@code RemoteCacheManager} with an argument of false before starting the {@code SpringRemoteCacheManager}."]}
{"SampleId": 3270305, "Origin": "Returns the expression node to the left of the \"::\" if it exists.", "Reference": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "LLMCandidates": ["Returns the expression node to the left of the \"::\" if it exists, except when the node is an instance of ASTAmbiguousName, in which case null is returned.", "Returns the expression node to the left of the \"::\", unless it is an ambiguous name.", "Returns the expression node to the left of the \"::\", unless it is an ambiguous name.", "Returns the expression node to the left of the \"::\", unless it is an ambiguous name", "Returns the expression node to the left of the \"::\", unless it is an ambiguous name, in which case returns null."]}
{"SampleId": 1678724, "Origin": "Execute function for each chunk of arguments.", "Reference": "Execute function for each chunk of arguments and collect the result.", "LLMCandidates": ["Apply processor function to each chunk of given arguments with specified group size.", "Process each chunk of arguments by applying the given function.", "Apply the processor function to each chunk of arguments, adding the results to a new list.", "Apply function processor to each chunk of arguments with given group size.", "Apply function processor to each chunk of arguments with given group size."]}
{"SampleId": 5241596, "Origin": "Runs a process using a custom timeout and a process terminator.", "Reference": "Runs a process using a custom termination check interval and a process\nterminator.", "LLMCandidates": ["Runs a process using a custom termination check interval and a process terminator.", "Runs a process with custom termination check interval using a process terminator.", "Runs a process with custom termination check interval using a process terminator.", "Runs a process with custom termination check interval using a process terminator.", "Runs a process using a custom termination check interval and a process terminator."]}
{"SampleId": 4117756, "Origin": "(Shiro's default Authenticator\nallows null IPs to support localhost and proxy server environments).", "Reference": "(Shiro's default Authenticator allows null hosts to support localhost and proxy server environments).", "LLMCandidates": ["Returns the value of the host string.", "This method returns the host name associated with this Authenticator.}\n\n(No need to mention IPs or Shiro's default Authenticator in the comment since the method signature and return type have changed.)", "This method returns the host name of the object.}\n\n(Note: The original method returned an InetAddress object and has been renamed and modified to return a String representing the host name.)", "This method returns the host string associated with this Authenticator.}\n\n(Note: Previously returned InetAddress object is now replaced with a String representing the host.)\n\n(Shiro's default Authenticator\nallows null hosts to support localhost and proxy server environments).", "This method returns the host name associated with this Authenticator."]}
{"SampleId": 2615599, "Origin": "Adds an actor as a child of this group, immediately after another child actor.", "Reference": "If the\nactor is already a child of this group, no changes are made.", "LLMCandidates": ["Adds an actor as a child of this group, immediately after another existing child actor. Checks if the given actor already is a child before adding.", "Adds an actor as a child of this group, immediately after another existing child actor. Checks if the given actor is already a child before adding it.", "Adds an actor as a child of this group, immediately after another existing child actor. Checks if the given actor is already a child before adding it.", "Adds an actor as a child of this group, immediately after another specified child actor. Checks if the given actor already is a child before adding it.", "Adds an actor as a child of this group, immediately after another specified child actor. Checks if the given actor already has a parent and if it is not the current group; if so, removes it from its previous parent before adding it to this group."]}
{"SampleId": 616737, "Origin": "TODO: If an input result partition of an involved region is not available, i.e.", "Reference": "If an input result partition of an involved region is not available, i.e.", "LLMCandidates": ["If an input result partition of a given failed region is not available, visit and add its producer region to the list of regions to restart}}\n\nThis updated comment describes the new functionality added to the getRegionsToRestart method. It explains that if an input result partition of a given failed region is unavailable, then the method will visit and add the producer region of that partition to the list of regions to restart.", "If an input result partition of a region involved in the failure is not available, then that region and all its consumer regions will be added to the list of regions to restart.", "If an input result partition of a involved region is not available, i.e. its producer region will be added to the list of regions to restart.", "If an input result partition of a involved region is not available, i.e., its producer region should be added to the set of regions to restart", "If an input result partition of a involved region is not available, i.e., its producer region should be added to the list of regions to restart."]}
{"SampleId": 1880564, "Origin": "Use {@link #destroyToNaiveMatrix()} if you do not need further\nupdates.", "Reference": "Use {@link #destroyToPopulationMatrix()} if you do not need further\nupdates.", "LLMCandidates": ["Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Constructs a population matrix using the elements array and the weight sum wsum. Use {@link #destroyPopulationMatrix()} if you do not need further updates.", "Uses this method to create a population matrix based on current elements and weights (wsum). If wsum is less than or equal to zero, an IllegalStateException will be thrown.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates."]}
{"SampleId": 1095693, "Origin": "This method currently handles\nevents for the classname combo box.", "Reference": "This method currently handles\nevents for the classname JLabeledChoice", "LLMCandidates": ["This method handles events for the class name labeled choice.", "This method currently handles events for the class name labeled choice.", "This method currently handles events for the class name labeled choice.", "Handles events for the classname labeled choice component.", "Handles events for the classname labeled choice component."]}
{"SampleId": 4622144, "Origin": "Waits until the query with the specified id has been started.", "Reference": "Waits until a very slow query has been started.", "LLMCandidates": ["Waits for the specified query to become active", "Waits until the query with the unspecified id has been started.", "Waits until the query with the unspecified id has been started.", "Waits until the specified query is started", "Waits until the specified query is started"]}
{"SampleId": 3566648, "Origin": "{@code handshake} will be null and {@code throwable} will be non-null in the case of a\nfailed TLS connection attempt.", "Reference": "{@code handshake} will be null and {@code ioe} will be non-null in the case of a\nfailed TLS connection attempt.", "LLMCandidates": ["@code ioe} will be non-null in the case of a failed TLS connection attempt. The {@code handshake} parameter may still be null.", "@code ioe} will be non-null in the case of a failed TLS connection attempt. The {@code handshake} parameter may still be null.", "@code ioe} will be non-null in the case of a failed TLS connection attempt. (fixed typo: ioexception -> IOException)", "@{code ioe} will be non-null in the case of a failed TLS connection attempt.", "@code ioe} will be non-null in the case of a failed TLS connection attempt.\n\n(Note: The variable name has been changed from \"throwable\" to \"ioe\" and its type has been changed from \"Throwable\" to \"IOException\")"]}
{"SampleId": 1314713, "Origin": "Creates an audit entry when a service definition is deleted.", "Reference": "Creates an audit entry when a API definition is deleted.", "LLMCandidates": ["Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted."]}
{"SampleId": 3493342, "Origin": "Schedules package actions differentiating their type among Linux and Solaris\nservers.", "Reference": "Schedules package actions.", "LLMCandidates": ["Schedules package actions for Linux servers based on the given criteria.", "Schedules package actions for Linux servers based on the given parameters.", "Schedules package actions for Linux servers based on the given parameters.", "Schedules package actions for Linux servers based on the provided parameters.", "Schedules package actions for Linux servers based on the provided parameters."]}
{"SampleId": 1327230, "Origin": "Returns the partition ID for the given key.", "Reference": "Returns the service ID for the given primitive ID.", "LLMCandidates": ["Returns the partition ID for the given key in the corresponding partition group based on the service ID and key.", "Returns the partition ID for the given key in the corresponding service.", "Returns the partition ID for the given key in the corresponding service.", "Returns the partition ID for the given key in the specified service.", "Returns the partition ID for the given key in the specified service."]}
{"SampleId": 2480730, "Origin": "Return the formatted string.", "Reference": "Return the formatted string in its current state.", "LLMCandidates": ["Returns the string representation of the text object.", "Returns the string representation of the text.", "Returns the string representation of the text object", "Returns the string representation of the text object", "Returns the string representation of the text"]}
{"SampleId": 5367566, "Origin": "If --all is specified, --interface won't be visible", "Reference": "If --all is specified, --entity won't be visible", "LLMCandidates": ["If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible"]}
{"SampleId": 1836978, "Origin": "Returns the raw binary representation of the handshake header.", "Reference": "Returns the raw binary representation of the handshake message.", "LLMCandidates": ["Generates and returns the byte array representation of the handshake message including the message header and optional fragment data.", "Generates a byte array representing the handshake message header, including the fixed-size header and the variable-length fragment if present.", "Generates the byte array representation of the handshake message, including the message header and fragment data if present.", "Generates the byte array representation of the handshake message, including both the fixed-size header and the variable-length fragment.", "Returns the byte array representation of the handshake message, which includes both the fixed-size header and the variable-length fragment."]}
{"SampleId": 4386708, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["Completes a multipart upload of an object using the given CompleteMultipartUploadRequest and returns the CompleteMultipartUploadResult. \n\nAccess Control Using AWS Identity and Access Management (IAM) is applied to this method call.", "completes a multipart upload operation using Amazon S3's CompleteMultipartUpload request and returns the CompleteMultipartUploadResult.\nAccess Control Using AWS Identity and Access Management (IAM) is applied to control access to this method.", "Completes a multipart upload using the provided CompleteMultipartUploadRequest and returns the CompleteMultipartUploadResult\n\nAccess Control Using AWS Identity and Access Management (IAM) for authorizing the method call.", "completes a multipart upload request using AWS Identity and Access Management (IAM) for access control.", "Completes a multipart upload of an object using the given request and returns the CompleteMultipartUploadResult. The AWSRequestMetrics are used for monitoring client execution time and request marshalling time."]}
{"SampleId": 125265, "Origin": "Sets the console script.", "Reference": "Sets the web server script.", "LLMCandidates": ["Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script."]}
{"SampleId": 2824496, "Origin": "Should return {@code null} for values that cannot be compared\nunder Comparability semantics.", "Reference": "Should return {@code Comparison.UNDEFINED} for values that cannot be compared\nunder Comparability semantics.", "LLMCandidates": ["Should return {@code Comparison.UNDEFINED} if either this or other value is undefined under the ternary comparison semantics. Otherwise, should return a defined comparison result.", "Should return {@code Comparison.UNDEFINED} if both values are undefined under ternary semantics. Otherwise, returns a comparison result based on unsafe comparison.", "Should return {@code Comparison.UNDEFINED} for values with undefined comparison semantics.", "Should return {@code Comparison.UNDEFINED} if either this or other are undefined under the ternary comparison semantics. Otherwise, returns a comparison result from {@link Comparison}.", "Should return {@code Comparison.UNDEFINED} if either this or other value is undefined under ternary comparison semantics. Otherwise, should return the result of comparing this to other using the {@link #unsafeCompareTo(Value)} method."]}
{"SampleId": 4479746, "Origin": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#URL-String}", "Reference": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String}", "LLMCandidates": ["@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String"]}
{"SampleId": 3325967, "Origin": "Backs up the subscriptions and bookmarks databases to external storage.", "Reference": "Backs up the databases to external storage.", "LLMCandidates": ["Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the Subscriptions, Bookmarks, PlaybackStatus, ChannelFiltering and SearchHistory databases to external storage.", "Backs up the SubscriptionsDb, BookmarksDb, PlaybackStatusDb, ChannelFilteringDb, and SearchHistoryDb databases to external storage."]}
{"SampleId": 234012, "Origin": "If the lock list is write locked, returns LockMode.WRITE.", "Reference": "If mode is read but the lock list is write locked, returns LockMode.WRITE.", "LLMCandidates": ["If the current lock mode is write locked, returns LockMode.WRITE.", "If the current lock mode is write locked, returns LockMode.WRITE.", "If the current lock mode is write locked, returns LockMode.WRITE.", "If the lock is write locked, returns LockMode.WRITE.", "If the lock is write locked, returns LockMode.WRITE."]}
{"SampleId": 6188983, "Origin": "Custom logic to only enable the configuration element as this is immutable and once the MuleContext is started we cannot change\nvalues.", "Reference": "MuleConfiguration for instance is immutable and once the MuleContext is started we cannot change its values.", "LLMCandidates": ["Enables MuleObjects based on a condition and checks for a specific transaction factory type within their definitions. The configuration element is still only enabled due to its immutability after the MuleContext has started.", "Enables MuleObjects based on a given condition, specifically for configuration objects. This method retrieves the minimal application model for a component with the identifier equal to CONFIGURATION_IDENTIFIER and checks if it has a TransactionManagerFactory class. If so, it sets the transactionFactoryType AtomicBoolean to true; otherwise, it remains false.", "Enables the configuration object by checking if its identifier matches a given value and visiting its type definition to check for TransactionManagerFactory presence.", "Enables the configuration object by checking if its identifier matches a given value and visiting its type definition to check for TransactionManagerFactory presence.", "Enables the specified Mule object based on its identifier. Checks for a specific type definition within the object and sets a flag accordingly."]}
{"SampleId": 3775230, "Origin": "If the new value is not equal to\n{@code getValue()}, fires a value change event.", "Reference": "If the new value is not equal to\n{@code getValue()}, fires a {@link ValueChangeEvent}.", "LLMCandidates": ["Sets the value of CheckBox by checking for nullity using Java 8 Objects.requireNonNull(...) before calling super.setValue(value). If the new value is not equal to the current value, a value change event will be fired.", "Sets the value of CheckBox with a Boolean argument. Throws an IllegalArgumentException if the value is null. Notifies value change event if new value is different from the current one.", "Sets the value of this CheckBox component with the given Boolean value. Throws an IllegalArgumentException if the value is null. After setting the value, fires a value change event if the new value is different from the previous one.", "Sets the value of the CheckBox object. Throws an IllegalArgumentException if the new value is null. Note that this method overrides the setValue method in the superclass and may result in firing a value change event if the new value is different from the current one.", "Sets the CheckBox value. Throws an IllegalArgumentException if the new value is null."]}
{"SampleId": 5763909, "Origin": "Gets a collection of bibentries and sets an ID for every entry.", "Reference": "Gets a collection of entries and sets an ID for every entry.", "LLMCandidates": ["Creates a new BibDatabase object and sets an ID for each entry in the given Collection of BibEntries. Then, inserts all entries into the database using the insertEntries method.", "Creates a new BibDatabase and sets an ID for each entry in the given Collection of BibEntries. Inserts all entries into the database using the insertEntries method.", "Creates a new BibDatabase object, sets an ID for each entry in the given collection and inserts all entries into the database.", "Creates a new BibDatabase object and sets an ID for each given BibEntry in the collection. Inserts all entries into the database using the insertEntries method instead of iterating through them individually.\n\nThis comment should reflect the changes made to the method, including its name, parameter type, return type, and the modification to the logic within the method. Keeping it as concise and clear as possible is essential, while maintaining the original intent of the Javadoc comment.", "Creates a new BibDatabase object and sets an ID for each BibEntry in the given Collection. Then, inserts all entries into the database."]}
{"SampleId": 3678294, "Origin": "Obtains an instance of {@code ZonedDateTime} from an {@code OffsetDateTime}.", "Reference": "Obtains an instance of {@code ZonedDateTime} from the instant formed by combining\nthe local date-time and offset.", "LLMCandidates": ["Obtains an instance of {@code ZonedDateTime} from a given {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}.", "Obtains an instance of {@code ZonedDateTime} from a given {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}.", "Obtains an instance of {@code ZonedDateTime} from a given {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}.", "Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime} and a {@code ZoneOffset}.", "Obtains an instance of {@code ZonedDateTime} from a given {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}."]}
{"SampleId": 336223, "Origin": "Called when a track info is deselected.", "Reference": "Called when a track is deselected.", "LLMCandidates": ["Called when a selected track is changed to an unselected one in the MediaController.\n\n @param controller The MediaController instance that the event originated from.\n @param trackInfo The TrackInfo object of the deselected track.", "Called when a selected track is changed to an unselected state. The given controller and trackInfo are valid and not null.", "Called when a selected track is changed to an unselected state in the media controller. Passed parameters are the MediaController object and TrackInfo of the deselected track.", "Called when a selected track is changed to an unselected state.\n\n @param controller The media controller that manages the playback of the media.\n @param trackInfo Information about the deselected track.", "Called when a track info is deselected. @NonNull implies that controller and trackInfo cannot be null."]}
{"SampleId": 340563, "Origin": "Gets current playback position as a {@link MediaTimestamp2}.", "Reference": "Gets current playback position as a {@link MediaTimestamp}.", "LLMCandidates": ["Gets current playback position as a MediaTimestamp.", "Gets current playback position as a MediaTimestamp.", "Gets current playback position as a MediaTimestamp.", "Gets current playback position as a MediaTimestamp.", "Gets current playback position as a MediaTimestamp."]}
{"SampleId": 1765423, "Origin": "Internal mapper to remember and add all types for the RecyclerView.", "Reference": "Internal mapper to remember and add all view types for the items.", "LLMCandidates": ["Maps a view type from an item to the internal map for remembering and adding all types for the RecyclerView.", "Maps a new viewType from an item to the internal map for storing RecyclerView types.", "Maps a view type to its corresponding instance for the RecyclerView.", "Maps a view type to its corresponding instance for the RecyclerView.", "Maps a viewType to its corresponding instance for RecyclerView."]}
{"SampleId": 3355672, "Origin": "They are not accessible in the handler provided as parameter.", "Reference": "They are NOT accessible in the handler provided as parameter.", "LLMCandidates": ["This method registers a WebSocket route with the given path, handler, and optional protocols. The handler is not directly accessible within this method.", "This method registers a WebSocket route with the given path, handler, and optional protocols. The handler function is applied when a WebSocket connection request is received for the specified path.", "This method registers a WebSocket route with the given path, handler, and optional protocols. The handler provided as parameter does not have access to the original WebsocketInbound and WebsocketOutbound instances directly.", "The handler provided as parameter does not have access to the WebsocketInbound and WebsocketOutbound instances directly.", "This method registers a new WebSocket route with the HTTP server. The handler provided as a parameter is not directly accessible within this method."]}
{"SampleId": 5456947, "Origin": "XML Catalogs, OASIS Standard V1.1, invalid path entries will be ignored.", "Reference": "XML Catalogs, OASIS Standard V1.1, if a catalog entry is invalid, it\nis ignored.", "LLMCandidates": ["Validates URI paths passed as arguments before creating a new Catalog object. If any of the URIs have invalid syntax, an exception will be thrown. XML Catalogs, OASIS Standard V1.1.", "XML Catalogs, OASIS Standard V1.1. Validates and sets URI paths for catalog.\"\n\nNote: This comment assumes the `Util.validateUrisSyntax` method checks the validity of the URIs before passing them to the method. If this is not the case, a more specific comment describing the validation process should be added.", "URI Catalogs, OASIS Standard V1.1. Validation of uri syntax is performed before usage. Invalid URIs will be ignored.", "/// XML Catalogs, OASIS Standard V1.1. validates and sets URI paths for catalog implementation. Invalid URIs will be ignored.", "URI Catalogs, OASIS Standard V1.1. Validates and sets up Catalog using given features and URIs. Invalid URI syntax will be thrown an exception."]}
{"SampleId": 2544523, "Origin": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniond) rotate()} instead.", "Reference": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniondc) rotate()} instead.", "LLMCandidates": ["Apply the rotation transformation using this method instead of {@link #rotate(Quaterniondc) rotate()}.", "Apply the rotation transformation to an existing Matrix3d object using this method instead of {@link #rotate(Quaterniond) rotate()}.\n\nNote: The Quaterniondc class is assumed to be the updated version of Quaterniond with getter methods.", "Apply the rotation transformation using this method instead of {@link #rotate(Quaterniondc) rotate()}.", "Apply the rotation transformation using this method instead of {@link #rotate(Quaterniondc) rotate()}.", "Apply the rotation transformation using this method instead of #{link \"#rotate(Quaterniondc)\" rotate()}."]}
{"SampleId": 4622194, "Origin": "Returns the servlet request instance.", "Reference": "Returns the current HTTP connection.", "LLMCandidates": ["Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance."]}
{"SampleId": 431986, "Origin": "Varargs version of {@link #addState(Closure, Object, java.util.Set)}.", "Reference": "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "LLMCandidates": ["Varargs version of #{link #addState(Consumer, Object, java.util.Set)", "Varargs version of #{link #addState(Consumer, Object, java.util.Set)}\n\n(Note: Replaced \"Closure\" with \"Consumer\")", "Varargs version of #{link #addState(Consumer, Object, java.util.Set)}\n\nThis method appends a new state to the transition machine with the given callback and state, as well as any number of additional states (passed as varargs). The new states are added to an ImmutableSet before being processed further. This is the varargs version of #{link #addState(Consumer, Object, java.util.Set)}.\n\nNote: Pay attention to the change from Closure to Consumer.", "Varargs version of #{link #addState(Consumer, Object, java.util.Set)}\n\nThis method appends a state to the builder, which is associated with a callback and an optional list of transition states. The callback is invoked whenever a transition occurs that involves the added state. If no transition states are provided, an empty set is used instead. All elements in the list of transition states must be non-null.", "Varargs version of #{link #addState(Consumer, Object, java.util.Set)}\n\nExplanation:\nI updated the comment by changing the Closure to Consumer based on the changes in the method signature and also corrected the typo in the link syntax. The rest of the comment remains unchanged as it is still describing the varargs version of addState method with a set of transitionStates argument."]}
{"SampleId": 4374184, "Origin": "This completes the switch.", "Reference": "This completes the change.", "LLMCandidates": ["This method enables all features for the given request after client execution validation.", "Enables full control based on the given request and returns the result. Previously called 'enableFullControl' now named 'enableAllFeatures' and the corresponding request and return types have been updated accordingly.", "Enables all features based on the given request after client execution validation.", "Enables all features based on the given request.\n\nThe request object is validated and processed before executing the enableAllFeatures method.\n\nThe result of the enableAllFeatures method is returned.", "Enables all features based on the given request.\n\nThe request is processed by beforeClientExecution method and then passed to executeEnableAllFeatures method for execution."]}
{"SampleId": 2312555, "Origin": "Creates a command that can be run later which will restore a display to its\ncurrent state.", "Reference": "Creates a module that can be run later which will restore a display to its\ncurrent state.", "LLMCandidates": ["Creates an UndoInfo object that can be used later to restore a display to its current state.", "Creates an UndoInfo object for restoring a display to its current state.", "Creates an UndoInfo object that can be used later to restore a display to its current state.", "Creates an UndoInfo object that can be used later to restore a display to its current state.", "Creates an UndoInfo object that can be used later to restore a display to its current state."]}
{"SampleId": 2427472, "Origin": "Return the underlying expression tree.", "Reference": "Return the math expression as operation tree.", "LLMCandidates": ["Returns the expression tree represented by this object.", "Returns the underlying expression tree as \"toTree\".", "Returns the underlying expression tree as \"toTree\".", "Return the tree representation of the underlying expression.", "Return the tree representation of the underlying expression."]}
{"SampleId": 3080392, "Origin": "A guarded transition from native to Java.", "Reference": "An unguarded transition to Java.", "LLMCandidates": ["Performs an uninterruptible transition from native to Java status.", "Performs an uninterruptible transition from native to Java state by setting the status variable to IN_JAVA.", "Performs an uninterruptible transition from native to Java state by setting the status variable to IN_JAVA.", "Performs an uninterruptible transition from native to Java by setting the status to STATUS_IN_JAVA.", "Performs an uninterruptible transition from native to Java by setting the status variable to IN_JAVA."]}
{"SampleId": 115634, "Origin": "Setter for the auto-pull flag.", "Reference": "Setter for the pull-after flag.", "LLMCandidates": ["Setter for the auto-pull-after flag.", "Setter for the auto-pull-after flag.", "Setter for the auto-pull-after flag.", "Setter for the auto-pull-after flag.", "Setter for the auto-pull-after flag."]}
{"SampleId": 3084134, "Origin": "Calls {@link #arrayAllocationSize(int, int, int, GraalHotSpotVMConfig)} using an injected VM\nconfiguration object.", "Reference": "Calls {@link #arrayAllocationSize(int, int, int, int)} using an injected VM configuration\nobject.", "LLMCandidates": ["Calls #{#arrayAllocationSize(int, int, int, ObjectConfig)} using an injected VM configuration object. The objectAlignment method is now used instead of getConfig with the INJECTED\\_VMCONFIG argument.", "Calls #{#arrayAllocationSize(int, int, int, ObjectConfig)} using an injected VM configuration object. The objectAlignment method is now used instead of getConfig with the argument INJECTED\\_VMCONFIG.", "Calls {@link #arrayAllocationSize(int, int, int, Object)} using an injected VM configuration object. The objectAlignment() method is now used instead of getConfig(INJECTED_VMCONFIG).", "Calls #{#arrayAllocationSize(int, int, int, ObjectConfig)} using an injected VM configuration object. The objectAlignment is used instead of getConfig(INJECTED_VMCONFIG).", "Calls #arrayAllocationSize(int, int, int, objectAlignment(INJECTED_VMCONFIG)) using an injected VM configuration object."]}
{"SampleId": 232605, "Origin": "Get a table object based on the identifier.", "Reference": "Get a table object by name.", "LLMCandidates": ["Get a Table object based on the given database name and table name from the Database instance.", "Get a Table object based on the given database name and table name.", "Get a Table object based on the given database name and table name.", "Get a Table object based on given database name and table name. Throws IOException if the given database name does not exist.", "Get a Table object based on the given database and table names."]}
{"SampleId": 3861954, "Origin": "reverts local changes for this post, replacing it with the latest version from the server", "Reference": "discard local changes for this post, replacing it with the latest version from the server", "LLMCandidates": ["discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server.", "discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server"]}
{"SampleId": 2706458, "Origin": "Get Multiply Rate.", "Reference": "Get Faktor.", "LLMCandidates": ["Gets the multiply rate as a BigDecimal. If the value is null, returns zero.", "Gets the multiply rate. If the value is null, returns BigDecimal zero instead.", "Get the multiplication rate from the associated data structure. If the value is null, return zero.", "Gets the multiply rate as a BigDecimal value. If the value is null, returns BigDecimal zero instead.", "Gets the multiply rate as a BigDecimal value. If the value is null, returns BigDecimal zero instead."]}
{"SampleId": 2312346, "Origin": "By design the return value is not a {@link WithinRangeCondition}.", "Reference": "By design the return value is not a speciailized version of a Condition.", "LLMCandidates": ["This method returns the condition with respect to an array of longs, not necessarily a WithinRangeCondition.", "By design, the return value is not a Condition<long[]> named \"conditionWithin\".", "The returned Condition object is no longer named \"condition\", but \"conditionWithin\".", "The returned Condition object is no longer named \"condition\" but \"conditionWithin\".", "The returned Condition object is no longer named \"condition\" but \"conditionWithin\"."]}
{"SampleId": 2794170, "Origin": "This method sets the value of the database column m_prj_risk.dateraised", "Reference": "This method sets the value of the database column m_prj_risk.raisedDate", "LLMCandidates": ["Sets the value of the database column m_prj_risk.raiseddate", "Sets the value of the database column m_prj_risk.raiseddate", "Sets the value of the database column m_prj_risk.raiseddate", "Sets the value of the database column m_prj_risk.raiseddate", "Sets the value of the database column m_prj_risk.raiseddate"]}
{"SampleId": 3366652, "Origin": "Returns the Realm Type, in the described table, of the named column.", "Reference": "Returns the {@link ColumnDetails}, in the described table, of the named column.", "LLMCandidates": ["Returns the ColumnDetails object for the named column in the indicesMap.", "Returns the ColumnDetails object of the named column from the indicesMap.", "Returns the ColumnDetails object of the named column from the indicesMap.", "Returns the ColumnDetails object of the named column from the indicesMap.", "Returns the ColumnDetails object of the named column from the indicesMap."]}
{"SampleId": 611958, "Origin": "Finds the table schema that can be used for a format schema (without time attributes).", "Reference": "Finds the table schema that can be used for a format schema (without time attributes and generated columns).", "LLMCandidates": ["Derives a TableSchema based on the provided properties, taking into account proctime and rowtime attributes, as well as generated columns.", "Derives a TableSchema based on the given properties, taking into account time attributes and generated columns.", "Derives a TableSchema based on the given properties, taking into account time attributes and generated columns.", "Derives a TableSchema based on the given properties, taking into account process time and row time attributes, as well as generated columns.", "Derives a TableSchema based on the given properties, taking into account time attributes and generated columns."]}
{"SampleId": 5471048, "Origin": "Note: This API uses {@link Class} instead of {@link Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "Reference": "Note: This API uses {@link Class} instead of {@code Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "LLMCandidates": ["Note: This API uses {@link Class} instead of {@link Module} for compatibility with JVMCI clients compiled against a JDK release earlier than 9. The method now checks the Java specification version and invokes methods using reflection when running on a JDK 9 or later.", "Note: This API uses {@link Class} instead of {@link Module} for compatibility with JVMCI clients compiled against a JDK release earlier than 9. When invoked on JDK 9 or later versions, this method dynamically exports the required packages using the {@code addExports()} method.", "note: This API uses {@link Class} instead of {@link Module} for compatibility with JVMCI clients compiled against a JDK release earlier than 9. (For Java specification version 9 and above, the method now uses Object to represent the module and invokes methods on it using reflection)", "Note: This API uses {@link Class} instead of {@link Module} for compatibility with JVMCI clients compiled against a JDK release earlier than 9. (Changed \"Instead of\" to \"for compatibility with\")", "Note: This API uses Class instead of Module for JVMCI clients compiled against a JDK release earlier than 9, providing backwards compatibility. (For Java SE 9 and above, use Module instead.)"]}
{"SampleId": 3677398, "Origin": "Obtains an instance of {@code OffsetDateTime} from a date-time object.", "Reference": "Obtains an instance of {@code OffsetDateTime} from a temporal object.", "LLMCandidates": ["Obtains an instance of OffsetDateTime from a given TemporalAccessor. If the input is already an OffsetDateTime, it will be returned directly. Otherwise, the method extracts the LocalDateTime and ZoneOffset from the TemporalAccessor, and creates an OffsetDateTime object with them. If there's any issue in extracting the LocalDateTime or ZoneOffset, it throws a DateTimeException with a descriptive message.", "Obtains an instance of OffsetDateTime from a given TemporalAccessor. If the TemporalAccessor is already an OffsetDateTime, it will be returned directly. Otherwise, an OffsetDateTime will be created by obtaining the ZoneOffset and either a LocalDateTime or Instant from the TemporalAccessor, depending on its type. In case of failure, a DateTimeException is thrown with an error message indicating the inability to obtain OffsetDateTime from the given TemporalAccessor.", "Obtains an instance of OffsetDateTime from a given TemporalAccessor. If the TemporalAccessor is already an OffsetDateTime, it will be returned directly. Otherwise, the ZoneOffset is extracted and used to create an OffsetDateTime either from a LocalDateTime or an Instant based on the successful extraction from the input TemporalAccessor. In case of failure, a DateTimeException is thrown with an appropriate message.", "Obtains an instance of OffsetDateTime from a given TemporalAccessor. If the input is already an OffsetDateTime, it is returned directly. Otherwise, the ZoneOffset is extracted and used to create an OffsetDateTime instance either from a LocalDateTime or Instant.", "Obtains an instance of OffsetDateTime from a given TemporalAccessor. If the input is already an OffsetDateTime, it is returned directly. Otherwise, the ZoneOffset is extracted and used to create either a LocalDateTime or an Instant, depending on whether the TemporalAccessor can be converted to the former type. Finally, an OffsetDateTime is constructed using the obtained LocalDateTime (or Instant) and the extracted offset. If any error occurs during this process, a DateTimeException is thrown with an appropriate error message."]}
{"SampleId": 84978, "Origin": "Primitive operation which inserts the node at the tail of the frontier.", "Reference": "Inserts the node at the tail of the frontier.", "LLMCandidates": ["Adds the given node to the front of the frontier data structure and updates the metrics accordingly.", "Adds a Node to the front of the frontier data structure and updates metrics accordingly.", "Adds a Node to the front of the frontier data structure and updates metrics accordingly.", "Adds a node to the front of the frontier and updates the metrics accordingly.", "Adds a node to the front of the frontier and updates the metrics accordingly."]}
{"SampleId": 4476355, "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettingRevisions#settingSelector}", "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector}", "LLMCandidates": ["@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector", "@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector", "@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector", "@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector", "@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector"]}
{"SampleId": 2913757, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a static parser.", "Obtains an instance from the specified name using a static parser."]}
{"SampleId": 4396564, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with sensitive message data redacted; useful for testing and debugging.", "Returns a string representation of this object, hiding sensitive message data using \"***Sensitive Data Redacted***\" instead.", "Returns a string representation of this object, masking any sensitive message if present.", "Returns a string representation of this object, masking any sensitive message if present.", "Returns a string representation of this object; useful for testing and debugging. If getErrorCode() is not null, appends \"ErrorCode: {errorCode}\" to the string, otherwise. If getMessage() is not null, appends \"Message: ***Sensitive Data Redacted***\" instead of the original message."]}
{"SampleId": 6320778, "Origin": "Create a new detached JDOQuery instance with the given projection", "Reference": "Create a new detached {@link JDOQuery} instance with the given projection", "LLMCandidates": ["Creates a new JDOQuery instance with the given projection and applies the distinct operator to it.", "Creates a new JDOQuery instance with the given projection and applies distinct to the selection", "Creates a new JDOQuery instance with the given projection and applies the distinct operator.", "Creates a new JDOQuery instance with the given projection and applies the distinct operator to it.", "Creates a new JDOQuery instance with the given projection and applies the distinct operator to it."]}
{"SampleId": 237391, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen some files are consistent in a larger inode tree.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen some files are consistent in a larger inode tree.", "LLMCandidates": ["Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree."]}
{"SampleId": 4591717, "Origin": "Add init return statments.", "Reference": "Add nil return statement.", "LLMCandidates": ["Add nil return statements.", "Add nil return statements.", "Add nil return statements.", "Add nil return statements.", "Add nil return statements."]}
{"SampleId": 4476809, "Origin": "The {@link RsaKeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateRsaKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The {@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified when creating an RSA key.", "The {@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified, when creating an RSA key.", "The {@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified, when creating an RSA key.", "Creates an RSA key in the Key Vault using the provided options. The {@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified.", "The {@link CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified when creating an RSA key."]}
{"SampleId": 2049948, "Origin": "Asserts that the cache contains the given data for {@code uriString}.", "Reference": "Asserts that the cache contains necessary data for the {@code requestSet}.", "LLMCandidates": ["Asserts that the cache contains the given data for the specified RequestSet in the given Cache.", "Asserts that the cache contains the given data for the specified requestSet.", "Asserts that the cache contains the given data for each request in the provided RequestSet.", "Asserts that the cache contains the given data for each request in the provided RequestSet.", "Asserts that the cache contains the given data for the specified requestSet."]}
{"SampleId": 232736, "Origin": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.", "Reference": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.", "LLMCandidates": ["Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that resource.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that resource.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that resource.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that resource.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that resource."]}
{"SampleId": 4856970, "Origin": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}", "Reference": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI UNKNOWN_EMOJI}", "LLMCandidates": ["@link net.dv8tion.jda.api.utils.EncodingUtil}\n\nThis method adds a reaction to the specified message ID with the given Unicode emoji. The provided Unicode is first checked for validity and then encoded using EncodingUtil before being used in the request.", "@link net.dv8tion.jda.api.utils.EncodingUtil}\n\nThe updated comment should reflect the change of the method's usage of EncodingUtil instead of MiscUtil.", "@link net.dv8tion.jda.api.utils.encoding.EncodingUtil}\n\nThe EncodingUtil class is used instead of MiscUtil for encoding the provided Unicode string.", "@link net.dv8tion.jda.api.utils.EncodingUtil}\n\nThe updated method now uses the EncodingUtil class from the jda-api instead of MiscUtil for encoding the unicode string.", "@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}\n\nThe method adds a reaction to a message with the given ID and Unicode codepoint or emoji name. The provided message ID must be valid and snowflake, while the Unicode must not be null, empty, or whitespace-only. If the Unicode starts with \"U+\", it is encoded using UTF-8; otherwise, it's encoded using a standard encoding method. Finally, an instance of RestAction<Void> is returned to indicate the API call's result."]}
{"SampleId": 2289333, "Origin": "The provided {@link XMPPError XMPPError}.", "Reference": "The provided {@link StanzaError XMPPError}.", "LLMCandidates": ["The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}."]}
{"SampleId": 1837081, "Origin": "The executor will shutdown\non {@link #shutdown()}, if not detached.", "Reference": "The executors will shutdown\non {@link #shutdown()}, if not detached.", "LLMCandidates": ["The executor and secondaryExecutor will shutdown on #shutdown(), if not detached.", "The executor and secondaryExecutor will shutdown on {@link #shutdown()}, if not detached.", "Sets the executor and secondary executor for this CoapClient instance. If not detached, both executors will be shutdown on {@link #shutdown()}.", "Sets the executor and secondary executor, and determines if they should be detached. The executor will shutdown on #shutdown(), if not detached.", "The executor and secondaryExecutor will shutdown on {@link #shutdown()}, if not detached."]}
{"SampleId": 339145, "Origin": "The ParcelFileDescriptor will be closed when the list\nbecomes empty.", "Reference": "The ParcelFileDescriptor will\nbe closed when the count becomes zero.", "LLMCandidates": ["Decreases the reference count of ParcelFileDescriptorClient. The ParcelFileDescriptor will be closed when the reference count reaches zero.", "Decreases the reference count of ParcelFileDescriptorClient. If the reference count reaches zero, the ParcelFileDescriptor will be closed.", "Decreases the reference count of ParcelFileDescriptorClient. If the reference count becomes zero, the ParcelFileDescriptor will be closed.", "Decreases the reference count of the ParcelFileDescriptor. The ParcelFileDescriptor will be closed when the reference count reaches zero.", "Decreases the reference count of ParcelFileDescriptorClient. If the reference count reaches zero, the ParcelFileDescriptor will be closed and mClosed flag set to true."]}
{"SampleId": 5179168, "Origin": "Returns the client preferences.", "Reference": "Returns the request including client preferences.", "LLMCandidates": ["Returns the request object.", "Returns the request object.", "Returns the request object.", "Returns the request object.", "Returns the request object."]}
{"SampleId": 2700190, "Origin": "Get UPC/EAN.", "Reference": "Get TU-UPC.", "LLMCandidates": ["Get UPC/EAN code label \"UPC\\_TU\" instead.", "Get UPC/EAN code label now returns the value associated with column name \"UPC\\_TU\".", "Get UPC/EAN tag or identifier (Transactions Use).", "Get UPC or UPC-TU.", "Get UPC or UPC-TU."]}
{"SampleId": 6104684, "Origin": "Returns the value of the {@code bitfield} field.", "Reference": "Returns the value of the {@code direction} field.", "LLMCandidates": ["Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field."]}
{"SampleId": 4132857, "Origin": "Get the last time this object was used in ms.", "Reference": "Gets the last time this object was used in milliseconds.", "LLMCandidates": ["Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds."]}
{"SampleId": 5724509, "Origin": "Convenience method for getScheme(host.getSchemeName())", "Reference": "Convenience method for {@code getScheme(host.getSchemeName())}", "LLMCandidates": ["Convenience method for getting the scheme based on the given host's scheme name.", "Convenience method for getting the scheme based on the given HttpHost object's scheme name.", "Convenience method for getting the scheme based on the given HttpHost object's scheme name.", "Convenience method for getting the scheme based on the given host's scheme name. Verifies that the host is not null before processing.", "Convenience method for getting the scheme based on the given HttpHost object."]}
{"SampleId": 2916600, "Origin": "The meta-property for the {@code expiryDateTime} property.", "Reference": "The meta-property for the {@code expiry} property.", "LLMCandidates": ["The meta-property for the {@code expiry} property.", "The meta-property for the {@code expiry} property.", "The meta-property for the expiry property.", "The meta-property for the expiry property.", "The meta-property for the expiry property."]}
{"SampleId": 2783358, "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "LLMCandidates": ["Gets a ValueList value for the given configuration key 'name'. Uses the defaultValue if the key is not found. The separator character is used to split multiple values returned as a list.", "Retrieves a value from the configuration with the given name. If the configuration does not contain the key, the provided defaultValue will be returned instead. The values are separated by the specified separator string.", "Returns a ValueList object based on the configuration with given name, defaultValue and separator.", "Retrieves the value of a configuration variable with the given name. If the configuration does not contain such a variable, the provided defaultValue will be returned instead. The given separator is used to split multiple values if the variable is an array or list.", "Get the ValueList value for the given name from the configuration."]}
{"SampleId": 4245592, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to duration, returning default value if text is inconvertible.", "LLMCandidates": ["Converts text to Duration object. If text is null, defaultValue is returned.", "Convert to Duration type if text is not null. Return default value otherwise.", "Convert to Duration type if text is not null. Return default value otherwise.", "Convert to Duration type, returning default value if text is null.", "Convert to Duration type, returning default value if text is null."]}
{"SampleId": 4320983, "Origin": "Gets policy for resource set.", "Reference": "Delete policy for resource set.", "LLMCandidates": ["Deletes policies for resource set.", "Deletes policies for a resource set based on their IDs.", "Deletes policies for resource set.", "Deletes policies for resource set.", "Deletes policies for a resource set based on the given policy ID."]}
{"SampleId": 3506149, "Origin": "The alias is a boolean value located\nunder the {@link #ENABLED} key.", "Reference": "The alias is a boolean value located\nunder the {@link HasEnableUtil#ENABLED} key.", "LLMCandidates": ["The alias is a boolean value located under the {@link #HAS\\_ENABLE\\_UTIL#ENABLED} key.", "The alias is a boolean value located under the {@link #HAS\\_ENABLE\\_UTIL#ENABLED} key.", "The alias is a boolean value located under the {@link #HAS\\_ENABLE\\_UTIL#ENABLED} key.", "The alias is a boolean value located under the {@link #HAS_ENABLE_UTIL#ENABLED} key.", "The alias is a boolean value located under the {@link #HAS\\_ENABLE\\_UTIL#ENABLED} key."]}
{"SampleId": 337258, "Origin": "Returns the {@link CaptureRequestConfiguration} for the {@link CaptureStage} object.", "Reference": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "LLMCandidates": ["Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "Returns the CaptureRequestConfig for the CaptureStage object.", "Returns the CaptureRequestConfig for the CaptureStage object.", "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object."]}
{"SampleId": 4781139, "Origin": "Simple names for a given type.", "Reference": "Return the descriptor class for a given type.", "LLMCandidates": ["Returns the descriptor class name for a given type.", "Returns the descriptor class name for a given type.", "Returns the descriptor class name for a given type.", "Returns the descriptor class name for a given type.", "Returns the descriptor class name for a given type."]}
{"SampleId": 4470234, "Origin": "Get the preventEncryptionScopeOverride property: Optional.", "Reference": "Get the encryptionScopeOverridePrevented property: Optional.", "LLMCandidates": ["Get the isEncryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional."]}
{"SampleId": 4986646, "Origin": "Get the FCPClient if it exists.", "Reference": "Get the PersistentRequestClient if it exists.", "LLMCandidates": ["Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists."]}
{"SampleId": 4891063, "Origin": "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Reference": "Set the connection, this is called when the channel is added to the pipeline.", "LLMCandidates": ["Sets the given connection. This is typically called by subclasses when the connection is added to the pipeline.", "Sets the given connection object and invokes the handle method of the ConnectionBase instance if an addHandler is present.", "Sets the connection for this component. This is typically called by subclasses when the connection is added to the pipeline.", "Sets the connection for this component. This is typically called by subclasses when the connection is added to the pipeline.", "Sets the connection for this object, typically called by subclasses when the channel is added to the pipeline."]}
{"SampleId": 4807132, "Origin": "Get the classloader and module finder.", "Reference": "Get the callstack.", "LLMCandidates": ["Returns the call stack of the class loader finder.", "Returns the call stack of the class loader finder.", "Returns the call stack of the class loader finder.", "Returns the call stack of the ClassLoaderFinder.", "Returns the call stack of the ClassLoaderFinder."]}
{"SampleId": 1730901, "Origin": "Validation type is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Reference": "Validation mode affects whether entity bean validation will be applied on {@link DataManager} level.", "LLMCandidates": ["Validation mode is responsible for whether entity bean validation will be applied on CommitContext level.", "Validation mode is responsible for whether entity bean validation will be applied on DataManager level.", "Validation mode is responsible for whether entity bean validation will be applied on CommitContext level.", "Set the validation mode for entity bean validation on CommitContext level.", "Set the validation mode for entity bean validation on CommitContext level."]}
{"SampleId": 1042205, "Origin": "Delete persisted {@link WorkUnit}s upon job completion.", "Reference": "Delete persisted {@link WorkUnit}s and {@link JobState} upon job completion.", "LLMCandidates": ["Delete persisted work units and job state file upon job completion for the given job.", "Delete persisted work units and job state file upon job completion for the given job.", "Delete persisted work units and job state file upon job completion for the given job.", "Deletes persisted {@link WorkUnit}s and job state file for given job upon cleanup completion.", "Deletes persisted {@link WorkUnit}s and job state file for given job upon cleanup completion."]}
{"SampleId": 4797744, "Origin": "A return value of {@code -1} necessarily\nindicate that the map contains no mapping for the key.", "Reference": "A return value of {@code #FREE} necessarily\nindicate that the map contains no mapping for the key.", "LLMCandidates": ["A return value of FREE necessarily indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key."]}
{"SampleId": 4473555, "Origin": "Create Subject Alternative names with dns names.", "Reference": "Set the dns names.", "LLMCandidates": ["Set the Subject Alternative names with the given DNS names.", "Set Subject Alternative names with given DNS names.", "Set Subject Alternative names with given DNS names.", "Set the Subject Alternative names with the given DNS names.", "Set the Subject Alternative names with the given DNS names."]}
{"SampleId": 3758708, "Origin": "So when we got block and all is ok - call this method.", "Reference": "So when we got packet and all is ok - call this method.", "LLMCandidates": ["If the session reader and packet ID are ready, call this method.", "When we receive a valid packet with the given ID from a SessionReader, call this method to send an acknowledgment.", "Send an acknowledgement packet to the specified session reader with the given packet ID.", "Send an acknowledgement packet to the specified session reader with the given packet ID.", "When we receive a valid packet with the given ID from a session reader, call this method to send an acknowledgement."]}
{"SampleId": 431798, "Origin": "Creates execution sequence for pending task groups by interleaving their unique occurrences.", "Reference": "Creates execution sequence for pending task groups by interleaving batches of requested size of\ntheir occurrences.", "LLMCandidates": ["Returns a list containing the unique TaskGroupKeys from the given Multiset, processed in a sequence that minimizes preemption. The batchSize parameter determines how many elements will be removed during each iteration.", "Creates execution sequence for pending task groups by interleaving their unique occurrences, with each group occuring no more than the specified batchSize.", "Creates execution sequence for pending task groups by interleaving their unique occurrences with given batch size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences, up to a specified batch size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences up to a specified batch size."]}
{"SampleId": 3990800, "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.", "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.", "LLMCandidates": ["Wait for this task to meet the expected number of records as defined by {@code expectedRecords}. The timeout is specified in the given unit.", "Wait for this task to meet the expected number of records as defined by {@code expectedRecords}. The timeout is specified using a {@code TimeUnit} enum instead of milliseconds directly.}}\n\nThis updated comment reflects the changes in the method signature and the usage of the {@code TimeUnit} enum instead of direct milliseconds.", "Waits for this task to meet the expected number of records as defined by `expectedRecords`, using the specified timeout and time unit.", "Waits for this task to meet the expected number of records as defined by {@code expectedRecords}. The timeout is specified in the given time unit.", "Wait for this task to meet the expected number of records as defined by {@code expectedRecords}. The timeout is specified in the given unit."]}
{"SampleId": 5441293, "Origin": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistring bad font\nin case when scaler reports this.", "Reference": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistering a bad font\nwhen the scaler reports this.", "LLMCandidates": ["This method creates a new FontScaler instance using the given font, indexInCollection, supportsCJK flag, and filesize. It also registers the created scaler with Disposer and deregisters a bad font if an exception is thrown during instantiation.", "This method creates a FontScaler object based on the given Font2D, indexInCollection, supportsCJK flag and filesize. It also registers the created scaler with Disposer and deregisters bad font if an error occurs during instantiation. Now, instead of using the scalerConstructor to instantiate the scaler, a new FreetypeFontScaler object is directly created.", "This method creates a new FontScaler instance based on the provided font, index, and other parameters. It also registers the created scaler with Disposer and deregisters a bad font in case of an error during instantiation.", "Creates and registers a FontScaler instance for the given font and index, using FreeType library if supported. Also deregisters bad font if an error occurs during instantiation.", "Instantiates and registers a FontScaler object with Disposer for the given font, indexInCollection, supportsCJK, and filesize. In case of failure to instantiate the scaler, the registered font is deregistered as bad."]}
{"SampleId": 5003417, "Origin": "gets all tv show episodes from database", "Reference": "SYNCHRONOUSLY gets all tv show episodes from database", "LLMCandidates": ["retrieves all tv show episodes from the database based on sorting and hidden status", "Retrieves all episodes of TV shows from the database based on current sorting and hiding preferences.", "gets all tv show episodes from database, with sorting by episode number and optional hiding of watched episodes based on user preference.", "Retrieves all episodes of a TV show from the database based on sorting and hide watched preference", "Retrieves all episodes of TV shows from the database, based on current sorting and hiding preferences."]}
{"SampleId": 2913765, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined mapping.", "Obtains an instance from the specified name using a predefined mapping.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map."]}
{"SampleId": 3358024, "Origin": "Value of the code encoded.", "Reference": "Value of the errorCode encoded.", "LLMCandidates": ["Returns the value of the error code.", "Returns the value of the error code.", "Returns the value of the error code.", "Returns the value of the error code.", "Returns the value of the error code."]}
{"SampleId": 1346741, "Origin": "Closes the session.", "Reference": "Updates the session state.", "LLMCandidates": ["Sets the session state based on the given State. Closes the session if the state is CLOSED or TIMEOUT has elapsed since SUSPENDED.", "Sets the session state based on the given value. If the new state is different from the current one, updates the state and notifies changeListeners. If the new state is SUSPENDED, records the current time and sets a timeout before changing to CLOSED state. Otherwise, resets suspendedTime.", "Set the state of the session to the given value. If the new state is SUSPENDED, record the suspension time; otherwise clear the suspension time.", "Sets the session state based on the given value. If the state is suspended, sets the suspended time and notifies listeners. Otherwise, updates the state and clears the suspended time. Notifies all change listeners of the new state. If the state is suspended and the elapsed time since suspension exceeds the timeout, closes the session.", "Sets the session state based on the given state parameter. Closes the session if the new state is not equal to the current one and is either SUSPENDED or CLOSED. If the new state is SUSPended, records the timestamp of suspension and checks if the timeout has been exceeded before closing the session. Otherwise, updates the session state accordingly and notifies all registered change listeners with the new state."]}
{"SampleId": 5724390, "Origin": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521.", "Reference": "This function fully implements the quoted-printable encoding specification (rule REF through rule REF) as\ndefined in RFC 1521.", "LLMCandidates": ["This function implements a subset of the quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.\nOverrides the parent class's decode method.", "@Override\nThis function implements a subset of the quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521, for decoding an input byte array.", "This function overrides the decode method and implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521. Overrides the default decode method.", "This function overrides the decode method and implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521."]}
{"SampleId": 6130393, "Origin": "Method to get the configuration knowning the set", "Reference": "Method to get the first configuration knowning the set", "LLMCandidates": ["Get the configuration object associated with the given set", "Gets the MaryConfiguration object corresponding to the given set", "Method to get the configuration associated with the given set number.", "Method to get the configuration associated with the given set number.", "Gets the configuration associated with the given set"]}
{"SampleId": 4617953, "Origin": "Binds the HTTP connection.", "Reference": "Assigns an external property.", "LLMCandidates": ["Sets a key-value pair in the properties map.", "Sets the property with the given key to the specified value.", "Sets the property with the given key to the specified value.", "Sets a property with the given key and value.", "Sets a property with the given key and value."]}
{"SampleId": 5324303, "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.", "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.", "LLMCandidates": ["Note that the writing process starts with each emitted DataBuffer from the returned Flux, instead of waiting for the subscription to the Mono.", "Note that the writing process starts as each data buffer is produced from the given {@code Publisher}, and propagates downstream until the returned {@code Flux} is subscribed to.", "Note that the writing process starts as soon as the returned Flux is subscribed to.", "Note that the writing process starts as soon as the returned Flux is subscribed to.", "Note that the writing process starts as soon as each data buffer is emitted from the returned {@code Flux} and consumed by the subscriber."]}
{"SampleId": 3037775, "Origin": "Tests resilency when D2 device availability is changed.", "Reference": "Tests resiliency when D2 device availability is changed.", "LLMCandidates": ["Tests resilience when device2, link1 and link2 are removed from the topology.", "Tests resilience when devices D2 and the connecting links are removed from the topology.", "Tests resilience when device2, link1 and link2 are removed from the topology.", "Tests resilience when device2, link1 and link2 are removed from the topology.", "Tests resilience when the topology, specifically the availability of device D2 and links link1 and link2, is changed."]}
{"SampleId": 2443922, "Origin": "Start building a new factory class-based service binding.", "Reference": "Start building a new supplier class-based service binding.", "LLMCandidates": ["Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding."]}
{"SampleId": 1314730, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name", "Creates an exception from an API name"]}
{"SampleId": 2913760, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined parse method.", "Obtains an instance from the specified name using a static factory method of the NAMES parser.", "Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using a predefined map."]}
{"SampleId": 5840707, "Origin": "Removes the source location value from this list of elements.", "Reference": "Removes the source location value from this map of elements.", "LLMCandidates": ["Removes the source location values from the given map entries.", "Removes the source location values from the given map if it is not null.", "Removes the source location value from the given map if it is not null", "Removes the source location value from the given map if it is not null", "Removes the source location values from the given map entries if the map is not null."]}
{"SampleId": 3074824, "Origin": "Make you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Reference": "Make sure you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "LLMCandidates": ["Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method. The result value introduces NA only if one of the vectors passed during enable method check fails the NA check or if this method returns false along with their failure.", "Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method. Also, note that the updated version of isComplete() checks for \"neverSeenNA\" in leftNACheck and rightNACheck and an additional condition of \"!introducesNA()\".", "Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method. Returns true if neither the left, right, nor the result NAs have been seen yet and introducesNA() returns false.", "Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method. Additionally, introducesNA() has been introduced to the check as a new condition for completeness.", "Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method. The left, right and result NAs must not have been seen yet for the collection to be considered complete. Additionally, the introducing of a new NA is now checked against."]}
{"SampleId": 4124110, "Origin": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this.", "Reference": "Make sure to\n{@link #releaseParser(PoolSAXParser)} in\na  block every time you call this.", "LLMCandidates": ["Make sure to {@link #releaseParser(PoolSAXParser)} in a block every time you call this.", "Make sure to {@link #releaseParser(PoolSAXParser)} in a block every time you call this.", "Ensure to call {@link #releaseParser(PoolSAXParser)} in a block every time this method is invoked.", "Ensure to call {@link #releaseParser(PoolSAXParser)} within a block after using this method.", "Ensure to call {@link #releaseParser(PoolSAXParser)} within a block after using this method."]}
{"SampleId": 2603540, "Origin": "Send a non-mutation message to a given endpoint.", "Reference": "Send a non-mutation message to a given node.", "LLMCandidates": ["Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode instead of NetEndpoint", "Send a non-mutation message to a given NetNode instead of NetEndpoint", "Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode."]}
{"SampleId": 1753706, "Origin": "Whether this codec is capable of encoding the given Java type.", "Reference": "Whether this codec is capable of processing the given Java type.", "LLMCandidates": ["Whether this codec accepts the given Java type.", "Whether this codec accepts the given Java type", "Whether this codec accepts the given Java type", "Whether this codec accepts the given Java type", "Whether this codec accepts the given Java type"]}
{"SampleId": 2603544, "Origin": "unlike excise we just need this endpoint gone without going through any notifications *", "Reference": "unlike excise we just need this node gone without going through any notifications *", "LLMCandidates": ["This method removes a node from both Gossiper and ClusterMetaData.", "This method removes a node from both Gossiper and ClusterMetaData.", "This method removes a node from both Gossiper and ClusterMetaData.", "This method removes a specific node from both Gossiper and ClusterMetaData.", "This method removes a specific node from both Gossiper and ClusterMetaData."]}
{"SampleId": 2017647, "Origin": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated.", "Reference": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, if B's constructor is not explicitly annotated.", "LLMCandidates": ["When a class B inherits from A and A is annotated as a struct or EXPLICITLY marked as @unannotated, then B automatically gets the annotation for PropAccess.STRUCT or PropAccess.ANY_EXLICIT respectively.", "When a class B inherits from A and A is annotated as a struct, then B gets the annotation automatically if B does not have an explicit annotation or if its propAccess is PropAccess.STRUCT. However, if B's propAccess is PropAccess.ANY_EXPLICIT, it will not get the annotation from its super class.", "When a class B inherits from A and A is annotated as a struct, then B automatically gets the annotation if its propAccess is set to PropAccess.STRUCT or PropAccess.ANY_EXLICIT. For anything EXPLICITLY marked as @unannotated as PropAccess.ANY_EXLICIT in class B, it does not look to the super type.", "When a class B inherits from A and A is annotated as a struct, then B can get the annotation, but if B's constructor is marked as PropAccess.ANY_EXPLICIT, it will not inherit the annotation from its superclass.", "When a class B inherits from A and A is annotated as a struct or EXPLICITLY marked as @unresticted for propAccess equals PropAccess.ANY_EXLICIT, then B automatically gets the annotation if its constructor is not explicitly annotated."]}
{"SampleId": 4396425, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted for debugging and testing purposes.", "Returns a string representation of this object; useful for testing and debugging. Sensitive data is redacted using \"***Sensitive Data Redacted***\" placeholder.", "Returns a string representation of this object with sensitive data redacted for testing and debugging purposes.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 1406605, "Origin": "Overrides previous instances of the exact\nsame subclass of FragmentOptions.", "Reference": "Overrides previous instances of the exact same subclass of {@code FragmentOptions}.", "LLMCandidates": ["Overrides previous instances of the exact same subclass of FragmentOptions with their normalized values", "Overrides previous instances of the exact same subclass of FragmentOptions with their normalized versions", "Overrides previous instances of the exact same subclass of FragmentOptions with their normalized values", "Overrides previous instances of the exact same subclass of FragmentOptions with their normalized values", "Overrides previous instances of the exact same subclass of FragmentOptions with their normalized values"]}
{"SampleId": 4386708, "Origin": "List Multipart Uploads response, even if idempotent complete is\npossible.", "Reference": "Uploads response, even if idempotent complete is possible.", "LLMCandidates": ["Complete the Multipart Upload request with idempotent response.", "completes a Multipart Upload request and returns the corresponding CompleteMultipartUploadResult. Even if idempotent complete is possible.", "Completes a Multipart Upload and returns the CompleteMultipartUploadResult\neven if idempotent complete is possible.", "Processes the CompleteMultipartUpload request and returns the corresponding CompleteMultipartUploadResult, even if idempotent complete is possible.", "Complete the multipart upload request and return the response, even if idempotent complete is possible."]}
{"SampleId": 3710575, "Origin": "Load a {@link android.graphics.drawable.Drawable} asynchronously", "Reference": "Load a {@link android.graphics.drawable.Drawable} asynchronously (convenience method)", "LLMCandidates": ["Load a Drawable asynchronously into an ImageView using Picasso library.", "Load a {@link android.graphics.drawable.Drawable} asynchronously into an ImageView given a Context, an ImageView and the resource ID of the Drawable.", "Load a {@link android.graphics.drawable.Drawable} asynchronously into an ImageView with the given context and resource ID. If no error occurs, the Drawable will be displayed in the ImageView. By default, an error Drawable is not set. However, this behavior can be changed by setting the last boolean argument to true before calling this method.", "Load a {@link android.graphics.drawable.Drawable} asynchronously into an ImageView given a Context, an ImageView and the resource ID of the Drawable.", "Load a {@link android.graphics.drawable.Drawable} asynchronously into an ImageView given a Context, an ImageView and the resource ID of the Drawable."]}
{"SampleId": 2700191, "Origin": "Set UPC/EAN.", "Reference": "Set TU-UPC.", "LLMCandidates": ["Sets the UPC or EAN value identified by the given UPC_TU code.", "Set UPC or EAN (TU stands for Tracking Number)\n\n(Note: Assuming UPC and UPC_TU represent the same concept but with different names in the updated code.)", "Set UPC\\_TU instead of UPC.", "Sets the UPC/EAN value with the given UPC_TU string.", "Sets the UPC/EAN value with the given UPC_TU string."]}
{"SampleId": 2680294, "Origin": "Returns the opening {@link Month} within this set of bounds.", "Reference": "Returns the openAt {@link Month} within this set of bounds.", "LLMCandidates": ["Returns the opening {@link Month} represented by this instance at a given point in time.", "Returns the opening {@link Month} represented by the variable 'openAt' within this instance.", "Returns the opening {@link Month} represented by the variable 'openAt' within this instance.", "Returns the opening {@link Month} represented by the variable 'openAt'.", "Returns the opening {@link Month} represented by the variable 'openAt'."]}
{"SampleId": 2272830, "Origin": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener.", "Reference": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections of a particular type.", "LLMCandidates": ["Deprecated method to determine the KeyStore type for the identity and trust store based on the given ConnectionType. The default value is \"jks\". If a fallback ConnectionType is provided, the method recursively calls itself with the fallback ConnectionType to obtain the corresponding KeyStore type.", "Deprecated method to determine the KeyStore type based on ConnectionType. If no fallback is specified, returns the default value \"jks\". Otherwise, recursively calls this method using the fallback ConnectionType.", "Deprecated method for getting the KeyStore type. The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener.", "Deprecated method to obtain the KeyStore type based on the given ConnectionType. If no fallback is provided, it returns the default value \"jks\". Otherwise, it retrieves the KeyStore type for the given fallback ConnectionType.", "The deprecated method returns the KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener. If a fallback ConnectionType is provided, the method recursively calls itself with the fallback ConnectionType until a non-null value is obtained."]}
{"SampleId": 3678449, "Origin": "Returns a copy of this date-time with the zone ID locked to the offset.", "Reference": "Returns a copy of this date-time with the zone ID set to the offset.", "LLMCandidates": ["Returns a copy of this date-time with the time zone offset locked}}\n\n{if the given offset is equal to the current one} {return this} {otherwise} {create and return a new ZonedDateTime instance with the same date-time, offset, and fixed offset time zone", "Returns a copy of this date-time with the offset locked to the zone ID.", "Returns a copy of this date-time with the offset locked to the zone ID.", "Returns a copy of this date-time with the offset locked to the current zone ID.", "Returns a copy of this date-time with the offset locked to the zone ID."]}
{"SampleId": 1310050, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a api, used to index the api in ES.", "LLMCandidates": ["Generates a valid API ID for an entity, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid API ID for an application, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES."]}
{"SampleId": 5447042, "Origin": "If the range of the variable has not been set yet, it will be set to be\nval id from the start to the end of the instruction list.", "Reference": "If the range of the variable has not been set yet, it will be set to be\nvalid from the start to the end of the instruction list.", "LLMCandidates": ["This method returns an array of LocalVariableGen objects representing the local variables or types in the instruction list. If necessary, it sets the start and end positions for each variable based on the instruction list.", "Returns an array of LocalVariableGen objects representing the local variables or types in the instruction list. If the start and end of any variable have not been set yet, they will be set based on the corresponding instructions in the instruction list.", "Returns an array of LocalVariableGen objects representing the local variables or their types from the instruction list. If the start and end of a variable have not been set yet, they will be set to be the corresponding values from the instruction list.", "Returns an array of LocalVariableGen objects representing the local variables or types in the instruction list. If necessary, the start and end positions for each variable are set based on the instruction list.", "This method returns an array of LocalVariableGen objects representing the local variables or types in the instruction list. If any local variable's start or end position has not been set yet, it will be set based on the corresponding positions in the instruction list."]}
{"SampleId": 6247256, "Origin": "Deletes the elements in the mValues list and notifies the Adapter", "Reference": "Deletes the elements in the values list and notifies the Adapter", "LLMCandidates": ["Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter"]}
{"SampleId": 2382765, "Origin": "The version of this Titan graph database", "Reference": "The version of this JanusGraph graph database", "LLMCandidates": ["The version of this JanusGraph graph database", "The version of this JanusGraph graph database", "The version of this JanusGraph graph database", "The version of this JanusGraph graph database", "The version of this JanusGraph graph database"]}
{"SampleId": 4386726, "Origin": "Uploading Large Archives in Parts (Multipart Upload)  and  Upload Part \nin the Amazon Glacier Developer Guide .", "Reference": "For conceptual information and underlying REST API, go to Uploading Large Archives in Parts (Multipart Upload) and Upload Part  in the Amazon Glacier Developer Guide.", "LLMCandidates": ["Uploading Large Archives in Parts (Multipart Upload) and handling an individual part upload in Amazon S3 or Amazon Glacier.", "This method handles the uploading of a multipart part in Amazon Glacier using large archives. The request is marshalled and executed with AWS Request Metrics tracking, and the response is unmarshalled and returned as an instance of UploadMultipartPartResult.", "Performs a multipart upload of the given request in Amazon Glacier using AWS SDK for Java and handles corresponding metrics.", "Performs a multipart upload of the given UploadMultipartPartRequest to Amazon S3 using AWS SDK for Java. The method marshals the request object, sends it to the server, and unmarshals the response object back into an instance of UploadMultipartPartResult. Also includes handling for AWS request metrics. Refer to the Amazon S3 Developer Guide for more information on multipart uploads.", "This method handles the uploading of a multipart part in Amazon Glacier using large archives. The AWSRequestMetrics are used for performance monitoring during the client execution time and request marshalling time."]}
{"SampleId": 3772938, "Origin": "Creates a column instance from a value provider and a renderer.", "Reference": "Creates a column instance from a value provider, presentation provider\nand a renderer.", "LLMCandidates": ["Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer."]}
{"SampleId": 2912413, "Origin": "This maps either the security ID or the legal entity ID to a group.", "Reference": "This maps the legal entity ID to a group.", "LLMCandidates": ["This maps either a LegalEntityId or the StandardId to a group.", "This maps either a LegalEntityId or the standard Id to a group.", "This maps either a LegalEntityId or the StandardId to a group.", "This maps either a LegalEntityId or the StandardId to a group.", "This maps either a LegalEntityId or the StandardId to a RepoGroup."]}
{"SampleId": 367453, "Origin": "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri}\nif exists", "Reference": "Returns the singleton instance of {@link SliceBackgroundWorker} for specified {@link Uri} if\nexists", "LLMCandidates": ["Returns the instance of the specified type of {@link SliceBackgroundWorker} for the given {@link Uri}, if it exists.", "Returns the instance of the specified type of {@link SliceBackgroundWorker} for the given {@link Uri}, if it exists.", "Returns the instance of the {@link SliceBackgroundWorker} for specified {@link Uri}, with type T extending SliceBackgroundWorker, if exists.", "Returns the instance of the {@link SliceBackgroundWorker} for specified {@link Uri}, cast to a generic type if necessary. If such an instance exists in LIVE_WORKERS map.", "Returns the instance of the {@link SliceBackgroundWorker} for specified {@link Uri}, which is generic type of T that extends SliceBackgroundWorker, if exists."]}
{"SampleId": 2783671, "Origin": "A {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:", "Reference": "This method throws an {@link IOException} if the operation failed, for any of the following reasons:", "LLMCandidates": ["* Throws a {@link FileTransferException} if the file move operation was attempted but failed for any of the following reasons:\n * <ul>\n * <li>Renaming the file failed,</li>\n * <li>Copying the file to the destination failed, or</li>\n * <li>Deleting the source file failed.</li>\n * </ul>", "Moves this file to the specified destination file while checking for any exceptions during the operation. If the rename operation is supported, it will be attempted first. If successful, the method returns immediately. Otherwise, it falls back to moving the file manually by copying its contents to the destination and deleting the source file. If any exception occurs during these operations, a {@link FileTransferException} is thrown.", "Moves this file to the destination file with the given AbstractFile object. Throws an IOException if an error occurs during the file operation.\n\nThrows a FileTransferException if the moveTo() operation failed for any of the following reasons:\n\n- The file or directory does not exist\n- The destination path is inaccessible\n- The destination already exists and overwrite is not allowed\n- An I/O error occurs during the move operation.", "* Throws a {@link FileTransferException} if the file movement operation was attempted but failed for any of the following reasons:\n * \n * <ul>\n * <li>The file or directory cannot be renamed</li>\n * <li>The file or directory could not be copied to the destination</li>\n * <li>The source file or directory could not be deleted after copying</li>\n * </ul>", "Moves this file to the specified destination location by either renaming it or copying and deleting the source file. Throws an IOException if any error occurs during the operation."]}
{"SampleId": 3366327, "Origin": "Sets the schema version to the given {@link SharedRealm}.", "Reference": "Sets the schema version to the given {@link OsSharedRealm}.", "LLMCandidates": ["Sets the schema version to the given OsSharedRealm.", "Sets the schema version to the given OsSharedRealm.", "Sets the schema version to the given OsSharedRealm.", "Sets the schema version to the given OsSharedRealm.", "Sets the schema version to the given OsSharedRealm."]}
{"SampleId": 5243388, "Origin": "Compare two groups based on the grouping attribute.", "Reference": "Compare two groups based on the group key", "LLMCandidates": ["Compare two FileGroups based on their group keys.", "Compare two FileGroups based on their group keys.", "Compare two FileGroups based on their group keys.", "Compare two FileGroups based on their group keys.", "Compare two FileGroups based on their group keys."]}
{"SampleId": 2526359, "Origin": "Adds a handle to the constant pool of the class being built.", "Reference": "Adds a method handle to the constant pool of the class being built.", "LLMCandidates": ["Adds a MethodHandle to the constant pool of the class being built.", "Adds a MethodHandle to the constant pool of the class being built.", "Adds a MethodHandle to the constant pool of the class being built.", "Adds a MethodHandle to the constant pool of the class being built.", "Adds a MethodHandle item to the constant pool of the class being built."]}
{"SampleId": 2443738, "Origin": "Bind contract provider model to a provider class using the supplied instance manager.", "Reference": "Bind contract provider model to a provider class using the supplied injection manager.", "LLMCandidates": ["Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager.", "Bind contract provider model to a provider class using the supplied InjectionManager."]}
{"SampleId": 2848845, "Origin": "The manifest produced by this service do not include checksum for each entry.", "Reference": "The manifest produced by this service do not include checksum for entries and caches manifests recently created.", "LLMCandidates": ["@Bean\n@ConditionalOnMissingBean(value = JobDirectoryManifestService.class)\npublic JobDirectoryManifestService jobDirectoryManifestService(final DirectoryManifest.Factory directoryManifestFactory) {\n // This service returns a DirectoryManifest object for the given jobDirectoryPath.\n return jobDirectoryPath -> directoryManifestFactory.getDirectoryManifest(jobDirectoryPath, false);\n}\n\n// No manifest checksum is included in the manifest produced by this service.", "This bean creates an instance of JobDirectoryManifestService using the given DirectoryManifest.Factory. The manifest produced by this service is not required to include checksums for each entry.", "Creates an instance of JobDirectoryManifestService using the provided DirectoryManifest.Factory. This service does not generate checksums for each entry in the manifest.", "Initializes a bean of JobDirectoryManifestService if it does not already exist.", "Creates a JobDirectoryManifestService bean with a conditional creation based on its absence in the application context."]}
{"SampleId": 4780345, "Origin": "Returns all documents contained in this cluster.", "Reference": "Returns all documents contained in this cluster or an empty list if none.", "LLMCandidates": ["Returns a list of documents contained in this cluster. If no documents exist, an empty list is returned.", "Returns a list of all documents contained in this cluster. If there is no document available, an empty list will be returned instead.", "Returns a list of documents contained in this cluster. If no documents are available, an empty list is returned instead.", "Returns a list of all documents contained in this cluster. If no documents are present, an empty list is returned instead.", "Returns a list of all documents contained in this cluster. If no documents are present, an empty list is returned instead."]}
{"SampleId": 1067852, "Origin": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain an entry for a {@code StreamManager}.", "Reference": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain a valid entry for a {@code StreamManager}.", "LLMCandidates": ["Return the StreamManager in a context if it exists, or use the global one if the context is null or does not contain an entry for a StreamManager.", "Return the StreamManager in a context if it exists, or use the global one if the context is null or does not contain an entry for a StreamManager.", "Return the StreamManager in a context if it exists, or return the global one if the context is null or does not contain an entry for a StreamManager.", "Return the StreamManager in a context if it exists, or use the global one if the context is null or does not contain an entry for a StreamManager.", "Return the StreamManager in a context if it exists, or use the global one if the context is null or does not contain an entry for a StreamManager."]}
{"SampleId": 2230476, "Origin": "Sets the quorum name for lock operations.", "Reference": "Sets the split brain protection name for lock operations.", "LLMCandidates": ["Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations."]}
{"SampleId": 1855232, "Origin": "[IF Sidecar19-SE]", "Reference": "[IF Java14]", "LLMCandidates": ["[@Deprecated(forRemoval=true, since=\"1.2\")]\n/*[ELSE] Java 14 or above */\n[@Deprecated(forRemoval=false, since=\"1.2\")]\n/*[ENDIF] Java 11 or below */\npublic boolean allowThreadSuspension(boolean b) {\n\t// Does not apply to this VM, no-op\n\t/*[PR 1PR4U1E]*/\n\treturn true;", "@Deprecated(forRemoval=true, since=\"1.2\")\n/*[ELSE] Java 14 or above */\n@Deprecated(forRemoval=false, since=\"1.2\") /*[ENDIF] Java < Java 14 */\npublic boolean allowThreadSuspension(boolean b) {\n\t// Does not apply to this VM, no-op\n\t/*[PR 1PR4U1E]*/\n\treturn true;", "[IF Sidecar11-SE]\n@Deprecated(forRemoval=false, since=\"1.2\")\n[ELSE Java14]\n@Deprecated(forRemoval=true, since=\"1.2\")\n[ENDIF Java14]\n[ELSE Java11]\n@Deprecated\n[ENDIF Java11]\n/* Deprecated method. This method is no longer supported and its usage is discouraged. It may be removed in a future release */\npublic boolean allowThreadSuspension(boolean b) {\n\t// Does not apply to this VM, no-op\n\t[PR 1PR4U1E]\n\treturn true;\n}", "[IF Sidecar19-SE]\n@Deprecated(forRemoval=true, since=\"1.2\")\n/*[ELSE] Java 14 and above */\n@Deprecated(forRemoval=false, since=\"1.2\")\n/*[ENDIF] Java 11 and below */\npublic boolean allowThreadSuspension(boolean b) {\n\t// Does not apply to this VM, no-op\n\t/*[PR 1PR4U1E]*/\n\treturn true;", "@Deprecated(forRemoval=true, since=\"1.2\") // Deprecated and marked for removal since Java 14\n[ELSE] @Deprecated(forRemoval=false, since=\"1.2\") // Not deprecated or marked for removal in Java 11 and earlier versions\n[ENDIF] Java11 or earlier }\n// Method to indicate if the JVM supports thread suspension.\n// Returns true regardless of the VM implementation."]}
{"SampleId": 1464613, "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "LLMCandidates": ["Obtain a RemoteRepository for the data set having the specified SPARQL end point using this instance instead of useLBS, httpClient and executor.", "Obtain a RemoteRepository for the data set having the specified SPARQL end point. The new instance is constructed using this object as a base.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point. The creation process now uses 'this' as the first argument instead of useLBS, httpClient, and executor.", "Obtain a RemoteRepository for the data set having the specified SPARQL end point using this instance and the given URL.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point. The creation of the instance is now delegated to this object instead of using the given arguments directly."]}
{"SampleId": 6247260, "Origin": "Returns an AccountListItem from the specified position in the mValues list", "Reference": "Returns an AccountListItem from the specified position in the values list", "LLMCandidates": ["Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list"]}
{"SampleId": 340561, "Origin": "PlaybackParams2 to the given input.", "Reference": "PlaybackParams to the given input.", "LLMCandidates": ["Sets the playback parameters using the given PlaybackParams input.", "Sets the playback parameters using the given PlaybackParams.", "Sets the playback parameters with the given PlaybackParams input.", "Sets the playback parameters with the given PlaybackParams input.", "Sets the playback parameters using the given PlaybackParams."]}
{"SampleId": 5176607, "Origin": "Setter for {@link #allowCredentials}", "Reference": "Setter for {@link #allowedCredentials}", "LLMCandidates": ["Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials"]}
{"SampleId": 5299668, "Origin": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDbFactory factory}.", "Reference": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "LLMCandidates": ["Obtain the {@link MongoDatabase database} with given name from the given {@link MongoDatabaseFactory factory}.", "Obtain the MongoDatabase database with given name from the given MongoDatabaseFactory factory.", "Obtain the {@link MongoDatabase database} with given name from the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name from the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name from the given {@link MongoDatabaseFactory factory}."]}
{"SampleId": 4396605, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. Sensitive data is now redacted from the output.", "Returns a string representation of this object; useful for testing and debugging. If getBody() or getCustomAttributes() contain sensitive data, it will be redacted with \"***Sensitive Data Redacted***\" in the output.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging with sensitive data redacted.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 4620051, "Origin": "Copies this expression's return type and size to the given expression.", "Reference": "Copies this expression's type to the specified expression.", "LLMCandidates": ["Assigns this expression's return type to the given expression.", "Assigns the type information and reference of this expression to the given expression.", "Assigns the type information and reference of this expression to the given expression.", "Assigns this expression's return type to the given expression", "Assigns this expression's return type to the given expression"]}
{"SampleId": 1578100, "Origin": "The returned {@link MetadataEntity} is of the same type.", "Reference": "The returned {@link MetadataEntity.Builder} is of the same type.", "LLMCandidates": ["Appends a key-value pair to the builder and returns the builder itself. The key will be converted to lowercase before being added.", "Appends a key-value pair to this builder and returns it. The key is validated before adding.", "Appends a key-value pair to the builder and returns the builder itself. The key is validated before being added and its value is stored in lowercase. The returned builder is of the same type.", "Appends a key-value pair to this {@link Builder} object. The returned {@link Builder} is reference to itself.", "Appends a key-value pair to the current builder object and returns the builder itself. The key is validated before adding it to the map with lowercase keys."]}
{"SampleId": 3629288, "Origin": "Returns an immutable map containing a single mapping.", "Reference": "Returns an unmodifiable map containing a single mapping.", "LLMCandidates": ["Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping."]}
{"SampleId": 4474528, "Origin": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubDirectoryWithResponse(String, Duration,", "Reference": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,", "LLMCandidates": ["Deletes a subdirectory with specified path under an Azure File Share using response object.\n\nGenerates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)} method.", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)", "``Generated a code sample for using ShareDirectoryClient.deleteSubdirectoryWithResponse(String, Duration, Context).``\n \\*\\*\n * Deletes a subdirectory with response in the specified share directory.\n * \\@param subdirectoryName Name of the subdirectory to be deleted.\n * \\@param timeout The maximum time allowed for this operation to complete before a timeout exception is thrown.\n * \\@param context Additional contextual information associated with this request.\n * \\@return A response object that contains status code and other response details.", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)} to delete a subdirectory with response in Azure File Share."]}
{"SampleId": 1611738, "Origin": "The expected indentation should be the same as the indentation of the node\nwhich is the parent of the target modifier node.", "Reference": "The expected indentation should be the same as the indentation of the target node.", "LLMCandidates": ["The expected indentation should be the same as the indentation of the node.", "The expected indentation should be the same as the indentation of the node.", "The expected indentation should be the same as the indentation of the node.", "The expected indentation should be the same as the indentation of the node.", "The expected indentation should be the same as the indentation of the node."]}
{"SampleId": 1356230, "Origin": "Check if the last item in key signature has some trailing space (before any head).", "Reference": "Check if last item in key signature has some trailing space (before any head).", "LLMCandidates": ["Check if the last item in key signature has some trailing space before any head.\n\nNote: The method `sheet.getInterline()` and `staff.getSpecificInterline()` have been used instead of `scale.getInterline()` and `interline` respectively.", "Checks if the last item in a key signature has some trailing space before any head.\n\nUsing updated variable names and classes: staff => sheet, interline => specificInterline.", "Check if the last item in key signature has some trailing space (before any head or interline).", "Check if the last item in key signature has some trailing space (before any head or interline).", "Checks if the last key alter in a KeySignature has some trailing space before any head.\n\nNote: The staff and interline variables have been changed to il (interline) and sil (specific interline), respectively."]}
{"SampleId": 1405621, "Origin": "Marks the action as analyzing.", "Reference": "Marks the action as scanning.", "LLMCandidates": ["Sets the flag to indicate scanning and records the start time", "Sets the flag as scanning and records the start time.", "Sets the flag as scanning and records the start time.", "Sets the status to scanning and records the start time", "Sets the status to scanning and records the start time"]}
{"SampleId": 4396654, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging. If getOutput() is not null, the Output field will be appended with \"***Sensitive Data Redacted***\" instead of its original value.", "Returns a string representation of this object; useful for testing and debugging with sensitive output data redacted", "Returns a string representation of this object; useful for testing and debugging. If getOutput() is not null, the Output field will be appended with \"***Sensitive Data Redacted****\" instead.", "Returns a string representation of this object; useful for testing and debugging. If getOutput() is not null, appends \"Output: ***Sensitive Data Redacted***\" instead.", "Returns a string representation of this object; useful for testing and debugging. If getOutput() is not null, the Output field will be appended with \"***Sensitive Data Redacted****\" instead of its actual value."]}
{"SampleId": 2527768, "Origin": "Get or create a storage block by the name.", "Reference": "Gets or creates a buffer block by the name.", "LLMCandidates": ["Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name."]}
{"SampleId": 1760055, "Origin": "Calculates Minimum - Nulls are handled as zeros.", "Reference": "Calculates Minimum - Nulls are ignored.", "LLMCandidates": ["Calculates the minimum value from the given collection. Null elements are replaced by zeros before comparison.", "Calculates the minimum value from the given FlatDataCollection. Nulls are handled as zeros.", "Calculates the minimum value from the given FlatDataCollection. Nulls are handled as zeros.", "Calculates Minimum from the given FlatDataCollection. Null values are handled by treating them as zeros.", "Calculates the minimum value from the given FlatDataCollection. Null elements are handled as zeros."]}
{"SampleId": 6043566, "Origin": "and repositoryId = ?.", "Reference": "and parentFolderId = ?.", "LLMCandidates": ["Finds SyncDLObjects based on repositoryId and parentFolderId.", "* Finds all SyncDLObjects with repositoryId = ? and parentFolderId =?.", "Finds SyncDLObjects based on repositoryId and parentFolderId.", "Finds SyncDLObjects based on repositoryId and parentFolderId.", "Finds SyncDLObjects based on repositoryId and parentFolderId."]}
{"SampleId": 2217819, "Origin": "Test of var method, of class Exponential.", "Reference": "Test of variance method, of class Exponential.", "LLMCandidates": ["Test of variance method, of class ExponentialDistribution.", "Test of variance method, of class ExponentialDistribution.", "Test of variance method, of class ExponentialDistribution.", "Test of variance method, of class ExponentialDistribution.", "Test of variance method, of class ExponentialDistribution."]}
{"SampleId": 4003565, "Origin": "If you want to extend a value (e.g.", "Reference": "If you like to extend an option (e.g.", "LLMCandidates": ["Edit a configuration file and put a new value using the given ConfigurationPointer.", "If you want to edit a configuration file and put a new value, use this method. Takes a ConfigurationPointer and a String value as arguments.", "This method creates and returns a new instance of KarafDistributionConfigurationFilePutOption with the given configurationPointer and value.", "Edits a configuration file with the given key and value using KarafDistributionConfigurationFilePutOption.", "// Sets the value of a configuration property in the given pointer."]}
{"SampleId": 1841602, "Origin": "Returns the ssh configuration entry which includes host and identity file location", "Reference": "Returns the ssh configuration entry which includes host, identity file location and Host Key\nchecking policy", "LLMCandidates": ["Constructs an SSH configuration entry string with given host name. If the host name starts with \"default-\", the host will be set to \"*\". The identity file location is also included in the configuration.", "Returns the ssh configuration entry which includes host, identity file location, and \"StrictHostKeyChecking = no\"", "Returns the ssh configuration entry which includes host, identity file location, and \"StrictHostKeyChecking = no\"", "Returns the SSH configuration entry which includes host, identity file location, and disables strict host key checking.", "Returns the ssh configuration entry which includes host, identity file location, and disables strict host key checking."]}
{"SampleId": 2912364, "Origin": "Extracts the underlying quotes from the {@link CurveInputs} instances and returns them in a map.", "Reference": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "LLMCandidates": ["Extracts the underlying market data from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying market data from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying market data from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying market data from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying market data from the {@link RatesCurveInputs} instances and returns them in a map."]}
{"SampleId": 1327233, "Origin": "Sets the minimum session timeout.", "Reference": "Sets the session timeout.", "LLMCandidates": ["Sets the timeout for this MultiRaftProtocolBuilder configuration.", "Sets the timeout for the MultiRaftProtocolBuilder configuration.", "Sets the timeout value for this builder.", "Sets the timeout value for this builder.", "Sets the timeout value for this builder."]}
{"SampleId": 3512228, "Origin": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Reference": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link Cat}.", "LLMCandidates": ["Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}."]}
{"SampleId": 4986032, "Origin": "Copy the contents of a Bucket to a RandomAccessThing at a specific offset.", "Reference": "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "LLMCandidates": ["Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copies the contents of a Bucket to a RandomAccessBuffer at a specific offset."]}
{"SampleId": 5177780, "Origin": "This method is used\nonly to initialize the acceptReplacers field.", "Reference": "This method is used\nonly to initialize the headerReplacers field.", "LLMCandidates": ["Initializes and returns a list of HeaderReplacer objects by loading the accept.properties file.", "This method is used to initialize the acceptReplacers field by loading the accept.properties file and processing its content using getheaderReplacers helper method with \"acceptOld\" and \"acceptNew\" keys.", "This method initializes the acceptReplacers list by loading the accept.properties file.", "This method initializes the acceptReplacers list by loading the accept.properties file and parsing its content. The acceptOld and acceptNew values are used to build AcceptReplacer objects, while other key-value pairs are added as agent attributes.", "This method initializes the acceptReplacers list by loading the values from the 'accept.properties' file."]}
{"SampleId": 4388460, "Origin": "To add or remove access for an AWS account to copy or restore a\nmanual DB snapshot, or to make the manual DB snapshot public or\nprivate, use the ModifyDBSnapshotAttribute API.", "Reference": "To add or remove access for an AWS account to copy or restore a manual DB\nsnapshot, or to make the manual DB snapshot public or private, use the", "LLMCandidates": ["Describes the attributes of a DB snapshot using the given request.", "Describes the attributes of a specified DB snapshot using the DescribeDBSnapshotAttributes API.", "Describes the attributes of a specified DB snapshot using the DescribeDBSnapshotAttributes API.", "Describes the attributes of a given DB snapshot using the AWS SDK for Java.", "To describe the attributes of a DB snapshot using the DescribeDBSnapshotAttributes API, use this method. The request contains details about the specific DB snapshot to query. The response includes various metadata and attribute information related to the specified DB snapshot."]}
{"SampleId": 6018371, "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum value for each pixel across the specified bands in the {@link Planar} image using the ImgImageBandMath utility method.", "Computes the minimum value for each pixel across the specified bands in the {@link Planar} image using the provided method 'ImplImageBandMath.minimum(...)'.", "Computes the minimum value for each pixel across the specified bands in the {@link Planar} image using the provided method ImgImageBandMath.minimum.", "Computes the minimum value for each pixel across the specified bands in the {@link Planar} image using an external method.", "Computes the minimum value for each pixel across the specified bands in the {@link Planar} image using an optimized implementation provided by {@link ImplImageBandMath}."]}
{"SampleId": 3992810, "Origin": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "Reference": "{@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "LLMCandidates": ["@deprecated {@code timeDifferenceMs} can be negative but it's absolute value must not exceed the current window \"before\" value.", "@code timeDifferenceMs} can be negative but it's absolute value must not exceed the current window \"before\" value. (Deprecated method)", "@{code timeDifferenceMs} can be negative but its absolute value must not exceed the current window \"before\" value. (Deprecated method)", "@code timeDifferenceMs} can be negative but it's absolute value must not exceed the current window \"before\" value. (Deprecated method)", "@code timeDifferenceMs} can be negative but keep in mind that its absolute value should not exceed the difference between current window \"before\" value and it (resulting in a negative window size). This method is deprecated."]}
{"SampleId": 4788914, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If they are not equal, an AssertionFailedError is thrown.", "If they are not equal, an AssertionFailedError is thrown.", "If the given Objects `expected` and `actual` are not equal, an AssertionFailedError is thrown.", "If the given Objects are not equal, an AssertionFailedError is thrown.", "If the given Objects are not equal, an AssertionFailedError is thrown."]}
{"SampleId": 1310037, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously gets an Api by id.", "Asynchronously gets an Api.", "Asynchronously gets an Api.", "Asynchronously gets an Api by the given id.", "Asynchronously gets an Api by the given id."]}
{"SampleId": 4850245, "Origin": "Tests this matcher against the given {@link DiscordRequest}.", "Reference": "Tests this matcher against the given {@link DiscordWebRequest}.", "LLMCandidates": ["Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given {@link DiscordWebRequest}.", "Tests this matcher against the given {@link DiscordWebRequest}.", "Tests this matcher against the given DiscordWebRequest."]}
{"SampleId": 5218913, "Origin": "Add optimized insert value.", "Reference": "Add insert value.", "LLMCandidates": ["Add an insert value with given derived column names, assignments, and parameters.", "Add an InsertValue with the given column names, assignments, and parameters.", "Add an InsertValue instead of an OptimizedInsertValue.", "Add an InsertValue instead of an OptimizedInsertValue.", "Add an insert value with given derived column names, assignments, and parameters."]}
{"SampleId": 5177561, "Origin": "Creates a new internal Jetty connector.", "Reference": "Creates a new Jetty connection factory.", "LLMCandidates": ["Creates a new Jetty connection factory with given configuration.", "Creates a new Jetty connection factory based on the given configuration.", "Creates a new Jetty connection factory based on the given configuration.", "Creates a new Jetty connection factory based on the provided HttpConfiguration.", "Creates a new Jetty connection factory based on the provided HttpConfiguration."]}
{"SampleId": 3588530, "Origin": "See\n{@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set)} for details.", "Reference": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "LLMCandidates": ["See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details on updating allocationIds and managing pre60AllocationIds.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details on this updated method that accepts an additional parameter 'pre60AllocationIds'."]}
{"SampleId": 1725851, "Origin": "This test asserts that only one\nstate is added to the stateflowgraph.", "Reference": "This test asserts that only one state is added to the state-flow graph.", "LLMCandidates": ["This test asserts that only one state is added to the stateflowgraph with the given browser configuration.", "This test asserts that only one state is added to the stateflowgraph when a StateVertexFactory is defined.", "This test asserts that only one state is added to the stateflowgraph when a StateVertexFactory is defined. The new method signature includes an additional parameter for EmbeddedBrowser browser.", "This test asserts that only one state is added to the stateflowgraph when a StateVertexFactory is defined.", "This test asserts that only one state is added to the stateflowgraph when a StateVertexFactory is defined. The new method signature includes an additional EmbeddedBrowser parameter."]}
{"SampleId": 5595783, "Origin": "Update the metadata version for the given key (cluster or store).", "Reference": "Update the metadata versions for the given keys (cluster or store).", "LLMCandidates": ["Update the metadata version for the given nodeIds and key (cluster or store).", "Update the metadata version for the given nodeIds and versionKey.", "Update the metadata version for the given nodeIds and key (cluster or store).", "Update the metadata version for the given nodeIds and key (cluster or store).", "Update the metadata version for the given nodeIds and versionKey."]}
{"SampleId": 3344327, "Origin": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Observable;", "Reference": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Single;", "LLMCandidates": ["/**\n * Creates a Promise with a single item emitted by a given SingleOnSubscribe.\n *\n * @param <T> the type of the emitted items\n * @param onSubscribe a SingleOnSubscribe that will create an Observable emitting a single item\n * @throws UnmanagedThreadException if executing in an unmanaged thread\n */", "/**\n * Creates a new Promise with an Observable that will emit a single value based on the given {@code SingleOnSubscribe}.\n *\n * @param <T> the type of the emitted value\n * @param onSubscribe the {@link SingleOnSubscribe} that, when invoked, will create the Observable that emits the single value\n * @return the created Promise with the Observable\n * @throws UnmanagedThreadException if called from a managed thread\n */", "/{@code\nimport io.reactivex.Single;\n\npublic static <T> Promise<T> promise(SingleOnSubscribe<T} onSubscribe) throws UnmanagedThreadException {\n    return promise(Single.create(onSubsubscribe));\n}\n\nCreates and returns a new Promise based on a given SingleObservableSupplier.\n/", "\"\\n\\n<code>\\nimport ratpack.rx2.RxRatpack;\\nimport ratpack.test.exec.ExecHarness;\\nimport io.reactivex.Single;\\n\\n</code>\\n\\nCreate and return a Single Observable.\\n\\n<p>\\n<code>\\npublic static <T> Promise<T> promise(SingleOnSubscribe<T> onSubscribe)\\nthrows UnmanagedThreadException {\\n    return promise(Single.create(onSubscribe));\\n  }\\n</code>\\n\\n</p>\\n\\n<p>\\nReplaced Observable with Single and modified method name.</p>\"", "@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Single;\n\n ** Creates a Promise from a SingleOnSubscribe **\n\n Please use this method to create a Promise that will complete with the result of a SingleObservable.\n - <T> the type of data emitted by the SingleObservable\n - onSubscribe the supplier of the SingleObservable\n\n Throws: UnmanagedThreadException if called on a background thread\n */"]}
{"SampleId": 3080416, "Origin": "We include all flags that enable CPU instructions as we want best possible performance for\nthe code.", "Reference": "We include all flags that enable AMD64 CPU instructions as we want best possible performance\nfor the code.", "LLMCandidates": ["We include all AMD64 flags that enable CPU instructions for optimal code performance.", "We include all AMD64 flags that enable CPU instructions for optimal code performance.", "We include all AMD64 flags that enable CPU instructions for optimal performance of the code.", "We include all AMD64 flags that enable CPU instructions for optimal performance of the code.", "We include all AMD64 flags that enable CPU instructions for optimal performance of the code."]}
{"SampleId": 2568439, "Origin": "Sets the value of the 'ValueType' field.", "Reference": "Sets the value of the 'valueType' field.", "LLMCandidates": ["Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field."]}
{"SampleId": 3921113, "Origin": "The LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.", "Reference": "The ORGANIZATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "LLMCandidates": ["The ORGANIZATION \"Ontario Bank\" and the LOCATION \"Ontario Lake\" should not be mixed up in the NER tagging since they represent different entities.", "The ORGANIZATION \"Ontario Bank\" should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank. The LOCATION \"Ontario Lake\" and the LOCATION \"LOCATION\" (representing the location of the Native American Church) should not be overwritten as they are separate entities.", "The ORGANIZATION \"Ontario Bank\" should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.}\n\n{The LOCATION \"Ontario Lake\" and the STATE_OR_PROVINCE \"Ontario\" should be treated separately in the NER tagging.", "The ORGANIZATION \"Ontario Bank\" should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank. The LOCATION \"Ontario Lake\" and the LOCATION \"Ontario\" (STATE_OR_PROVINCE) are distinct entities.", "The ORGANIZATION \"Ontario Bank\" should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.}\n\nThe location of Ontario Lake should not be overwritten since the province or state (Ontario) of Ontario Lake is different from that of Ontario Bank."]}
{"SampleId": 5440225, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type\\_argument\\_index of the path element of the given index.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}. Returns the type_argument_index of the path element of the given index."]}
{"SampleId": 3805026, "Origin": "Registers a new content observer for the media library", "Reference": "Registers a new library observer for the media library", "LLMCandidates": ["Registers a new library observer for the media library", "Registers a new library observer for the media library", "Registers a new library observer for the media library", "Registers a new library observer for the media library", "Registers a new library observer for the media library"]}
{"SampleId": 2615521, "Origin": "Returns the height of the specified row, or 0 if the table layout has not been validated.", "Reference": "Returns the height of the specified row.", "LLMCandidates": ["Returns the height of the specified row.", "Returns the height of the specified row.", "Returns the height of the specified row.", "Returns the height of the specified row", "Returns the height of the specified row"]}
{"SampleId": 2774802, "Origin": "Specifies the component's horizontal width, measured in pixels.", "Reference": "Specifies the horizontal width of the %type%, measured in pixels.", "LLMCandidates": ["Specifies the horizontal width of the component, measured in pixels.", "Specifies the horizontal width of the component, measured in pixels.", "Specifies the horizontal width of the Component, measured in pixels.", "Specifies the horizontal width of the Component, measured in pixels.", "Specifies the horizontal width of the component, measured in pixels."]}
{"SampleId": 3399007, "Origin": "Test of parse method, of class FinishedMessageParser.", "Reference": "Test of parse method, of class FinishedParser.", "LLMCandidates": ["Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser."]}
{"SampleId": 4473556, "Origin": "Create Subject Alternative names with emails.", "Reference": "Set the emails.", "LLMCandidates": ["Set the emails for Subject Alternative Names.", "Set the emails for this SubjectAlternativeNames object.", "Sets the emails for this SubjectAlternativeNames object.", "Sets the emails for this SubjectAlternativeNames object.", "Set Subject Alternative names with emails. (Setter method)"]}
{"SampleId": 4615496, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["Returns an iterator over the nodes preceding this node in the tree, starting from the parent of this node and moving upwards. The nodes returned are not finalized, so they must be finished via {@link ANode#finish()} before being used further.", "Returns an iterator over the nodes preceding this node in the tree hierarchy. The nodes returned should be finalized via {@link ANode#finish()}. Note that the childIter() method is used instead of children().", "Returns an iterator over the preceding nodes of this node in the tree, where the nodes are returned in the reverse order of their appearance before this node in the tree. The nodes must be finalized via {@link ANode#finish()} if they are to be further used.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}. The child iterators are now used instead of children arrays.", "Returns an iterator that iterates through the preceding nodes of this node in the tree, starting from the parent node and moving upwards. The nodes returned must be finalized via {@link ANode#finish()}. Note: Starting from the updated version, this method uses {@link ANode#childIter()} instead of {@link ANode#children()}."]}
{"SampleId": 2081521, "Origin": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but failes if it doesn't.", "Reference": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "LLMCandidates": ["We make sure that trying to update a field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update a field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update a field works if the user has the \"correct\" role, but fails if it doesn't.}}\n\n{Ensures that updating a field is successful when the user has the designated role, and unsuccessful otherwise.", "We make sure that trying to update a field or value works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that updating the field succeeds if the user has the \"correct\" role, but fails if it doesn't."]}
{"SampleId": 6192516, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance and and {@link EventContext}.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "LLMCandidates": ["Create new {@link Builder} based on an existing {@link CoreEvent} instance and {@link EventContext}.", "Create new Builder based on an existing CoreEvent instance and EventContext.", "Create new Builder based on an existing CoreEvent instance and EventContext.", "Create new Builder based on an existing CoreEvent instance and EventContext.", "Create new Builder based on an existing CoreEvent instance and EventContext."]}
{"SampleId": 2217848, "Origin": "Test of npara method, of class MultivariateGaussian.", "Reference": "Test of length method, of class MultivariateGaussian.", "LLMCandidates": ["Test of length method, of class MultivariateGaussian.", "Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussian.", "Test of length method, of class MultivariateGaussian."]}
{"SampleId": 3552099, "Origin": "Create a {@link Jwt} Validator that contains all standard validators as well as\nany supplied in the parameter list.", "Reference": "Create a {@link Jwt} Validator that contains all standard validators when an issuer is known.", "LLMCandidates": ["Create a {@link Jwt} Validator that contains a default issuer validator and the given validators.", "Create a {@link Jwt} Validator that contains a {@code JwtTimestampValidator} and a new {@code JwtIssuerValidator} with the given issuer.", "Create a {@link Jwt} Validator that contains the standard validator, JwtTimestampValidator, and an additional instance of JwtIssuerValidator with the specified issuer.", "Create a {@link Jwt} Validator that contains the standard validator, JwtTimestampValidator, and an additional instance of JwtIssuerValidator with the given issuer.", "Create a {@link Jwt} Validator that contains the standard validator, JwtTimestampValidator, and a new validator, JwtIssuerValidator with the specified issuer."]}
{"SampleId": 373027, "Origin": "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing\nsupported environment variables.", "Reference": "Gets a property of type {@link PropertyType#PATH}.", "LLMCandidates": ["Gets a property of type {@link PropertyType#PATH}, interpreting the value properly. If the value contains any occurrences of the string \"$ACCUMULO\\_\", an IllegalArgumentException is thrown.", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly. If the value contains a specific prefix (\"$ACCUMULO_\"), an exception is thrown as environment variable interpolation is not supported in this method.", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly if it contains any occurrence of \"{$ACCUMULO\\_}\" and does not support replacing other environment variables.", "Gets a property of type {@link PropertyType#PATH}, interprets the value properly.}\n\nIf the value contains a supported environment variable starting with \"$ACCUMULO_\", an exception is thrown. Otherwise, the original functionality remains.", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly. If the value contains any string starting with \"$ACCUMULO_\", an IllegalArgumentException is thrown as environment variable interpolation is not supported in this method."]}
{"SampleId": 2732049, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not the specified @NotNull <code>SVGElement</code> complies with this <code>SvgSelector</code>'s conditions.", "Returns whether or not the specified {@link SVGElement} fits this {@link SvgSelector} conditions with the given {@code icon} not null and {@code element} not null.", "Checks whether or not the given {@link SVGElement} satisfies the selector conditions and has the required attributes for this {@link SvgSelector}.", "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions, with the given {@link SvgIcon} not being null and the given {@link SVGElement} not being null.", "Returns whether or not the specified {@link SVGElement} matches this {@link SvgSelector} conditions with null checks applied to the input parameters."]}
{"SampleId": 5062115, "Origin": "Parent will have\nmodified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}.", "Reference": "Parent will have\nmodification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "LLMCandidates": ["Adds all directories along extraction paths to explicitly set their permissions. The permissions of these directories will be set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Sets the modification time of the parent directory to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Sets the modification time of the parent directory to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Sets the modification time of the parent directory to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Adds directories along extraction paths to set their modification time to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME} if they are not the root directory."]}
{"SampleId": 3406829, "Origin": "Returns true if the method m is visible from code in the class from.", "Reference": "Returns true if the classmember m is visible from code in the class from.", "LLMCandidates": ["Returns true if the ClassMember m is visible from code in the class from.", "Returns true if the ClassMember m is visible from code in the SootClass from.", "Returns true if the class member m is visible from code in the class from.", "Returns true if the class member m is visible from code in the class from.", "Returns true if the class member m is visible from code in the class from."]}
{"SampleId": 2706894, "Origin": "Set Balancing.", "Reference": "Set Saldierung.", "LLMCandidates": ["Sets the value of the IsBalancing field.\n\n(Note: This method overrides the parent class's setIsBalancing method.)", "Sets the value of the IsBalancing column.", "Sets the value of the IsBalancing field.\n\nIf you meant to ask for updating the Javadoc comment of the setIsBalancing method with the updated code, then here is the updated comment:\n\n@Override\n/**\n * Sets the value of the IsBalancing field.\n * @param IsBalancing the new value of the IsBalancing field\n */\npublic void setIsBalancing (boolean IsBalancing) {\n set_Value (COLUMNNAME_IsBalancing, Boolean.valueOf(IsBalancing));", "Set the boolean value of IsBalancing", "Sets the value of the IsBalancing column based on the given boolean value."]}
{"SampleId": 471489, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:  type.", "LLMCandidates": ["Sets the disableStreamCache property based on the given boolean value.", "Sets the property \"disableStreamCache\" according to the provided boolean value.", "Sets the property \"disableStreamCache\" based on the passed boolean value.", "Sets the property \"disableStreamCache\" based on the passed boolean value.", "Sets the property \"disableStreamCache\" to the given value."]}
{"SampleId": 2915665, "Origin": "Returns a curve node for a CDS quoted in points upfront.", "Reference": "Returns a curve node with points upfront convention.", "LLMCandidates": ["Returns a curve node for a CDS quoted with points upfront.", "Creates a CdsCurveNode for a CDS quoted with points upfront.", "Creates a new CdsCurveNode instance for a CDS with given template, observable ID, legal entity ID, and quote convention set to POINTS\\_UPFRONT, as well as the specified fixed rate.", "Creates a new CdsCurveNode for a CDS with quote convention set to POINTS\\_UPFRONT.", "Returns a curve node for a CDS quoted with points upfront."]}
{"SampleId": 733850, "Origin": "Recursively find all operators under root, that are of class clazz, and\nput them in result.", "Reference": "Recursively find all operators under root, that are of class clazz or are the sub-class of clazz, and\nput them in result.", "LLMCandidates": ["Recursively find all operators under root, that are assignable from clazz, and put them in result.", "Recursively find all operators under root, that are assignable from clazz, and add them to result.", "Recursively find all operators under root, that are assignable from clazz, and add them to result.", "Recursively find all operators under root, that are assignable from clazz, and put them in result.", "Recursively find all operators under root, that are assignable from clazz, and add them to result."]}
{"SampleId": 4245998, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Checks if text is empty and returns null if it is; otherwise, converts text to Time object using the toTime() method.", "Convert to object types, returning null if text is empty (as per Strings.isEmpty())", "Convert to object types, returning null if text is empty (as per Strings.isEmpty() condition).", "Converts to object types, returning null if text is empty (using Strings.isEmpty() function).", "Converts to object types, returning null if text is empty (using Strings.isEmpty() function)."]}
{"SampleId": 230839, "Origin": "Sets the transformed layout.", "Reference": "Transform the partition.", "LLMCandidates": ["Applies a transformation with the given definition to the layout.\n\n(Assuming mTransformation is a member variable of type Transformation and its setter method is named \"set\")", "Applies a transformation with the given definition to the layout", "Applies a transformation with the given definition to the layout", "Sets the transformation definition and layout.", "Sets the transformation definition and layout."]}
{"SampleId": 6174108, "Origin": "Creates an entity and populates its state based on the dbObject given.", "Reference": "Creates an entity and populates its state based on the document given.", "LLMCandidates": ["Maps an entity instance from a Document based on the given class and Document object, using the mapper. Throws MappingException if the class is unmapped.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given."]}
{"SampleId": 5629969, "Origin": "Sets the entity.", "Reference": "Set the entity.", "LLMCandidates": ["Sets the entity for this builder and returns it.", "Sets the entity for this builder and returns the builder instance itself.", "Sets the entity for this builder and returns the builder instance itself.", "Sets the entity for this builder and returns it.", "Sets the entity for this builder and returns it."]}
{"SampleId": 1150835, "Origin": "An empty NumericDocValues which returns zero for every document", "Reference": "An empty NumericDocValues which returns no documents", "LLMCandidates": ["An empty NumericDocValues which returns NO\\_MORE\\_DOCS for all document access methods except cost() that returns zero.", "This static factory method returns a new instance of NumericDocValues which indicates an empty sequence when queried for document values.", "An empty NumericDocValues which returns NO\\_MORE\\_DOCS for every document access", "An empty NumericDocValues which returns NO\\_MORE\\_DOCS for every document access", "An empty NumericDocValues which represents an exhausted iterator"]}
{"SampleId": 3427796, "Origin": "Setter for the URL of the content review icon associated with this item", "Reference": "Setter for the css class of the content review icon associated with this item", "LLMCandidates": ["Setter for the CSS class of the content review icon associated with this item", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item."]}
{"SampleId": 3196536, "Origin": "Returns\n {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "Reference": "Returns\n if {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "LLMCandidates": ["Returns the MD5 checksum as a ByteString instead of a String.", "Returns the checksum as a ByteString instead of a String.", "Returns the checksum as a ByteString instead of a String.", "Returns the checksum in ByteString format. Previously returned a String type.", "Returns the checksum in ByteString format. Previously returned a String type."]}
{"SampleId": 1576617, "Origin": "Returns an {@link InputSupplier} for a given entry.", "Reference": "Gets the {@link Manifest} inside the given jar.", "LLMCandidates": ["Returns an {@link InputSupplier} for a given entry in a JAR file or returns the Manifest of a local JAR file if it exists.", "Returns an {@link InputSupplier} for a given entry in a JAR file or returns the Manifest of a local JAR file if specified URL is a file path.", "Returns an {@link InputSupplier} for a given file or JAR entry based on the URL provided. If the location is local, it returns the manifest of the file instead.", "Returns an {@link InputSupplier} for a given file or JarManifest if the location is local, otherwise searches for the specified entry in a JarFile using JarInputStream.", "Returns an {@link InputSupplier} for a given file or Jar entry based on the URL."]}
{"SampleId": 2732050, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not the given {@link SVGElement} matches the selector defined by this {@link SvgSelector}, based on the element's ID, class, or exact type.", "Determines if the given {@link SVGElement} matches the current {@code SvgSelector} based on its ID, class or element name.", "Determines if the given {@link SVGElement} matches the specified {@link SvgSelector} selector conditions.", "Checks if the given {@link SVGElement} matches the current {@link SvgSelector} selector conditions. The selector can be an ID or a class name.", "Returns whether or not the given {@link SVGElement} matches this {@link SvgSelector}'s selector conditions based on the updated method implementation."]}
{"SampleId": 2134051, "Origin": "bounded predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["* predict the rating given a sparse vector for a specific user-item pair", "bounded predict\n* predict the rating given a sparse vector for a specific user-item pair\n\nNote: The method now takes in an additional int userId and int itemId as parameters.", "* predict the rating given a sparse vector for a user-item pair\n * @param userId the ID of the user\n * @param itemId the ID of the item\n * @param x the input feature vector as a SparseVector object\n * @param bound whether to enforce upper and lower bounds on the predicted value\n */", "* predict the rating given a sparse vector for a specific user-item pair", "* predict the rating given a sparse vector for a specific user-item pair"]}
{"SampleId": 5440405, "Origin": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method.", "Reference": "One way to ensure this is to always call {@link #declareLabel} before\ncalling this method.", "LLMCandidates": ["One way to ensure this is to always call {@link #declareLabel(Label)} before calling this method.", "One way to ensure this is to always call {@link #declareLabel(Label)} before calling this method.", "One way to ensure this is to always call {@link #declareLabel(Label)} before calling this method.", "One way to ensure this is to always call {@link #declareLabel(Label)} before calling this method.", "One way to ensure this is to always call {@link #declareLabel(Label) declaredLabel} before calling this method."]}
{"SampleId": 4003873, "Origin": "Felix constructor documentation for more information on\nframework configuration options.", "Reference": "Refer to the  Felix\n constructor documentation for more information on framework\nconfiguration options.", "LLMCandidates": ["```java\n/**\n * Entry point of the application to launch the Karaf framework.<br>\n * <p>\n * This method sets the property \"karaf.restart\" to false and checks if it is necessary to clean the data directory before starting the framework.<br>\n * If so, it deletes the content of the data directory.<br>\n * Then, a new instance of the Main class is created with the given arguments and the framework is launched using the lifecycle manager.<br>\n * If an error occurs during the launch or shutdown process, the exit code is set accordingly and an error message is printed to the standard error stream.</p>\n * <p>\n * Once the framework is stopped or if a timeout occurs while waiting for it to stop, the lifecycle manager is destroyed and the restart flag is checked.<br>\n * If the \"karaf.restart\" system property is set to true, the method restarts the process. Otherwise, the process exits with the given exit code.</p>\n */\n```", "/// <summary>\n /// Starts the Karaf framework and handles any errors or timeouts.\n /// </summary>\n /// <param name=\"args\"> The command line arguments for the main class. </param>", "This method initializes and runs a Karaf OSGI framework. It keeps trying to launch the framework even if it fails or times out, allowing for potential restart attempts.", "```java\n/**\n * Initializes and runs the Karaf framework with provided arguments. {@code Main.launch()} method is used to create and launch the framework instance. If the creation or launch fails, an error message is printed and the VM is exited with a non-zero exit code. Once the framework is running, it waits for it to stop before exiting the VM. If the framework does not stop within a certain time, it either restarts or exits depending on the value of {@code karaf.restart} system property.\n */\n```", "Starts and manages the Karaf OSGI framework with various configuration options. If a clean flag is set, the data directory will be deleted before launching the framework. The exit code may vary depending on the outcome of the launch and shutdown processes."]}
{"SampleId": 2775452, "Origin": "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.", "Reference": "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "LLMCandidates": ["The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom."]}
{"SampleId": 3652423, "Origin": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code filePathParam}.", "Reference": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code fileName}.", "LLMCandidates": ["Verifies that the given emailContent is the same as the content given in the file with the specified fileName.", "Verifies that the given emailContent is the same as the content given in the file with the specified fileName.", "Verifies that the given emailContent is the same as the content given in the file with the specified fileName.", "Verifies that the given emailContent is the same as the content given in the file with the specified fileName.", "Verifies that the given emailContent is the same as the content given in the file with the specified fileName."]}
{"SampleId": 2732074, "Origin": "Returns a better disabled icon than BasicLookAndFeel offers.", "Reference": "Returns better disabled icon than {@link BasicLookAndFeel} offers.", "LLMCandidates": ["Generates and returns a disabled version of the given icon if it's not null and has positive width and height. Otherwise, returns the given icon.", "Returns a disabled icon based on the given icon, if it is not null and has positive width and height.", "Generates a disabled version of the given icon if it is not null, has positive width and height. Otherwise returns the input icon.", "Returns a disabled icon for the given icon if it is not null and has positive width and height. Otherwise, returns the given icon as-is.", "Returns a disabled icon for the given icon, if it's not null and has positive width and height."]}
{"SampleId": 4048110, "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "LLMCandidates": ["This will set the difference between the annotations \"outer\" rectangle defined by /Rect and the border.", "This will set the difference between the annotations \"outer\" rectangle defined by /Rect and the border.", "Sets the difference between the annotations \"outer\" rectangle defined by /Rect and the border.", "Sets the difference between the annotations \"outer\" rectangle defined by /Rect and the border.", "This will set the difference between the annotations \"outer\" rectangle defined by /Rect and the border."]}
{"SampleId": 1703350, "Origin": "Compute the total number of transferred addresses.", "Reference": "Get the total number of addresses in range.", "LLMCandidates": ["Returns the total number of addressed transferred.", "Returns the total number of addresses transferred.", "Returns the total number of addresses transferred.", "Returns the total number of addresses transferred.", "Returns the total number of addresses transferred."]}
{"SampleId": 664505, "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.", "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}", "LLMCandidates": ["Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, Throwable)} instead.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, Throwable)} instead."]}
{"SampleId": 3035868, "Origin": "Backs up all buckets for the device to the given node.", "Reference": "Backs up the given flow bucket.", "LLMCandidates": ["Backs up the given FlowBucket to all backup nodes if the bucket's term matches the replica term and the local node is the current master.", "Backs up the specified FlowBucket to all backup nodes if the bucket's term matches the replica term and the local node is the current master.", "Backs up the specified FlowBucket to all backup nodes if its term matches the replica term and the local node is the current master.", "Backs up the given FlowBucket to all backup nodes, if the bucket's term matches the replica term and the local node is the current master.", "Backs up the given FlowBucket to all backup nodes if its term matches the replica term and the local node is the current master."]}
{"SampleId": 2848848, "Origin": "Make JobDirectoryManifestService beans are configured as expected.", "Reference": "Make JobDirectoryManifestService beans is configured as expected.", "LLMCandidates": ["Check that exactly one bean of type JobDirectoryManifestService is configured in the application context.", "Checks if there is exactly one bean of JobDirectoryManifestService type configured in the application context.", "Verify that exactly one bean of type JobDirectoryManifestService is configured.", "Verify that exactly one bean of type JobDirectoryManifestService is configured.", "Verify that exactly one bean of type JobDirectoryManifestService is configured."]}
{"SampleId": 2577115, "Origin": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "Reference": "Runs the given {@code runnable} at most {@code attemptsCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "LLMCandidates": ["Runs the given Supplier<T> at most attemptsCount times until it returns a non-null value, leaving intervalMillis milliseconds between each invocation and passing the current iteration number as an argument to get() method.", "Runs the given Supplier<T> at most attemptsCount times, passing the result of each invocation to the specified index iteration. Leaves intervalMillis milliseconds between the invocations.", "Runs the given Supplier<T> at most attemptsCount times until it returns a value non-null and non-exceptional, leaving intervalMillis milliseconds between each invocation. The current iteration number is also passed to the supplier in each attempt.", "Runs the given Supplier<T> at most attemptsCount times with an increment of iteration between the invocations, leaving intervalMillis milliseconds between each attempt if it's greater than zero.", "Runs the given Supplier<T> at most attemptsCount times with an increasing iteration number, leaving intervalMillis milliseconds between each invocation."]}
{"SampleId": 4618280, "Origin": "Removes a query focus from the stack.", "Reference": "Removes the current query focus from the stack.", "LLMCandidates": ["Removes the last query focus from the stack.", "Removes the last query focus from the stack.", "Removes the last query focus from the stack.", "Removes the last query focus from the stack.", "Removes the last query focus from the stack."]}
{"SampleId": 5458245, "Origin": "It\nsatisfies the general contract of the {@link Object#hashCode", "Reference": "It satisfies the general\ncontract of the {@link Object#hashCode Object.hashCode} method.", "LLMCandidates": ["Overrides the Object's hashCode method. The hash value is computed by mixing name and mods hashcodes using the multiplicative method, and if compiledVersion is not null, its hashcode is added to the result using the same multiplicative method.", "@inheritdoc} This method now also includes the hash code of the compiledVersion variable in the calculation.", "@inheritdoc} This method returns a hash code value for this object. The hash code is calculated based on the name and mods of the object, along with the compiledVersion if it's not null.", "@Override\n// Calculates the hash code for this object based on its name, modifiers and compiled version if present.\n\n// Satisfies the general contract of the Object.hashCode() method:\n// - Hash codes of equal objects must return the same value.\n// - Hash codes of non-equal objects should be unequal.\n// - This class implements this method such that it relies on the values of its instance variables.\n// - If the fields that are used in equality comparisons change, then the hash code must also change.\n\n// The hash code is calculated as follows:\n// - hash = name.hashCode() * 43 + mods.hashCode();\n// - If compiledVersion is not null, then hash is multiplied by 43 and the hash value of compiledVersion is added to it.", "@Override\n/// <summary>\n/// Computes a hash code value for this object.\n/// </summary>\n/// <returns>a hash code value for this object</returns>\n/// <remarks>\n/// This implementation of {@code hashCode} combines the hash values of the {@link #name} and {@link #mods} fields using the {@code hashCode} method, and further appends the hash value of {@link #compiledVersion}, if not null.\n/// </remarks>"]}
{"SampleId": 1922860, "Origin": "NativeLinkable}.", "Reference": "NativeLinkableGroup}.", "LLMCandidates": ["* Returns an iterable of NativeLinkableGroups that represent the native dependencies of this build rule.", "@inheritdoc \n\n @Override\n  returns an iterable of NativeLinkableGroups.", "* Returns an iterable of NativeLinkableGroups that represent the native linkable dependencies of this build rule.", "* Returns an iterable of NativeLinkableGroups that represent the native dependencies of this build rule.", "* Returns an iterable of NativeLinkableGroups that represent the native dependencies of this build rule."]}
{"SampleId": 3830101, "Origin": "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Reference": "Returns a new Run with the status of the given completed step set accordingly.", "LLMCandidates": ["Sets the status of the given step to the new specified value in a new Run object.", "Sets the status of the given, completed step to the specified value in a new Run object.", "Sets the status of the given, completed step to the specified value in a new Run object.", "Sets the status of the given step in a new Run and returns it. The given step's previous status must be unfinished before this method can be called.", "Sets the status of the given step in a new Run and returns it. The given step must not have been completed yet."]}
{"SampleId": 2912437, "Origin": "Sets the groups used to find an issuer curve.", "Reference": "Sets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Sets the groups used to find an issuer curve with LegalEntityId as key.", "Sets the groups used to find an issuer curve with LegalEntityId as key", "Sets the groups used to find an issuer curve with LegalEntityId as key", "Sets the groups used to find an issuer curve with LegalEntityId as key", "Sets the groups used to find an issuer curve with LegalEntityId as key"]}
{"SampleId": 4776185, "Origin": "Sets the amount of damage caused by the event", "Reference": "Sets the raw amount of damage caused by the event", "LLMCandidates": ["Sets the damage based on DamageModifier.BASE value and the given amount.", "Sets the damage based on DamageModifier.BASE value and the given amount.", "Sets the damage based on DamageModifier.BASE value and the given amount.", "Sets the damage based on DamageModifier.BASE value and the given damage.", "Sets the damage based on DamageModifier.BASE value and the given damage amount."]}
{"SampleId": 2544522, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in dest.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in dest.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in 'dest'.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in {@code dest}."]}
{"SampleId": 4470238, "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.", "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.", "LLMCandidates": ["Gets the EncryptionScope used to encrypt this string's content on the server.", "Gets the EncryptionScope used to encrypt this blob's content on the server (now returns a String instead of EncryptionScope object).", "Gets the EncryptionScope used to encrypt this blob's content on the server (now returns a String instead of an EncryptionScope object).", "Gets the EncryptionScope used to encrypt this string's content on the server.", "Gets the EncryptionScope used to encrypt this blob's content on the server as a String."]}
{"SampleId": 1131683, "Origin": "If version is null, \"latest\" or \"$LATEST\",\nthen it returns the highest version available in the system for the package.", "Reference": "If version is null, PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package.", "LLMCandidates": ["If version is null, \"latest\" or equals to PackageUtils.LATEST or PackagePluginHolder.LATEST, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or equals to PackageUtils.LATEST or PackagePluginHolder.LATEST, then it returns the highest version available in the system for the given package.", "If version is null, \"latest\" or equals either PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package.", "If version is null, or equals to \"latest\" or \"{PackageUtils.LATEST}\" or \"{PackagePluginHolder.LATEST}\", then it returns the highest version available in the system for the given package.", "If version is null, \"latest\" or equals to PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package."]}
{"SampleId": 5175625, "Origin": "Configuration)", "Reference": "Dynamic Configuration)", "LLMCandidates": ["/*\n * If multiple redirection URIs have been registered for the client, if only part of\n * a registered redirection URI has been provided with the authorization request, or\n * if no redirection URI was provided, the client MUST include a valid redirection URI\n * using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)\n */", "/*\n * If multiple redirection URIs have been registered for a client, if only part of\n * the redirection URI has been registered, or if no redirection URI has been\n * registered, the client MUST include a redirection URI with the authorization\n * request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)\n */\n\n/*\n * When a redirection URI is included in an authorization request, the authorization\n * server MUST compare and match the value received against at least one of the\n * registered redirection URIs (or URI components) as defined in [RFC3986] Section 6,\n * if any redirection URIs were registered. (See 3.1.2.3. Dynamic Configuration)\n */\n\n/*\n * Process the provided redirectUri and the client's registered redirectURIs to determine a valid one.\n */", "/*\n * If multiple redirection URIs have been registered for the client, if only part of\n * the redirection URI has been registered, or if no redirection URI has\n * been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)\n */\n\n/*\n * When a redirection URI is included in an authorization request, the authorization server MUST compare and match the value received against at least one of the registered redirection URIs (or URI components) as defined in [RFC3986] Section 6, if any redirection URIs were registered for the client. (See 3.1.2.3. Dynamic Configuration)\n */", "/*\n * If no redirection URI is provided by the client or if multiple redirection URIs have been registered,\n * the client MUST include a redirection URI with the authorization request using the \"redirect_uri\"\n * request parameter. If only part of the registered redirection URI has been provided, the client may\n * use that as the value for the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)\n */", "/**\n * This method checks if a given redirect URI is valid based on the registered redirect URIs of a client.\n * If no or only part of a redirect URI has been registered, or if the provided redirect URI does not match any of the registered ones, an OAuthException will be thrown with error code \"invalid\\_request\".\n * (See 3.1.2.3. Dynamic Configuration)\n */"]}
{"SampleId": 803642, "Origin": "Gets the threshold parameter value.", "Reference": "Get the threshold parameter value.", "LLMCandidates": ["Gets the threshold value", "Gets the value of the threshold", "Gets the threshold value.", "Gets the threshold value.", "Gets the threshold value."]}
{"SampleId": 237395, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen a file is not the correct size.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen a file is not the correct size.", "LLMCandidates": ["Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when a file is not of the correct size.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when a file is not of the correct size.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when a file is not the correct size.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when a file is not the correct size.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when a file is not the correct size."]}
{"SampleId": 1612089, "Origin": "Returns list of nodes matching defined line and column number.", "Reference": "Returns list of nodes matching defined line number, column number and token type.", "LLMCandidates": ["Returns list of nodes matching defined line and column number based on token type", "Returns list of nodes matching defined line and column number based on token type.", "Returns list of nodes matching defined line and column number based on token type.", "Returns list of nodes matching defined line and column number based on token type.", "Returns list of nodes matching defined line and column number based on token type."]}
{"SampleId": 1992986, "Origin": "Deletes an external ID.", "Reference": "Inserts or updates an external ID.", "LLMCandidates": ["Updates an external ID.", "Updates an external ID.", "Updates the review database by modifying an external ID.", "Updates the review database by modifying an external ID.", "Updates an external ID."]}
{"SampleId": 6330486, "Origin": "Calls the specified converter function with the current Maybe instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Applies the given converter function to the current Maybe instance and returns the result.", "Applies the given converter function to this Maybe instance and returns the resulting value", "Applies the given converter function to the current Maybe instance and returns its result.", "Applies the given converter function to the current Maybe instance and returns its result.", "Applies the given converter function to the current Maybe instance and returns its result."]}
{"SampleId": 2337101, "Origin": "Get OpenID IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "Reference": "Get list of OpenID Connect IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "LLMCandidates": ["Get OpenID IDP configurations from the server\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs using the provided authentication token.", "Retrieve a list of configured OpenID Connect IDPs from the server. This method internally calls getOpenIdIdpConfigsWithHttpInfo(xSdsAuthToken) and returns the data property of its response.", "Retrieve a list of configured OpenID Connect IDPs from the server.", "Retrieve a list of configured OpenID Connect IDPs from the server.", "Retrieve a list of configured OpenID Connect IDPs from the server."]}
{"SampleId": 431814, "Origin": "Reports the percentile value from the given list ordered in a non-descending order.", "Reference": "Reports the percentile value from the continuous distribution described by a given list of\nsamples.", "LLMCandidates": ["Reports the percentile value from the given list ordered in a non-descending order. The percentile is calculated based on a quantile scale to allow reporting of sub-percentile values. For instance, p99.9 represents 99.9th percentile.", "Calculates the percentile value based on a given list ordered in a non-descending manner using quantiles and a specified scale.", "Reports the percentile value from the given list ordered in a non-descending order. The percentile value is calculated based on quantiles and a specified scaling factor to allow reporting of sub-percentile values such as p99.9.", "Reports the percentile value from the given list ordered in a non-descending order. The percentile value is computed based on a quantile scale to allow reporting of percentiles such as p99.9.}}\n\nThis should update the comment while retaining the original part about reporting the percentile value and the list being ordered in a non-descending order. I also fixed some typos, e.g., \"quantile\" was misspelled as \"Quantiles\".", "Reports the percentile value from the given list ordered in a non-descending order, with support for reporting percentiles with decimal points using quantile scaling"]}
{"SampleId": 3571800, "Origin": "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included.", "Reference": "Marks {@code protoMember}, throwing if it is explicitly excluded.", "LLMCandidates": ["Marks {@code protoMember}, throwing if it is explicitly excluded. Adds {@code protoMember.type()} to {@code types} and sets the corresponding value in {@code members}.", "Marks {@code protoMember} and includes its type in the set of included types, throwing if it is explicitly excluded.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its type is not yet included in {@code types}. Adds the type of {@code protoMember} to {@code types} before adding {@code protoMember} to {@code members}.", "Mark {@code protoMember} if its type is not explicitly excluded and add it to the list of included types. Throws an exception if {@code protoMember} is null.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is not yet included, and adds the type to the list of included types."]}
{"SampleId": 4003565, "Origin": "This option allows to configure each configuration file based on the  location.", "Reference": "This option allows to configure each configuration fille based on the karaf.home location.", "LLMCandidates": ["This option allows to configure a Karaf Distribution configuration file based on the given pointer and value.", "This option allows to configure a Karaf Distribution configuration file based on its location using the given value. (configurationPointer)", "This option allows to configure a Karaf Distribution's configuration file based on the given pointer and value.", "This option allows to configure a Karaf Distribution configuration file based on its pointer, with the given value.", "This option allows to configure a specific configuration file based on its pointer, using the given value."]}
{"SampleId": 6364977, "Origin": "Get all the jobs present in the wiki.", "Reference": "Get all the intervals/jobs present in the wiki.", "LLMCandidates": ["Initialize the cache of watchlist intervals by getting all the watchlist job documents from the main wiki.", "Get all the watchlist intervals present in the main wiki.", "Initialize the cache of watchlist intervals by getting all the corresponding job documents from the main wiki.", "Initialize the cache of watchlist intervals by getting all the corresponding documents from the main wiki.", "Initialize the cache of watchlist intervals by getting all the corresponding documents from the main wiki."]}
{"SampleId": 5322278, "Origin": "Return a single {@link ReflectiveMethodResolver}.", "Reference": "Return the specified {@link MethodResolver} delegates, if any.", "LLMCandidates": ["Return the list of MethodResolvers stored in this object.", "Returns the list of method resolvers stored in this instance.", "Returns the list of method resolvers stored in this instance.", "Return a list of MethodResolver objects instead of an empty list.", "Return a list of MethodResolver objects instead of an empty list."]}
{"SampleId": 5360748, "Origin": "This is useful for typical \nblocks in manual JavaMail code.", "Reference": "blocks in manual JavaMail code.", "LLMCandidates": ["This is useful for closing JavaMail Services.}}\n\nIf the method signature or variable name is changed during the update, please provide the new name in the updated comment as well. For example:\n\n{This is useful for closing specific JavaMail Services.}\n\nor\n\n{Closes a given JavaMail Session.}\n\nor\n\n{Closes a specified Service instance that implements the Service interface.", "\"\"\"\nCloses a JavaMail Service if it is not null.\n@param service the JavaMail Service to be closed\n\"\"\"", "This is useful for closing JavaMail Services in manual code.", "Closes the given JavaMail Service object if it is not null.}}\n\nThis is useful for typical JavaMail service blocks in manual code.", "'''\nCloses a JavaMail Service object if it is not null.\n\n@param service - The JavaMail Service object to be closed."]}
{"SampleId": 575173, "Origin": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}", "Reference": "Two objects are considered different if\n{@code value.equals(reference) == false}", "LLMCandidates": ["Two objects are considered different if {@code value.equals(reference) != true", "Two objects are considered different if {@code value.equals(reference) != true", "Two objects are considered different if {@code value.equals(reference) != true", "Two objects are considered different if {@code value.equals(reference) != true", "Two objects are considered different if {@code value.equals(reference) != true"]}
{"SampleId": 2732385, "Origin": "Expands all tree nodes in a single call.", "Reference": "Expands all tree nodes.", "LLMCandidates": ["Expands all tree nodes recursively in a single call using expandAllImpl method.", "Expands all tree nodes recursively in a single call, starting from the root node.", "Expands all tree nodes recursively in a single call.", "Expands all tree nodes recursively in a single call.", "Expands all tree nodes recursively in a single call."]}
{"SampleId": 235252, "Origin": "Tests for defaults {@link CreateOptions}.", "Reference": "Tests for defaults {@link GetWorkerOptions}.", "LLMCandidates": ["Tests for defaults of GetWorkerOptions.", "Tests for defaults of GetWorkerOptions.", "Tests for defaults of GetWorkerOptions.", "Tests for defaults of GetWorkerOptions.", "Tests for defaults of GetWorkerOptions."]}
{"SampleId": 2337171, "Origin": "Modified by user info", "Reference": "Modified by user", "LLMCandidates": ["Modified by user\n\nThis is the updated comment for the getNodeUpdatedBy() method. The change made was to update \"user info\" to simply \"user\".", "Modified by user (corrected typo)", "Modified by user (corrected typo)", "Modified by user (corrected typo)", "Modified by user (corrected typo)"]}
{"SampleId": 2913748, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map.", "Obtains an instance from the specified name using a predefined map."]}
{"SampleId": 4476805, "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.", "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.", "LLMCandidates": ["The {@link CreateEcKeyOptions#getCurve() key curve} can be optionally specified when creating an EC key.", "The {@link CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {@link CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {@link CreateEcKeyOptions#getCurve() key curve} can be optionally specified when creating an EC key.", "The {@link CreateEcKeyOptions#getCurve() key curve} can be optionally specified."]}
{"SampleId": 5841424, "Origin": "Used by track model container (e.g.", "Reference": "Only exposed to track model container (e.g.", "LLMCandidates": ["Sets the ID of this builder object.\n\nUsed by TrackModel builders (e.g.\n\nFor example:\n```java\nTrackModel myTrackModel = new TrackModelBuilder() // a TrackModelBuilder instance\n                          .setId(123)            // set ID to 123\n                          .build();               // build the TrackModel object\n```", "Sets the ID of the track model builder and returns this builder instance.", "Sets the ID of the track model builder", "Sets the ID of the track model builder", "Sets the ID of the track model builder"]}
{"SampleId": 4388477, "Origin": "IMPORTANT: The source DB instance must have backup retention\nenabled.", "Reference": "The source DB instance must have backup retention enabled.", "LLMCandidates": ["The source DB instance must have backup retention enabled when creating a read replica.", "The method creates a read replica of a DB instance with given request. The source DB instance must have backup retention enabled.", "Creates a read replica of a DB instance with enabled backup retention.", "Creates a read replica for the given DBInstance. The source DB instance must have backup retention enabled.", "Creates a read replica for the given DB instance. The source DB instance must have backup retention enabled."]}
{"SampleId": 340614, "Origin": "Requests that the player prefetch the media items for playback.", "Reference": "Requests that the player prepare the media items for playback.", "LLMCandidates": ["Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback."]}
{"SampleId": 4383857, "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .", "Reference": "CloudSearch Developer Guide.", "LLMCandidates": ["Deletes a suggestion in Amazon CloudSearch using the provided DeleteSuggesterRequest and returns the DeleteSuggesterResult. The AWSRequestMetrics are used for monitoring client execute time and request marshalling time.", "Deletes a suggester in Amazon CloudSearch based on the given request. The method marshals the request and invokes the AWS service using the provided execution context, and returns the response as DeleteSuggesterResult object. The request metrics are recorded during the process.", "Deletes a suggester in Amazon CloudSearch based on the given request\n\nThe AWS SDK for Java automatically handles the request marshalling and response unmarshalling using the provided `DeleteSuggesterRequestMarshaller` and `DeleteSuggesterResultStaxUnmarshaller` classes. The request metrics are also captured throughout the process.", "Deletes a suggestion from the Amazon CloudSearch index using the given request and returns the result.", "Deletes a suggester in an Amazon CloudSearch domain using the given request and returns the corresponding response."]}
{"SampleId": 6017980, "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum for each pixel across all bands in the {@link Planar} image. The output image is reshaped to have the same width and height as the input image before applying the minimum operation.", "Computes the minimum for each pixel across all bands in the {@link Planar} image. After the computation, the output image will be reshaped to have the same width and height as the input image.", "Computes the minimum for each pixel across all bands in the {@link Planar} image. After the computation, the output {@link GrayS32} image will be reshaped to have the same width and height as the input image.", "Computes the minimum for each pixel across all bands in the {@link Planar} image, and resets the output image to have the same width and height as the input image.", "Computes the minimum for each pixel across all specified bands in the {@link Planar} image. The output image will have the same width and height as the input image."]}
{"SampleId": 2891419, "Origin": "Sets current date as e-mails sent date.", "Reference": "Sets current date as the sent date.", "LLMCandidates": ["Sets current date as the sent date of this Email object.", "Sets current date as the sent date of this Email object.", "Sets the e-mail's sent date to the current one by calling setSentDate(new Date()).", "Sets the e-mail's sent date to the current one by calling setSentDate with a new Date object.", "Sets the e-mail's sent date to the current one by calling setSentDate with a new Date object."]}
{"SampleId": 3242248, "Origin": "Sets the value of the cryptAlgorithmType property.", "Reference": "Sets the value of the algorithmName property.", "LLMCandidates": ["Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property."]}
{"SampleId": 4470108, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["Reads a paginated stream of CosmosUserProperties objects from the server using the given FeedOptions and returns a CosmosContinuablePagedFlux. In case of failure, the flux will not complete but instead error.", "Reads all CosmosUserProperties from the server using FeedOptions and returns a continuous paged flux. In case of failure, the CosmosContinuablePagedFlux will not complete but instead will emit an error signal.", "In case of failure, the {@link CosmosContinuablePagedFlux} will not complete and instead return a new continuation to request the next page.", "Returns a paged flux of CosmosUserProperties\n\nIn case of failure, the {@link CosmosContinuablePagedFlux} will not complete and no error will be thrown. Instead, it will return an empty page and a flag indicating that there are no more pages to retrieve.", "In case of failure, the returned {@link CosmosContinuablePagedFlux} will not complete but instead emit error signals."]}
{"SampleId": 3038914, "Origin": "Adds a network interface (aka port) into a given bridge of openstack node.", "Reference": "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "LLMCandidates": ["Adds or removes a network interface (aka port) into a given bridge of openstack node.", "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "Adds or removes a network interface (aka port) into a given bridge of openstack node."]}
{"SampleId": 754537, "Origin": "Sets the amount of time, in milliseconds, to wait between\nadjustments in pool sizes for a given host, to allow\nenough time for the adjustments to take effect.", "Reference": "Sets the amount of time to wait between adjustments in\npool sizes for a given host, to allow enough time for\nthe adjustments to take effect.", "LLMCandidates": ["Sets the cool down time based on a TimeValue object instead of long milliseconds.", "Sets the cool down time, represented as a TimeValue object, to allow enough time for adjustments to take effect.", "Sets the cool down time based on a TimeValue object instead of milliseconds.", "Sets the cool down time, represented by a TimeValue object, allowing enough time for adjustments to take effect.", "Sets the cool down time, represented by a TimeValue object, allowing enough time for adjustments to take effect."]}
{"SampleId": 1122902, "Origin": "Constuct a trace log event.", "Reference": "Constuct a fatal log event.", "LLMCandidates": ["Sets the log level to FATAL if fatal logging is enabled, otherwise returns a no-op LogBuilder.", "Constructs a log event with fatal level if fatal logging is enabled. If not, returns a no-op log builder.", "Sets the log event level to FATAL if fatal logging is enabled, otherwise returns a no-op LogBuilder.", "Sets the log event level to FATAL if fatal logging is enabled, otherwise returns a no-op LogBuilder.", "Sets the log event level to FATAL if fatal logging is enabled, otherwise returns a no-op builder."]}
{"SampleId": 2230469, "Origin": "Returns the QuorumConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "Reference": "Returns the {@link SplitBrainProtectionConfig} for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "LLMCandidates": ["Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations."]}
{"SampleId": 5447619, "Origin": "timed invokeAll(,,null) throws NPE", "Reference": "timed invokeAll(,,null) throws NullPointerException", "LLMCandidates": ["tests the behavior of invokeAll(List, time, null) method with a null timeUnit argument}\n\ntimed invokeAll(List<Callable<String>>, randomTimeout(), null) throws NPE", "timed invokeAll(List<Callable<String>>, nullable TimeUnit or random timeout, null) throws NPE", "tests the behavior of invokeAll method with null timeUnit argument and expected NullPointerException}\n\ntimed invokeAll(List<Callable<String>>, {randomTimeout()}, null) throws NPE", "// Throws a NullPointerException when invoking all tasks with a null time unit argument\ntimed invokeAll(List<Callable<String>> tasks, randomTimeout(), null) throws NullPointerException", "timed invokeAll(List<Callable<String>>, randomTimeout(), null) throws NPE"]}
{"SampleId": 2081832, "Origin": "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex}", "Reference": "All {@link ForeignKeyIndex} types\n  {@link EppResourceIndex}", "LLMCandidates": ["All {@link ForeignKeyIndex} types, including {@link EppResourceIndex", "All {@link ForeignKeyIndex} types, including {@link EppResourceIndex", "All {@link ForeignKeyIndex} types, including {@link EppResourceIndex", "All {@link ForeignKeyIndex} types, including {@link EppResourceIndex", "All {@link ForeignKeyIndex} types, including {@link EppResourceIndex"]}
{"SampleId": 2630413, "Origin": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path segments in {@code segments}.", "Reference": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path pathSegments in {@code pathSegments}.", "LLMCandidates": ["This method checks if the region of path starting at pathOffset matches the given path segments in pathSegments, taking into account any leading and trailing path separators (/).", "This method checks if the region of path starting at pathOffset matches the given path segments in pathSegments, taking ignoreCase into account.", "This method checks if the region of path starting at pathOffset matches the path segments in pathSegments, separated by the path separator character.", "This method checks if the region of path starting at pathOffset matches the given path segments in pathSegments. The search is case-insensitive when ignoreCase is set to true.", "This method checks if the region of path starting at pathOffset matches the given path segments in pathSegments, taking into account the ignoreCase parameter."]}
{"SampleId": 5243394, "Origin": "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Reference": "Indicates whether this filter needs to use the secondary, non-SQL method applyAlternateFilter().", "LLMCandidates": ["Indicates whether this filter needs to use the alternate, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the alternate, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the alternate, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the alternate, non-SQL method getMatchingFiles()}.", "Indicates whether this filter needs to use the alternate, non-SQL method getMatchingFiles()"]}
{"SampleId": 338759, "Origin": "This only functions after we have been attached to a hierarchy.", "Reference": "This only works after this preference has been attached to a hierarchy.", "LLMCandidates": ["This method searches for a preference with the given key in the preference hierarchy, only functioning after being attached to a hierarchy. The key and preference type must not be empty.", "This method searches for a preference with the given key in the preference hierarchy. It should only be called after being attached to a preference manager hierarchy.", "This method searches for a preference with the given key in the hierarchy attached to the PreferenceManager.}\n\n{Ensure that the PreferenceManager is not null before calling this method. The type T must extend Preference.}\n\n{The method returns null if the PreferenceManager is null or the preference with the given key is not found.", "This method can only be invoked after being attached to a hierarchy. It returns a preference instance of type T that matches the given key if it exists in the hierarchy managed by mPreferenceManager, otherwise it returns null.", "This method searches for a preference with the given key in the preference hierarchy attached to the object. It can only function after we have been attached to a preference manager hierarchy."]}
{"SampleId": 4476777, "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.", "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.", "LLMCandidates": ["The {@link CreateRsaKeyOptions#getKeyType()} indicates the type of key to create.", "The {@link CreateRsaKeyOptions#getKeyType()} indicates the type of key to create.", "The {@link CreateRsaKeyOptions#getKeyType()} indicator specifies the type of key to create.", "The {@link CreateRsaKeyOptions#getKeyType()} indicator specifies the type of key to create.", "The {@link CreateRsaKeyOptions#getKeyType()} indicates the type of key to create."]}
{"SampleId": 2544520, "Origin": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniond}.", "Reference": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "LLMCandidates": ["Sets this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}.", "Sets this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@link Quaterniondc}."]}
{"SampleId": 4132953, "Origin": "Create or obtain a {@link CallableStatement} from the pool.", "Reference": "Creates or obtains a {@link CallableStatement} from the pool.", "LLMCandidates": ["Obtain a CallableStatement from the pool using the provided SQL statement.", "Obtain a CallableStatement from the pool using its key (sql and StatementType).", "Obtain a CallableStatement from the pool using the given SQL statement.", "Obtain a CallableStatement from the pool using the given SQL statement.", "Obtain a CallableStatement from the pool using the given SQL statement."]}
{"SampleId": 5454969, "Origin": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link", "Reference": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the module {@link", "LLMCandidates": ["This static factory method creates a new ModuleFinder instance based on the given Path entries. If the number of entries is zero, an empty ModuleFinder instance is returned.", "Constructs a new ModuleFinder based on the given paths. If no paths are provided, an empty ModuleFinder is returned.", "Creates an instance of ModuleFinder based on the given paths. If no paths are provided, an empty ModuleFinder is returned.", "If the paths given are empty, an empty {@code ModuleFinder} instance will be returned. Otherwise, a new {@code ModuleFinder} instance will be created using the provided paths with {@code ModulePath.of(entries)}.", "If the JAR file has a \"Main-Class\" attribute in its manifest then it returns an empty ModuleFinder object. Otherwise, it creates and returns a ModuleFinder instance initialized with the given entries using ModulePath.of(entries)."]}
{"SampleId": 3773945, "Origin": "It is used for\nadapting this data provider to a filter type provided by a Component such\nas ComboBox.", "Reference": "This can be used for adapting this data provider to a filter\ntype provided by a Component such as ComboBox.", "LLMCandidates": ["It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, with the provided converter function.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, via conversion using the given filterConverter function.", "This method adapts this data provider to a filter type provided by a Component such as ComboBox, using the given filter converter function.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox. The given converter function is applied to the filter of the input query before it is being returned.", "Adapts this data provider to a filter type provided by a Component such as ComboBox, using the given converter function."]}
{"SampleId": 2482494, "Origin": "Creates query for the given queryString.", "Reference": "Queries this search source for the given queryString.", "LLMCandidates": ["Query contact source based on the given queryString.", "Queries contact source based on the given queryString.", "Queries contact source based on the given queryString.", "Queries contact source based on the given queryString.", "Creates query using given queryString"]}
{"SampleId": 4132958, "Origin": "Create or obtain a {@link PreparedStatement} from the pool.", "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.", "LLMCandidates": ["Obtain a PreparedStatement from the pool with the given SQL statement, resultSetType, resultSetConcurrency, and resultSetHoldability.", "Obtain a PreparedStatement from the pool based on the given SQL statement and other parameters.", "Obtain a PreparedStatement from the pool based on the given SQL statement and connection properties.", "Obtain a PreparedStatement from the pool based on the given SQL statement and its properties.", "Obtain a PreparedStatement from the pool based on the given SQL statement and its properties."]}
{"SampleId": 437930, "Origin": "Creates a {@link MetadataCoder}.", "Reference": "Returns the singleton {@link MetadataCoder} instance.", "LLMCandidates": ["Returns the singleton instance of MetadataCoder.", "Creates an instance of {@link MetadataCoder}.", "Creates an instance of {@link MetadataCoder}.", "Creates an instance of {@link MetadataCoder}.", "Creates an instance of {@link MetadataCoder}."]}
{"SampleId": 84963, "Origin": "Inserts the node at the tail of the frontier.", "Reference": "Primitive operation which inserts the node at the tail of the frontier.", "LLMCandidates": ["Inserts the node at the end of the frontier.", "Inserts the node at the end of the frontier.", "Inserts the node at the end of the frontier.", "Inserts the node at the end of the frontier.", "Inserts the node at the end of the frontier and updates the metrics."]}
{"SampleId": 2049500, "Origin": "Returns the codec's supported type for decoding {@code requestedMimeType} on the current\ndevice, or {@code null} if the codec can't be used.", "Reference": "Returns the codec's supported MIME type for media of type {@code mimeType}, or {@code null} if\nthe codec can't be used.", "LLMCandidates": ["Returns the codec's supported MIME type for decoding the given mimeType on the current device, or null if the codec can't be used.", "Returns the codec's supported MIME type for decoding the given `mimeType` on the current device, or `null` if the codec can't be used.", "Returns the codec's supported MIME type for decoding the given `mimeType` on the current device, or `null` if the codec can't be used.", "Returns the codec's supported MIME type for decoding the given mimeType on the current device, or null if the codec can't be used.", "Returns the codec's supported MIME type for decoding the given mimeType on the current device, or null if the codec can't be used."]}
{"SampleId": 1353937, "Origin": "Remove all free glyphs that are assigned the provided group.", "Reference": "Remove all free glyphs that are only assigned the provided group.", "LLMCandidates": ["Remove all free glyphs that belong to the provided group.", "Remove all free glyphs that belong to the provided group.", "Remove all free glyphs that belong to the provided group.", "Remove all free glyphs that belong to the provided group.", "Remove all free glyphs that belong to the provided group."]}
{"SampleId": 5219060, "Origin": "Add insert optimize result uint.", "Reference": "Add insert optimize result unit into units.", "LLMCandidates": ["Add an InsertOptimizeResultUnit object to the units list.", "Add an InsertOptimizeResultUnit object to the units list.", "Add an InsertOptimizeResultUnit object to the units list.", "Add an InsertOptimizeResultUnit object to the units list.", "Add an InsertOptimizeResultUnit object to the units list."]}
{"SampleId": 6050238, "Origin": "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Reference": "Returns the tasks entry with the primary key or throws a {@link NoSuchTasksEntryException} if it could not be found.", "LLMCandidates": ["Returns the TasksEntry with the given primary key or throws a NoSuchTasksEntryException if it could not be found.", "Returns theTasksEntry with the given primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Returns the TasksEntry with the given primary key or throws a NoSuchTasksEntryException if it does not exist.", "Returns the TasksEntry with the given primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Returns theTasksEntry object with the given primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found."]}
{"SampleId": 5015241, "Origin": "If no sld file, throws an exception", "Reference": "If no sld file, throws an appropriate exception", "LLMCandidates": ["Retrieves an SLD file from a given directory. Throws an exception if no SLD file is found.", "Retrieves an SLD file from the given directory. Throws an exception if no SLD file is found.", "Retrieves an SLD file from the given directory. Throws an exception if no SLD file is found.", "Retrieves an SLD file from the given directory. Throws an exception if no sld file is found.", "Retrieves an SLD file from the given directory. Throws an exception if no sld file is found."]}
{"SampleId": 3574224, "Origin": "Use this method if setting this option is not required and to express that it may be .", "Reference": "Builds the option and marks it as not required  Use this method if setting this option is not required and\nto express that it may be .", "LLMCandidates": ["Use this method if the option is not required and to express that it may be present or absent.", "Use this method if the option value is not required and to express that it may be present or absent.", "Use this method if the option value is not required. This method creates an Optional ConfigurationOption.", "Use this method if the option value is not required. This method creates an Optional ConfigurationOption.", "Use this method if you do not need to enforce setting this option and allow it to be . The optionalChangeListeners and optionalValidators will be added accordingly.\n\n(Note: I assumed 'validOptions' is a typo for 'optional' based on the variable name in the updated code)"]}
{"SampleId": 3239399, "Origin": "Gets the value of the descrption property.", "Reference": "Gets the value of the description property.", "LLMCandidates": ["Gets the value of the description property.\nShould be:  Gets the value of the description property.", "Gets the value of the description property.\nShould be: Gets the value of the description property.", "Gets the value of the description property.\nShould be:  Gets the value of the description property.", "Gets the value of the description property.\nShould be: Gets the value of the description property.", "Gets the value of the description property.\nShould be: Gets the value of the description property."]}
{"SampleId": 3814021, "Origin": "Gets the amount of available items in the network of the type passed in, checking NBT or not.", "Reference": "Gets the number of available items in the network satisfying the given matcher.", "LLMCandidates": ["Gets the amount of available items in the network that match the given CorporeaRequestMatcher, checking NBT or not.", "Gets the amount of available items in the network that match the given request matcher, without checking NBT.", "Gets the amount of available items in the network that match the given CorporeaRequestMatcher, without checking NBT or not.", "Gets the amount of available items in the network that match the given CorporeaRequestMatcher, checking NBT or not.", "Gets the amount of available items in the network that match the given CorporeaRequestMatcher, checking NBT or not."]}
{"SampleId": 2641058, "Origin": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "Reference": "This makes it\nhard to debug because if a task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "LLMCandidates": ["Sets the value of _crossThreadStackTracesEnabled to enabled.", "Sets the value of _crossThreadStackTracesEnabled based on the input boolean parameter. Previously, this method was declared with a non-static modifier and had a different variable name for the receiver (_crossThreadStackTracesEnabled vs. _crossThreadStackTrcesEnabled).", "Sets the value of _crossThreadStackTracesEnabled based on the given boolean argument. If enabled is true, then stack traces will be captured across threads. Otherwise, they will not be captured.", "Sets the value of the crossThreadStackTracesEnabled boolean.", "Sets the value of the crossThreadStackTracesEnabled boolean."]}
{"SampleId": 5300344, "Origin": "Creates new {@link DayOfMonth} in UTC.", "Reference": "Creates new {@link DayOfMonth}.", "LLMCandidates": ["Creates new DayOfMonth in UTC. Performs null check on Expression argument.", "Creates new DayOfMonth in UTC. Performs null check on expression.", "Creates new DayOfMonth in UTC. Performs null check on expression.", "Creates new DayOfMonth in UTC. Performs validation on Expression argument before processing.", "Creates new DayOfMonth in UTC. Performs null check on expression argument."]}
{"SampleId": 5629938, "Origin": "Sets the entities.", "Reference": "Set the entities.", "LLMCandidates": ["Sets the entities passed as an argument to this Builder object, then returns this Builder for method chaining.", "Sets and updates the list of entities.", "Sets and updates the list of entities.", "Sets the entities by building a new instance with the given list.\n\nOr, if you prefer to keep it more consistent with the original comment:\n\nSets the entities with the given list.", "Sets the entities and returns a builder for chaining calls"]}
{"SampleId": 471391, "Origin": "The option is a:\n type.", "Reference": "The option is a:", "LLMCandidates": ["This method sets the property \"cxfRsConfigurer\" with the given object and returns the builder instance.", "This method sets the property \"cxfRsConfigurer\" with the given object and returns this instance.", "The option is an instance of: type. (Updated method name to match with the updated method signature)", "The option is now named \"cxfRsConfigurer\" instead of \"cxfRsEndpointConfigurer\".", "The option is now named \"cxfRsConfigurer\" instead of \"cxfRsEndpointConfigurer\"."]}
{"SampleId": 3105257, "Origin": "Test of from method, of class Statistics.", "Reference": "Test of fromJson method, of class Statistics.", "LLMCandidates": ["Test of from method, of class Statistics. This test creates a JSON string using Jackson library and then validates the Statistics object created by parsing that jsonString.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics."]}
{"SampleId": 438097, "Origin": "Infer a {@link Schema} from an AVRO-generated SpecificRecord.", "Reference": "Infer a {@link Schema} from either an AVRO-generated SpecificRecord or a POJO.", "LLMCandidates": ["Infer a Schema from an given Class using ReflectData.get().getSchema(clazz).", "Infer a Schema from an AVRO SpecificRecord using ReflectData.get().getSchema(clazz).", "Infer a Schema from an AVRO SpecificRecord using ReflectData.get().getSchema(clazz).", "Infer a Schema from an AVRO SpecificRecord using ReflectData.get().", "Infer a {@link Schema} from an AVRO SpecificRecord using ReflectData utility class."]}
{"SampleId": 4617594, "Origin": "Deletes the element at the specified position.", "Reference": "Removes the element at the specified position.", "LLMCandidates": ["Deletes the element at the specified index", "Deletes the element at the specified position and shrinks the underlying array size accordingly", "Deletes the element at the specified index", "Deletes the element at the specified index", "Deletes the element at the specified index"]}
{"SampleId": 2017357, "Origin": "Creates an empty object literal, `{}`.", "Reference": "Creates an object-literal with zero or more elements, `{}`.", "LLMCandidates": ["Creates an object literal with the given elements, `{}`. If isAddingTypes is true, sets the JSType for the resulting Node.", "Creates an object literal with the given elements, `{}` with optional type annotation.", "Creates an object literal, `{}`, with given elements.", "Creates an object literal, `{}`, with given elements.", "Creates an object literal with the given elements, e.g., `{element1, element2}`."]}
{"SampleId": 3195611, "Origin": "Creates an iterable that iterates in parallel over a three iterables.", "Reference": "Creates an iterable that iterates in parallel over three iterables.", "LLMCandidates": ["Creates an iterable that iterates in parallel over three given iterables.", "Creates an iterable that iterates in parallel over three given iterables.", "Creates an iterable that iterates in parallel over three given iterables.", "Creates an iterable that iterates in parallel over three given iterables.", "Creates an iterable that iterates in parallel over three given iterables."]}
{"SampleId": 2939899, "Origin": "Initializes this.audioFormats", "Reference": "Initializes audioFormats", "LLMCandidates": ["Initializes this.audioFormats with the specified audio formats using getAvailableAudioFormats() method from voiceRssImpl and adding each format to the HashSet using getAudioFormat(format). Now it uses Set instead of HashSet.", "Initializes this.audioFormats with the set of AudioFormat objects obtained from the available formats returned by voiceRssImpl.", "Initializes this.audioFormats using the available audio formats from voiceRssImpl and adding each format to the HashSet using getAudioFormat method. Now, a Set is used instead of a HashSet.", "Initializes this.audioFormats with the specified audio formats from voiceRssImpl", "Initializes this.audioFormats with the specified audio formats from voiceRssImpl"]}
{"SampleId": 4396424, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Return a string representation of this object with phone number redacted for sensitivity.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Generates a string representation of this object with phone number redacted for security.", "Returns a string representation of this object; useful for testing and debugging. The PhoneNumber field is now redacted as \"***Sensitive Data Redacted***\" to protect privacy.", "Returns a string representation of this object; useful for testing and debugging. The PhoneNumber field is now masked with '***Sensitive Data Redacted****' for security."]}
{"SampleId": 1328641, "Origin": "Sets the partition storage level.", "Reference": "Sets the storage configuration.", "LLMCandidates": ["Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration."]}
{"SampleId": 1880371, "Origin": "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class.", "Reference": "Testing the isSPD (is symmetric positive definite) method of", "LLMCandidates": ["Testing the isSPD (symmetric positive definiteness) method of CholeskyDecomposition class.", "Testing the isSPD (symmetric positive definite) method of CholeskyDecomposition class by creating new instances with symmetric matrices and testing their SPD property.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class with simplified matrix instantiation and assertions.", "Testing the isSPD (symmetry and positive definiteness) method of CholeskyDecomposition class.", "Testing the isSPD (symmetric positive definite) method of CholeskyDecomposition class."]}
{"SampleId": 1388665, "Origin": "showIndex.", "Reference": "showTagArticles.", "LLMCandidates": ["@Test(dependsOnMethods = \"init\")\npublic void showTagArticles() throws Exception {\n// ...\n}\n\n// Display the articles for a given tag.", "Displays the articles associated with the tag \"Solo\"\n\nshowTagArticles.", "Displays the articles associated with the tag \"Solo\"\n\nshowTagArticles.", "showTagArticles - Tests whether the content of the response contains \"<title>Solo - Solo 示例</title>\" when the request is GET /tags/Solo.", "showTagArticles.\n This test method mocks an HTTP request and response to verify that the content of the response contains a specific title tag for the given tag name \"Solo\"."]}
{"SampleId": 440279, "Origin": "Creates an instance of {@link RowFactory} using provided {@link RowTypeFactory}\nand {@link GetterFactory}.", "Reference": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory}\nand {@link GetterFactory}.", "LLMCandidates": ["Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}."]}
{"SampleId": 5360344, "Origin": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route}.", "Reference": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route} and optional variables to expand route template.", "LLMCandidates": ["Create an RSocketOutboundGatewaySpec builder for request-reply gateway based on provided route and optional routeVariables.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided route and optional route variables.", "Create an RSocketOutboundGatewaySpec builder for request-reply gateway based on provided route and optional routeVariables.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional {@code routeVariables}.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional {@code routeVariables}."]}
{"SampleId": 2544551, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in ."]}
{"SampleId": 4715990, "Origin": "Constructs a URL to save the data to", "Reference": "Constructs a final path save the data to", "LLMCandidates": ["Constructs a final HDFS path for saving data.", "Constructs a final HDFS path for saving data", "Constructs a final HDFS path for saving data.", "Constructs a final HDFS path for saving data.", "Constructs a final HDFS path for saving data."]}
{"SampleId": 613117, "Origin": "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces.", "Reference": "Returns the back pressure ratio of the given subtask index.", "LLMCandidates": ["Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces for the given index.", "Returns the ratio of stack traces indicating back pressure to the total number of sampled stack traces at the given index.", "Returns the ratio of stack traces indicating back pressure to the total number of sampled stack traces for the given index.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces for the given index.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces at the given index."]}
{"SampleId": 2913755, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using a predefined parsing map.", "Obtains an instance from the specified name using the parsing functionality of NAMES.", "Obtains an instance from the specified name using the NAMES parser."]}
{"SampleId": 4471188, "Origin": "Prints out the created certificate\nissuer details when a response has been received.", "Reference": "Subscribes to the call and prints out the\nupdated certificate operation details when a response has been received.", "LLMCandidates": ["Cancels a certificate operation when a response has been received.", "Cancels a specific certificate operation when a response has been received.", "Prints out the details of the certificate operation when a response has been received for cancelling a certificate operation by its name.", "Prints out the details of the certificate operation when a response has been received for cancelling a certificate operation by given name.", "Cancels a certificate operation when a response has been received."]}
{"SampleId": 1730796, "Origin": "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari", "Reference": "Workaround to avoid disappearing footer when changing the predefined styles at runtime in Safari", "LLMCandidates": ["Change footer visibility, checking if already visible before updating\n\nNote: This method sets the footer visibility to false and then true again, but only updates when the footer is currently visible. This change might be related to ensuring proper functionality in certain browsers, such as Safari.", "Hack to avoid hiding or showing the footer unintentionally at runtime in Safari for this method that sets the footer visibility state.", "Hack to avoid hiding or showing the footer at runtime in Safari (depending on its initial visibility state)", "Refreshes the visibility state of the footer component\n\nIf the footer is currently visible, sets it to be hidden. Otherwise, does nothing.", "Toggle the visibility of the footer component\n\nIf the footer is already visible, no action is taken. Otherwise, hide and then show the footer."]}
{"SampleId": 3734023, "Origin": "If the offsets list is empty, then an offset of 0 is used for each array.", "Reference": "If the offsets list is empty, then an offset of 0 is used for each\nsequence.", "LLMCandidates": ["If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence."]}
{"SampleId": 5179883, "Origin": "Indicates if the way is ready to handle new messages.", "Reference": "Indicates if the way is available to handle new messages.", "LLMCandidates": ["Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages."]}
{"SampleId": 3038653, "Origin": "Handles an iterate commit.", "Reference": "Handles an iterator next commit.", "LLMCandidates": ["Handles a next commit request from an iterator. Returns an IteratorBatch object containing the next set of entries to be processed.", "Handles a commit to retrieve the next batch of data for an iterator. The batch contains a position and a list of key-value entries.", "Handles a next commit by fetching and returning the next batch of entries based on the given iterator position", "Handles a next commit by fetching and returning the next batch of entries based on the given iterator position", "Handles a next commit in an iterator. Processes the entries one by one based on the given position and returns a batch of the processed entries if the size is less than MAX\\_ITERATOR\\_BATCH\\_SIZE."]}
{"SampleId": 4367578, "Origin": "Add a duration (with the same time unit as the current duration)", "Reference": "Add a amount (with the same time unit as the current duration)", "LLMCandidates": ["Add a duration (with the same time unit as the current duration), using Plus application", "Add a duration (with the same time unit as the current duration), using Plus applying function", "Add a duration (with the same time unit as the current duration), using the Plus functional interface and its apply method.", "Add a duration (with the same time unit as the current duration), using method \"apply\" instead.", "Add a duration (with the same time unit as the current duration), using method \"apply\" instead."]}
{"SampleId": 2912048, "Origin": "Gets the additional trade information, defaulted to an empty instance.", "Reference": "Gets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Gets the additional PortfolioItemInfo, defaulted to an empty instance.", "Gets the PortfolioItemInfo representing the additional trade information, defaulted to an empty instance.", "Gets the PortfolioItemInfo representing the trade information, defaulted to an empty instance.", "Gets the PortfolioItemInfo representing the trade information, defaulted to an empty instance.", "Gets the PortfolioItemInfo representing the trade information, defaulted to an empty instance."]}
{"SampleId": 2891854, "Origin": "Returns  if annotation is present on\ngiven accessible object.", "Reference": "Returns  if annotation is present on\ngiven annotated element.", "LLMCandidates": ["Returns if annotation is present on given annotated element.", "Returns if annotation is present on given annotated element", "Returns if annotation is present on given annotated element", "Returns if annotation is present on given annotated element", "Returns if annotation is present on given annotated element."]}
{"SampleId": 5630008, "Origin": "Gets the nodeType.", "Reference": "Gets the newType.", "LLMCandidates": ["Gets the newType.", "Gets the newType.", "Gets the newType.", "Gets the newType.", "Gets the newType."]}
{"SampleId": 6049437, "Origin": "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Reference": "Returns the favorite site with the primary key or throws a {@link NoSuchFavoriteSiteException} if it could not be found.", "LLMCandidates": ["Returns the FavoriteSite with the given primary key or throws a NoSuchFavoriteSiteException if it does not exist.", "Returns the FavoriteSite with the specified primary key or throws a NoSuchFavoriteSiteException if it could not be found.", "Returns the FavoriteSite with the given primary key or throws a NoSuchFavoriteSiteException if it could not be found.", "Returns the FavoriteSite with the given primary key or throws a NoSuchFavoriteSiteException if it could not be found.", "Returns the FavoriteSite with the given primary key or throws a NoSuchFavoriteSiteException if it does not exist."]}
{"SampleId": 2443732, "Origin": "Create an unnamed, parented {@link InstanceManager}.", "Reference": "Create an unnamed, parented {@link InjectionManager}.", "LLMCandidates": ["Create an unnamed, parented {@link InjectionManager}.", "Create an unnamed, parented {@link InjectionManager}.", "Create an unnamed, parented {@link InjectionManager}.", "Create an unnamed, parented {@link InjectionManager}.", "Create an unnamed, parented {@link InjectionManager}."]}
{"SampleId": 5077304, "Origin": "Starts continuous task.", "Reference": "Starts local continuous task.", "LLMCandidates": ["Starts local continuous task with given configuration. If persistent cache is enabled in the configuration, add the task to the local continuous tasks queue and execute it asynchronously.", "Starts local continuous task with given parameters.", "Starts local continuous task with given parameters.", "Starts local continuous task with given parameters.", "Starts local continuous task with given task configuration. If persistent cache is used, add the task to the local task list and execute it asynchronously."]}
{"SampleId": 3425073, "Origin": "Since category uses \"totalPointsPossible\" property instead of\n\"pointsPossible\" property, as in Assignments", "Reference": "Fix for Category NPE reported in SAK-14519 Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property,\nas in Assignments", "LLMCandidates": ["Gets the total points possible based on the \"totalPointsPossible\" property instead of the \"pointsPossible\" property, as in Assignments.", "Since this object uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments.", "Get the current value of totalPointsPossible property", "This method returns the total points possible for a category.", "This method returns the total points possible for a category."]}
{"SampleId": 2916155, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["They must not be of type {@link SwapPaymentPeriod#IS_KNOWN_AMOUNT}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod#isInstanceOf(Class<?> clazz) ? SwapPaymentPeriod : KnownAmountPaymentPeriod}."]}
{"SampleId": 6133932, "Origin": "Get the address of the datagram's data field.", "Reference": "Get the datagram's data field.", "LLMCandidates": ["Get the data field of this object.", "Get the data field of this object", "Get the data field of this object", "Get the data field of this object", "Get the data field as a byte array."]}
{"SampleId": 1352180, "Origin": "Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Reference": "Upgrade from oldStaffBarlines to staffBarlines.", "LLMCandidates": ["Upgrades the oldStaffBarlines to staffBarlines by adding each OldStaffBarline's bars to a new StaffBarlineInter and removing the old one.", "Upgrades the oldStaffBarlines to staffBarlines", "Converts oldStaffBarlines to staffBarlines by adding new StaffBarlineInter objects to staffBarlines. If oldStaffBarlines is not null and not empty, it iterates through each OldStaffBarline in oldStaffBarlines, creates a new StaffBarlineInter object with the bars from the OldStafBarline, and adds it to staffBarlines before moving on to the next OldStaffBarline. Once all OldStaffBarlines have been processed, oldStaffBarlines is set to null and true is returned. If oldStaffBarlines is null or empty, false is returned.", "Upgrades the oldStaffBarlines to staffBarlines by adding new StaffBarlineInter objects into staffBarlines using the OldStaffBarline objects from oldStaffBarlines.", "Converts oldStaffBarlines to staffBarlines\n\nExplanation:\nThe updated comment reflects that the method now converts the `oldStaffBarlines` to `staffBarlines`, which is a more accurate description of its functionality. The rest of the comment remains unchanged as it correctly identifies that this is a temporary method for upgrading data structures."]}
{"SampleId": 3920802, "Origin": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.", "Reference": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.", "LLMCandidates": ["Given a Pattern and a String, returns a List with the values of the captured groups in the pattern.", "Given a pattern and a string, returns a list with the values of the captured groups in the pattern.}\n\n{This method takes a Pattern object and a String as arguments and returns a List containing the values of the captured groups in the given pattern when it is matched against the input string.", "Given a Pattern and a String, returns a List with the values of the captured groups in the pattern.", "Given a Pattern and a String, returns a List with the values of the captured groups in the pattern.", "Given a Pattern and a String, returns a List with the values of the captured groups in the pattern."]}
{"SampleId": 4476791, "Origin": "The {@link KeyCreateOptions} is required.", "Reference": "The {@link CreateKeyOptions} is required.", "LLMCandidates": ["The {@link CreateKeyOptions} is required.", "The {@link CreateKeyOptions} is required.", "The {@link CreateKeyOptions} is required for creating a new KeyVault key.", "The {@link CreateKeyOptions} is required for creating a new KeyVault key.", "The `CreateKeyOptions` is required."]}
{"SampleId": 3629294, "Origin": "See Immutable Map Static Factory Methods for details.", "Reference": "See Unmodifiable Maps for details.", "LLMCandidates": ["See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details."]}
{"SampleId": 2849528, "Origin": "Make sure we can get the {@link GenieHostInfo} instance even if EC2 metadata fails.", "Reference": "Make sure we can get the {@link GenieHostInfo}.", "LLMCandidates": ["Check if we can get the GenieHostInfo instance when running on AWS environment and ensure its hostname is not null. If not, check for an unexpected success when trying to retrieve it.", "Checks if we can get the GenieHostInfo instance when running on AWS environment and ensures it's not null. Skips the test if not running on AWS to avoid unexpected success.", "Check if EC2 is available before getting the {@link GenieHostInfo} instance. If not, ensure that an exception is thrown instead of getting a null value or unexpected success.", "Check if EC2 is available before getting the {@link GenieHostInfo} instance. If running on EC2, assert that the hostname is not null. Otherwise, expect an IllegalStateException to be thrown.", "Verify the obtaining of the {@link GenieHostInfo} instance, especially when EC2 metadata fails or is unavailable."]}
{"SampleId": 4826489, "Origin": "Equivalent to: {@code .weightInit(WeightInit.DISTRIBUTION).dist(distribution)}", "Reference": "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))}", "LLMCandidates": ["Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))"]}
{"SampleId": 6017985, "Origin": "Computes the median for each pixel across all bands in the {@link Planar}\nimage.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all bands in the {@link Planar} image. After computing the median for each band, the output image is reshaped to have the same dimensions as the input image.", "Computes the median for each pixel across all specified bands in the given {@link Planar} image. The output image will have the same width and height as the input image.", "Computes the median for each pixel across all bands in the {@link Planar} image. After computing the median, the output image is reshaped to have the same width and height as the input image.", "Computes the median for each pixel across all bands in the {@link Planar} image. The output {@link GrayU8} image has the same width and height as the input image.", "Computes the median for each pixel across all specified bands in the {@link Planar} image. The output image will have the same width and height as the input image."]}
{"SampleId": 3982157, "Origin": "Converts Hex encoded string to byte[] if necessary.", "Reference": "Converts a Hex encoded string to a byte array.", "LLMCandidates": ["Converts Hex encoded String to byte[]", "Converts Hex encoded String to byte[]", "Converts Hex encoded String to byte[]", "Converts Hex encoded String to byte[]", "Converts Hex encoded String to byte[]"]}
{"SampleId": 2568424, "Origin": "Sets the value of the 'BloomFilter' field", "Reference": "Sets the value of the 'bloomFilter' field.", "LLMCandidates": ["Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field"]}
{"SampleId": 4390861, "Origin": "Amazon Redshift returns all resources that match any combination of\nthe specified keys and values.", "Reference": "Redshift returns all resources that match any combination of the\nspecified keys and values.", "LLMCandidates": ["Describes the given tags for Amazon Redshift resources.", "This method calls Amazon Redshift's DescribeTags API and returns the description results for the specified resource tags.", "Describes the given Amazon Redshift resource tags based on the provided tag keys and values.", "Describes the given Amazon Redshift resource tags based on the provided keys and values.", "Describes the given Amazon Redshift resource tags based on the provided keys and values."]}
{"SampleId": 5415531, "Origin": "Generate a FormType from a string.", "Reference": "Generate a FormTypes from a string.", "LLMCandidates": ["Generate a FormTypes object from a string.", "Generate a FormTypes value from a string.", "Generate a FormTypes value from a string.", "Generate a FormTypes object from a string.", "Generate a FormTypes object from a string."]}
{"SampleId": 5922687, "Origin": "Append TLVMsg to the TLVList.", "Reference": "Append TLVMsg to the TLV list.", "LLMCandidates": ["Appends a non-null TLVMsg object to the TLVList.", "Appends a non-null TLVMsg object to the TLVList.", "Appends a non-null TLVMsg object to the TLVList.", "Appends a non-null TLVMsg object to the TLVList.", "Appends a non-null TLVMsg object to the TLVList."]}
{"SampleId": 2568426, "Origin": "Gets the value of the 'KeepDeletedCells' field", "Reference": "Gets the value of the 'keepDeletedCells' field.", "LLMCandidates": ["Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field"]}
{"SampleId": 2794191, "Origin": "This method sets the value of the database column m_prj_project.projectType", "Reference": "This method sets the value of the database column m_prj_project.type", "LLMCandidates": ["Sets the value of the object's type property.", "Sets the value of the object property type based on the given String.", "Sets the value of the object's type property.", "Sets the value of the object's type property.", "Sets the value of the object's type property."]}
{"SampleId": 5446622, "Origin": "Return type of method signature as a byte value as defined in Constants", "Reference": "Return type of method signature as a byte value as defined in", "LLMCandidates": ["Returns the type of method signature as a byte value based on the provided method signature string, as defined in Constants.", "Returns the type of method signature as a byte value according to the defined constants.", "Returns the byte value representing the type of the given method signature as defined in Constants.", "Returns the byte value representing the type of the given method signature as defined in Constants.", "returns the type of method signature as a byte value according to Constants"]}
{"SampleId": 4476800, "Origin": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(KeyProperties key properties)}.", "Reference": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(String, String)}.", "LLMCandidates": ["Loop over the KeyProperties and call KeyClient#getKey(KeyProperties keyProperties) to get the properties of each key version for the given name.", "Loop over the KeyProperties and call KeyClient#getKey(KeyProperties keyProperties) to get the corresponding properties of each key version with given name.", "Loop over the KeyProperties and call KeyClient#getKey(KeyProperties keyProperties) to get the corresponding key versions. Instead, loop over the KeyProperties and call KeyClient#listKeyVersions(String name, Context context) to get the iterable of KeyProperties for the specified key and its versions.", "Loop over the KeyProperties key and call KeyClient#getKey(KeyProperties key properties), now named listPropertiesOfKeyVersions instead of listKeyVersions.", "Loop over the KeyProperties and call KeyClient#getKey(KeyProperties keyProperties) to get the corresponding key versions.\n\n(Note: The method name has been changed from \"listKeyVersions\" to \"listPropertiesOfKeyVersions\")"]}
{"SampleId": 2615557, "Origin": "Sets the alignment of the items in the list.", "Reference": "Sets the horizontal alignment of the list items.", "LLMCandidates": ["Sets the alignment of the listed items.", "Sets the alignment of the list's items.", "Sets the alignment of the list's items.", "Sets the alignment of the list's items.", "Sets the alignment of the list's items."]}
{"SampleId": 4625121, "Origin": "Atomize Java items.", "Reference": "Return Java items.", "LLMCandidates": ["Atomize Java collections", "Atomize Java lists.", "Atomize Java lists.", "Process query with ArrayList type instead of materializing Java objects.", "Process query with ArrayList type instead of materializing Java objects."]}
{"SampleId": 1122903, "Origin": "Constuct a trace log event.", "Reference": "Constuct a debug log event.", "LLMCandidates": ["Sets the log level to DEBUG if debug mode is enabled, otherwise returns a no-op LogBuilder.", "Constructs a debug log event. Checks if debug mode is enabled first.", "Construct a log event with debug level if debug is enabled, or do not add any event if it is disabled.", "Construct a log event with debug level if debug is enabled, or do not add any event if it is disabled.", "Constructs a debug log event if debug mode is enabled, otherwise returns no-op LogBuilder."]}
{"SampleId": 5595690, "Origin": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific exception class.", "Reference": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific set of exception classes.", "LLMCandidates": ["Inspects a given {@link Throwable} and its nested causes, in order to look for one or more specific exception classes passed as an array of Class objects.", "Inspects a given {@link Throwable} and its nested causes, in order to look for any of the specified exception classes.", "Inspects a given Throwable as well as its nested causes, in order to look for one or more specific exception classes.", "Inspects a given {@link Throwable} and its nested causes to look for one or more specific exception classes.", "Inspects a given {@link Throwable} and its nested causes to look for one or more specific exception classes."]}
{"SampleId": 2782536, "Origin": "Returns an iterator on all registered commands.", "Reference": "Returns a sorted collection of all registered commands.", "LLMCandidates": ["Returns an iterator over the registered commands, sorted in ascending order.", "Returns an iterator over the registered commands. The list is sorted before being returned.", "Returns an immutable sorted Collection of all registered commands.", "Returns an immutable sorted Collection of all registered commands.", "Returns an iterator over the registered Commands. The list is sorted before being returned."]}
{"SampleId": 3116178, "Origin": "Returns the server list for the requested cluster.", "Reference": "Returns the configured server list for the requested cluster.", "LLMCandidates": ["Returns the list of configured servers for the requested cluster.", "Returns the list of configured servers for the requested cluster.", "Returns the list of configured servers for the requested cluster.", "Returns the list of configured servers for the requested cluster.", "Returns the list of configured servers for the specified cluster."]}
{"SampleId": 5654768, "Origin": "Creates a service name for the deployment unit to define the service.", "Reference": "Creates a service name for the batch environment service.", "LLMCandidates": ["Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the batch environment service."]}
{"SampleId": 4232631, "Origin": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e.", "Reference": "Warning: the conditional comments don't work when injected dynamically with", "LLMCandidates": ["Warning: the conditional comments don't work when injecting URLs dynamically with JavaScript (i.e. rel instead of condition)", "Warning: the conditional media queries don't work when injected dynamically with JavaScript (i.e. for the 'rel' attribute instead of 'condition')", "Warning: the conditional media queries don't work when injected dynamically with JavaScript (i.e. rel instead of condition)", "Warning: the conditional media queries don't work when injected dynamically with JavaScript (i.e. rel instead of condition)", "Warning: the conditional media queries don't work when injected dynamically with JavaScript (i.e. rel is used instead of condition)."]}
{"SampleId": 4961626, "Origin": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.", "Reference": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.", "LLMCandidates": ["Checks if the current node has a field with the given name. If it does not, an error message is reported using the _reportRequiredViolation method. Otherwise, an instance of JsonNode is returned to allow chaining.", "If this node is of the specified type and has no field with the given name, an error message is reported.", "If this node is of the specified type and does not have a field with the given name, an error message is reported", "Checks if the specified property exists in the Node of type `%s`. If it does exist, this method returns the corresponding JsonNode to enable chaining; otherwise no exception is thrown.", "// Throws an exception if the specified field does not exist in the node of type `%s`.\n// If this node is Object Node, returns the node to allow chaining."]}
{"SampleId": 3677389, "Origin": "Returns a copy of this date with the specified field altered.", "Reference": "Returns a copy of this date with the specified field set to a new value.", "LLMCandidates": ["Returns a copy of this OffsetDate with the specified ChronoField or TemporalField altered.}\n\nIf the specified field is an instance of ChronoField, and it is OFFSET_SECONDS, then adjust the date by the given offset in seconds. Otherwise, create a new date by altering the field value in the current date, and maintain the existing offset.", "Returns a copy of this OffsetDate with the specified field altered, if the field is an instance of ChronoField and equals OFFSET\\_SECONDS, it adjusts the date's ZoneOffset by the given number of seconds; otherwise, it applies the new value to the given Temporal date and returns the resulting OffsetDate with the current offset.", "Returns a copy of this OffsetDate with the specified ChronoField or TemporalField altered}}\n\nIf the specified field is an instance of ChronoField and equals to OFFSET_SECONDS:\n- Create a new OffsetDate by applying the given long value as total seconds offset to the current date using ZoneOffset.ofTotalSeconds()\n\nElse, apply the given long value to the current date using the specified TemporalField, and then create a new OffsetDate with the modified date and this offset.", "Modifies this OffsetDate by setting the specified temporal field with the given new value. If the field is an instance of ChronoField and equals OFFSET_SECONDS, adjusts the date's offset by the new value in seconds using ZoneOffset. Otherwise, alters the date's value for the given temporal field and keeps the current offset.", "Returns a copy of this OffsetDate with the specified ChronoField or TemporalField altered. If the field is an instance of ChronoField and equals OFFSET_SECONDS, a new ZoneOffset is applied to the date based on the valid integer value of the newValue. Otherwise, the given date and offset are adjusted accordingly by the newValue using the field's doWith() method."]}
{"SampleId": 4478386, "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.", "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "LLMCandidates": ["Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."]}
{"SampleId": 3828357, "Origin": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present `alt` or \"/\" is used.", "Reference": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present \"/\" is used.", "LLMCandidates": ["The string \"back\" is special-cased to provide Referrer support, when no referrer is present.", "The string \"back\" is special-cased to provide Referrer support when it is used instead of an argument.", "The string \"back\" is special-cased to provide Referrer support, when it is present.", "The string \"back\" is special-cased to provide Referrer support, when it is present.", "The string \"back\" is special-cased to provide Referrer support. If Referrer is not present, the location will be set to alt or \"/\"."]}
{"SampleId": 2891644, "Origin": "Creates all folders at once.", "Reference": "Creates all directories at once.", "LLMCandidates": ["Creates all specified directories.}}\n\nThis method creates all necessary directories represented by the given File object 'dirs'. If the directory already exists and is a valid directory, the method returns without creating any further directories. Otherwise, it checks if the directory can be created using another helper method.", "Creates all specified directories if they do not exist", "Creates all specified directories if they do not exist", "Creates all specified directories. checks if the directory exists and is a directory before creating it.", "Creates all specified directories if they do not exist yet"]}
{"SampleId": 4903187, "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.", "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.", "LLMCandidates": ["Returns a {@link Bits} instance with sequential access to document scores. The returned {@link Bits} instance MUST be consumed in order. Use this method instead of calling asSequentialAccessBits(int, ScorerSupplier, long) directly.", "This method returns a {@link Bits} instance obtained from a given {@code ScorerSupplier}. The behavior is the same as before, but the method now delegates to another overloaded version of this method.\n\nNote that the returned {@link Bits}\ninstance MUST be consumed in order.", "Returns a sequential access {@link Bits} instance based on the provided maxDoc and ScorerSupplier. Note that the returned Bits instance MUST be consumed in order. (Method signature and variable name are unchanged)", "Returns a {@link Bits} instance obtained from the given scorer supplier with a maximum document length. The returned instance MUST be consumed in order.", "Returns a sequential access Bits instance based on the given maxDoc and ScorerSupplier. The returned Bits instance MUST be consumed in order. (previously: Note that the returned Bits instance MUST be consumed in order.)"]}
{"SampleId": 2887744, "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.", "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.", "LLMCandidates": ["This method must only be used for type references whose sort is {@link #THROWS THROWS}.\n\nReturns the exception index of the given targetTypeAndInfo based on its high 8 bits.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.\n\nReturns the exception index of the given targetTypeAndInfo by extracting the first eight bits.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.\n\nReturns the exception index based on the targetTypeAndInfo.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.\n\nReturns the index of the exception in the two-byte representation of the targetTypeAndInfo.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.\n\nReturns the exception index from the targetTypeAndInfo using bitwise operations."]}
{"SampleId": 6006977, "Origin": "Write a Chart series as columns in a CSV file.", "Reference": "Export a Chart series in columns in a CSV file.", "LLMCandidates": ["Write a CSV file from an XYSeries chart, appending columns for x-data, y-data, and error bars if present.", "Write a CSV file with columns representing an XYSeries chart.", "Write a CSV file with columns representing an XYSeries chart.", "Writes a CSV file from an XYSeries chart's data columns.", "Write a CSV file with columns representing an XYSeries chart."]}
{"SampleId": 2061869, "Origin": "Determines whether a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "Reference": "Determines whether a BMP character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "LLMCandidates": ["@Deprecated Determines whether a character is lower case according to Java's definition.", "@Deprecated Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition", "@Deprecated\nDetermines whether a character is lower case according to Java's definition.", "@Deprecated\nDetermines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}.", "@Deprecated\nDetermines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}."]}
{"SampleId": 2142578, "Origin": "Returns the split point number, 1-based.", "Reference": "Returns a unique id for each runAsync, 1-based.", "LLMCandidates": ["Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based."]}
{"SampleId": 3652742, "Origin": "Fails silently if no match found.", "Reference": "Fails silently if the student does not exist.", "LLMCandidates": ["Deletes a student record along with associated data in the given course by email address.", "Deletes a student record from the course with given id and email address, along with related records if cascade delete is enabled.", "Deletes a student with the given email address from the specified course. Throws no exception if no match found.", "Deletes a student with the given email address from the specified course. Throws no exception if no match found.", "Deletes a student associated with the given courseId and studentEmail using studentsLogic. This method calls studentsLogic's deleteStudentCascade method."]}
{"SampleId": 3238740, "Origin": "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }", "Reference": "Objects of the following type(s) are allowed in the list\n{@link CTRelSizeAnchor }\n{@link CTAbsSizeAnchor }", "LLMCandidates": ["Objects of the type(s) are allowed in the list}\n\n{@link ArrayList }\n\n{@code class CTAbsSizeAnchor, CTRelSizeAnchor extends ArrayList", "Objects of the following types are allowed in the list: {@link Object", "Objects of the following types are allowed in the list: {@link Object", "Objects of the following types are allowed in the list: {@link Object", "Objects of the following types are allowed in the list: {@link Object}"]}
{"SampleId": 5455337, "Origin": "Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling.", "Reference": "Sets item (of a request node) to self and waiter to null,\nto avoid garbage retention after matching or cancelling.", "LLMCandidates": ["Sets item to self and waiter to null, to avoid garbage retention after forgetting data if isData is false.", "Sets item to self and waiter to null, if isData is not set. To avoid garbage retention after matching or cancelling.", "Sets item to self and waiter to null, if isData is false, to avoid garbage retention after matching or cancelling.", "Sets item to self and waiter to null, if isData is false, to avoid garbage retention after matching or cancelling.", "Sets item to self and waiter to null, if isData is false, to avoid garbage retention after matching or cancelling."]}
{"SampleId": 4589585, "Origin": "Create error value with given reason and error details.", "Reference": "Create error value with given type, reason and details.", "LLMCandidates": ["Create error value with given error type, reason (as a BString), and error details.", "Create error value with given error type, reason and error details.", "Create error value with given error type, reason and error details.", "Creates an ErrorValue object with given error type, reason, and details.", "Creates an ErrorValue object with given error type, reason, and details."]}
{"SampleId": 3566647, "Origin": "{@code protocol} and {@code proxy} will be non-null and {@code throwable} will be null when\nthe connection is successfully established.", "Reference": "{@code protocol} and {@code proxy} will be non-null and {@code ioe} will be null when\nthe connection is successfully established.", "LLMCandidates": ["\"@{code ioe}\" will be null when the connection is successfully established.", "\"@{code ioe}\" will be null when the connection is successfully established.", "@code ioe} will be null when the connection is successfully established.", "@code ioe} will be null when the connection is successfully established.", "@code protocol} and {@code ioe} will be null when the connection is successfully established."]}
{"SampleId": 2444066, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "LLMCandidates": ["Get the set of all custom providers registered for the given service provider contract\nin the underlying InstanceManager container.", "Get the set of all custom providers registered for the given service provider contract in the underlying InstanceManager container.", "Get the set of all custom providers registered for the given service provider contract in the underlying InstanceManager container.", "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager Guice injection manager} container.", "Get the set of all custom providers registered for the given service provider contract\nin the underlying InstanceManager container."]}
{"SampleId": 5452793, "Origin": "Basic test of Layer containing automatic modules", "Reference": "Basic test of layer containing automatic modules", "LLMCandidates": ["Tests the behavior of a Layer containing automatically detected modules.", "Tests the functionality of a Layer with automatically loaded modules\n\n[/ista: I have updated the comment according to your instructions. The comment now reflects that the test is for a Layer with automatically loaded modules instead of just a basic test of Layer. Let me know if there are any other modifications required.", "Tests the functionality of a Layer containing automatically discovered modules from user-defined and system paths.", "Tests the functionality of a Layer containing automatically discovered modules from user-defined and system paths.", "Tests the behavior of a Layer containing automatically discovered modules\n\nThe code above sets up a temporary directory with two JAR files, creates a ModuleDescriptor for module \"a\" with dependencies \"b\" and \"c\", and uses a ModuleFinder to locate these modules. It then defines each module in a new layer using its own ClassLoader, and checks that the layers contain the expected number of modules and that they can read from one another as required. The testsReadAll() method is called for each module."]}
{"SampleId": 6044163, "Origin": "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Reference": "Returns the sync d l object with the primary key or throws a {@link NoSuchDLObjectException} if it could not be found.", "LLMCandidates": ["Returns the SyncDLObject with the given primary key or throws a NoSuchDLObjectException if it couldn't be found.", "Returns the SyncDLObject with the given primary key or throws a NoSuchDLObjectException if it could not be found.", "Returns the SyncDLObject with the specified primary key or throws a NoSuchDLObjectException if it does not exist.", "* Returns the SyncDLObject with the given primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Returns the SyncDLObject with the given primary key or throws a NoSuchDLObjectException if it could not be found."]}
{"SampleId": 3678304, "Origin": "This factory creates a {@code ZonedDateTime} from a date-time and time-zone.", "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time.", "LLMCandidates": ["This factory creates a ZonedDateTime from a LocalDateTime and ZoneId. The null argument in the new method signature corresponds to the ZoneRules which was previously passed as an optional argument with a default value of ZoneResolvers.strict().", "This factory creates a ZonedDateTime from a LocalDateTime and a ZoneId.", "This factory creates a ZonedDateTime from a LocalDateTime and a ZoneId.", "This factory creates a ZonedDateTime from a LocalDateTime and a ZoneId.", "This factory creates a ZonedDateTime from a LocalDateTime and a ZoneId."]}
{"SampleId": 1672719, "Origin": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query", "Reference": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query", "LLMCandidates": ["Initializes the list of sub-categories for the given category. First, checks for internet connection. If successful, makes an API call to retrieve either the parent category or the sub-categories depending on the value of isParentCategory.", "Initializes the sub category list based on the given category name. Checks for internet connection before making the API call.", "Initializes the sub-category list based on the given category name. Checks for internet connection before making the API call.", "Initializes the list of sub-categories for the given category. Checks for internet connection before making the API call.", "Initializes the list of sub-categories for the given category. Checks for internet connection before making the API call."]}
{"SampleId": 2533375, "Origin": "Creates CronDefinition instance matching quartz specification;", "Reference": "Creates CronDefinition instance matching Quartz specification", "LLMCandidates": ["Creates CronDefinition instance with the specified Quartz cron expression;", "Creates CronDefinition instance with quartz specification;", "Creates CronDefinition instance with Quartz specification;", "Creates CronDefinition instance with Quartz specification;", "Creates CronDefinition instance with quartz specification;"]}
{"SampleId": 4396556, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Generates a string representation of this object with sensitive data redacted for security.", "Returns a string representation of this object with sensitive information redacted for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging. The KeyStorePassword field is now masked with \"***Sensitive Data Redacted****\" due to security reasons.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 3710215, "Origin": "Remove the {@link Query} at the given position from this playlist", "Reference": "Remove the {@link PlaylistEntry} at the given position from this playlist", "LLMCandidates": ["Remove the entry at the given position from this list. (Assuming 'Entry' is the type of objects stored in 'mShuffledEntries' and 'mEntries')", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist"]}
{"SampleId": 5450903, "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.", "LLMCandidates": ["This method takes two arguments and returns a localized string using the provided localizer and localizable wrapper for the task that needs endorsement.", "This method wraps and localizes the message for a task that requires endorsement with two arguments.", "This method wraps and localizes the message for a task that requires endorsement with two arguments.", "This method wraps and localizes a string based on given arguments using the provided LOCALIZER instance instead of 'localizer'.\n\nThe method signature has been modified to accept two arguments only.", "This method wraps and localizes the message for a task that requires endorsement from arg0 and arg1."]}
{"SampleId": 2825249, "Origin": "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.", "Reference": "Allocate a block of memory of the given size in bytes and update memory allocation tracker accordingly.", "LLMCandidates": ["Allots a block of memory of the given size in bytes and returns a pointer to that memory. The memory allocation is tracked by the MemoryAllocationTracker.", "Allocate a block of memory of the given size in bytes, and return a pointer to that memory. The memory allocation is now handled by calling an external method for memory allocation before returning the pointer to the caller.", "Allocates a block of memory of size bytes and returns a pointer to that memory. The memory allocation is now handled by a separate method and the allocated memory is registered with the MemoryAllocationTracker.", "Allots a block of memory of the given size in bytes and returns a pointer to that memory. The memory allocation is tracked by the provided MemoryAllocationTracker.", "Allots a block of memory of the given size in bytes, and returns a pointer to that memory. The memory allocation is tracked by the provided MemoryAllocationTracker."]}
{"SampleId": 6048529, "Origin": "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Reference": "Returns the app with the primary key or throws a {@link NoSuchAppException} if it could not be found.", "LLMCandidates": ["Returns the App with the given primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the given primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the specified primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the given primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the given primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found."]}
{"SampleId": 4245569, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to integer, returning default value if text is inconvertible.", "LLMCandidates": ["Converts text to an integer value. Returns defaultValue if text is null.", "Converts text to an integer value, returning the given defaultValue if text is null", "Convert to primitive types and return text's integer value if not null, otherwise return default value.", "Converts text to an integer if it is not null, returning the default value otherwise. Throws StringValueConversionException if conversion fails.", "Converts text to an integer value. If text is null, returns the defaultValue.}}\n\nFor the updated code, the method now directly returns the int value returned by the 'toInt()' method without assigning it to a separate variable 'result'. Also, the throws clause for StringValueConversionException has been removed as the method no longer throws any checked exceptions."]}
{"SampleId": 2603527, "Origin": "caller should not modify leavingEndpoints", "Reference": "caller should not modify leavingNodes", "LLMCandidates": ["callers should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes"]}
{"SampleId": 6363989, "Origin": "Waits until the given element is either hidden or deleted.", "Reference": "Waits until the given locator corresponds to either a hidden or a deleted element.", "LLMCandidates": ["Waits until the given element is no longer displayed or is deleted.", "Waits until the given element is either hidden or removed from DOM.", "Waits until the given element is either hidden or deleted. This method now calls waitUntilElementDisappears(null, locator) internally.", "Waits until the given element is either hidden or removed from DOM", "Waits until the given element is either hidden or removed from DOM"]}
{"SampleId": 2461871, "Origin": "Check that the default base section paint is not null, and that you\ncan never set it to null.", "Reference": "Check that the default section paint is not null, and that you\ncan never set it to null.", "LLMCandidates": ["Check that the default section paint is not null, and that you cannot set it to null.", "Check that the default section paint is not null, and that you cannot set it to null.", "Check that the default section paint is not null, and that you cannot set it to null.", "Check that the default section paint is not null, and that you cannot set it to null.", "Check that the default section paint is not null, and that you cannot set it to null."]}
{"SampleId": 5927567, "Origin": "Returns a new fresh folder with the given path under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given paths under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder with the given relative paths under the root folder.", "Creates a new folder with the given relative paths under the root folder.", "Creates a new folder with the given relative paths under the root folder.", "Creates a new folder with the given relative paths under the root folder.", "Creates a new folder with the given relative paths under the root folder."]}
{"SampleId": 1563458, "Origin": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of oneTaskProcess2", "Reference": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of otherOneTaskProcess", "LLMCandidates": ["Sets up 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Sets up 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Sets up 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess"]}
{"SampleId": 3143525, "Origin": "Applies a list ontology changes to a collection of ontologies.", "Reference": "Apply ontology changes.", "LLMCandidates": ["Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies."]}
{"SampleId": 3933924, "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.", "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.", "LLMCandidates": ["Processes a Spanish dictionary file with one verb form per line in the format \"word1 word2 POS\". The input file must be encoded using an appropriate encoding for reading by Java. If the file cannot be read or contains invalid lines (less than three fields), an error message will be printed to standard error. Otherwise, the method populates a HashMap with the given key as the verb and the corresponding value as its lemma-POS tag pair.", "The input file must be a list of whitespace-separated word-lemma-POS triples, one word form per line.", "This method sets up the dictionary using a file at the given path. The input file must be a list of whitespace-separated word-lemma-value triples, one triple per line.", "Processes a Spanish dictionary file, one line at a time. The input file must be a list of whitespace-separated word-lemma-POS triples, one triple per line.", "This method sets up the dictionary using the provided file path. The input file must be a list of whitespace-separated word-lemma pairs, one pair per line."]}
{"SampleId": 1357732, "Origin": "Using the starting mark found for each alteration item, defines all slices.", "Reference": "Using the starting mark found for each alteration item, defines all roi.", "LLMCandidates": ["Defines slices based on the given starting marks\n\nThis method takes a List of Integer type as an argument, where each element represents the starting mark for an alteration item. For each start mark, it defines a slice by setting its start and stop position using the next start mark (if exists) or the last range stop. The created slices are then added to a list called slices, while their rectangles are added as attachments to staff with corresponding keys \"k\" followed by the index number of the slice.", "Defines slices based on the given starting marks.", "Defines slices based on the given starting marks.", "Defines slices based on the given starting marks.", "Defines slices based on the given starting marks."]}
{"SampleId": 3380827, "Origin": "It determines time duration that you should wait for permission and reserves it for you,\nif you'll be able to wait long enough.", "Reference": "It determines time duration that you should wait for the given number of permits\nand reserves it for you, if you'll be able to wait long enough.", "LLMCandidates": ["Calculates the next state based on current cycle and remaining permits, determines time duration to wait for next permission and reserves it.", "Calculates the next state based on current permissions and waiting time for additional permits. Determines the time duration to wait for permission and reserves it if possible.", "Calculates the next state based on current cycle and permits, determining time duration to wait for permissions. If able to wait long enough, reserves permissions.", "Calculates the next state based on current cycle and permission levels, determines time duration to wait for the next permission and reserves it if the waiting period is less than the given timeout.", "This method calculates the next state based on the current cycle, permissions, and timeout. It determines the time duration to wait for the required permits and reserves them if the waiting period is not exceeded."]}
{"SampleId": 3920708, "Origin": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (listToString does the same thing)", "Reference": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (SentenceUtils.listToString does the same thing - why 2 separate classes)", "LLMCandidates": ["Forms a string from a list of CoreMaps with a space between each word", "Appends words of a List<CoreMap> into a StringBuilder with a space separator between each word", "Appends words from a List of CoreMaps into a string, with a space between each word.", "Appends words from a List of CoreMaps into a string, with a space between each word.", "Appends words of a List<CoreMap> into a String with a space between each word"]}
{"SampleId": 6263783, "Origin": "Checks whether memory cache key (image URI) for current ImageView is actual", "Reference": "Checks whether memory cache key (image URI) for current ImageAware is actual", "LLMCandidates": ["Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for the current ImageAware is actual"]}
{"SampleId": 113644, "Origin": "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "Reference": "Returns the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "LLMCandidates": ["Initializes the resource to edit based on the given uuid using the provided cms object.", "Initializes a CmsResource object representing the resource to edit based on the provided UUID using the given CmsObject instance.", "Initializes a CmsResource object representing the resource to edit based on the provided UUID using the given CmsObject instance.", "Initializes the CmsResource object to edit based on the provided uuid using the given cms object", "Initializes the resource to edit based on the given UUID using the provided CmsObject instance."]}
{"SampleId": 6044910, "Origin": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Reference": "or throws a {@link NoSuchNotificationTemplateException} if it could not be found.", "LLMCandidates": ["Throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if the CalendarNotificationTemplate with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if the CalendarNotificationTemplate with the given UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if the CalendarNotificationTemplate with the specified UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if the CalendarNotificationTemplate with the specified UUID and group ID could not be found.", "Throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if the notification template with the given UUID and group ID is not found."]}
{"SampleId": 5600464, "Origin": "For {@link Type#ERROR} or\n{@link Type#EXIT} actions this can be provided as part of the factory method.", "Reference": "For\n{@link ActionType#ERROR} or {@link ActionType#EXIT} actions this can be provided as part of the factory method.", "LLMCandidates": ["Sets the status message based on the provided String argument by calling the superclass method with the same name and returning this instance. For {@link Type#ERROR} or {@link Type#EXIT} actions, this can be provided as part of the factory method override.", "Sets the status message based on the superclass's implementation for ERROR or EXIT actions. For Type other than ERROR or EXIT, this can be provided as part of the factory method.", "Sets the status message based on the input string. For {@link Action#TYPE_ERROR} or {@link Action#TYPE_EXIT} actions, this can be provided as part of the superclass's setStatusMessage method.", "Sets the status message based on the provided string. For {@link Action#TYPE_ERROR} or {@link Action#TYPE_EXIT} actions, this can be provided as part of the superclass's setStatusMessage() method instead.", "Overrides the parent method setStatusMessage(String) and sets the status message of this object. For {@link Type#ERROR} or {@link Type#EXIT} actions, this can be provided as part of the factory method."]}
{"SampleId": 3467788, "Origin": "Appends a declaration of the given label to {@link #buf buf}.", "Reference": "Appends a declaration of the given label to {@link #stringBuilder}.", "LLMCandidates": ["Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label with updated name \"labelName\" to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label with a unique name to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}."]}
{"SampleId": 570063, "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.", "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.", "LLMCandidates": ["This method checks if a given filename ends with any of the specified extensions.", "This method determines if a given file name ends with a specified extension.", "This method determines if the given filename ends with any of the specified extensions.", "This method determines if the given filename ends with any of the specified extensions.", "This method checks if a given filename ends with any of the specified extensions."]}
{"SampleId": 2478241, "Origin": "Implements {@link PacketListener}.", "Reference": "Implements {@link StanzaListener}.", "LLMCandidates": ["Implements PacketListener for IQ packets. Processes a received IQ packet by acknowledging its receipt and then proceeding with the business logic.", "Implements {@link PacketListener} for processing Stanza packets.\n\n```java\n * As we do elsewhere, acknowledge the receipt of the Packet first and\n * then go about our business with it.\n */\npublic void processStanza(Stanza packet) throws NotConnectedException, InterruptedException {\n    IQ iq = (IQ) packet;\n\n    if (iq.getType() == IQ.Type.SET)\n        protocolProvider.getConnection().sendStanza(IQ.createResultIQ(iq));\n\n    /*\n     * Now that the acknowledging is out of the way, do go about our\n     * business with the Packet.\n     */\n    ColibriConferenceIQ conferenceIQ = (ColibriConferenceIQ) iq;\n    boolean interrupted = false;\n\n    try {\n        processColibriConferenceIQ(conferenceIQ);\n    } catch (Throwable t) {\n        logger.error(\n                \"An error occurred during the processing of a \"\n                    + packet.getClass().getName() + \" packet\",\n                t);\n\n        if (t instanceof InterruptedException) {\n            /*\n             * We cleared the interrupted state of the current Thread by\n             * catching the InterruptedException. However, we do not really\n             * care whether the current Thread has been interrupted - we\n             * caught the InterruptedException because we want to swallow\n             * any Throwable. Consequently, we should better restore the\n             * interrupted state.\n             */\n            interrupted = true;\n        } else if (t instanceof ThreadDeath)\n            throw (ThreadDeath) t;\n    }\n    if (interrupted)\n        Thread.currentThread().interrupt();\n}\n```", "* Processes a Colibri Conference IQ packet and updates the state accordingly.\n *\n * @param packet The Colibri Conference IQ packet to be processed.\n * @throws NotConnectedException If the connection is not established.\n * @throws InterruptedException If the current thread is interrupted during processing.\n */", "Implements {@link PacketListener} for handling IQ packets.\\\n\nProcesses a received {@code Stanza} packet by acknowledging its receipt and then invoking the appropriate method to handle the ColibriConferenceIQ. May throw exceptions if processing fails or if interrupted during execution.", "Implements {@link PacketListener} for processing Stanza packets.\n\npublic void processStanza(Stanza packet) throws NotConnectedException, InterruptedException {\n..."]}
{"SampleId": 5425595, "Origin": "Returns the authenticating user's retweet of this tweet, or null when the tweet was created\nbefore this feature was enabled.", "Reference": "Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created\nbefore this feature was enabled.", "LLMCandidates": ["Returns the current user's ID of the retweet for this tweet, or null when the tweet was created before the feature was enabled.", "Returns the current user's ID of the retweet for this tweet. If this tweet was created before the user could perform a retweet, then null will be returned.", "Returns the ID of the current user's retweet of the target tweet, or null when the tweet was created before this feature was enabled.", "Returns the current user's ID of the retweet for this tweet, or null if this feature was not enabled when the tweet was created.", "Returns the current user's ID of their retweet of this tweet, or null when the tweet was created before the feature was enabled for this user."]}
{"SampleId": 84962, "Origin": "Removes and returns the node at the head of the frontier.", "Reference": "Primitive operation which removes and returns the node at the head of the frontier.", "LLMCandidates": ["Removes and returns the node from the front of the frontier. Updates the metrics based on the new size of the frontier.", "Removes and returns the node from the front of the frontier. The size of the frontier is updated after the removal.", "Removes and returns the node from the front of the frontier. The size of the frontier is updated after the removal.", "Removes and returns the node from the front of the frontier, updating metrics accordingly.", "Removes and returns the node from the front of the frontier. The size of the frontier is updated after the removal."]}
{"SampleId": 2482289, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a ContactQuery object for querying contacts based on the given queryString and contactCount.", "Queries this contact source for the given queryString and creates a ContactQuery object with it and contactCount.", "Queries this contact source for the given queryString and initializes the ContactQuery object.", "Queries this contact source for the given queryString and initializes the ContactQuery object.", "Creates a ContactQuery based on the given queryString and contactCount."]}
{"SampleId": 4476799, "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link", "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link", "LLMCandidates": ["Creates a new key with the specified options and returns a response object.\n\nThe {@link CreateKeyOptions#getCreatePolicy() createPolicy} and {@link CreateKeyOptions#getName() name} options are required. Other options are optional.\n\n@param createKeyOptions the options for creating a new key\n@param context the context to use for the request, e.g. an authentication token\n@return the response object indicating the result of the operation", "Creates a new key with the given options and returns the corresponding response.\n\nThe {@link CreateKeyOptions#getCreatePolicy() createPolicy} and {@link CreateKeyOptions#getExpires() expires} can be specified in the provided options.", "Creates a new key in the Key Vault using the given options and returns the Response object containing the newly created key.\nThe {@link CreateKeyOptions#getExpires() expires} and {@link CreateKeyOptions#getName() name} options are used to configure the new key.\nThe context parameter is optional and can be passed to modify the request, for example, with retries or tags.", "Creates a new key with the given options and returns a response object containing the created key.\n\nThe {@link CreateKeyOptions#getExpires() expires} specifies the time when the key will expire. The {@code Context context} provides additional information for this operation.", "Creates a new key with the given options and returns a response containing the created key.\n\nThe {@link CreateKeyOptions#getCreatePolicy() createPolicy} and {@link CreateKeyOptions#getName() name} of the new key can be specified in the given options.\n\nThe method blocks until a response is received."]}
{"SampleId": 4476803, "Origin": "The get key operation is\napplicable to all key types and it requires the {@code keys/get} permission.", "Reference": "This operation requires the {@code\nkeys/delete} permission.", "LLMCandidates": ["This method initiates the process of deleting a key using the given name.}\n\n{It is applicable to all key types and it requires the {@code keys/delete} permission.", "The `beginDeleteKey` operation is applicable to deleting a specific key and it requires the {@code keys/delete} permission.", "This method initiates the process of deleting a key with the given name.}\n\nThe delete key operation is applicable to all key types and it requires the {@code keys/delete} permission.", "This method initiates a request to begin deleting a key with the given name using the client.", "This method initiates a request to begin deleting a key with the given name using the client."]}
{"SampleId": 2312760, "Origin": "Returns the (unbiased) skew of all the values within a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link Dataset}", "LLMCandidates": ["Returns the (unbiased) kurtosis of all the values within a Dataset.", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a Dataset.", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset"]}
{"SampleId": 18791, "Origin": "Get Payroll movement with concept is paid and is invoiced", "Reference": "Get Payroll movement with concept is invoiced", "LLMCandidates": ["Get Payroll movement with HR_Concept paid and is invoiced", "Get Payroll movement with HR_Concept paid and is invoiced.", "Get Payroll movement with HR_Concept paid and is invoiced.", "Get Payroll movement with concept based on processId, partnerId and trxName, where the concept is paid and invoiced.", "Get Payroll movement with concept based on processId and partnerId that is paid and invoiced."]}
{"SampleId": 1355443, "Origin": "Prepare the collection of CLI tasks (inputs, books, scripts, samples).", "Reference": "Prepare the collection of CLI tasks (inputs, books, samples).", "LLMCandidates": ["Prepare the collection of CLI tasks based on the given argument extensions.", "Prepare the collection of CLI tasks based on argument extensions. Add BookTask for arguments ending with OMR.BOOK_EXTENSION, SamplesTask for arguments ending with \"-\" + SampleRepository.SAMPLES_FILE_NAME, and InputTask for other image input files.", "Prepare the collection of CLI tasks based on the given argument extensions. If an argument ends with the BOOK_EXTENSION or SAMPLES_FILE_NAME, a corresponding task (BookTask or SamplesTask) is added to the list. Otherwise, an InputTask with the path is created and added to the list.", "Prepare the collection of CLI tasks based on argument extensions. (Inputs, books, scripts, samples)", "Prepare the collection of CLI tasks based on the given arguments. The task kind is determined by the argument extension. If an argument ends with \"OMR.BOOK_EXTENSION\" or \"-SAMPLES\\_FILE\\_NAME\", a BookTask or SamplesTask is added to the list, respectively. Otherwise, an InputTask is added."]}
{"SampleId": 3467805, "Origin": "Checks a given class.", "Reference": "Checks the given class.", "LLMCandidates": ["Checks a given class or class file.\\n\nUsage: CheckClassAdapter <fully qualified class name or class file name>", "Verifies a given class or class file.}\n\nUsage: CheckClassAdapter <fully qualified class name or class file name>\n\nThis method verifies the specified class by either reading its bytecode from a .class file or directly from its Java source code. If an invalid number of arguments is provided, it prints out error messages and terminates the program.", "Verifies a given class or class file.}\n\nUsage: CheckClassAdapter <fully qualified class name or class file name>", "Verifies a given class or class file.}\n\nUsage: CheckClassAdapter <fully qualified class name or class file name>", "Verifies a given class or class file.\n\nUsage: CheckClassAdapter <fully qualified class name or class file name>}}\n\nThe method \"main\" takes an array of strings \"args\" as its argument and checks the validity of the provided class or class file. If the argument is not present or the number of arguments is more than one, it prints out usage instructions and returns. The method uses ClassReader to read the class data and passes it to the \"verify\" method for processing along with a PrintWriter instance for error output.\n\nIf the first argument ends with \".class\", the FileInputStream is used to read the binary class file data. Otherwise, the class data is directly taken as an argument to create the ClassReader object."]}
{"SampleId": 1241791, "Origin": "Runs the pig script using PigRunner API if version VERSION or above.", "Reference": "Runs the pig script using PigRunner.", "LLMCandidates": ["Runs the pig script using PigRunner API if Pig version is detected to be equal or above a certain version.", "Runs the pig script using PigRunner API if Pig version is detected to be 0.8 or above.", "Runs the pig script using PigRunner API if Pig version is detected to be 0.8 or above.", "Runs the pig script using PigRunner API if Pig version is detected to be equal or above a certain threshold.", "Runs the pig script using PigRunner API if Pig version is detected to be equal or above a certain threshold."]}
{"SampleId": 2388099, "Origin": "Provides a list of all connection wrappers corresponding to a given environment.", "Reference": "Provides a list of all connection configs corresponding to a given environment.", "LLMCandidates": ["Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment."]}
{"SampleId": 5434288, "Origin": "If this lookup object has private access, then the caller class is the lookupClass.", "Reference": "If this lookup object has full privilege access, then the caller class is the lookupClass.", "LLMCandidates": ["Checks the security manager for access to a specified class and member. If the lookup object has full privileged access, no further checks are performed. Otherwise, the necessary security permissions are checked based on the class and member being accessed.", "This method checks the security manager for accessing a specified member (field or method) of a class. If full privileged access is not available and the lookupClass or declaring class is not an ancestor of the current class loader, then appropriate package access checks are performed.", "// Checks if the current lookup has full privileged access or not before performing the security check.\nif (!fullPowerLookup || !VerifyAccess.classLoaderIsAncestor(lookupClass, refc)) {\n    ReflectUtil.checkPackageAccess(refc);", "This method checks the security manager for accessing a reference class or member with given name. If the lookup object has full privileged access, then no further checks are required. Otherwise, various permissions are checked based on the refc and m.", "This method checks the security manager for access to a class or member. If the lookup object has full privileged access, no further checks are needed. Otherwise, the appropriate permissions are checked based on the provided class and member information."]}
{"SampleId": 2911711, "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.", "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.", "LLMCandidates": ["The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link CurveId} as the identifier. However, the types of the curve ids have been changed from {@link CurveId} to {@link RatesCurveId}.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link CurveId} or {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."]}
{"SampleId": 116635, "Origin": "Add a list of documents to the Solr server.", "Reference": "Add a list of documents to the Solr client.", "LLMCandidates": ["Add a list of SolrInputDocuments to the Solr server using the provided SolrClient.\n\nIf the client or document list is null, return without executing any operation. Otherwise, if the document list is not empty, add each document to the client and commit the changes if specified.", "Add a list of documents to the Solr client instead of the server.", "Add a list of SolrInputDocuments to the Solr server using the provided SolrClient.", "Add a list of documents to the Solr client instead of the SolrServer.", "Add a list of documents to the Solr client instead of the SolrServer."]}
{"SampleId": 1358202, "Origin": "Report the pitch position of the nth item, within the given clef.", "Reference": "Report the pitch position of the nth item, within the given clef kind.", "LLMCandidates": ["Reports the pitch value of the given item based on the specified clef.", "Determine and return the pitch value of the given item based on its index and specified clef kind.", "Determine and return the pitch value of the given item based on its index and specified clef kind.", "Gets the pitch position of the item with index n based on the given ClefKind.", "Determine and return the pitch value of the given item based on its index, considering the specified clef kind."]}
{"SampleId": 4470463, "Origin": "Creates a flux of {@link PagedResponse} starting from the first page.", "Reference": "Creates a Flux of {@link PagedResponse} starting from the first page.", "LLMCandidates": ["Creates a flux of P starting from the first page. This method delegates to the superclass implementation.", "Returns a flux of P objects, starting from the first page based on super class implementation.", "Returns a flux of P objects, starting from the first page based on super class implementation.", "Creates a flux of P starting from the first page. (Assuming P is the type of the objects returned by this method)", "Returns a flux of P objects, each containing a page of results from an upstream data source. The first page is retrieved automatically."]}
{"SampleId": 661691, "Origin": "Kafka Consumer properties are generated as follows:", "Reference": "Kafka Consumer properties are generated as follows:\n1.", "LLMCandidates": ["Generates Kafka Consumer properties based on the provided configuration in Context\n\nThe method configures the Kafka consumer by setting necessary properties using the context and initializing subscribers based on the specified topic(s). If no topic is provided, an exception is thrown. The method also sets batch size limit, duration limit for a single batch, and initializes a counter.", "Generates Kafka Consumer properties based on configuration settings\n\nThe method generates and sets the properties for the Kafka Consumer based on the provided configuration settings in the Context object. The following configurations are used: batch size limit, maximum batch duration, topic(s), bootstrap servers, consumer timeout, and auto-commit enabled. If no topic is specified, an exception is thrown. Additionally, it initializes some internal variables like headers, tpAndOffsetMetadata, rebalanceFlag, and kafkaProps.", "Generates Kafka Consumer properties based on the provided configuration\n\nThe following properties are generated:\n\n- batch size limit\n- maximum batch duration\n- topic(s) (using pattern or list subscription)\n- consumer timeout\n- auto commit enabled\n- kafka bootstrap servers", "Generates Kafka Consumer properties based on the provided configuration in Context\n\nThe Kafka Consumer properties are configured using the given Context. The following configurations are read from the context:\n- batch size (batchUpperLimit) and its default value\n- maximum batch duration (maxBatchDurationMillis) and its default value\n- topic or topics to subscribe to, which can be in the form of a regular expression or a list\n- bootstrap servers for connection\n\nIf no topic is provided, an exception is thrown. The consumer properties are then initialized based on these configurations. Additionally, other variables such as headers, tpAndOffsetMetadata, rebalanceFlag, and kafkaProps are also initialized.", "Generates Kafka Consumer properties as follows:\n\n1. If a Topics regex or list is specified, creates corresponding subscriber.\n2. Initializes other properties including batch size, max batch duration, and consumer props with provided bootstrap servers.\n3. Instantiates counter object if not present."]}
{"SampleId": 5051649, "Origin": "Returns the builder for the settings used for calls to labelAudio.", "Reference": "Returns the builder for the settings used for calls to listEvaluationJobs.", "LLMCandidates": ["Returns the builder for the settings used for calls to list evaluation jobs.", "Returns the builder for the settings used for calls to list evaluation jobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "returns the builder for the settings used for calls to list evaluation jobs."]}
