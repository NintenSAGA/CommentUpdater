{"SampleId": 5075805, "Origin": "Save basic clusters.", "Reference": "Save cluster basic configuration.", "LLMCandidates": ["Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration.", "Save cluster basic configuration."]}
{"SampleId": 668963, "Origin": "Configure a sslConfig for the server using the legacy configuration", "Reference": "Configure a SSLConfig.Builder for the server using the legacy configuration", "LLMCandidates": ["Configure a sslConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration"]}
{"SampleId": 5425047, "Origin": "If the wrapping fails,\nthen null is returned.", "Reference": "If wrapping fails, returns null.", "LLMCandidates": ["Wraps a given object into JSONArray or JSONObject. If the object is null, equals to NULL, or its type is not supported, returns null.", "Wraps the given object into a JSON format if possible. If wrapping fails or the input is null, returns null.", "Wraps an object into a JSON format if possible; otherwise returns null.", "Wraps an object into a JSON format if possible; otherwise returns null.", "Wraps the input object into a JSON format. If the wrapping fails or input is null, returns null."]}
{"SampleId": 2217833, "Origin": "Test of npara method, of class GeometricDistribution.", "Reference": "Test of length method, of class GeometricDistribution.", "LLMCandidates": ["Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution."]}
{"SampleId": 4708521, "Origin": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL", "Reference": "Bui (2015) \"CacheDiff: Fast Random Sampling\" URL", "LLMCandidates": ["Performs a partial Fisher-Yates shuffle and selects n indices from N randomly, using a HashMap to keep track of what has been moved. Based on Bui (2015) \"CacheDiff: Fast Random Sampling\".", "Returns an array of n unique integers randomly chosen from the range [0, N), where 0 <= i < N and N >= n > 0. The method uses a partial Fisher-Yates shuffle to achieve this while maintaining a HashMap to keep track of which numbers have been selected.", "Generate a sparse sample of n points from a pool of N points using Fisher-Yates shuffle algorithm while maintaining a map to keep track of what has been moved. This method throws an IllegalArgumentException if n or N is negative or if n is greater than N.", "This method samples n points from N points, performing a partial Fisher-Yates shuffle and keeping track of what has been moved using a HashMap. It throws an IllegalArgumentException if either n or N are negative or n is greater than N. The selected indices are stored in the returned int array.", "Draws a sparse sample of n points from N given points using Fisher-Yates shuffle algorithm, ensuring that each point has equal chance to be selected. This method throws an IllegalArgumentException if the input parameters are invalid (n is greater than N, or both n and N are less than 0)."]}
{"SampleId": 339279, "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the search\nresult.", "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search\nresult.", "LLMCandidates": ["If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result."]}
{"SampleId": 5629914, "Origin": "Sets the options.", "Reference": "Set the options.", "LLMCandidates": ["Sets the options for the Builder.", "Sets the options for the builder.", "Sets the options for this Builder instance.", "Sets the options for this Builder instance.", "Sets the options for this Builder instance."]}
{"SampleId": 2996629, "Origin": "Convenience method to get custom install file", "Reference": "Convenience method to get custom installation script", "LLMCandidates": ["Retrieves the installation script properties based on the existence of a file named \"installation.script\" at both absolute path and classpath locations. The method returns an instance of Properties containing the installation script settings. If \"installation.script\" property is not set, it will return an empty instance of Properties.", "Gets the installation script properties based on whether it exists as an absolute file path or a classpath resource.", "Retrieves the installation script properties, either from the classpath or an absolute file path based on the value of \"installation.script\" system property.", "Retrieves the installation script properties based on the existence of the file. If the file exists, it loads the installation script from its absolute path; otherwise, it loads the installation script from the classpath.", "Retrieves installation properties file based on its absolute path or classpath"]}
{"SampleId": 5629994, "Origin": "Sets the confidence.", "Reference": "Set the confidence.", "LLMCandidates": ["Sets the confidence using a builder pattern.", "Sets the confidence within a builder pattern.", "Sets the confidence within a builder pattern.", "Sets the confidence in a Builder pattern.", "Sets the confidence in a Builder pattern."]}
{"SampleId": 3992375, "Origin": "Request an update of the current cluster metadata info, return the current version before the update", "Reference": "Request an update of the current cluster metadata info, return the current updateVersion before the update", "LLMCandidates": ["Request an update of the current cluster metadata info, return the current updateVersion before the update.", "Request an update of the current cluster metadata info, return the current updateVersion before the update.", "Request an update of the current cluster metadata info, return the current updateVersion before the update.", "Request an update of the current cluster metadata info, return the current updateVersion before the update.", "Request an update of the current cluster metadata info, return the current updateVersion before the update."]}
{"SampleId": 570076, "Origin": "Gets the full path from a full filename, which is the prefix + path.", "Reference": "Gets the full path from a full fileName, which is the prefix + path.", "LLMCandidates": ["Gets the full path from a full filename, which is the prefix + path.", "Gets the full path from a full filename, which is the prefix + path.", "Gets the full path from a full filename, which is the prefix + path.", "Gets the full path from a full filename, which is the prefix + path.", "Gets the full path from a full filename, which is the prefix + path."]}
{"SampleId": 5455336, "Origin": "Unlinks interior Node p with predecessor trail.", "Reference": "Unlinks interior Node p with predecessor pred.", "LLMCandidates": ["Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred.", "Unlinks interior Node p with predecessor pred."]}
{"SampleId": 6165700, "Origin": "Create a new client with the given connection string.", "Reference": "Create a new client with the given client settings.", "LLMCandidates": ["Create a new client with the given MongoClientSettings object.", "Create a new MongoClient with the given MongoClientSettings.", "Create a new MongoClient with the given MongoClientSettings.", "Create a new client with the given MongoClientSettings.", "Create a new client with the given MongoClientSettings."]}
{"SampleId": 5062276, "Origin": "The buffer resets\nafter this method is called, so this method should only be called once per BlobDescriptor.", "Reference": "The buffer\nresets after this method is called, so this method should only be called once per computation.", "LLMCandidates": ["This method computes the SHA-256 digest of the buffer, and the buffer is reset after this computation is performed. So, it should only be called once per BlobDescriptor.", "This method computes the digest of the buffer and updates the descriptor digest accordingly. As the buffer resets after this method is called, it should only be invoked once per BlobDescriptor.", "This method computes the digest of the current byte array and sets the descriptorDigest accordingly. The buffer resets after this method is called, so it should only be called once per BlobDescriptor.", "This method should only be called once per BlobDescriptor as the buffer resets after this method is called.", "This method should only be called once per BlobDescriptor as the buffer resets after this method is called."]}
{"SampleId": 336204, "Origin": "Sets the host's {@link OnBackPressedDispatcherOwner}.", "Reference": "Sets the host's {@link OnBackPressedDispatcher}.", "LLMCandidates": ["Sets the host's {@link OnBackPressedDispatcher}.", "Sets the host's {@link OnBackPressedDispatcher}.", "Sets the host's {@link OnBackPressedDispatcher}.", "Sets the host's {@link OnBackPressedDispatcher}.", "Sets the host's {@link OnBackPressedDispatcher}."]}
{"SampleId": 1922872, "Origin": "Creates a {@link NativeLinkable} using sources compiled by the D compiler.", "Reference": "Creates a {@link NativeLinkableGroup} using sources compiled by the D compiler.", "LLMCandidates": ["Creates a {@link NativeLinkable} using sources compiled by the C++ compiler.", "Creates a {@link NativeLinkable} using sources compiled by the D compiler, and returns a rule to link the .o files together with their dependencies.", "Creates a {@link NativeLinkable} using sources compiled by the C++ compiler.", "Creates a {@link NativeLinkable} using sources compiled by the D compiler and the specified linker flags and includes.", "Creates a {@link NativeLinkable} using sources compiled by the D compiler and linking the .o files together with its dependencies for an executable build."]}
{"SampleId": 3037028, "Origin": "Sets the CPU status (free or busy).", "Reference": "Sets the CPU status (free or busy since some ms).", "LLMCandidates": ["Sets the CPU busy status since a certain time.", "Sets the CPU busy duration since a specified time (in milliseconds).", "Sets the CPU busy duration since a specified time (in milliseconds).", "Sets the CPU busy duration since a certain time point.", "Sets the CPU busy duration since a certain time point."]}
{"SampleId": 6017988, "Origin": "Computes the maximum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the maximum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the maximum for each pixel across all bands in the Planar image and reshapes the output to match the input dimensions.", "Computes the maximum for each pixel across all bands in the Planar image and reshapes the output array to match the input's dimensions.", "Computes the maximum for each pixel across all bands in the {@link Planar} image and reshapes the output array to match the input image's width and height.", "Computes the maximum for each pixel across all bands in the {@link Planar} image and reshapes the output array to match the input's dimensions.", "Computes the maximum for each pixel across all bands in the {@link Planar} image, reshapes the output to match the input's dimensions before performing the operation."]}
{"SampleId": 4396494, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with the AccessToken value replaced by ***Sensitive Data Redacted*** when not null.", "Returns a string representation of this object; useful for testing and debugging, except that sensitive access tokens will be replaced with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with sensitive access tokens redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive access tokens redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive access tokens redacted."]}
{"SampleId": 4617099, "Origin": "Closes the Websocket-Connection.", "Reference": "Closes the WebSocket connection.", "LLMCandidates": ["Closes the Websocket-Connection without a specific reason.", "Closes the Websocket-Connection.", "Closes the Websocket-Connection.", "Closes the Websocket-Connection without reason.", "Closes the Websocket-Connection without reason."]}
{"SampleId": 3676014, "Origin": "For example, the period in hours between two times can be calculated\nusing {@code startTime.periodUntil(endTime, HOURS)}.", "Reference": "For example, the period in hours between two times can be calculated\nusing {@code startTime.until(endTime, HOURS)}.", "LLMCandidates": ["For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}.", "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}.", "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}.", "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}.", "For example, the period in hours between two times can be calculated using {@code startTime.until(endTime, HOURS)}."]}
{"SampleId": 5724303, "Origin": "Converts an array of raw binary data into an array of ascii 0 and 1 character bytes - each byte is a truncated\nchar.", "Reference": "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated\nchar.", "LLMCandidates": ["Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char.", "Converts an array of raw binary data into an array of ASCII 0 and 1 character bytes - each byte is a truncated char."]}
{"SampleId": 2050129, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses all downloads if they are not already paused. Increments pendingMessages and informs internalHandler that downloads have been paused by sending a message with what was passed to MSG_SET_DOWNLOADS_PAUSED.", "Pauses all downloads if they are not already paused.", "Pauses all downloads if they are not already paused. Sets downloadsPaused to true and increases pendingMessages count. Sends a message with the value 1 for downloadsPaused to the internal handler.", "Pauses all downloads if they are not already paused.", "Pauses all downloads if they are not already paused. Increases the pendingMessages count and sends a message to the internal handler with MSG_SET_DOWNLOADS_PAUSED indicating that downloads are now paused."]}
{"SampleId": 6190739, "Origin": "Loads the {@link Class} using the application {@link ArtifactClassLoader}.", "Reference": "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "LLMCandidates": ["Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}.", "Loads the {@link Class} using the test runner {@link ArtifactClassLoader}."]}
{"SampleId": 440280, "Origin": "Convenient way to build a {@code BeamSqlRowType}.", "Reference": "Convenient way to build a {@link Schema}.", "LLMCandidates": ["Convenient way to build a {@code BeamSqlSchema}.", "Convenient way to build a {@code BeamSqlSchema}.", "Convenient way to build a {@code BeamSqlSchema}.", "Convenient way to build a {@code BeamSqlSchema}.", "Convenient way to build a {@code BeamSqlSchema}."]}
{"SampleId": 2357146, "Origin": "Calculates intersection of the image and the render filter region in the coordinate system relative to image.", "Reference": "Calculates intersection of the image and the render filter region in the coordinate system relative to the image.", "LLMCandidates": ["Calculates intersection of the image and the render filter region in the coordinate system relative to image, using the image rendering information's transformation matrix.", "Calculates intersection of the image and the render filter region in the coordinate system relative to image using the given ImageRenderInfo's CTM matrix for transformation.", "Calculates intersection of the image and the render filter region in the coordinate system relative to image, using the transformation matrix from ImageRenderInfo.", "Calculates intersection of the image and the render filter region in the coordinate system relative to image using the image's CTM matrix transformation provided by renderInfo.", "Calculates intersection of the image and the render filter region in the coordinate system relative to image using the image rendering transformation matrix."]}
{"SampleId": 4471751, "Origin": "If keys = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "Reference": "If {@code keyFilter = \"abc1234\"}, settings with a key equal to \"abc1234\" are returned.", "LLMCandidates": ["Returns a filtered key value for all settings with a key equal to \"abc1234\".", "If keyFilter = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "If keyFilter = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "If keyFilter = \"abc1234\", settings with a key equal to \"abc1234\" are returned.", "If keyFilter is \"abc1234\", settings with a key equal to \"abc1234\" are returned."]}
{"SampleId": 6100158, "Origin": "18:43:59\nCAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "Reference": "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...)", "LLMCandidates": ["Does NOT recognize values with a timezone information (...[+-Z]...)", "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...), and also recognizes values in NowAndTodayUtil's format.", "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...) or values that follow the format specified by NowAndTodayUtil.isNowOrTodayFormat(isoDate).", "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...), but also recognizes values that match the \"Now or Today\" format.", "CAUTION: Does NOT recognize values with a timezone information (...[+-Z]...), but now also recognizes values that match NowAndTodayUtil.isNowOrTodayFormat(isoDate)."]}
{"SampleId": 3403203, "Origin": "generic method for untyped messages.", "Reference": "generic method for untyped remoting.", "LLMCandidates": ["Sends a message with optional arguments to the actor's scheduler.", "Generic method for untyped messages; enqueues a call with the given message ID and arguments using the scheduler.", "generic method for untyped messages at caller side.", "generic method for untyped messages at caller side.", "generic method for untyped messages at caller side."]}
{"SampleId": 2912053, "Origin": "Sets the additional trade information, defaulted to an empty instance.", "Reference": "Sets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Sets the additional portfolio item information, defaulted to an empty instance.", "Sets the additional portfolio item information, defaulted to an empty instance.", "Sets the additional portfolio item information, defaulted to an empty instance.", "Sets the additional trade information, defaulted to a non-null instance of PortfolioItemInfo.", "Sets the additional trade information, defaulted to a non-null instance."]}
{"SampleId": 6045146, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Finds the CalendarResource with the specified class name ID and primary key or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Finds the CalendarResource with the given classNameId and classPK, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Finds the CalendarResource by class name ID and class PK, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Finds the CalendarResource with the given classNameId and classPK, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found."]}
{"SampleId": 113779, "Origin": "Initializes and returns the hashtable of all permissions known in the system.", "Reference": "Initializes and returns the linked hash map of all permissions known in the system.", "LLMCandidates": ["Initializes and returns the LinkedHashMap of all permissions known in the system, creating it only once and returning an unmodifiable view on it.", "Initializes and returns an unmodifiable map of all permissions known in the system.", "Initializes and returns the LinkedHashMap of all permissions known in the system. If the map has already been initialized, it will be returned directly. The map is then made unmodifiable to prevent further modifications.", "Initializes and returns an unmodifiable map of all permissions known in the system. The map is a LinkedHashMap<String, Integer> that initially contains the specified permission strings and their integer values. The map can be accessed multiple times without modifying it. If the map has not been initialized yet, it will be initialized with the specified permissions.", "Initializes and returns a linked hashmap of all permissions known in the system. The hashmap is immutable after being initialized."]}
{"SampleId": 4474377, "Origin": "Grants the role read permissions on the resource.", "Reference": "Sets the read permission status.", "LLMCandidates": ["Sets the read permission for the role on the resource.", "Sets the read permission for the role based on the provided boolean value.", "Updates the read permission of the role based on the provided boolean value.", "Updates the read permission of the role based on the provided boolean value.", "Sets the read permission for the role on the resource."]}
{"SampleId": 1843363, "Origin": "Waits during {@code timeout} until text extracted from specified {@code webElement} by {@link", "Reference": "Waits during {@code timeout} until value extracted from specified {@code element} by {@link", "LLMCandidates": ["Waits during {@code timeout} until text extracted from specified {@code element} by {@link WebDriver}. If the expected value is not equal to the actual value, it provides a formatted error message containing the expected and actual values.", "Waits during {@code timeout} until text extracted from specified {@code element} by {@link WebDriverWaitFactory}. It also provides custom error message formatting if the expected value is not equal to the actual value.", "Waits during {@code timeout} until text extracted from specified {@code element} by {@link WebDriver#findElement(By)} is equal to the expected value. If the time is up and the values are not equal, an exception with formatted messages will be thrown.", "Waits during {@code timeout} for specified {@code element} to have a text value equal to the expected {@code expected}. If the condition is not met within the given {@code timeout}, an exception will be thrown with the difference between the actual and expected values.", "Waits during {@code timeout} until text extracted from specified {@code element} by {@link waitVisibilityAndGetValue(WebElement, int)}, and compares it with the expected value. If they are not equal, a custom error message is provided."]}
{"SampleId": 1311563, "Origin": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate", "Reference": "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the API, but automatically validates against self-signed\n  - API trusts gateway certificate", "LLMCandidates": ["Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - service trusts gateway certificate", "Scenario:\n  - no CA inherited trust\n  - gateway does not explicitly trust the service, but automatically validates against self-signed\n  - API trusts gateway certificate", "Scenario: \n- no CA inherited trust \n- gateway does not explicitly trust the service, but automatically validates against self-signed\n- service trusts gateway certificate", "Scenario: \n- no CA inherited trust\n- gateway does not explicitly trust the service, but automatically validates against self-signed\n- service trusts gateway certificate"]}
{"SampleId": 1878506, "Origin": "Check if there is any negative cost (= improvement).", "Reference": "Find the smallest (most negative) value.", "LLMCandidates": ["Find the index of the minimum value in the array \"best\" without any lower values.", "Find the index of the minimum value in a given array of double values.", "Find the index of the minimum value in a given array of double values.", "Find the index of the minimum value in an array of double values.", "Find the index of the minimum value in an array of double values."]}
{"SampleId": 302612, "Origin": "see\nURL\nhtml", "Reference": "see\nURL", "LLMCandidates": ["Test that early evaluation of templates leads to correct output, and ensures that inspect does not throw ArrayIndexOutOfBoundsException in 4.0.2 version.", "This test case checks if the render function works correctly for a given template. It also verifies that calling the inspect method doesn't cause an ArrayIndexOutOfBoundsException in versions prior to 4.0.2. If the current mode is interactive, it waits for the inspection window to close; otherwise, it disposes the view frame and waits for all windows to be closed.", "This test case verifies that the render method of an ST object works correctly for a given template. It also checks if calling inspect does not throw any ArrayIndexOutOfBoundsException in version 4.0.2. If interactive mode is enabled, it waits for the close event before disposing the view frame; otherwise, it waits until any window is visible and then disposes the view frame and waits for all windows to be closed.", "Test that calling inspect on an ST object does not throw java.lang.ArrayIndexOutOfBoundsException in 4.0.2. If the test is interactive, wait for the window to be closed before closing it manually.", "This test case checks if the template rendering is correct and also verifies that inspecting the ST object doesn't lead to an ArrayIndexOutOfBoundsException in version 4.0.2. If running in interactive mode, it waits for the inspection window to be closed. Otherwise, it disposes of the view frame and waits for all windows to be closed."]}
{"SampleId": 6192460, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "LLMCandidates": ["Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance."]}
{"SampleId": 2337369, "Origin": "User / Group may update meta data of nodes: rename files and folders, change classification, etc.", "Reference": "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "LLMCandidates": ["User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc.", "User / Group may update metadata of nodes: rename files and folders, change classification, etc."]}
{"SampleId": 4396481, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with the value field redacted if it contains sensitive data.", "Returns a string representation of this object; useful for testing and debugging, but with sensitive values redacted.", "Returns a string representation of this object; useful for testing and debugging, but with sensitive values redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive values redacted if applicable.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted."]}
{"SampleId": 1118960, "Origin": "See {@link SyslogConstants} and RFC 3164 for more information about the", "Reference": "See RFC 3164 for more information about the", "LLMCandidates": ["Sets the facility by validating the input facility, calling the getFacility and getFacilityString methods from SyslogConstants, and printing an error message if the provided facility is not recognized. If the facility is null, no changes are made to syslogFacility or facilityStr.", "Sets the facility based on the provided String, checking for valid syslog facilities and converting to a corresponding facility string if necessary. See {@link SyslogConstants} and RFC 3164 for more information about the supported facilities and their corresponding strings. If the facility is null, no changes are made. Note: The method signature now includes a final keyword.", "Sets the facility based on the input facility string. If the input is not null, it first checks if the input is a valid syslog facility by calling getFacility(facility). If the facility is unknown (returns -1), it prints an error message to System.err and sets syslogFacility to LOG_USER. Finally, it sets the facility string using getFacilityString(syslogFacility). See {@link SyslogConstants} and RFC 3164 for more information about the supported facilities and their corresponding numeric values.", "Sets the facility by validating and converting the provided facility string to a valid syslog facility constant. If the facility is unknown, logs an error message and defaults to USER facility. Refer to {@link SyslogConstants} for known syslog facilities and RFC 3164 for more information about syslog facilities.", "Sets the syslog facility based on the given facility string, following the rules defined in {@link SyslogConstants} and RFC 3164. If the provided facility is null or an unknown facility, it will be defaulted to [USER]. Updates the internal facilityStr variable accordingly."]}
{"SampleId": 4388500, "Origin": "Once you've created\na DB parameter group, you need to associate it with your DB instance\nusing ModifyDBInstance .", "Reference": "Once you've created a DB parameter group,\nyou need to associate it with your DB instance using", "LLMCandidates": ["Once you've created a DB parameter group, you need to associate it with your DB instance using ModifyDBInstance .", "Creates a new DB parameter group associated with the given request and returns it.", "Creates a new DB parameter group associated with the given request and returns it.", "Once you've created a DB parameter group, you need to associate it with your DB instance using ModifyDBInstance.", "Once you've created a DB parameter group, you need to associate it with your DB instance using ModifyDBInstance ."]}
{"SampleId": 2231080, "Origin": "Returns the list of configured WAN publisher targets for this WAN\nreplication.", "Reference": "Returns the list of custom WAN publisher implementations for this WAN\nreplication.", "LLMCandidates": ["Returns the list of configured custom WAN publisher targets for this WAN replication.", "Returns the list of configured Custom WAN publisher targets for this WAN replication.", "Returns the list of configured Custom WAN publisher targets for this WAN replication.", "Returns the list of custom configured WAN publisher targets for this WAN replication.", "Returns the list of configured Custom WAN publisher targets for this WAN replication."]}
{"SampleId": 3143529, "Origin": "RemoveAxiom change objects are automatically generated.", "Reference": "The appropriate RemoveAxiom change objects are automatically\ngenerated.", "LLMCandidates": ["RemoveAxiom change objects are automatically generated for an OWLAxiom array.", "Removes the specified axioms from the given ontology using an array of axioms.", "Removes axioms from an ontology.", "RemoveAxiom change objects are automatically generated from collections of OWLAxioms.", "RemoveAxiom change objects are automatically generated from collections of OWLAxioms."]}
{"SampleId": 2973497, "Origin": "Return a signature object containing the current signature state.", "Reference": "Return the signature.", "LLMCandidates": ["Return a signature byte array containing the current signature state for supported algorithms (RSA_SIGN, RSA_GENERAL, EDDSA, ECDSA, DSA), or throw an UnsupportedOperationException if the algorithm is unsupported.", "Return a byte array containing the current signature state for supported algorithms, and throw an UnsupportedOperationException for unsupported algorithms.", "Return a byte array containing the current signature state based on the supported algorithms, or throw an exception for unsupported algorithm.", "Returns the current signature byte array for supported key algorithms; throws UnsupportedOperationException for unsupported key algorithms.", "Returns the current signature byte array for supported key algorithms; throws UnsupportedOperationException for unsupported key algorithms."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "Reference": "If {@code labelFilter = \"*abc*\"}, settings with a label containing \"abc\" are returned.", "LLMCandidates": ["Sets the label filter by specifying a filter string to match with the labels of settings. If the labelFilter parameter is \"*abc*\", settings with a label containing \"abc\" are returned.", "Set the label filter by specifying a string with \"labelFilter\".", "Set the label filter by specifying a string with \"labelFilter\".", "If {@code labelFilter = \"abc\"} (or \"*abc*\"), settings with a label containing \"abc\" are returned.", "Set the label filter to \"labelFilter\" for returning settings with a label containing \"labelFilter\"."]}
{"SampleId": 5724604, "Origin": "Adds a new URI to the list of redirects.", "Reference": "Adds a new URI to the collection.", "LLMCandidates": ["Adds a new URI to the list of unique redirects and all redirects.", "Adds a new URI to both the list of unique redirects and the list of all redirects.", "Adds a new URI to the list of redirects. This method now adds the URI to both unique and all lists.", "Adds a new URI to the list of redirects. This method now also adds the same URI to both the \"unique\" and \"all\" lists.", "Adds a new URI to the list of redirects. Updates both this.unique and this.all lists with the same URI."]}
{"SampleId": 2312746, "Origin": "Returns the (biased) estimate of the sample standard deviation of the\nvalues within a {@link PointSet} region of a {@link Dataset}.", "Reference": "Returns the (unbiased) kurtosis excess of all the values within a\n{@link PointSet} region of a {@link Dataset}", "LLMCandidates": ["Returns the (biased) estimate of the sample kurtosis excess of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the (biased) estimate of the sample standard deviation of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the (biased) estimate of the sample kurtosis excess of the values within a {@link PointSet} region of a {@link Dataset}.", "Returns the estimate of the sample kurtosis excess of the values within a PointSet region of a Dataset.", "Returns the (biased) estimate of the sample standard deviation of the values within a {@link PointSet} region of a {@link Dataset}."]}
{"SampleId": 2842886, "Origin": "ArchaiusModule however is stateful in that much of its configuration\nis supplied externally to the Guice injector.", "Reference": "ArchaiusModule however is stateful in\nthat it is initially set up outside of Guice.", "LLMCandidates": ["Return true if the argument is not null and is of same class as this object. Otherwise return false.", "ArchaiusModule is stateful, so it should only be installed once and can't be equal to any other object.", "Equality check for ArchaiusModule objects based on identity. As a stateful class that relies on external configuration, it is recommended to use this equals method instead of the default one provided by Object class.", "ArchaiusModule is immutable and can be compared using the == operator for object identity comparison.", "ArchaiusModule is immutable and can be compared using the == operator for object identity comparison."]}
{"SampleId": 3511327, "Origin": "The {@link EventContextKeys#MESSAGE_TARGET}, if any", "Reference": "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "LLMCandidates": ["The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any", "The {@link EventContextKeys#MESSAGE_CHANNEL}, if any"]}
{"SampleId": 3349712, "Origin": "Create a new empty {@link Sequential} with atomic guarantees on all mutative\noperations.", "Reference": "Create a new empty {@link Swap} with atomic guarantees on all mutative\noperations.", "LLMCandidates": ["Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations.", "Create a new empty {@link Swap} with atomic guarantees on all mutative operations."]}
{"SampleId": 2535867, "Origin": "Extract the values from the array's elements by applying an extracting function on them.", "Reference": "Extract the values from the array's elements by applying an extracting function on them, the resulting list becomes\nthe new object under test.", "LLMCandidates": ["Extract the values from the array's elements by applying an extracting function on them, and wrap the extracted values into a list for further assertions.", "Extract the values from the array's elements by applying an extracting function on them and convert it to a list.", "Extract the values from the array's elements by applying an extracting function on them and return a new AbstractListAssert instance containing the extracted values.", "Extracts values from the array's elements by applying an extracting function on them.", "Extract the values from the array's elements by applying an extracting function on them and store them in a list before creating a new Assert object for further assertions."]}
{"SampleId": 4117678, "Origin": "Sets the {@code Cipher} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "Reference": "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy\ninspection of Subject identity data.", "LLMCandidates": ["Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data.", "Sets the {@code CipherService} to use for encrypting and decrypting serialized identity data to prevent easy inspection of Subject identity data."]}
{"SampleId": 4829574, "Origin": "This method allows you to specify IterationListeners for this model.", "Reference": "This method allows you to specify trainingListeners for this model.", "LLMCandidates": ["This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model.", "This method allows you to specify TrainingListeners for this model."]}
{"SampleId": 2049560, "Origin": "Sets data to be parsed by libflac.", "Reference": "Sets the data to be parsed.", "LLMCandidates": ["Sets data for libflac parsing.", "Sets data to be parsed by libflac. This method sets the data to be parsed by libflac by assigning the provided ByteBuffer object to the byteBufferData instance variable and nullifies the extractorInput. No more tempBuffer is used, so that variable is also set to null.", "Sets data to be parsed by libflac. This method sets the ByteBuffer containing the data to be parsed by the libflac library and also nullifies any existing extractorInput and tempBuffer.", "Sets data to be parsed by libflac. This method sets the ByteBuffer data for parsing using the libflac library. It also resets extractorInput and tempBuffer to null.", "Sets data to be parsed by libflac. Discard extractorInput and tempBuffer."]}
{"SampleId": 3677760, "Origin": "Returns the next day-of-week adjuster, which adjusts the date to be\nthe next of the specified day-of-week after the specified date.", "Reference": "Returns the next day-of-week adjuster, which adjusts the date to the\nfirst occurrence of the specified day-of-week after the date being adjusted.", "LLMCandidates": ["Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week after the specified date.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week after the specified date.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week after the specified date.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week after the specified date.", "Returns the next day-of-week adjuster, which adjusts the date to be the next of the specified day-of-week after the specified date."]}
{"SampleId": 4476347, "Origin": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addSettingWithResponse#ConfigurationSetting}", "Reference": "{@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting}", "LLMCandidates": ["Sets the initial value by adding 8 to n.", "Set the initial value by adding 8 to n.", "Set the initial value by adding 8 to n.", "Set the initial value by adding 8 to n.", "@codesnippet com.azure.data.appconfiguration.configurationasyncclient.addConfigurationSettingWithResponse#ConfigurationSetting"]}
{"SampleId": 2706903, "Origin": "Set Account Element.", "Reference": "Set Kontenart.", "LLMCandidates": ["Set the Account Element ID.", "Set the Account Element ID.", "Set the Account Element ID.", "Set the Account Element value.", "Set the Account Element value."]}
{"SampleId": 5458940, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array."]}
{"SampleId": 3506207, "Origin": "The\n{@code orderType} is an enum value located under the {@link #ORDER_TYPE}\nkey.", "Reference": "The\n{@code orderType} is an enum value located under the {@link HasOrderTypeUtil#ORDER_TYPE}\nkey.", "LLMCandidates": ["The orderType is an enum value located under the {@link #HAS_ORDER_TYPE_UTIL_ORDER_TYPE} key.", "The orderType is an enum value located under the {{{Code}HasOrderTypeUtil.ORDER_TYPE}} key.", "The orderType is an enum value located under the HasOrderTypeUtil.ORDER_TYPE key.", "The orderType is an enum value located under the {@link #HAS_ORDER_TYPE_UTIL_ORDER_TYPE} key.", "The orderType is an enum value located under the HasOrderTypeUtil.ORDER_TYPE key."]}
{"SampleId": 105839, "Origin": "Read an optional Long value (stored as string) form a JSON Object.", "Reference": "Read an optional Date value (stored as string) form a JSON Object.", "LLMCandidates": ["Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object.", "Read an optional Date value (stored as string) form a JSON Object.", "Read an optional Date value (stored as string) form a JSON Object.", "Read an optional Date value (stored as string) from a JSON Object."]}
{"SampleId": 3241612, "Origin": "Gets the parent object in the object tree representing the unmarshalled xml document.", "Reference": "Gets the value of the anchorId property.", "LLMCandidates": ["Gets the anchor ID from the object representing the unmarshalled XML document.", "Gets the anchor object's ID representing the unmarshalled xml document.", "Gets the anchor ID of the object in the object tree representing the unmarshalled XML document.", "Gets the anchor ID of the object representing the unmarshalled XML document.", "Gets the anchor ID of the object representing the unmarshalled XML document."]}
{"SampleId": 1352302, "Origin": "If modified and not discarded, sheet material will be stored before being disposed of.", "Reference": "If modified or upgraded, sheet material will be stored before being disposed of.", "LLMCandidates": ["If modified or upgraded and not discarded, sheet material will be stored before being disposed of.", "If modified or upgraded, and not discarded, sheet material will be stored before being disposed of.", "If modified or upgraded and not discarded, sheet material will be stored before being disposed of.", "If modified or upgraded and not discarded, sheet material will be stored before being disposed of.", "If modified or upgraded, and not currently being processed, sheet material will be stored before being disposed of."]}
{"SampleId": 5454975, "Origin": "Get the value of the {@code accessible} flag for this object.", "Reference": "Get the value of the {@code accessible} flag for this reflected object.", "LLMCandidates": ["Get the value of the {@code accessible} flag for this object. @Deprecated(since=\"9\")", "Get the value of the {@code accessible} flag for this object.@Deprecated(since=\"9\")", "Get the value of the {@code accessible} flag for this object.@Deprecated(since=\"9\")", "Get the value of the {@code accessible} flag for this object. This method is deprecated since version 9.", "Get the value of the {@code accessible} flag for this object. This method is now deprecated since version 9."]}
{"SampleId": 2248673, "Origin": "Get icon img and append to buf", "Reference": "Get 16x16 icon img and append to buf", "LLMCandidates": ["Get icon img and append to buf, considering additional parameter iconpath", "Get icon img and append to buf with name and iconpath", "Get icon img and append to buf using name and optionally iconpath", "Get icon img and append to buf using name and optionally iconpath", "Get icon img and append to buf with name and optional iconpath parameter"]}
{"SampleId": 1879787, "Origin": "Testing the timesTranspose(vector, vector) method of VMath class.", "Reference": "Testing the timesTranspose(vector, vector) method of {@link VMath} class.", "LLMCandidates": ["Testing the timesTranspose(vector, vector) method of VMath class by comparing the result with manually defined expected results and verifying the transpose functionality.", "Testing the timesTranspose(vector, vector) method of VMath class with updated assertion function and correct usage of transpose and times methods.", "Testing the timesTranspose(vector, vector) method of VMath class by comparing the result with a manually created expected result array and ensuring that it's correct. The test also checks if timesTranspose is correctly calculated when used in combination with transpose function.", "Testing the timesTranspose(vector, vector) method of VMath class by validating if timesTranspose(vector, vector) is equal to times(matrix, matrix), where times(vector) returns a matrix. Additionally, testing the transpose method's correctness by using transpose(transpose(TESTVEC)) and transpose(TESTVEC).", "Testing the timesTranspose(vector, vector) method of VMath class using double arrays and ensuring correctness by comparing the results with expected ones."]}
{"SampleId": 4396558, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive plaintext data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive plaintext data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive plaintext data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive plaintext data redacted by replacing it with \"***Sensitive Data Redacted***\"."]}
{"SampleId": 3734015, "Origin": "Otherwise, this qualifier must contain all the arrays in superType.", "Reference": "Otherwise, this qualifier must contain all the sequences in superType.", "LLMCandidates": ["Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType.", "Otherwise, this qualifier must contain all the sequences in superType."]}
{"SampleId": 2735158, "Origin": "Returns bounds of the split button part.", "Reference": "Returns bounds of the menu button part.", "LLMCandidates": ["Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part.", "Returns bounds of the menu button part."]}
{"SampleId": 1309912, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API."]}
{"SampleId": 2137945, "Origin": "Returns true if the constructor method is locally empty (allows calls to empty init and super\nconstructor).", "Reference": "Returns true if the constructor method is locally empty (allows calls to init and super\nconstructor).", "LLMCandidates": ["Returns true if the constructor method is locally empty (allows calls to init and super constructor).", "Returns true if the constructor is locally empty (allows calls to empty init and super constructor).", "Returns true if the constructor is locally empty (allows calls to init and super constructor).", "Returns true if the constructor is locally empty (allows calls to init and super constructor).", "Returns true if the constructor is locally empty (allows calls to init and super constructor)."]}
{"SampleId": 6018465, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log(1 + input(x,y)) of the input image, where 'val' is applied for Planar images.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image, with an additional parameter 'val' used for each operation.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image, where val is added to the pixel value before log operation.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the specified value in the input image.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image with a constant value added to it."]}
{"SampleId": 1401991, "Origin": "Creates a schemaless instance of a provider with the given values for fields f1 and f2.", "Reference": "Creates an instance of a provider with the given values for fields f1 and f2.", "LLMCandidates": ["Creates an instance of a provider with the given values for fields f1 and f2.", "Creates an instance of a provider with the given values for fields f1 and f2.", "Creates an instance of a provider with the given values for fields f1 and f2.", "Creates an instance of a provider with the given values for fields f1 and f2.", "Creates an instance of a provider with the given values for fields f1 and f2."]}
{"SampleId": 4866566, "Origin": "Add two URI path segments.", "Reference": "Add two Decoded URI path segments.", "LLMCandidates": ["Add two URI path segments with proper handling of slashes.", "Add two URI path segments, handling cases where one or both paths have trailing slashes.", "Appends two URI path segments, ensuring that if both paths have trailing slashes or neither has a leading slash, they are combined correctly. Otherwise, appends necessary slashes to ensure proper concatenation.", "Add two URI path segments, handling cases where one or both paths end with a slash.", "Add two URI path segments with proper handling of slashes."]}
{"SampleId": 1052994, "Origin": "In alarm, only minute dimensionality\nindicators are expected to process.", "Reference": "In alarm, only minute dimensionality\nmetrics are expected to process.", "LLMCandidates": ["In alarm, only minute dimensionality metrics are expected to process.", "In alarm, only minute dimensionality metrics are expected to process.", "In alarm, only minute dimensionality metrics are expected to process.", "In alarm, only minute dimensionality metrics are expected to process.", "In alarm, only minute dimensionality metrics are expected to process."]}
{"SampleId": 1402632, "Origin": "If {@code thread} is null, the list\nis immutable.", "Reference": "Equivalent to {@code copyOf(null, elems)}.", "LLMCandidates": ["If {@code thread} is null or not provided, the list is immutable.", "Creates a copy of the list with all elements, but the resulting list is immutable regardless of whether {@code thread} is provided or not.", "If {@code thread} is null, the list is immutable.", "If {@code thread} is null, the list is immutable.", "Creates a copy of the specified elements with immutability set to null."]}
{"SampleId": 5652502, "Origin": "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "Reference": "Creates a callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user.", "LLMCandidates": ["Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String, String)} as given user.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String, boolean)} with the provided user and type, using server2 if specified.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String)} as given user with the second argument null.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String, String)} as given user.", "Creates callable for executing {@link Entry#doubleWhoAmI(String, String, ReAuthnType, String, String)} with the given user and optional server 2 URL."]}
{"SampleId": 3105766, "Origin": "Validate that I have a Exuberant ctags program I may use", "Reference": "Validate that there is a Universal ctags program.", "LLMCandidates": ["Validate that I have a Universal ctags program I may use", "Validate that I have a Universal ctags program I may use", "Validate that I have a Universal ctags program I may use", "Validate that I have a Universal ctags program I may use", "Validate that I have a Universal ctags program I may use"]}
{"SampleId": 236993, "Origin": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusOptions)} method.", "Reference": "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method.", "Tests for the {@link BaseFileSystem#getStatus(AlluxioURI, GetStatusPOptions)} method."]}
{"SampleId": 2336970, "Origin": "### Effects: Provided user receives email with reset token.", "Reference": "### Effects: Provided user receives email with password reset token.", "LLMCandidates": ["Sets up a password reset request for the provided user, triggering an email with reset token to be sent to them.", "Requests a password reset for the provided user and they receive an email with the reset token.", "Sends a request to reset the user's password, which will result in an email being sent to the user with a reset token.", "Send a password reset email to user by providing their ResetPasswordRequest object.", "Send a password reset email to user by providing their ResetPasswordRequest object."]}
{"SampleId": 5082490, "Origin": "Performs thread dump and prints all available info to the given log.", "Reference": "Performs thread dump and prints all available info to the given log with WARN logging level.", "LLMCandidates": ["Performs thread dump and prints all available info to the given log.", "Performs thread dump and prints all available info to the given log if deadlocked threads are detected.", "Performs thread dump and prints all available info to the given log.", "Performs thread dump with the given log and prints all available info to it.", "Performs thread dump with the given log and prints all available info to it."]}
{"SampleId": 1721041, "Origin": "If the columnIdent doesn't have a path the return value is null", "Reference": "If the columnName doesn't have a path the return value is null", "LLMCandidates": ["If the columnIdent's path is empty the return value is null; otherwise, it returns a new ColumnIdent with the first element of the original path and the remaining elements as a sub-list.", "If the columnIdent has no path, the return value is null. Otherwise, construct a new ColumnIdent with the first element of the path and the remaining elements in the path as a sublist.", "If the columnIdent doesn't have a path, the return value is null.", "If the columnIdent doesn't have a path, the return value is null.", "If the columnIdent doesn't have a path (size == 0), the return value is null; if it has exactly one element in its path (size == 1), return a new ColumnIdent with that single element; otherwise, return a new ColumnIdent with the first element and a sublist of the original path from index 1 to the end."]}
{"SampleId": 1612088, "Origin": "Checks if the given {@code DetailAST} node is matching line and column number.", "Reference": "Checks if the given {@code DetailAST} node is matching line number, column number and token\ntype.", "LLMCandidates": ["Checks if the given DetailAST node is matching line and column number, and also has the same token type.", "Checks if the given DetailAST node is matching line and column number, and token type.", "Checks if the given DetailAST node is matching line and column number, and token type.", "Checks if the given DetailAST node is matching line and column number, and token type.", "Checks if the given DetailAST node is matching line, column number and token type."]}
{"SampleId": 1575389, "Origin": "Persists running state to the {@link RemoteRuntimeDataset}.", "Reference": "Persists running state to the {@link RemoteRuntimeTable}.", "LLMCandidates": ["Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}.", "Persists running state to the {@link RemoteRuntimeTable}."]}
{"SampleId": 5631500, "Origin": "An array of objects defining the nodes in the dialog.", "Reference": "An array of objects describing the dialog nodes in the workspace.", "LLMCandidates": ["An array of objects defining the nodes in the Dialog.", "An array of objects defining the nodes in the Dialog.", "An array of objects defining the nodes in the Dialog.", "An array of objects defining the nodes in the Dialog.", "An array of objects defining the nodes in the Dialog."]}
{"SampleId": 471868, "Origin": "The amount of time (in millisecond) which adds to waiting time when\nusing Linear back off strategy.", "Reference": "Maximum amount of time (in millisecond) a thread wait before retrying\nfailed request.", "LLMCandidates": ["The amount of time (in millisecond) which adds to waiting time when using Exponential back off strategy.", "The amount of time (in millisecond) which adds to waiting time when using Exponential back off strategy.", "The amount of time (in millisecond) which adds to waiting time when using Exponential back off strategy.", "The amount of time (in millisecond) which adds to waiting time when using Exponential back off strategy.", "The amount of time (in millisecond) which adds to waiting time when using Exponential back off strategy."]}
{"SampleId": 5323489, "Origin": "Specify charsets associated with the configured {@link #setLocations(List)\nlocations}.", "Reference": "An alternative to {@link #setLocations(List)} that accepts a list of", "LLMCandidates": ["Specify values associated with the configured {@link #setLocations(List) locations}.", "Specify values associated with the configured {@link #setLocations(List) locations}.", "Specify values associated with the configured {@link #setLocations(List) locations}.", "Specify values associated with the configured {@link #setLocations(List) locations}.", "Set values for the specified {@link #setLocations(List) locations} by providing a list of associated strings."]}
{"SampleId": 5244566, "Origin": "Builds maps of obj id to\nmd5 and case.", "Reference": "Builds maps of obj id to\nvalue and case.", "LLMCandidates": ["Builds maps of obj id to md5 and case instance.", "Finds single inter-case values by count for a given case and mime types. Builds maps of obj id to md5 and case.", "Finds single inter-case values by count for a given case and correlation type. The method takes three parameters: currentCase, mimeTypesToFilterOn (a set of mime types to filter on), and singleCase. It returns a map of integer object ids to CommonAttributeValueList instances.\n\nThe method first checks the correlation type. If it is CorrelationAttributeInstance.FILES_TYPE_ID, it selects from the SK case using getFileQuery(mimeTypesToFilterOn) and passes the result to InterCaseByCountCallback. Otherwise, it calls dbManager.processInstanceTableWhere with the correlation type, formatted INTER_CASE_WHERE_CLAUSE (a string containing the current case id and TskData.FileKnown.KNOWN.getFileKnownValue()), and passes the result to InterCaseByCountCallback.\n\nFinally, the method returns the collated common files from instancetableCallback. If there is an error accessing EamDb or TskCore, a SEVERE log message is logged with the exception. If no exceptions are thrown, a new HashMap is returned.", "Finds maps of obj id to md5 and case for a given Case, mimeTypesToFilterOn, and CorrelationCase.", "Builds maps of obj id to md5 and case, based on given mimeTypesToFilterOn and correlationType."]}
{"SampleId": 2081192, "Origin": "Moves on to next top level domain in {@code topLevelDomainsList}.", "Reference": "Moves on to next top level domain in {@code tldCycleIterator}.", "LLMCandidates": ["Moves on to next top level domain using {@code tldCycleIterator}.", "Moves on to next top level domain using {@code tldCycleIterator}.", "Moves on to next top level domain using {@code tldCycleIterator}.", "Moves on to next top level domain in {@code tldCycleIterator}.", "Moves on to next top level domain by invoking {@code tldCycleIterator.next()}."]}
{"SampleId": 5316049, "Origin": "Add the given {@link HandlerMethodArgumentResolver}s.", "Reference": "Add the given {@link HandlerMethodArgumentResolver HandlerMethodArgumentResolvers}.", "LLMCandidates": ["Add the given {@link HandlerMethodArgumentResolver}s. If non-null.", "Add the given {@link HandlerMethodArgumentResolver}s using addAll() instead of for-loop.", "Add the given {@link HandlerMethodArgumentResolver}s using addAll() instead of a for loop.", "Add the given HandlerMethodArgumentResolver list, updating with all the resolvers.", "Add the given HandlerMethodArgumentResolver list, updating with all the resolvers."]}
{"SampleId": 80067, "Origin": "Gets the Chemical Dissolution Chamber of the ItemStackInput in the parameters", "Reference": "Gets the Chemical Dissolution Chamber of the ItemStack in the parameters", "LLMCandidates": ["Gets the Chemical Dissolution Chamber of the ItemStack input in the parameter", "Gets a dissolution recipe for the given ItemStack input by finding a match in the Chemical Dissolution Chamber.", "Gets a dissolution recipe for the given ItemStack input by finding a match in the Chemical Dissolution Chamber.", "Gets the Chemical Dissolution Chamber of the ItemStack input in the parameters", "Gets the Chemical Dissolution Recipe of the ItemStack input parameter by finding the first recipe that matches the input using the Chemical Dissolution Chamber."]}
{"SampleId": 1346635, "Origin": "Runs operations for a single client.", "Reference": "Runs operations for a single session.", "LLMCandidates": ["Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session.", "Runs operations for a single session."]}
{"SampleId": 2318037, "Origin": "inverse of {@link #jacksonBson(String)}", "Reference": "inverse of {@link #jacksonThenBson(String)}", "LLMCandidates": ["inverse of {@link #jacksonBsonThen(String)", "inverse of {@link #jacksonBsonThen(String)", "inverse of {@link #jacksonBson(String)", "inverse of {@link #jacksonBson(String)", "inverse of {@link #jacksonBson(String)"]}
{"SampleId": 5720694, "Origin": "are specifically excluded\nexcept for carriage return, linefeed, and the horizontal tab.", "Reference": "are specifically excluded\nexcept for carriage return, line-feed, and the horizontal tab.", "LLMCandidates": ["This method checks whether the given text is a valid XML character according to the XML standard. It does not allow specific characters such as carriage return, linefeed, and the horizontal tab except in certain combinations (surrogate pairs). The method iterates through each character in the input text, checking if it is a legal XML character or part of a surrogate pair. If an invalid combination or character is found, it returns an error message indicating the issue.", "This method checks if the given text contains any characters that are not legal XML characters except for carriage return, linefeed, and horizontal tab. It handles the case of surrogate pairs by checking if each character is a valid high surrogate or low surrogate. If there is an invalid character found, it returns an error message indicating the character's hexadecimal representation. If a surrogate pair is not complete, it also returns an error message. The method returns null if all characters are legal XML characters.", "Checks if a given text is valid according to XML standards. Specifically, it verifies that the characters are not excluded ones except for carriage return, linefeed, and the horizontal tab.", "Except for carriage return, linefeed, horizontal tab, and certain control characters, all other characters are specifically excluded.", "Checks if all characters in the given text are valid XML characters, except for carriage return, linefeed, and the horizontal tab. Returns a reason string for any invalid character encountered."]}
{"SampleId": 5459533, "Origin": "Computes the hash of this module, returning it as a hex string.", "Reference": "Computes the hash of this module.", "LLMCandidates": ["Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array.", "Computes the hash of this module, returning it as a byte array."]}
{"SampleId": 6330488, "Origin": "Calls the specified converter function with the current Single instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Calls the specified converter function with the current Single instance during assembly time and returns its result.", "Calls the specified converter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result.", "Calls the specified SingleConverter function with the current Single instance during assembly time and returns its result."]}
{"SampleId": 6047536, "Origin": "or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Reference": "or throws a {@link NoSuchArticleException} if it could not be found.", "LLMCandidates": ["Returns the KB article with the specified resource primary key and version, or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Finds the KBArticle with the specified resource primary key and version, or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Finds the KB article by its resource primitive key and version or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Returns a KBArticle with the specified resourcePrimKey and version, or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found.", "Finds the KB article with the given resource primary key and version, or throws a {@link com.liferay.knowledgebase.NoSuchArticleException} if it could not be found."]}
{"SampleId": 2250226, "Origin": "Comments in the same 10-minute bucket and otherwise equal\n are considered equal.", "Reference": "Comments within 10 minutes (not necessarily in same bucket)\n and otherwise equal are considered equal.", "LLMCandidates": ["Comments with the same timestamp within a 10-minute window and otherwise equal are considered equal.", "Comments with identical ratings and texts, and names that have a time difference within 10 minutes are considered equal. For comments with different times, the difference must be less than or equal to MAX_SKEW. Otherwise, they are considered unequal.", "Comments with the same timestamp within a 10-minute window and otherwise equal are considered equal.", "Comments with the same timestamp within a 10-minute window and otherwise equal are considered equal.", "Comments with equal text, name, rating, and time within 10 minutes of each other are considered equal."]}
{"SampleId": 1721041, "Origin": "creates a new columnIdent which just consists of the path of the given columnIdent\ne.g.", "Reference": "creates a new columnName which just consists of the path of the given columnName\ne.g.", "LLMCandidates": ["creates a new ColumnIdent which just consists of either one or all elements after the first element of the given ColumnIdent's path, depending on its size. For example:", "Creates a new ColumnIdent which just consists of either the first element of the given columnIdent's path or the entire path if it has more than one element.", "Creates a new ColumnIdent that only includes the first element of the given columnIdent's path or the entire path if it has only one element; otherwise, it returns a new ColumnIdent with the first element and the rest of the path as a sublist.", "Returns a new ColumnIdent shifted to the right based on the size of the path of the given columnIdent. If the path is empty, null is returned.", "Creates a new ColumnIdent by shifting the path of the given ColumnIdent one level to the right based on the size of its path. If the path size is 0, returns null; if the path size is 1, returns a ColumnIdent with just the first element of the path; otherwise, returns a ColumnIdent with the first element of the path and the sublist of the path from index 1 to the end."]}
{"SampleId": 3833366, "Origin": "Returns the capacity specified for each node, or empty to leave this decision to provisioning", "Reference": "Returns the resources requested for each node, or empty to leave this decision to provisioning", "LLMCandidates": ["Returns the resources specified for each node, or empty to leave this decision to provisioning", "Returns the node resources specified for each node, or empty to leave this decision to provisioning", "Returns the capacity specified for each node, or empty to leave this decision to provisioning", "Returns the capacity specified for each node, or empty to leave this decision to provisioning", "Returns the capacity specified for each node, or empty to leave this decision to provisioning"]}
{"SampleId": 2906488, "Origin": "Returns an immutable copy of the current headers.", "Reference": "Returns an immutable copy of the Headers for this request.", "LLMCandidates": ["Returns an immutable copy of the current headers. This method now iterates over each header template and adds its expanded collection to the map if it is not empty. It uses a LinkedHashMap for the headerMap to preserve insertion order. The resulting map is made unmodifiable using Collections.unmodifiableMap.", "Returns an immutable copy of the current headers by iterating over each header and adding its values to a new map if they are not empty.", "Returns an immutable copy of the current headers, constructed by adding the expanded collection to a new LinkedHashMap for each key-value pair in the original headers, if the collection has values.", "Returns an immutable copy of the current headers after filtering out any with empty or null values.", "Returns an immutable copy of the current headers, constructed by iterating over the header templates and adding the expanded collections only if they have values."]}
{"SampleId": 1357584, "Origin": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is worse than exponential.", "Reference": "Purge the population of parts candidates as much as possible, since the cost\nof their later combinations is exponential.", "LLMCandidates": ["Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. If the number of remaining parts exceeds a certain maximum count, select only the heaviest ones and discard the rest.", "Purge the population of parts candidates as much as possible to maintain a manageable number of parts for later combinations, since their cost can be worse than exponential if not controlled.", "Purge the population of parts candidates as much as possible to ensure that the later combinations' cost does not become worse than exponential. If the number of remaining parts after cropping exceeds the maximum allowed count, sort them in descending order by weight and retain only the first 'maxPartCount'.", "Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. If the remaining parts count exceeds the maximum allowed number of parts, sort them by weight and retain only the top ones.", "Purge the population of parts candidates as much as possible, since the cost of their later combinations is worse than exponential. If the number of remaining parts after cropping exceeds params.maxPartCount, sort the list by weight in reverse order and retain only the first params.maxPartCount elements."]}
{"SampleId": 6043600, "Origin": "Returns the sync d l objects before and after the current sync d l object in the ordered set where parentFolderId = ?.", "Reference": "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime > ?", "LLMCandidates": ["Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?.", "Returns the sync d l objects before and after the current sync d l object in the ordered set where modifiedTime = ? and repositoryId = ?.", "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ?.", "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ? and modifiedTime = ?.", "Returns the sync d l objects before and after the current sync d l object in the ordered set where repositoryId = ? and modifiedTime = ?."]}
{"SampleId": 3646276, "Origin": "Calculates the cash flow for a single trade.", "Reference": "Calculates the cash flow for a single closed trade.", "LLMCandidates": ["Calculates the cash flow for a single trade when it is closed.", "Calculates the cash flow for a single closed trade, given its exit index.", "Calculates the cash flow for a single closed trade, given its exit index.", "Calculates the cash flow for a single closed trade by providing the final index of observation.", "Calculates the cash flow for a single trade if it is closed. The final index of observation needs to be provided. If the trade is not closed, an IllegalArgumentException will be thrown."]}
{"SampleId": 3073837, "Origin": "Assigns a native mirror object to the given RBaseObject object.", "Reference": "Assigns a native mirror object ID to the given RBaseObject object.", "LLMCandidates": ["Assigns a native mirror object to the given RBaseObject object by ensuring it is created if necessary before executing ToNativeNodeGen.", "Executes the native code on a given RBaseObject by assigning or updating its NativeMirror object.", "Assigns a native mirror object to the given RBaseObject object and ensures it is created if necessary before executing ToNativeNodeGen.", "Executes a native operation on the given RBaseObject by ensuring it has a valid native mirror object and then executing it using ToNativeNodeGen.", "Assigns a native mirror object to the given RBaseObject object by first creating it if necessary and then executing the ToNativeNodeGen with the obtained mirror."]}
{"SampleId": 1314727, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name.", "Creates an exception from an API name."]}
{"SampleId": 5440430, "Origin": "Appends a quoted string to a given buffer.", "Reference": "Appends a quoted string to the given string buffer.", "LLMCandidates": ["Appends a quoted string to a given buffer using StringBuilder instead of directly operating on the StringBuffer.", "Appends a quoted string to a given buffer using StringBuilder. The original method has been deprecated and replaced with this updated version that uses StringBuilder for better performance and readability.", "Appends a quoted string to a given buffer. This method has been deprecated and replaced with a new version that first appends the string to a StringBuilder and then appends the StringBuilder's toString() value to the given buffer.", "Appends a quoted string to a given buffer by using StringBuilder instead of directly appending the characters.", "Appends a quoted string to a given buffer, deprecated."]}
{"SampleId": 296746, "Origin": "Return -1 if there are no tokens\n on channel between i and 0.", "Reference": "Return -1\nif there are no tokens on channel between {@code i} and 0.", "LLMCandidates": ["Return -1 if there are no tokens on channel between i and 0, or EOF tokens on other channels.", "Return -1 if there are no tokens on channel between i and 0; otherwise return the index of the last token on the specified channel encountered while iterating from i to 0. If an EOF token is found, it will be considered as a token on all channels.", "Return -1 if there are no tokens on channel between i and 0.", "Return -1 if there are no tokens on channel between i and 0.", "Return -1 if there are no tokens on channel between i and 0."]}
{"SampleId": 585425, "Origin": "Construct the default web view object.", "Reference": "Construct the CordovaWebView object.", "LLMCandidates": ["Construct the default web view object based on the specified \"webView\" preference value.", "Construct the default web view object according to the specified web view class in preferences.", "Constructs the default web view object using the specified or default web view class and sets it as the return value.", "Constructs the default web view object using the specified or default web view class and sets it as the return value.", "Constructs the default web view object using the specified class or defaults to AndroidWebView. If an exception occurs during construction, it throws a RuntimeException."]}
{"SampleId": 6018468, "Origin": "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to log( val + input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to log( 1 + input(x,y)) of the input image with an additional parameter val.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image with additional parameter 'val'.", "Sets each pixel in the output image to log(1 + input(x,y)) of the input image, taking a final float val into account for the calculation.", "Sets each pixel in the output image to log(1 + input(x, y)) of the input image, where val is added to the pixel value before taking the log.", "Sets each pixel in the output image to log( 1 + input(x,y)) of the input image with an additional value val."]}
{"SampleId": 1402019, "Origin": "This returns false for unstampable rule classes and for rules in the\nhost configuration.", "Reference": "This returns false for unstampable rule classes and for rules used to build tools.", "LLMCandidates": ["This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration.", "This returns false for unstampable rule classes and for rules in the tool configuration."]}
{"SampleId": 6018004, "Origin": "Computes the median for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all bands in the Planar image, reshapes the output GrayF32 image to match the input Planar image dimensions.", "Computes the median for each pixel across all bands in the {@link Planar} image and reshapes the output image with width equal to input's width and height equal to input's height.", "Computes the median for each pixel across all bands in the {@link Planar} image, reshapes the output to match the input dimensions and then applies the median filter to the specified bands.", "Computes the median for each pixel across all bands in the {@link Planar} image. Afterwards, reshape the output to match the input dimensions.", "Computes the median for each pixel across all bands in the {@link Planar} image. After applying the filter, reshapes the output to match the input's width and height."]}
{"SampleId": 6235497, "Origin": "In this test, we close an internal stream in the priority tree but tree should not change.", "Reference": "In this test, we close an internal stream in the priority tree.", "LLMCandidates": ["In this test, we close an internal stream in the priority tree and verify that the distribution of bytes written to other streams remains unaffected.", "In this test, we close an internal stream in the priority tree and ensure that the distribution of bytes among remaining streams remains correct.", "This test checks if closing an internal stream affects the priority tree distribution of bytes.", "This test checks if closing an internal stream affects the priority tree distribution of bytes.", "In this test, we close an internal stream in the priority tree but the bytes distribution should not change."]}
{"SampleId": 1462784, "Origin": "Adds a (non-optional non-minus) node to a join group partition.", "Reference": "Adds a (non-optional non-minus) node to a join group partition and\nupdates the set of definitely produced variables accordingly.", "LLMCandidates": ["Adds a non-optional non-minus node to a join group partition.", "Adds a non-optional non-minus node to a join group partition.", "Adds a (non-optional non-minus) node to a join group partition.", "Adds a (non-optional non-minus) node to a join group partition.", "Adds an (non-optional non-minus) node to a join group partition."]}
{"SampleId": 4788910, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown."]}
{"SampleId": 2568441, "Origin": "Gets the value of the 'ValueType' field.", "Reference": "Gets the value of the 'valueType' field.", "LLMCandidates": ["Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field.", "Gets the value of the 'valueType' field."]}
{"SampleId": 3643555, "Origin": "Adds remote file attributes to this remote file class.", "Reference": "Sets remote file attributes to this remote file class.", "LLMCandidates": ["Set remote file attributes by putting them into this remote file class according to their class type.", "Sets remote file attributes for this remote file class.", "Sets remote file attributes in this remote file class using its class as key.", "Sets remote file attributes in this remote file class using its class as key.", "Sets remote file attributes for this remote file class using key-value pair with the attribute's type and instance."]}
{"SampleId": 1947847, "Origin": "Increment the count of triggered synchronous state updates (by one).", "Reference": "Increment the count of triggered synchronous state updates in Litho components (by one).", "LLMCandidates": ["Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one).", "Increment the count of triggered synchronous component state updates (by one)."]}
{"SampleId": 4625642, "Origin": "Extracts options from the specified item.", "Reference": "Assigns options to the specified options.", "LLMCandidates": ["Assigns options from the specified item.", "Assigns options from the specified item.", "Assigns options from the specified item.", "Assigns options from the specified item.", "Assigns options from the specified item."]}
{"SampleId": 1560718, "Origin": "Check whether we are executed on an expired entry before the\ntimer event for expiry was received.", "Reference": "Check whether we are executed on an expired entry before the\ntimer event for the expiry was received.", "LLMCandidates": ["Check whether we are executed on an expired entry before the timer event for expiry was received or if no expiry listeners present.", "Check whether we are executed on an expired entry before the timer event for expiry was received, taking into account the modified logic that checks if the entry is equal to NON_FRESH_DUMMY and retrieves the next refresh time using the getNextRefreshTime() method.", "Check whether we are executed on an expired entry before the timer event for expiry was received or if the next refresh time is less than 0 and not already expired.", "Check whether we are executed on an expired entry before the timer event for expiry was received, considering the changes in entry's next refresh time and millis().", "Check whether we are executed on an expired entry before the timer event for expiry was received, considering the current next refresh time and millis since last check."]}
{"SampleId": 2913751, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name by parsing it with NAMES.", "Obtains an instance from the specified name by parsing it with NAMES.", "Obtains an instance from the specified name using NAMES.parse method.", "Parses an instance from the specified name using the NAMES cache."]}
{"SampleId": 5454839, "Origin": "Checks if the given name is a legal binary name.", "Reference": "Checks if the given name is a legal type name.", "LLMCandidates": ["Verifies if the provided name is a valid Java type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name.", "Checks if the given name is a legal type name."]}
{"SampleId": 4003873, "Origin": "StringMap\n      is created for the configuration property file and is passed\n      into the framework.", "Reference": "A case\ninsensitive StringMap is\ncreated for the configuration property file and is passed into the\nframework.", "LLMCandidates": ["This method runs in an infinite loop, continuously launching and shutting down the Karaf framework based on the \"karaf.restart\" property value. If there is a failure during startup or shutdown, appropriate error messages are printed, and the program exits with an error code.", "This method runs in an infinite loop to continuously manage the Karaf framework. It reads system properties to determine if it should clean up the Karaf data and restart or not. The main logic of launching the Karaf framework, waiting for it to shutdown, and handling restarts or exits is encapsulated within a try-catch-finally block.", "Executes a loop of starting, shutting down and possibly restarting the Karaf framework until it exits successfully or encounters an error.", "Starts an Apache Karaf OSGi framework in a loop, handling restarts and shutdowns until the process exits with the specified exit code.", "Launches and manages Apache Karaf framework by repeatedly launching it until it successfully stops or a timeout occurs."]}
{"SampleId": 4903011, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if the current index commits can be released with the latest global checkpoint.", "Checks if all index commits up to the next safe commit have been referenced by the latest global checkpoint.", "Checks if the deletion policy can release some index commits with the latest global checkpoint by comparing maxSeqNoOfNextSafeCommit to the current global checkpoint.", "Checks if all index commits referenced by the current safe commit are already included in the global checkpoint.", "Checks if all commits up to the next safe commit have been referenced by the latest global checkpoint."]}
{"SampleId": 236975, "Origin": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenameOptions)}\nmethod.", "Reference": "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)}\nmethod.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions) method.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method with protobuf options.", "Tests for the {@link BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions)} method.", "Tests for the BaseFileSystem#rename(AlluxioURI, AlluxioURI, RenamePOptions) method."]}
{"SampleId": 5454963, "Origin": "Resolves a collection of root modules, with service binding, to create\nconfiguration.", "Reference": "Resolves a collection of root modules to create a configuration.", "LLMCandidates": ["Resolves a collection of root modules, with service binding, to create a configuration.", "Resolves a collection of root modules, with service binding, to create configuration.", "Resolves a collection of root modules, with service binding, to create configuration using the Resolver class and returns it.", "Resolves a collection of root modules, with service binding, to create configuration.", "Resolves a collection of root modules, with service binding, to create configuration."]}
{"SampleId": 2887717, "Origin": "Returns the Java type corresponding to the given method descriptor.", "Reference": "Returns the {@link Type} corresponding to the given method descriptor.", "LLMCandidates": ["Returns the Java type corresponding to the given method descriptor string, by creating a new Type object with METHOD type flag and copying the methodDescriptor character array.", "Returns the Java type corresponding to the given method descriptor, by parsing the methodDescriptor using a char array and creating a new Type object with METHOD type.", "Returns the Java type corresponding to the given method descriptor using a method descriptor converted into a char array and creating a new Type object with METHOD type.", "Returns the Java type corresponding to the given method descriptor by creating a new Type object using the method descriptor's character array and the specified indices.", "Returns the Java type corresponding to the given method descriptor string."]}
{"SampleId": 4386726, "Origin": "SHA256 tree hash does not match To ensure that part data is\nnot corrupted in transmission, you compute a SHA256 tree hash of the\npart and include it in your request.", "Reference": "SHA256 tree hash does not matchTo ensure that part data is not\ncorrupted in transmission, you compute a SHA256 tree hash of the part and\ninclude it in your request.", "LLMCandidates": ["Uploads a part of an object in a multi-part upload using the specified part number and data, and returns metadata about the newly uploaded part.", "Ensures that part data is not corrupted during transmission by computing a SHA256 tree hash of the part and including it in the request.", "To ensure that part data is not corrupted during transmission, you compute a SHA256 tree hash of the part and include it in your request.", "To ensure that part data is not corrupted during transmission, compute a SHA256 tree hash of the part and include it in your request.", "Uploads a part of an object in a multi-part upload and returns information about the uploaded part. To ensure that part data is not corrupted in transmission, you compute a SHA256 tree hash of the part and include it in your request."]}
{"SampleId": 6326658, "Origin": "Returns an instance of a GLSL data type for the given {@link DataType}.", "Reference": "Returns an instance of a GLSL data type for the given {@link ShaderVariable}.", "LLMCandidates": ["Returns an instance of a GLSL data type for the given ShaderVariable.", "Returns an instance of a GLSL data type for the given {@link DataType} or a {@link ShaderVariable}.", "Returns an instance of a GLSL data type for the given {@link DataType} and ShaderVariable.", "Returns an instance of a GLSL data type for the given {@link DataType}.", "Returns an instance of a GLSL data type for the given ShaderVariable."]}
{"SampleId": 4615504, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}. This method returns an iterator over the preceding siblings of this node. The returned iterable does not include this node itself and includes only child nodes, excluding attributes and other nodes within child nodes if any.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."]}
{"SampleId": 711380, "Origin": "Tests if this string starts with any specified prefixes.", "Reference": "Tests if this CharSequence starts with any specified prefixes.", "LLMCandidates": ["Tests if this CharSequence starts with any specified prefixes.", "Tests if this CharSequence starts with any specified prefixes.", "Tests if this CharSequence starts with any specified prefixes.", "Tests if this CharSequence starts with any specified prefixes.", "Tests if this CharSequence starts with any specified prefixes."]}
{"SampleId": 6049196, "Origin": "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Reference": "Returns the user thread with the primary key or throws a {@link NoSuchUserThreadException} if it could not be found.", "LLMCandidates": ["Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found.", "Returns the user thread with the primary key or throws a {@link com.liferay.privatemessaging.NoSuchUserThreadException} if it could not be found."]}
{"SampleId": 3892009, "Origin": "Stub of {@link Plugin#willDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "Reference": "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses\nto override", "LLMCandidates": ["Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override", "Stub of {@link Plugin#beforeDeclareSetter(TypeSpec.Builder, PropertyGenerator, MethodSpec.Builder)} for subclasses to override"]}
{"SampleId": 5640472, "Origin": "Observer methods with other transaction phase\nare scheduled for the corresponding transaction phase.", "Reference": "Transactional observer methods are scheduled to be executed in the corresponding transaction phase.", "LLMCandidates": ["Notify transaction and sync observers with exception handling, then schedule async observers for the corresponding transaction phase.", "Notifies observers asynchronously for events with other transaction phases, scheduling them for the corresponding transaction phase. The method takes into account whether metadata is required and handles exceptions in a separate CollectingExceptionHandler. This ensures that synchronized and transaction observers are notified before the async observers, all within the specified transaction phase.", "Observer methods with other transaction phases are scheduled for the corresponding transaction phase using a CollectingExceptionHandler for exception handling. Notify sync observers first, followed by transaction observers, and then notify async observers.", "Notify transaction and sync observers with exception handling, then schedule for async execution. If metadata is not required, set it to null.", "Notifies observers with different transaction phases and schedules them accordingly. If metadata is not required, it sets the metadata to null. It also handles exceptions by using a CollectingExceptionHandler when notifying transaction and sync observers before returning the CompletionStage."]}
{"SampleId": 5246023, "Origin": "Use the given SleuthkitCase to update the data used to determine the\navailable filters.", "Reference": "Update the data used to determine the available filters.", "LLMCandidates": ["Use the given SleuthkitCase to update the data used to determine the available filters after adding the hash sets and tag names in use.", "Use the given SleuthkitCase to update the data used to determine the available filters by adding data sources and their associated tags.", "Use the given SleuthkitCase to update the data used to determine the available filters, considering the changes on datasourcesMap and TskDataException handling.", "Use the given SleuthkitCase to update the data used to determine the available filters.", "Use the given SleuthkitCase to update the data used to determine the available filters."]}
{"SampleId": 2609132, "Origin": "Extract a user rating vector from a rating cursor.", "Reference": "Extract a user rating vector from a rating stream.", "LLMCandidates": ["Extract a user rating vector from a rating ObjectStream.", "Extract a user rating vector from a rating ObjectStream.", "Extract a user rating vector from a rating ObjectStream.", "Extract a user rating vector from a rating stream.", "Extract a user rating vector from a rating stream."]}
{"SampleId": 1644557, "Origin": "Adds a  to a buffer, with each  being separated by a \":\".", "Reference": "Adds a  to a ,\nwith each  being separated by a \":\".", "LLMCandidates": ["Adds a String to a StringBuilder, with each String being separated by a ':'.", "Adds a  to a builder, with each  being separated by a ':'.", "Appends  to a StringBuilder, with each being separated by a ':'.", "Appends  to a StringBuilder, with each being separated by a ':'.", "Adds a string to a StringBuilder, with each character being separated by a ':'."]}
{"SampleId": 5433548, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link BaseOptions#noComment} is set to true.", "Do nothing if {@link BaseOptions#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link CacheDiffOptions#noComment} is set to true."]}
{"SampleId": 1806089, "Origin": "Standard setter for the leftwardLabel String for this RelationshipType", "Reference": "Standard setter for the leftwardType String for this RelationshipType", "LLMCandidates": ["Standard setter for the leftwardType String for this RelationshipType", "Standard setter for the leftwardType String for this RelationshipType", "Standard setter for the leftwardType String for this RelationshipType", "Standard setter for the leftwardType String for this RelationshipType", "Standard setter for the leftwardType String for this RelationshipType"]}
{"SampleId": 2444053, "Origin": "Create a {@link ServiceLocator}.", "Reference": "Create a {@link InstanceManager}.", "LLMCandidates": ["Create an {@link InstanceManager}.", "Create an {@link InstanceManager}.", "Create an {@link InstanceManager}.", "Create an {@link InstanceManager}.", "Create an {@link InstanceManager}."]}
{"SampleId": 3490831, "Origin": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType, Module)}.", "Reference": "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, Module)}.", "LLMCandidates": ["It will also exclude files that cannot be analyzed with {@link #canAnalyze(VirtualFile, Module)} and those in source folders.", "It will also exclude files that cannot be analyzed with {@link #canAnalyze(VirtualFile, Module)} and files excluded in source folders.", "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, FileType)}.", "It will also exclude files that cannot be analyzed with {@link #canAnalyze(VirtualFile, Module)} and files excluded in source folders by calling {@link #checkFileInSourceFolders(VirtualFile, Module)}.", "It will also exclude files that cannot be analysed with {@link #canAnalyze(VirtualFile, Module)} and files in source folders."]}
{"SampleId": 3270265, "Origin": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableReference}", "Reference": "If the name is a single identifier, then this can be\n      reclassified as an {@link ASTVariableAccess}", "LLMCandidates": ["If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess} or an {@link ASTFieldAccess}.", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess} or an {@link ASTFieldAccess}.", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess} or an {@link ASTFieldAccess}.", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess} or an {@link ASTFieldAccess}.", "If the name is a single identifier, then this can be reclassified as an {@link ASTVariableAccess} or an {@link ASTFieldAccess}."]}
{"SampleId": 2706941, "Origin": "Set Account Type.", "Reference": "Set Kontenart.", "LLMCandidates": ["Sets the account type.", "Sets the account type.", "Sets the account type.", "Sets the account type.", "Sets the account type."]}
{"SampleId": 5051650, "Origin": "Returns the object with the settings used for calls to labelAudio.", "Reference": "Returns the object with the settings used for calls to getEvaluation.", "LLMCandidates": ["Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation.", "Returns the object with the settings used for calls to getEvaluation."]}
{"SampleId": 3991859, "Origin": "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)}\nwith default options.", "Reference": "This is a convenience method for {@link #electLeaders(ElectionType, Set, ElectLeadersOptions)}\nwith preferred election type and default options.", "LLMCandidates": ["This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options. (Note: The method is now deprecated.)", "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options. (deprecated)", "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options. (Deprecated)", "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options. (Deprecated since version 3.1.0, use {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} instead.)", "This is a convenience method for {@link #electPreferredLeaders(Collection, ElectPreferredLeadersOptions)} with default options. (Deprecated)"]}
{"SampleId": 615862, "Origin": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't contain the param.", "Reference": "Returns the value of the specific parameter, or default value defined in the {@code info} if\nthis Params doesn't have a value set for the parameter.", "LLMCandidates": ["Returns the value of the parameter specified by {@code info}, or if this Params does not contain the param, returns the default value defined in {@code info}. If the parameter is non-optional and has no default value, throws an exception; if it is optional and has no default value, also throws an exception.", "Returns the value of the parameter specified by {@code info} if this Params contains it; otherwise, returns the default value defined in {@code info}. Throws an exception if a non-optional parameter is not provided and no default value is defined.", "Returns the value of the specific parameter, or default value defined in the {@code info} if this Params doesn't contain the param. If the parameter is missing and it is not optional, an IllegalArgumentException will be thrown. If the parameter is missing and it is optional but does not have a default value, also an IllegalArgumentException will be thrown.", "Returns the value of the specific parameter or its default value defined in the {@code info} if this Params doesn't contain the param. If the parameter is non-optional and not found, throws an exception; if it is optional but without a default value, also throws an exception.", "Returns the value of the specific parameter, or default value defined in the {@code info} if this Params doesn't contain the param; if the specific parameter is not set by the user, and it is not optional, throws an IllegalArgumentException; if the specific parameter is not set by the user, and it is optional but does not have a default value, throws an IllegalArgumentException."]}
{"SampleId": 3241790, "Origin": "Create an instance of {@link JAXBElement }{@code <}{@link CTMarkupRange }{@code >}}", "Reference": "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >}}", "LLMCandidates": ["Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >", "Create an instance of {@link JAXBElement }{code <}{@link CTMoveFromRangeEnd }{code >", "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >", "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >", "Create an instance of {@link JAXBElement }{@code <}{@link CTMoveFromRangeEnd }{@code >"]}
{"SampleId": 3734028, "Origin": "Is the value with this qualifier less than the length of any of the arrays?", "Reference": "Is the value with this qualifier less than the length of any of the sequences?", "LLMCandidates": ["Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?", "Is the value with this qualifier less than the length of any of the sequences?"]}
{"SampleId": 241096, "Origin": "Clears the given persisted files stored in {@link #mPersistedFiles}.", "Reference": "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.", "LLMCandidates": ["Clears the given persisted files stored in {@link #mPersistedFilesInfo}.", "Clears the given persisted files stored in {@link #mPersistedFilesInfo}.", "Clears the given persisted files stored in {@link #mPersistedFilesInfo} using a for loop to iterate through each file id and remove it from {@link #mPersistedFilesInfo}.", "Clears the given persisted file IDs stored in {@link #mPersistedFilesInfo}.", "Clears the given persisted files stored in {@link #mPersistedFilesInfo} by removing them one by one."]}
{"SampleId": 3679705, "Origin": "Compares this {@code LocalDateTime} to another date-time.", "Reference": "Compares this date-time to another date-time.", "LLMCandidates": ["Compares this LocalDateTime to another date-time.", "Compares this {@code LocalDateTime} to another date-time according to their epoch seconds and then their nanos of the day-time part. If they are equal, returns 0; if less than, returns negative number; if greater than, returns positive number.", "Compares this {@code LocalDateTime} to another date-time using the overridden compareTo method that considers both date and time components.", "Compares this LocalDateTime to another date-time, taking into account the generic type and calling a specialized comparison method if the other object is of the same type.", "Compares this ChronoLocalDateTime to another date-time using the underlying ISOChrono implementation."]}
{"SampleId": 2915631, "Origin": "This returns a trade based on the specified trade date.", "Reference": "This returns a trade based on the specified trade date and upfront fee.", "LLMCandidates": ["This returns a trade based on the specified trade date, considering the accrual start and tenor if applicable.", "This returns a trade based on the specified trade date and accrual start date. If the accrual start is on the immediate date, it uses the given trade date, tenor, buy/sell, notional, fixed rate, up-front fee, and reference data to create the trade. Otherwise, it uses the given trade date plus one day as the accrual start date, along with the same parameters to create the trade.", "This returns a trade based on the specified trade date, taking into account the accrual start method. If accrualStart is IMM_DATE, it uses the convention to create the trade. Otherwise, it creates the trade using the current tradeDate plus one day as the start date for accrual.", "This returns a trade based on the specified trade date and accrual start.", "This returns a trade based on the specified trade date, considering the accrual start. If accrualStart is IMM_DATE, the trade will be created using the convention method as originally implemented; otherwise, it will use the tradeDate plus one day for the tenor calculation."]}
{"SampleId": 2247229, "Origin": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Scheduler, with this\ntask's result as the argument to the supplied function.", "Reference": "Returns a new Task that, when this task completes\nnormally, is executed using the supplied Executor, with this\ntask's result as the argument to the supplied function.", "LLMCandidates": ["Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function.", "Returns a new Task that, when this task completes normally, is executed using the supplied Executor, with this task's result as the argument to the supplied function."]}
{"SampleId": 2911098, "Origin": "This parses the specified byte source to determine if it appears to be FpML.", "Reference": "This checks the first part of the byte source to see if it appears to be FpML.", "LLMCandidates": ["This parses the specified byte source to determine if it appears to be FpML by checking for the presence of FpML tags in either UTF-8 or UTF-16 encoding.", "This parses a byte source to determine if it appears to be FpML by checking for specific characters in either UTF-8 or UTF-16 encoding.", "This parses the specified byte source to determine if it appears to be FpML by checking for the presence of \"fplm\" in either UTF-8 or UTF-16 encoding.", "This parses the specified byte source to determine if it appears to be FpML by checking for specific prefixes in UTF-8 or UTF-16 encoding.", "This parses the specified byte source to determine if it appears to be FpML by checking for the presence of 'f', 'p', 'm' and 'l' characters using UTF-8 or UTF-16 encoding."]}
{"SampleId": 4476807, "Origin": "The {@link KeyCreateOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateKeyOptions#isEnabled()} enabled} field\nis set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The {CreateKeyOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if not specified.", "The {@link CreateKeyOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if not specified.", "The {CreateKeyOptions#isEnabled()} enabled} field is set to true by Azure Key Vault, if not specified.", "The CreateKeyOptions#isEnabled() enabled field is set to true by Azure Key Vault, if not specified.", "The {CreateKeyOptions#isEnabled()} enabled field is set to true by Azure Key Vault, if not specified."]}
{"SampleId": 3629279, "Origin": "See Immutable List Static Factory Methods for details.", "Reference": "See Unmodifiable Lists for details.", "LLMCandidates": ["See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details.", "See Unmodifiable List Static Factory Methods for details."]}
{"SampleId": 3428160, "Origin": "Helper to parse the imported file into an {@link ImportedGradeWrapper} depending on its type", "Reference": "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "LLMCandidates": ["Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type", "Helper to parse the imported file into an {@link ImportedSpreadsheetWrapper} depending on its type"]}
{"SampleId": 4715193, "Origin": "Fixes a bug with the Swing JFileChooser: if you entered a new\nfilename in the save dialog and press Enter the \nmethod returns  instead of the filename.", "Reference": "Swing JFileChooser: if you entered a new filename in the save dialog and\npress Enter the  method returns\n instead of the filename.", "LLMCandidates": ["Saves the component to a file specified by the user using the save dialog. The method ensures that the file has the correct extension and handles custom dimensions if enabled. Fixes an issue with the Swing JFileChooser where pressing Enter while entering a new filename would cause the method to return prematurely without saving the file.", "Saves the component using a JFileChooser to select the file name and location. Displays a save dialog for user input, then writes the component data to a file specified by the user. Includes error handling for potential exceptions that may occur during the writing process.", "Saves the component to a file using the JComponentWriter and JComponentWriterFileFilter. Displays a save dialog and checks if user approves before saving.", "Saves a component to a file specified by the user through a save dialog.", "Saves a component to a file specified by the user through a save dialog."]}
{"SampleId": 1326993, "Origin": "Returns the operation enum value.", "Reference": "Returns the operation constant name.", "LLMCandidates": ["Returns the operation constant in upper underscore format.", "Returns the operation constant.", "Returns the operation constant.", "Returns the operation constant.", "Returns the operation constant."]}
{"SampleId": 3937267, "Origin": "Saves all dictionary entries that appeared > threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "Reference": "Saves all dictionary entries that appeared {@literal >} threshold times Note: feature\nindices are changed to contiguous values starting at 0.", "LLMCandidates": ["Saves all dictionary entries that appeared > threshold times. Note: feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries that appeared > threshold times. Note: feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries that appeared > threshold times Note: feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries that appeared > threshold times. Note: feature indices are changed to contiguous values starting at 0.", "Saves all dictionary entries that appeared > threshold times Note: feature indices are changed to contiguous values starting at 0."]}
{"SampleId": 3036919, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes."]}
{"SampleId": 2443799, "Origin": "Create new instance of {@link InstanceManagerStore}.", "Reference": "Create new instance of {@link InjectionManagerStore}.", "LLMCandidates": ["Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}.", "Create new instance of {@link InjectionManagerStore}."]}
{"SampleId": 2018806, "Origin": "Sets dependency options.", "Reference": "Sets the dependency management options.", "LLMCandidates": ["Sets dependency options for this object by assigning the given DependencyOptions to its field.", "Sets the dependency options passed in the parameter 'dependencyOptions'.", "Sets the dependency options passed in the parameter 'dependencyOptions'.", "Sets dependency options passed as a parameter.", "Sets dependency options passed as a parameter."]}
{"SampleId": 1611711, "Origin": "Setter for comment format.", "Reference": "Setter for comment pattern.", "LLMCandidates": ["Setter for comment pattern.", "Setter for comment pattern.", "Setter for comment pattern.", "Setter for comment pattern.", "Setter for comment pattern."]}
{"SampleId": 2484705, "Origin": "Sets the entity attribute of this User to\nentity", "Reference": "Sets the entity attribute of this User's element\nto entity", "LLMCandidates": ["Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity", "Sets the entity attribute of this UserElement to entity"]}
{"SampleId": 5456635, "Origin": "More specifically, the root modules are resolved as if by calling\n{@code resolveRequires}.", "Reference": "More specifically, the root modules are resolved as if by calling\n{@code resolve}.", "LLMCandidates": ["More specifically, the root modules are resolved and bound as if by calling {@code resolveAndBind}.", "More specifically, the root modules are resolved and bound as if by calling resolveAndBind.", "More specifically, the root modules are resolved and bound as if by calling resolveAndBind.", "More specifically, the root modules are resolved and bound as if by calling resolveAndBind.", "More specifically, the root modules are resolved and bound as if by calling {code resolveAndBind}."]}
{"SampleId": 2443742, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InjectionManager injection manager} container.", "LLMCandidates": ["Get the set of all custom providers registered for the given service provider contract in the underlying InstanceManager instance manager container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InjectionManager injection manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InjectionManager injection manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InjectionManager injection manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InjectionManager injection manager} container."]}
{"SampleId": 132533, "Origin": "Generates the form to post to the dialog frame.", "Reference": "Generates the dialog parameters.", "LLMCandidates": ["Retrieves the parameters for the dialog form from the given structure ID and menu entry bean.", "Generates a map of form parameters for the dialog frame.", "Generates a map of form parameters to post to the dialog frame.", "Generates a map of form parameters to post to the dialog frame.", "Generates a map of parameters to post to the dialog frame."]}
{"SampleId": 1042147, "Origin": "Returns  If the\n is greater than the .", "Reference": "Returns  If the\n is greater than the  and \n is not used.", "LLMCandidates": ["Returns  If the updateTime is after the lowWatermark or before maxLookBackTime, return false; otherwise, return if the updateTime is after the lowWatermark.", "Returns  If the update time is after the low watermark and it is not before maxLookBackTime.", "Returns  If the update time of the is not before than this.maxLookBackTime and is greater than the .", "Returns if the updateTime is after the lowWatermark and not before the maxLookBackTime.", "Returns if the updateTime is after the lowWatermark and not before the maxLookBackTime."]}
{"SampleId": 2048399, "Origin": "After calling this method, call\n{@link #configure(int, int, int)} to start using the new sample rate.", "Reference": "After calling this method, call {@link\n#configure(AudioFormat)} to start using the new sample rate.", "LLMCandidates": ["After calling this method, call {@link #configure(int, int, int)} to start using the new sample rate.", "After calling this method, call {@link #configure(int, int, int)} to start using the new sample rate.", "After calling this method, call {@link #configure(int, int, int)} to start using the new sample rate.", "After calling this method, call {@link #configure(int, int, int)} to start using the new sample rate.", "After calling this method, call {@link #configure(int, int, int)} to start using the new sample rate."]}
{"SampleId": 3846374, "Origin": "Move this TouchDisplay to a new x-y position and bounds.", "Reference": "Move this TouchDisplay to a new x-y position.", "LLMCandidates": ["Move this TouchDisplay to a new x-y position only.", "Move this TouchDisplay to a new x-y position.", "Move this TouchDisplay to a new x-y position.", "Move this TouchDisplay to a new x-y position.", "Move this TouchDisplay to a new x-y position."]}
{"SampleId": 6019207, "Origin": "Triangulate two view using the Discrete Linear Transform (DLT)", "Reference": "Triangulate two view using the Discrete Linear Transform (DLT) with an uncalibrated camera.", "LLMCandidates": ["Triangulate two views using the Discrete Linear Transform (DLT)", "Triangulate two views using the Discrete Linear Transform (DLT)", "Triangulate two views using the Discrete Linear Transform (DLT)", "Triangulate two views using the Discrete Linear Transform (DLT)", "Triangulate two views using the Discrete Linear Transform (DLT)"]}
{"SampleId": 3942113, "Origin": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the right returned tree.", "Reference": "Split the given tree based on a split point such that the\nterminals leading up to the split point are in the left returned\ntree and those following the are in the left returned tree.", "LLMCandidates": ["Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up from the split point are in the left returned tree and those leading beyond it are in the right returned tree.", "Split the given tree based on a split point such that the terminals leading up to the split point are in the right returned tree and those following the are in the left returned tree.", "Split the given tree based on a split point such that the terminals leading up from the split point are in the left returned tree and those not leading up from it are in the right returned tree."]}
{"SampleId": 570069, "Origin": "Gets the full path from a full filename, which is the prefix + path,\nand also excluding the final directory separator.", "Reference": "Gets the full path from a full fileName, which is the prefix + path,\nand also excluding the final directory separator.", "LLMCandidates": ["Gets the full path from a full file name, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator.", "Gets the full path from a full filename, which is the prefix + path and also excluding the final directory separator.", "Gets the full path from a full file name, which is the prefix + path and also excluding the final directory separator.", "Gets the full path from a full file name, which is the prefix + path, and also excluding the final directory separator."]}
{"SampleId": 3322433, "Origin": "As the name\nimplies,  indicates whether the train or cart is in the process\nof leaving the track.", "Reference": "As the name\nimplies, {@code trainLeaving} indicates whether the train or cart is in the process\nof leaving the track.", "LLMCandidates": ["Calculates whether the train or cart is currently locked to the track. The method checks if the currentCart is null and resets waited variable accordingly. It also considers redstone signal and delay before setting locked status. If trainLeaving and sameCart, the lock is false; otherwise it's true. If a currentCart exists and is locked, the waited counter is increased, and when it reaches 1, sendUpdateToClient() is called.", "Indicates whether the current cart is locked or not based on the train or cart being in the process of leaving the track.", "Indicates whether the train or cart is locked on the track, taking into account redstone signals and waiting times.", "Calculates whether the train or cart is locked or leaving the track based on current state and conditions.", "Indicates whether the train or cart is currently locked to the track."]}
{"SampleId": 4396607, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, including sensitive data redacted by marking it as ***Sensitive Data Redacted*** in the generated string.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object, with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object, with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 234560, "Origin": "When the context is being reinitialized, this call blocks until the reinitialization succeeds\nor fails.", "Reference": "When the context is being reinitialized, this call returns an empty optional.", "LLMCandidates": ["When the context is being reinitialized, this call returns an Optional containing a CountResource object that can be used to block until the reinitialization succeeds or fails. The call first checks if the resource count has been reset (i.e., if the count is less than or equal to 0), in which case it returns empty Optional. If the context is not being reinitialized, the call returns an Optional containing a new CountResource object representing the current state of the count and whether it needs to be reinitialized.", "Acquires a resource that blocks until the context is successfully reinitialized or the block operation fails.", "Acquires a resource that blocks until the count is greater than 0 or reinitialization fails.", "Acquires a resource that blocks until the count is greater than 0 or reinitialization fails.", "Acquires a resource that blocks reinitialization attempts until it is released or exhausted."]}
{"SampleId": 5437406, "Origin": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the default.", "Reference": "If the property has not been set, or if its\nvalue is negative, set the timeout length to the specified default.", "LLMCandidates": ["If the property specified by `prop` has not been set, or if its value is negative, set the timeout length to the default value `def`.", "If the property has not been set, or if its value is null or negative, set the timeout length to the default.", "If the property has not been set, or if its value is negative, set the timeout length to the default specified by def.", "If the property has not been set, or if its value is null or negative, set the timeout length to the default.", "If the property specified by 'prop' has not been set, or if its value is negative, set the timeout length to the default value 'def'."]}
{"SampleId": 4386732, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["Deletes vault notifications by invoking the AWS service and returning the result. The method takes a DeleteVaultNotificationsRequest object as input, creates an ExecutionContext, starts the client execution time event, marshals the request, binds the AWS request metrics to the current request, sends the request to the AWS service using invoke, and handles the response by returning the DeleteVaultNotificationsResult. The method also ends the client execution by updating the AWS request metrics with the request, response, and any exceptions that occurred.", "Deletes vault notifications for the specified vault. Returns a success status if all requests were processed successfully; otherwise, returns a failure status with an error message.", "Deletes vault notifications for a vault. \n\nThis method deletes all vault notifications associated with a specified vault using the DeleteVaultNotifications API operation. The AWS SDK handles request marshalling and unmarshalling of the response, and returns the result in a DeleteVaultNotificationsResult object.", "Deletes vault notifications based on the provided request parameters.", "Deletes one or more vault notifications by using their unique identifiers and a location constraint expression. Returns a DeleteVaultNotificationsResult containing information about the deletion operation. Note that this method is asynchronous and non-blocking, meaning that the request may be returned immediately using the SDK's standard callback and future approaches."]}
{"SampleId": 1459126, "Origin": "Verify that a named subquery exists for each INCLUDE.", "Reference": "Verify that a named subquery of solution set exists for each INCLUDE.", "LLMCandidates": ["Verify that a named subquery exists for each INCLUDE, considering the AST2BOpContext and solution set statistics.", "Verify that a named subquery exists for each INCLUDE, considering the context's solution set stats.", "Verify that a named subquery exists for each INCLUDE. Ensure that the solution set corresponding to the include name is accessible.", "Verify that a named subquery exists for each INCLUDE by checking against the context and throwing an exception if it is missing.", "Verify that a named subquery exists for each INCLUDE, considering context and checking if the solution set is produced by any named subquery in the list."]}
{"SampleId": 1435989, "Origin": "Make a copy of a range of bytes from the passed in data array.", "Reference": "Make a copy of a range of bytes from the passed in array.", "LLMCandidates": ["Make a copy of a range of bytes from the passed in original array.", "Make a copy of a range of bytes from the passed in original array.", "Make a copy of a range of bytes from the passed in original array.", "Make a copy of a range of bytes from the passed in original array.", "Create a copy of a specified range from the given byte array."]}
{"SampleId": 5440918, "Origin": "Returns {@code true} if there is a value in the current thread's copy of\nthis thread-local variable, even if that values is {@code null}.", "Reference": "Returns {@code true} if there is a value in the current strand's copy of\nthis thread-local variable, even if that values is {@code null}.", "LLMCandidates": ["Returns {@code true} if there is a value in the current Strand's copy of this thread-local variable, even if that value is {@code null}.", "Returns {@code true} if there is a value in the current thread's copy of this thread-local variable, even if that values is {@code null}.", "Returns {@code true} if there is a value in the current thread's copy of this thread-local variable, even if that values is {@code null}.", "Returns {@code true} if there is a value in the current thread's copy of this thread-local variable, even if that values is {@code null}.", "Returns {@code true} if there is a value in the current thread's copy of this thread-local variable, even if that value is {@code null}."]}
{"SampleId": 3678109, "Origin": "Applications should use the {@code with(WithAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "Reference": "Applications should use the {@code with(TemporalAdjuster)} method on the\ndate-time object to make the adjustment passing this as the argument.", "LLMCandidates": ["Applications should use the {@code with(WithAdjuster)} method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(WithAdjuster)} method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(WithAdjuster)} method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(WithAdjuster)} method on the date-time object to make the adjustment passing this as the argument.", "Applications should use the {@code adjustInto(TemporalAdapter)} method on the date-time object to make the adjustment passing this as the argument."]}
{"SampleId": 4386719, "Origin": "Glacier provides you a unique archive ID, an opaque string of\ncharacters.", "Reference": "Amazon Glacier\nprovides you a unique archive ID, an opaque string of characters.", "LLMCandidates": ["Glacier provides you a unique archive ID, an opaque string of characters for versioned and non-versioned archives.", "Glacier provides you a unique archive ID, an opaque string of characters.", "Initiates a new job that retrieves data from an archive and returns an opaque ID for the requested job. This method uses Glacier's REST API to send the initiate job request and receives a response containing the unique job ID.", "Glacier provides you a unique archive ID, an opaque string of characters. The method takes an InitiateJobRequest object and returns an InitiateJobResult object after invoking the AWS Glacier service.", "Glacier provides you a unique archive ID, an opaque string of characters using the specified protocol factory."]}
{"SampleId": 2701561, "Origin": "Set Zu ber.", "Reference": "Set Zu berechn.", "LLMCandidates": ["Set the QtyToInvoiceInPriceUOM of the object.", "Set the QtyToInvoiceInPriceUOM.", "Sets the value of QtyToInvoiceInPriceUOM.", "Sets the value of QtyToInvoiceInPriceUOM.", "Set the QtyToInvoiceInPriceUOM."]}
{"SampleId": 5440227, "Origin": "This method must only be used for type references\nwhose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .", "Reference": "This method must\nonly be used for type references whose sort is {@link #EXCEPTION_PARAMETER} .", "LLMCandidates": ["This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} or {@link #METHOD METHOD}.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} or {@link #METHOD METHOD}.", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} or {@link #METHOD_TYPE METHOD_TYPE} .", "This method must only be used for type references whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} or {@link #CACHE_DIFF CACHE_DIFF}."]}
{"SampleId": 2393774, "Origin": "See {@link ClientsClassDefinition#getWhitelistedProperties()}", "Reference": "See {@link ClientsClassDefinition#getIncludedProperties()}", "LLMCandidates": ["See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()", "See {@link ClientsClassDefinition#getIncludedProperties()"]}
{"SampleId": 2230496, "Origin": "Ensures that the quorum is present if the quorum is configured and the operation service is quorum aware.", "Reference": "Ensures that there is no split brain if the split brain protection is configured and the operation\nservice is split brain protection aware.", "LLMCandidates": ["Ensures that the quorum is not split if the quorum is configured and the operation service is quorum aware.", "Ensures that no split brain occurs if the split brain protection is configured and the operation service is aware of split brain conditions.", "Ensures that no split brain is present if the cluster has more than one node and a split brain protection service is configured.", "Ensures that the quorum is present if the quorum is configured and the operation service is quorum aware.", "Ensures that no split brain is present if the quorum is configured and the operation service is aware of split brain scenarios."]}
{"SampleId": 4477703, "Origin": "Sets the {@link RetryPolicy} that is used when each request is sent.", "Reference": "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "LLMCandidates": ["Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent.", "Sets the {@link HttpPipelinePolicy} that is used when each request is sent."]}
{"SampleId": 1842058, "Origin": "Provides the location to dockerfile", "Reference": "Provides the location to devfile yaml file", "LLMCandidates": ["Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile", "Provides the location to devfile"]}
{"SampleId": 2113430, "Origin": "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true\nin which case the enriched (split) binding will be returned.", "Reference": "For a split parent package this will include potentially enriching with siblings,\nin which case the enriched (split) binding will be returned.", "LLMCandidates": ["For a split parent package this will include enriching with siblings. If checkForSplitSiblings is true, the enriched (split) binding will be returned.", "For a split parent package this will include enriching with siblings, if applicable. In either case, the binding will be returned.", "For a split parent package this will include enriching with siblings, if checkForSplitSiblings is true. In this case, the enriched (split) binding will be returned.", "For a split parent package this will include enriching with siblings. This method does not consider checkForSplitSiblings parameter any longer.", "For a split parent package this will include enriching with siblings. This method does not support checkForSplitSiblings parameter anymore."]}
{"SampleId": 402718, "Origin": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link Components#AMBARI_SERVER}.", "Reference": "Gets all of the {@link AlertDefinition}s that exist on the path for\n{@link RootComponent#AMBARI_SERVER}.", "LLMCandidates": ["Gets all of the {@link AlertDefinition}s that exist on the path for {RootComponent.AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {RootComponent#AMBARI_SERVER}.", "Gets all of the {@link AlertDefinition}s that exist on the path for {@link RootComponent#AMBARI_SERVER}."]}
{"SampleId": 4386724, "Origin": "Glacier, you first initiate a job, and after the job completes, you\ndownload the data.", "Reference": "To retrieve an archive or retrieve a vault inventory from Amazon Glacier,\nyou first initiate a job, and after the job completes, you download the\ndata.", "LLMCandidates": ["Glacier, you initiate a job using this method, and after the job completes, you download the data.", "Initiate a job and download the data from Glacier using this method.", "This method lists all the jobs in Glacier. It first initiates a job and, after the job completes, downloads the data.", "Retrieve a list of all jobs you have initiated in Amazon Glacier and their current statuses.", "Glacier, you first initiate a job, and after the job completes, you download the data using this API endpoint."]}
{"SampleId": 2223749, "Origin": "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "Reference": "Derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "LLMCandidates": ["derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256 for given fileKey and salt)", "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)", "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256 using fileKey and salt)", "derive secret key by PBKDF2 algorithm (1000 iterations of SHA256)"]}
{"SampleId": 3105252, "Origin": "Convert statistics object into JSONObject.", "Reference": "Convert statistics object into JSON.", "LLMCandidates": ["Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper.", "Convert statistics object into JSON string using ObjectMapper."]}
{"SampleId": 4404105, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["Deprecates a workflow type for the Amazon AppFlow service.", "Deprecates a Workflow type for a given account and region. This operation is eventually consistent.", "Deprecates a Workflow type for a given account and region. This operation is eventually consistent.", "Deprecates a specified workflow type. This operation is eventually consistent.", "Deprecates a specified workflow type for the Amazon AppFlow service. This operation is eventually consistent."]}
{"SampleId": 4776216, "Origin": "Gets a Vector pointing in the direction that this Location is facing", "Reference": "Gets a unit-vector pointing in the direction that this Location is\nfacing.", "LLMCandidates": ["Gets a Vector pointing in the direction that this Location is facing, by calculating the x and z components based on the rotX and rotY values using trigonometry.", "Gets a Vector pointing in the direction that this Location is facing using trigonometric functions and calculations with rotY and rotX.", "Gets a Vector pointing in the direction that this Location is facing using the modified rotation angles of Yaw and Pitch.", "Gets a Vector pointing in the direction that this Location is facing, using rotation around X and Y axes.", "Gets a Vector pointing in the direction that this Location is facing by calculating the yaw and pitch angles and applying them to the vector's x and z components."]}
{"SampleId": 6049496, "Origin": "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "Reference": "or throws a {@link NoSuchMemberRequestException} if it could not be found.", "LLMCandidates": ["public static com.liferay.so.model.MemberRequest findByKey(java.lang.String key) throws com.liferay.so.NoSuchMemberRequestException { \nor throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "Finds a MemberRequest by its key or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "Retrieves the member request with the given key. If it could not be found, a {@link com.liferay.so.NoSuchMemberRequestException} is thrown.", "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found.", "or throws a {@link com.liferay.so.NoSuchMemberRequestException} if it could not be found."]}
{"SampleId": 2647087, "Origin": "Given a bunch of NodeRefs, create SimpleFeatures from the results.", "Reference": "Given a bunch of NodeRefs, create Features from the results.", "LLMCandidates": ["Given a bunch of NodeRefs, create Features from the results.", "Given a bunch of NodeRefs, create Features from the results.", "Given a bunch of NodeRefs, create Features from the results.", "Create AutoCloseableIterators of Features from a list of NodeRefs by converting the results to the given schema.", "Given a bunch of NodeRefs, create Features from the results."]}
{"SampleId": 2706905, "Origin": "Get Import Account.", "Reference": "Get Import - Kontendefinition.", "LLMCandidates": ["Get Import Account ID.", "Get Import Account (column I_ElementValue_ID)\n\nThe method retrieves the value of the I_ElementValue_ID column and returns it as an integer. If the value is null, it returns 0. Note that this method overrides a base implementation.", "Get Import Account (I_ElementValue_ID).", "Get Import Account ID.", "Get Import Account ID."]}
{"SampleId": 3082050, "Origin": "For adding classpath elements that are not normally on the classpath in the Java version: svm\njars, truffle jars etc.", "Reference": "For adding classpath elements that are only on the classpath in the context of native-image\nbuilding.", "LLMCandidates": ["For adding classpath elements that are not normally on the classpath in the Java version: svm jars, truffle jars etc. when image-based mode is enabled.", "Adds a classpath element that is not normally on the classpath in the Java version: svm jars, truffle jars etc., ensuring no other classpath elements overlap.", "For adding classpath elements that are not normally on the classpath in the Java version: svm jars, truffle jars etc. (only if VMError ensures that imageClasspath and customImageClasspath are empty).", "For adding classpath elements that are not normally on the classpath in the Java version: svm jars, truffle jars etc., ensuring the imageClasspath and customImageClasspath are empty beforehand.", "Adds a classpath element that is not normally on the classpath for svm jars, truffle jars etc., ensuring that imageClasspath and customImageClasspath are empty."]}
{"SampleId": 1142556, "Origin": "Create a GeoCircle of the right kind given the specified bounds.", "Reference": "Create a GeoCircle from a center and a cutoff angle.", "LLMCandidates": ["Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle.", "Create a GeoCircle of the right kind given the specified cutoff angle."]}
{"SampleId": 5630009, "Origin": "Set the nodeType.", "Reference": "Set the newType.", "LLMCandidates": ["Set the newType.", "Set the newType.", "Set the newType.", "Set the newType.", "Set the newType."]}
{"SampleId": 1134393, "Origin": "Sets a new value by changing the offset and docID.", "Reference": "Sets a new value by changing the offset.", "LLMCandidates": ["Sets a new offset by changing the offset value of packedValue and packedValueDocID.", "Sets a new offset by changing the offset value of packedValue and packedValueDocID.", "Sets a new offset by changing the offset values of packedValue and packedValueDocID.", "Sets a new offset by changing the offset values of packedValue and packedValueDocID.", "Sets a new offset by changing the offset value of packedValue and packedValueDocID."]}
{"SampleId": 2241419, "Origin": "The MD5 hash of the file.", "Reference": "The hash of the file.", "LLMCandidates": ["The content hash of the file.", "The content hash of the file.", "The content hash of the file.", "The content hash of the file.", "The content hash of the file."]}
{"SampleId": 5632363, "Origin": "Creates a list of default files to check for credentials.", "Reference": "Creates a list of files to check for credentials.", "LLMCandidates": ["Creates a list of files to check for credentials based on user specified path and default locations.", "Creates a list of files to check for credentials based on user-specified path and default locations.", "Creates a list of files to check for credentials based on user specified path and default locations.", "Creates a list of files to check for credentials based on user specified path and default locations.", "Creates a list of files to check for credentials based on user specified path and default locations."]}
{"SampleId": 6018464, "Origin": "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image.", "Reference": "Sets each pixel in the output image to sgn*log( val + sgn*input(x,y)) of the input image.", "LLMCandidates": ["Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image with an additional parameter 'val', which is a single value applied to all bands for the Planar case.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image. If the input is an instance of ImageGray, it applies a different implementation based on the gray type (GrayF32 or GrayF64). For Planar instances, it applies the operation to each band separately. The second argument val is applied to all bands during the operation.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image. For a given value, val, where val is of type double.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image with an additional parameter 'val' for scaling.", "Sets each pixel in the output image to sgn*log( 1 + sgn*input(x,y)) of the input image, where an additional double value is passed as parameter."]}
{"SampleId": 4396523, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, redacting sensitive data if necessary.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, except for sensitive data like passwords which are redacted by displaying '***Sensitive Data Redacted***' instead.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted."]}
{"SampleId": 5454801, "Origin": "The entries in the file are assumed to be the\n    fully-qualified binary names of provider classes.", "Reference": "The entries in the file are assumed to be the fully-qualified\n    class names of provider classes.", "LLMCandidates": ["Returns a ModuleFinder that represents an empty module set when no entries are provided. Otherwise, creates a new ModulePath using the given entries and returns it.", "Creates a new ModuleFinder for the given entries. If no entries are provided, it returns an empty ModuleFinder. Otherwise, it uses ModulePath.of(entries) to create a ModulePath instance.", "The entries in the file are assumed to be the fully-qualified binary names of provider classes. If there are no entries, returns an instance of ModuleFinder with empty Optional<ModuleReference> and empty set of ModuleReferences. Otherwise, creates a new ModulePath using the given entries.", "Creates a ModuleFinder with an array of paths to module-info.class files or compiled binary modules. If no entries are provided, returns an empty ModuleFinder.", "Returns a ModuleFinder instance that finds modules based on the given paths. If there are no entries, an empty ModuleFinder is returned. The entries in the file are assumed to be the fully-qualified binary names of provider classes."]}
{"SampleId": 3296178, "Origin": "The key for a max value, or null if everything is NaN (no max).", "Reference": "The key for a max value; null if empty or everything is NaN (no max).", "LLMCandidates": ["The key for a max value, or null if everything is NaN and no max exists (checkMinMax not called anymore).", "The key for a max value, or null if everything is NaN due to the checkMinMax method being removed from this function.", "The key for a max value, or null if everything is NaN and the checkMinMax method is not called (no max).", "The key for a max value, or null if everything is NaN and the checkMinMax method is not called.", "The key for a max value, or null if everything is NaN and the checkMinMax method is not called."]}
{"SampleId": 3773833, "Origin": "Gets the editor component generator for this Column.", "Reference": "Gets the grid that this column belongs to.", "LLMCandidates": ["Gets the grid component generator for this Column by returning the parent's grid.", "Gets the parent Grid for this Column.", "Gets the parent component generator for this Column.", "Gets the parent component generator for this Column.", "Gets the parent component generator for this Column."]}
{"SampleId": 3156674, "Origin": "Whenever a minion with Deathrattle is summoned, gain +1/+1", "Reference": "Whenever a minion with Deathrattle is summoned, gain +1 Attack", "LLMCandidates": ["Whenever a minion with Deathrattle is summoned, gain +1 attack", "Whenever a minion with Deathrattle is summoned, gain +1 Attack.", "Whenever a minion with Deathrattle is summoned, gain +1 attack.", "Whenever a minion with Deathrattle is summoned, gain +1 attack.", "Whenever a minion with Deathrattle is summoned, gain +1 Attack."]}
{"SampleId": 2916283, "Origin": "Gets the Ibor index.", "Reference": "Gets the name of the volatilities.", "LLMCandidates": ["Gets the Ibor Caplet Floorlet Volatilities Name.", "Gets the Ibor Caplet/Floorlet volatilities name.", "Gets the Ibor Caplet/Floorlet volatilities name.", "Gets the Ibor Caplet/Floorlet volatilities name.", "Gets the Ibor Caplet/Floorlet volatilities name."]}
{"SampleId": 2913740, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name by parsing it according to the defined format.", "Obtains an instance from the specified name by parsing it according to the defined NAMES.", "Obtains an instance from the specified name by parsing it according to the defined NAMES.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 6219026, "Origin": "Returns a {@link Date} representing the date of the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "Reference": "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally\nyou would want to know the checkpoint before the last block the wallet had seen.", "LLMCandidates": ["Returns a {@link StoredBlock} representing the checkpoint before or at the given block height, for example, normally you would want to know the checkpoint before the last block the wallet had seen.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given block height. For example, normally you would want to know the checkpoint before the last block the wallet had seen.", "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally you would want to know the checkpoint before the last block the wallet had seen.", "Returns a {@link StoredBlock} representing the checkpoint before or at the given block height, for example, normally you would want to know the checkpoint before the last block the wallet had seen.", "Returns a {@link StoredBlock} representing the last checkpoint before the given block height, for example, normally you would want to know the checkpoint before the last block the wallet had seen."]}
{"SampleId": 2783374, "Origin": "Deletes the specified variable from the configuration.", "Reference": "Deletes the specified variable from the CONFIGURATION.", "LLMCandidates": ["Deletes the specified variable from the configuration.", "Deletes the specified variable from the CONFIGURATION.", "Deletes the specified variable from the CONFIGURATION.", "Deletes the specified variable from the CONFIGURATION.", "Deletes the specified variable from the CONFIGURATION."]}
{"SampleId": 2624222, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyManagerFactory}\nand {@code tlsCustomizer}.", "LLMCandidates": ["Configures SSL or TLS of the specified {@link VirtualHostTemplate} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.", "Configures SSL or TLS of the specified {@link VirtualHost} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.", "Configures SSL or TLS of the specified {@link VirtualHostTemplate} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.", "Configures SSL or TLS of the specified {@link VirtualHostTemplate} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}.", "Configures SSL or TLS of the specified {@link VirtualHostTemplate} from the specified {@code keyManagerFactory} and {@code tlsCustomizer}."]}
{"SampleId": 234560, "Origin": "If it fails, an exception is thrown and the read lock will not be locked.", "Reference": "If the reinitialization fails, an exception is thrown.", "LLMCandidates": ["If it fails, an exception is thrown and the resource will not be acquired.", "If it fails, an exception is thrown and the resource is not acquired.", "If it fails, an exception is thrown and the resource will not be acquired.", "If it fails, an exception is thrown and the resource will not be acquired.", "If it fails, an exception is thrown and the resource will not be acquired."]}
{"SampleId": 6272767, "Origin": "Returns true if the specified String name, is found within JsonArray checks.", "Reference": "Returns true if the expectedName, is found within JsonArray checks.", "LLMCandidates": ["Returns true if the specified String expectedName is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks.", "Returns true if the specified String expectedName, is found within JsonArray checks."]}
{"SampleId": 4232775, "Origin": "Create a new {@link ICrypter} for the given context.", "Reference": "Create a new {@link ICrypter}.", "LLMCandidates": ["Create a new {@link ICrypter}.", "Create a new {@link ICrypter}.", "Create a new {@link ICrypter}.", "Create a new {@link ICrypter}.", "Create a new {@link ICrypter}."]}
{"SampleId": 3923667, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["Produces a Collapsed SemanticGraph with no extras. (deprecated)", "Produces a Collapsed SemanticGraph with no extras. (deprecated)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated)"]}
{"SampleId": 3221596, "Origin": "WorkItemLifecycleEvent} and calls the {@link #publish(WorkItemLifecycleEvent)} method", "Reference": "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "LLMCandidates": ["WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method", "WorkItemLifecycleEvent} and calls the {@link #publish(IWorkItemLifecycleEvent)} method"]}
{"SampleId": 3512230, "Origin": "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_VARIANT llama variant}.", "Reference": "Gets the {@link Value.Mutable} for the {@link LlamaType} of this\n{@link Llama}.", "LLMCandidates": ["Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}.", "Gets the {@link Value.Mutable} for the {@link Keys#LLAMA_TYPE llama type}."]}
{"SampleId": 4850294, "Origin": "Set a new {@link JacksonResourceProvider} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "Reference": "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for\nserialization and deserialization of data.", "LLMCandidates": ["Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data.", "Set a new {@link JacksonResources} to this builder, dedicated to provide an {@link ObjectMapper} for serialization and deserialization of data."]}
{"SampleId": 5631112, "Origin": "Lists a feedback entry with a specified `feedback_id`.", "Reference": "Gets a feedback entry with a specified `feedback_id`.", "LLMCandidates": ["Lists a feedback entry with a specified `feedback_id`. The response is converted using Gson's Reflection API for better type safety.", "Lists a feedback entry with a specified `feedbackId`.", "Lists a feedback entry with a specified `feedbackId`.", "Lists a feedback entry with a specified `feedbackId`.", "Lists a feedback entry with a specified `feedbackId`."]}
{"SampleId": 5459588, "Origin": "Adds an export.", "Reference": "Sets module opens.", "LLMCandidates": ["Adds an opens specification.", "Adds an opens specification.", "Adds an opens specification.", "Updates the set of opens by adding the given array.", "Updates the set of opens by adding the given array."]}
{"SampleId": 1837504, "Origin": "If the new address is {@code null}, a pending flight is cancelled and an\nongoing handshake is failed.", "Reference": "If the new address is {@code null}, an ongoing handshake is failed.", "LLMCandidates": ["If the new address is {@code null}, a pending flight is cancelled and an ongoing handshake is failed. If no established session exists or if the peer address is not null, an IllegalArgumentException is thrown to indicate that address change without an established session is not supported.", "If the new address is {@code null}, a pending flight is cancelled and an ongoing handshake is failed if there's no established session. Otherwise, throw an IllegalArgumentException if there's no established session.", "Updates the peer address and throws an exception if no established session is present, cancels pending flight or fails ongoing handshake when new address is null or without established session.", "Updates the peer address, cancels a pending flight if no established session and an ongoing handshake is failed if new address is null or no established session exists.", "Updates the peer address if there is an established session or throws an exception if no established session exists and the new address is not null. If the new address is {@code null}, cancels a pending flight and fails any ongoing handshake."]}
{"SampleId": 2624576, "Origin": "Binds the specified {@link Service} at the specified path pattern.", "Reference": "Binds the specified {@link HttpService} at the specified path pattern.", "LLMCandidates": ["Binds the specified HttpService at the specified path pattern.", "Binds the specified HttpService at the specified path pattern.", "Binds the specified HttpService at the specified path pattern.", "Binds the specified HttpService at the specified path pattern.", "Binds the specified HttpService at the specified path pattern."]}
{"SampleId": 2823477, "Origin": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor2)}.", "Reference": "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "LLMCandidates": ["Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}.", "Maps all index descriptors according to {@link #indexReference(IndexDescriptor)}."]}
{"SampleId": 2482288, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a ContactQuery for the given queryString.", "Queries this contact source for the given queryString.", "Queries this contact source for the given queryString.", "Queries this contact source for the given queryString.", "Queries this contact source for the given queryString."]}
{"SampleId": 5425070, "Origin": "Get the next value.", "Reference": "Returns the next value from the input.", "LLMCandidates": ["Retrieve the subsequent value after handling different types of JSON tokens.", "Get the next value, parsing different JSON structures such as objects, arrays, strings, literals or throwing an exception if we reach the end of the input.", "Get the next value by parsing the input based on its type and formatting.", "Get the next value by parsing the input as a JSON object, array or string.", "Get the next value by parsing input into JSON primitive or array."]}
{"SampleId": 4624009, "Origin": "Normalizes the specified URL and creates a new instance of this class.", "Reference": "Normalizes the specified URI and creates a new instance of this class.", "LLMCandidates": ["Normalizes the specified URI and creates a new instance of this class.", "Converts the specified URI to a file path, handling various scenarios such as normalizing slashes and removing file scheme. It also handles exceptions during the conversion process.", "Convert the specified URI to a file path, handling exceptions and returning the input URI if the conversion fails.", "Normalizes the specified URI and returns a path string.", "Converts the given URI into a file path string by normalizing it and removing any leading slashes on Windows paths. If an exception occurs during conversion, returns the original URI."]}
{"SampleId": 3467749, "Origin": "Makes the given visitor visit all of the instructions in this list.", "Reference": "Makes the given visitor visit all the instructions in this list.", "LLMCandidates": ["Makes the given MethodVisitor visit all of the instructions in this list.", "Makes the given visitor visit all of the instructions in this list.", "Makes the given MethodVisitor visit all of the instructions in this list.", "Makes the given MethodVisitor visit all of the instructions in this list.", "Makes the given visitor visit all of the instructions in this list, by traversing through the linked list representation of the instructions."]}
{"SampleId": 4132919, "Origin": "Removes the trace associated with this CallableStatement\nfrom the Connection that created it.", "Reference": "Removes the trace associated with this CallableStatement from the", "LLMCandidates": ["Removes the trace associated with this CallableStatement from the Connection that created it, and closes any open ResultSet's when it is closed.", "Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it, and closes any open ResultSets if they exist.", "Removes the trace associated with this CallableStatement from the Connection that created it.", "Removes the trace associated with this CallableStatement from the Connection that created it."]}
{"SampleId": 3380964, "Origin": "If you actual latency will be lower than \"desirableOperationLatency\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "Reference": "If you actual latency will be lower than \"slowCallDurationThreshold\",\nwill calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "LLMCandidates": ["If you actual latency will be lower than \"slowCallDurationThreshold\", it will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime.", "If you actual latency will be lower than \"slowCallDurationThreshold\", it will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime.", "If you actual latency will be lower than \"slowCallDurationThreshold\", it will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime", "If you actual latency will be lower than \"slowCallDurationThreshold\", it will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime.", "If you actual latency will be lower than \"slowCallDurationThreshold\", it will calculate the difference and use it as {@link BulkheadConfig}.maxWaitTime."]}
{"SampleId": 1946076, "Origin": "Provide the implementation of the PlatformDecoder for the current platform using the provided", "Reference": "Provide the implementation of the PlatformDecoder for the current platform using the\nprovided PoolFactory", "LLMCandidates": ["Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and a boolean indicating whether direct Webp decoding should be enabled.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and enable direct WebP decoding if applicable.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and a boolean directWebpDirectDecodingEnabled parameter.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and directWebpDirectDecodingEnabled flag.", "Provide the implementation of the PlatformDecoder for the current platform using the provided PoolFactory and whether directWebpDirectDecodingEnabled is true or false."]}
{"SampleId": 1052905, "Origin": "add partition of buffer to consume", "Reference": "add whole buffer to consume", "LLMCandidates": ["add DataSource instance from QueueBuffer<T> to consume", "Add a data source by passing a QueueBuffer to consume", "Add a partition of QueueBuffer to consume", "Add a partition of QueueBuffer to consume", "Add a data source from QueueBuffer<T> to consume"]}
{"SampleId": 4713376, "Origin": "Rule a subsumes rule b, if a subsumes b\nAND\na has got least the same expected predictive accuracy as b.", "Reference": "The defintion\nof subsumption is: Rule a subsumes rule b, if a subsumes b AND a has got\nleast the same expected predictive accuracy as b.", "LLMCandidates": ["Rule a subsumes rule b, if a subsumes b AND a has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b if a subsumes b AND a has at least the same expected predictive accuracy as b.", "Rule a subsumes rule b, if a subsumes b AND a has got at least the same expected predictive accuracy as b.", "Rule a subsumes rule b, if a subsumes b AND a has got least the same expected predictive accuracy as b.", "Rule a subsumes rule b, if a subsumes b AND a has got least the same expected predictive accuracy as b."]}
{"SampleId": 5433550, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@code options.noComment} is set to true.", "Do nothing if {link BaseConfiguration#noComment} is set to true."]}
{"SampleId": 361244, "Origin": "Saves all writable accounts and the default account, which can later be obtained\nwith {@link #getDefaultAccount}.", "Reference": "Saves the default account, which can later be obtained with {@link #getOnlyOrDefaultAccount}.", "LLMCandidates": ["Saves only the default account, which can later be obtained with {@link #getDefaultAccount}.", "Updates the default account by clearing it if the argument is null, or setting it to the provided AccountWithDataSet otherwise.", "Saves only the default account, which can later be obtained with {@link #getDefaultAccount}.", "Saves only the default account, which can later be obtained with {@link #getDefaultAccount}.", "Updates the default account with the given AccountWithDataSet object."]}
{"SampleId": 1531004, "Origin": "Returns the full set of traversal parameters specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "Reference": "Returns the full set of traversal intervals specified on the command line, including parsed intervals without\nmerging intervals specified by the user on the command line.", "LLMCandidates": ["Returns a list of SimpleIntervals that represent the intervals specified on the command line without merging, excluding any unmapped intervals. If no intervals are specified, it will throw an exception indicating that the method cannot be called without specifying either intervals to include or exclude. The intervals list is obtained by parsing the interval strings and then converting them to SimpleIntervals. Additionally, if unmapped intervals are present in the initial list of intervals, they are separated out and removed from the main list before returning.", "Returns the full set of intervals without merging specified by the user on the command line and not including unmapped records, if any. The resulting list does not contain merged intervals and is suitable for use in the traversal step.", "Returns the full set of intervals without merging specified by the user on the command line.", "Returns a list of SimpleIntervals without merging based on intervals specified on the command line. If unmapped regions are also requested for traversal, the method will separate them from other intervals before returning.", "Returns a list of SimpleIntervals without merging specified by the user on the command line. Only includes intervals specified either to include or exclude. If unmapped records are included in the specified intervals, they will be separated out from the rest before returning."]}
{"SampleId": 4396524, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, except password field which is redacted with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with passwords redacted for security purposes.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging without exposing credentials.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging without exposing credentials.", "Returns a string representation of this object, with sensitive data redacted; useful for testing and debugging."]}
{"SampleId": 5433639, "Origin": "Sets {@link HtmlOptions#createOverview} field to true.", "Reference": "Sets {@code HtmlOptions.createOverview} field to true.", "LLMCandidates": ["Sets the createOverview field to true if noOverview() is false, or if overviewPath() is not null, or if there are multiple modules or packages.", "Sets the value of {@link HtmlOptions#createOverview} field to true.", "Sets the createOverview field to true if noOverview() is false or if overviewPath() is not null, modules size is greater than 1, or both modules and packages sizes are 0 and 1 respectively.", "Sets the createOverview field to true if the noOverview method is not called, and the overviewPath method is not null, or there are multiple modules or packages.", "Sets the createOverview field to true if noOverview() is not called or if overviewPath() is not null, modules size is greater than 1, or if modules is empty and packages size is greater than 1."]}
{"SampleId": 4476930, "Origin": "This operation requires the {@code secrets/get} permission.", "Reference": "This operation requires the {@code secrets/delete} permission.", "LLMCandidates": ["This operation requires the {@code secrets/delete} permission.", "This operation requires the {@code secrets/delete} permission.", "This operation requires the {@code secrets/delete} permission.", "This operation requires the {@code secrets/delete} permission.", "This operation requires the {@code secrets/delete} permission."]}
{"SampleId": 2443728, "Origin": "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Reference": "Binds a new instance {@link Binding} using the information from the Jersey descriptor {@link InstanceBinding}.", "LLMCandidates": ["Binds a new instance Descriptor using the information from the Jersey descriptor InstanceBeanDescriptor.", "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceBeanDescriptor}.", "Binds a new instance {@link Descriptor} using the information from the Jersey descriptor {@link InstanceDescriptor}."]}
{"SampleId": 6191403, "Origin": "The {@link MessagingExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to\nhandle any errors that occur.", "Reference": "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle\nany errors that occur.", "LLMCandidates": ["The {@link FlowExceptionHandler} configured on {@link ReactiveProcessor} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur.", "The {@link FlowExceptionHandler} configured on {@link MessageProcessorChain} or {@link FlowConstruct} will be used to handle any errors that occur."]}
{"SampleId": 708321, "Origin": "Adds a fatal exception to the message set and throws\nthe unit as a PhaseFailedException.", "Reference": "Adds an error to the message set and throws CompilationFailedException.", "LLMCandidates": ["Adds a fatal exception to the message set and throws the unit as a CompilationFailedException if there are any errors present.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException after adding it to the error list.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException.", "Adds a fatal exception to the message set and throws the unit as a CompilationFailedException if there are any errors."]}
{"SampleId": 5245177, "Origin": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use.", "Reference": "If the option to use a central repository has been selected, does not\nindicate the central repository is configured for use simply that the\ncheckbox allowing configuration is checked on the options panel.", "LLMCandidates": ["If the option to use a central repository has been selected, does not indicate the central repository is configured for use.", "If the option to use a central repository has been selected, indicates whether the central repository is configured for use.", "If the option to use a central repository has been selected, indicates whether the central repository is configured for use.", "If the option to use a central repository has been selected, indicates whether the central repository is configured for use.", "If the option to use a central repository has been selected, does not indicate the central repository is configured for use."]}
{"SampleId": 1354136, "Origin": "Report the ending barline.", "Reference": "Report the ending PartBarline.", "LLMCandidates": ["Report the ending part barline.", "Report the ending barline for a part.", "Report the ending part barline.", "Report the ending part barline.", "Report the ending barline of the part."]}
{"SampleId": 6006999, "Origin": "Add a series for a X-Y type chart using Lists with error bars", "Reference": "Add a series for a X-Y type chart using Lists", "LLMCandidates": ["Add a series for a X-Y type chart using Lists with error bars based on data type", "Add a series for a X-Y type chart using Lists with error bars and supporting date data", "Add a series for a X-Y type chart using Lists with error bars and supporting date data", "Add a series for a X-Y type chart using Lists with error bars and automatically adjusting the data type based on input lists.", "Add a series for a X-Y type chart using Lists with error bars and support date data type."]}
{"SampleId": 4396496, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with AccessToken redacted if it is not null.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging."]}
{"SampleId": 1606491, "Origin": "Get the hex color for the primary displayed usernote of a user", "Reference": "Get the color for the primary displayed usernote of a user", "LLMCandidates": ["Get the hex color for the primary displayed usernote of a user, returning 0xFF808080 if no warning notes are found.", "Get the hex color for the primary displayed usernote of a user, returning 0xFF808080 if none exist.", "Get the hex color for the primary displayed usernote of a user, or return gray (#808080) if there are no usernotes.", "Get the hex color for the primary displayed usernote of a user or 0xFF808080 if there are no usernotes for that user.", "Get the hex color for the primary displayed usernote of a user, or 0xFF808080 if there are no usernotes."]}
{"SampleId": 2542310, "Origin": "Rotate this vector the specified radians about the given rotation axis.", "Reference": "Rotate this vector the specified radians around the given rotation axis.", "LLMCandidates": ["Rotate this vector the specified radians about the given rotation axis.", "Rotate this vector the specified radians about the given rotation axis.", "Rotate this vector the specified radians about the given rotation axis.", "Rotate this vector the specified radians about the given rotation axis.", "Rotate this vector the specified radians about the given rotation axis."]}
{"SampleId": 4245480, "Origin": "Does nothing if\nthe given node is currently not visible or target is .", "Reference": "Does nothing if\nthe given node is currently not visible or target is {@code null}.", "LLMCandidates": ["Updates the given node in the target if it is currently visible. Does nothing otherwise.", "Updates the given node if it is currently visible and target is not null.", "Updates a node's visibility based on the given target. If the model of the node equals the given node's model and the target is not null, adds the node to the target. Detaches the model.", "Updates the given node if it is currently visible and target is not null. Otherwise, does nothing.", "Updates a given node if it is currently visible and target is not null; otherwise does nothing."]}
{"SampleId": 2014106, "Origin": "Tests that apply works.", "Reference": "See issue\n1683.", "LLMCandidates": ["Tests that numeric properties are frozen after freeze or def operations.", "Tests freezeNumerics functionality.", "Test for the mutability of numeric properties after freeze/def.", "Test for the mutability of numeric properties after freeze/def.", "Tests that numeric properties are frozen after applying Object.freeze()."]}
{"SampleId": 5653269, "Origin": "Returns the value of the node as a module identifier, or null if the node is undefined.", "Reference": "Returns the value of the node as a module identifier.", "LLMCandidates": ["Returns a ModuleIdentifier created from the string representation of the node value or null if the node is undefined.", "Returns the value of the node as a module identifier.", "Returns the value of the node as a module identifier.", "Converts a ModelNode value into a ModuleIdentifier. If the ModelNode is undefined or its value cannot be parsed as a module identifier, it returns null.", "Returns the value of the node as a module identifier."]}
{"SampleId": 4615504, "Origin": "Returns a lightweight, low-level preceding-sibling axis iterator.", "Reference": "Returns a light-weight, low-level preceding-sibling axis iterator.", "LLMCandidates": ["Returns a lightweight, low-level preceding-sibling axis iterator over child nodes.", "Returns a lightweight, low-level preceding-sibling axis iterator for child iterators.", "Returns a lightweight, low-level preceding-sibling axis iterator for child nodes.", "Returns a lightweight, low-level preceding-sibling axis iterator for child nodes.", "Returns a lightweight, low-level preceding-sibling axis iterator for child nodes."]}
{"SampleId": 1879788, "Origin": "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class.", "Reference": "Testing the normalizeVector) and normalizeEquals(Vector) methods of the\n{@link VMath} class.", "LLMCandidates": ["Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class, which return a vector with length 1 and ensure the result by using squareSum instead of euclideanLength.", "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class. This test verifies that both methods return a vector with length 1, use squareSum instead of euclideanLength for comparison, ensure that both methods return the same Vector, and check if the normalized vector multiplied by the original vector's Euclidean length equals the original vector. All tests are performed with tolerance 0 or 1e-15.", "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class using new tolerances for numerical tests with improved precision.", "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class to ensure that they return a vector with length 1 by using squareSum instead of euclideanLength. Additionally, checking if both methods return the same Vector and if the normalize Vector times the euclidean length of the original Vector equals the original vector.", "Testing the normalize(Vector) and normalizeEquals(Vector) methods of the VMath class to ensure they return a vector with length 1 and verify if both methods return the same Vector. Also checking that the normalize Vector times the euclidean length of the original Vector equals the original vector."]}
{"SampleId": 1390765, "Origin": "Adds a 'followingUser' type notification with the specified request json object.", "Reference": "Adds a 'following - user' type notification with the specified request json object.", "LLMCandidates": ["Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSONObject.", "Adds a 'following_user' type notification with the specified request JSON object.", "Adds a 'following_user' type notification with the specified request JSON object."]}
{"SampleId": 3964762, "Origin": "Turn a toX of Either3 into a single Either with Lists of values.", "Reference": "Turn an IterableX of Either3 into a single Either with Lists of values.", "LLMCandidates": ["Turn a Collection of Either3 into a single Either with ReactiveSeq of values.", "Turn a collection of Either3 into a single Either with ReactiveSeq of values.", "Combines a collection of Either3 containing Lists into a single Either3 with ReactiveSeq of values.", "Turn a toX of Either3 into a single Either with Sequences of values.", "Turn a toX of Either3 into a single Either with Sequences of values."]}
{"SampleId": 4617610, "Origin": "Tests {@link Array#from(Value...)}.", "Reference": "Tests {@link XQArray#from(Value...)}.", "LLMCandidates": ["Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}.", "Tests {@link XQArray#from(Value...)}."]}
{"SampleId": 1220434, "Origin": "Ingest a Matrix into an H2O Frame.", "Reference": "Ingest a Mahout Matrix into an H2O DRM.", "LLMCandidates": ["Create an H2O Frame from a Matrix, handling string labeled matrices separately.", "Ingest a Matrix into an H2O Frame with optional label vector creation.", "Ingest a Matrix into an H2O Frame with optional label vector creation.", "Ingest a Matrix into an H2O Frame, creating an empty (0-filled) frame of the required dimensions and optionally assigning row labels to it.", "Ingest a Matrix into an H2O Frame with optional label mapping."]}
{"SampleId": 2734301, "Origin": "Returns {@link List} of collapsed {@link AccordionPane}s", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Collapses the specified {@link AccordionPane}s using their IDs.", "Collapses all {@link AccordionPane}s with ids specified in the given list.", "Modifies the collapsed state of the specified {@link AccordionPane}s using their given IDs.", "Modifies the collapsed state of the specified {@link AccordionPane}s identified by their IDs.", "Collapses the specified {@link AccordionPane}s identified by their ids from the model"]}
{"SampleId": 2008719, "Origin": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException and TimeoutException as an OperationCancellation.", "Reference": "Same as {@link #awaitResult(long, TimeUnit)},\nbut throw InterruptedException as an OperationCancellation.", "LLMCandidates": ["Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException and OperationCancellation.", "Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException as an OperationCancellation and no longer throw TimeoutException.", "Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException as an OperationCancellation and return the result if not timeout.", "Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException and OperationCancellation.", "Same as {@link #awaitResult(long, TimeUnit)}, but throw InterruptedException and OperationCancellation."]}
{"SampleId": 3863845, "Origin": "shows full-screen preview of the passed media", "Reference": "show full-screen preview of the item and the passed position", "LLMCandidates": ["shows full-screen preview of the passed media item at the given position", "Shows full-screen preview of the media item at the specified position", "Shows full-screen preview of the media item at the specified position", "Shows full-screen preview of the PhotoPickerItem at the passed position.", "shows full-screen preview of the passed item's media"]}
{"SampleId": 237074, "Origin": "Handles a netty RPC callable with logging.", "Reference": "Handles a streaming RPC callable with logging.", "LLMCandidates": ["Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging.", "Handles a streaming RPC callable with logging."]}
{"SampleId": 6305223, "Origin": "Build an HTTP Ok without any content.", "Reference": "Build an HTTP No content.", "LLMCandidates": ["Build an HTTP NoContent without any content.", "Build an HTTP No Content without any content.", "Build an HTTP No Content without any content.", "Build an HTTP No Content without any content.", "Build an HTTP No Content without any content."]}
{"SampleId": 2230477, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations."]}
{"SampleId": 3270031, "Origin": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "Reference": "Returns the node to the left of the \"::\".", "LLMCandidates": ["Returns the expression to the left of the \"::\" if it exists and is unambiguous.", "Returns the primary expression to the left of \"::\" if it exists and is unambiguous.", "Returns the expression to the left of the \"::\" if it exists and is not null.", "Returns the expression to the left of the \"::\" if it exists and is non-null.", "Returns the expression to the left of the \"::\" if it exists and is non-null."]}
{"SampleId": 2825133, "Origin": "Determine type of a store base on a store file name.", "Reference": "Determine type of a store base on provided database file.", "LLMCandidates": ["Determine type of a store base on a database file.", "Determine type of a store base on a database file.", "Determine type of a store base on a database file.", "Determine type of a store base on a database file.", "Determine type of a store base on a database file."]}
{"SampleId": 4472680, "Origin": "Set name of the Cosmos DB table.", "Reference": "Set the resource value.", "LLMCandidates": ["Set resource of TableGetPropertiesResource.", "Set the resource of the TableGetProperties operation.", "Set the resource for the TableGetProperties operation.", "Set the resource for the TableGetProperties operation.", "Set the resource of the TableGetProperties operation."]}
{"SampleId": 6233845, "Origin": "Returns prefix {@code byte} for this type.", "Reference": "Returns length of this type.", "LLMCandidates": ["Returns the length of this type as an integer. If value is not null, it returns RedisConstants.TYPE_LENGTH, otherwise it returns 0.", "Returns prefix {@code int} for this type. If value is not null, returns RedisConstants.TYPE_LENGTH; otherwise returns 0.", "Returns length {@code int} for this type. If value is not null, it returns RedisConstants.TYPE_LENGTH; otherwise, it returns 0.", "Returns the length of this type as int, if it's not null; otherwise returns 0.", "Returns the length of this type as int, if it's not null; otherwise returns 0."]}
{"SampleId": 4617576, "Origin": "Adds part of another token to the token.", "Reference": "Adds the part of a token to the token.", "LLMCandidates": ["Appends part of another token to the end of the current token.", "Appends part of another token to the token.", "Appends part of another token to the token.", "Appends part of another token to the current token.", "Appends part of another token to the current token."]}
{"SampleId": 6043598, "Origin": "and repositoryId = ?.", "Reference": "and type = ?.", "LLMCandidates": ["Finds the SyncDLObject and its previous and next entries based on repositoryId and type, given the primary key syncDLObjectId.", "Finds the SyncDLObject's previous and next entry by repositoryId and type, and orders them according to the given OrderByComparator.", "Finds the three SyncDLObject instances with the most recent modified time before and after the reference SyncDLObject and given repositoryId, in ascending order of type. Optionally, this method includes comparison based on the natural ordering of the SyncDLObject's type field. Alternatively, this method orders by the <code>orderByComparator</code>. Use a comparator implementation to provide a custom ordering. This method is called with the optional <code>orderByComparator</code> value <code>null</code> if no particular order by type is requested.\n\nThis method is similar to {@link #getByR_T_PrevAndNext(Session, SyncDLObject, long, String, OrderByComparator, boolean)}, but retrieves the previous and next neighboring SyncDLObject instances as well. Optionally, the first element in the returned array contains the previous neighbor, and the last element in the returned array contains the next neighbor. If no such element exists, it is <code>null</code>.\n\nParameter <code>syncDLObjectId</code> is the primary key of the reference SyncDLObject to find neighbors for. It must not be <code>null</code>.\n\nParameter <code>repositoryId</code> is the ID of repository that data belongs to, so it should be the same in all three returned elements.\n\nParameter <code>type</code> is the type of the SyncDLObject to find neighbors for. It must not be <code>null</code>.\n\n<p>\n<b>See also:</b><br>\n- {@link #getByR_T_PrevAndNext(Session, SyncDLObject, long, String, OrderByComparator, boolean)}\n</p>", "Finds the previous and next SyncDLObject based on repositoryId and type.", "Returns an ordered array list of SyncDLObject where repositoryId = ? and type = ?, ordered by modifiedTime ascendingly or descendingly, depending on the orderByComparator. The method also finds the previous and next SyncDLObject in terms of modifiedTime."]}
{"SampleId": 2327545, "Origin": "Generates random trits for a transaction.", "Reference": "Generates trits for a hash.", "LLMCandidates": ["Generates random trits for a transaction hash.", "Generates trits for a transaction.", "Generates trits for a transaction.", "Generates trits for a transaction.", "Generates random trits for a transaction hash."]}
{"SampleId": 704476, "Origin": "Thread signaled test for {@link PredicateLock#waitForever()}", "Reference": "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)}", "LLMCandidates": ["Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(5 * 60_000)", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)} with 5 minutes timeout.", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(5 * 60_000)", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(long)} with a timeout of 5 minutes", "Thread signaled test for {@link PredicateLock#waitForTimeoutOrFail(5 * 60_000)"]}
{"SampleId": 6045130, "Origin": "or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Reference": "or throws a {@link NoSuchResourceException} if it could not be found.", "LLMCandidates": ["Retrieves the calendar resource with the specified UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Returns the calendar resource with the specified UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Finds a {@link CalendarResource} by its uuid and group id, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found.", "Returns a CalendarResource with the specified UUID and group ID, or throws a com.liferay.calendar.NoSuchResourceException if it could not be found.", "Finds the CalendarResource by UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchResourceException} if it could not be found."]}
{"SampleId": 2218209, "Origin": "n choose k. Returns 0 if n is less than k.", "Reference": "The n choose k. Returns 0 if n is less than k.", "LLMCandidates": ["Returns n choose k. Returns 0 if n is less than k.", "n choose k. Returns 0 if n is less than k.", "n choose k. Returns 0 if n is less than k.", "n choose k. Returns 0 if n is less than k.", "n choose k. Returns 0 if n is less than k."]}
{"SampleId": 6311227, "Origin": "Show {@link Toast} for exception", "Reference": "Show {@link Toast} for throwable", "LLMCandidates": ["Show Toast for exception", "Show Toast for throwable", "Show Toast for throwable", "Show Toast for exception", "Show Toast for exception"]}
{"SampleId": 3357845, "Origin": "List a range of recording descriptors which match a channel and stream id.", "Reference": "List a range of recording descriptors which match a channel URI fragment and stream id.", "LLMCandidates": ["List a range of recording descriptors which match a channel and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id.", "List a range of recording descriptors which match a channel fragment and stream id."]}
{"SampleId": 437801, "Origin": "Register the runnable to process the specific pTransformId.", "Reference": "Register the runnable to process the specific pTransformId and track its execution time", "LLMCandidates": ["Register the runnable to process the specific pTransformId and track its execution using the stateTracker and executionTimeUrn, with labelsMetadata containing PTRANSFORM_LABEL.", "Register the runnable to process the specific pTransformId with state tracking and execution time measurement using a HashMap for labels metadata and SimpleExecutionState.", "Register the runnable to process the specific pTransformId, and track the execution state using a state tracker.", "Register the runnable to process the specific pTransformId, and track its state by adding it to the executionStates and stateTracker.", "Register the runnable to process the specific pTransformId, and track its execution state using a state tracker."]}
{"SampleId": 1879510, "Origin": "Robust computation of the inverse covariance matrix.", "Reference": "Update the cholesky decomposition.", "LLMCandidates": ["Updates Cholesky decomposition of the covariance matrix to handle degenerate cases and computes logNormDet.", "Computes the Cholesky decomposition of the input covariance matrix and updates other variables accordingly.", "Updates Cholesky decomposition of the covariance matrix to ensure it is positive definite and computes log-determinant for normalization.", "Updates Cholesky decomposition of the covariance matrix to handle degenerated cases and computes the log of the determinant and norm factor.", "Computes the inverse covariance matrix using Cholesky decomposition and handles degenerate cases by adding a small value to the diagonal."]}
{"SampleId": 4117678, "Origin": "See the\n{@link BlowfishCipher} class-level JavaDoc for more information and why it might be good to provide your own.", "Reference": "See the\nclass-level JavaDoc for more information and why it might be good to provide your own.", "LLMCandidates": ["See the {@link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the {@link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the {@link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the {link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own.", "See the {@link BlowfishCipherService} class-level JavaDoc for more information and why it might be good to provide your own."]}
{"SampleId": 3357566, "Origin": "Get the channel parameter for the cluster log and snapshot replay channel.", "Reference": "Set the counter for the current state of the cluster backup.", "LLMCandidates": ["Set the current channel for the cluster log and snapshot replay.", "Set the initial value by adding 8 to n.", "Set the initial value by adding 8 to n.", "Set the channel parameter for the cluster log and snapshot replay counter.", "Set the channel parameter for the cluster log and snapshot replay counter."]}
{"SampleId": 1142511, "Origin": "Reset the leader election throttle.", "Reference": "Reset the leader election throttles.", "LLMCandidates": ["Reset the leader election throttles.", "Reset the leader election throttles.", "Reset the leader election throttles.", "Reset the leader election throttles.", "Reset the leader election throttles."]}
{"SampleId": 2544552, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix.", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix.", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix."]}
{"SampleId": 4476357, "Origin": "Fetches the configuration settings that match the {@code options}.", "Reference": "Fetches the configuration settings that match the {@code selector}.", "LLMCandidates": ["Fetches the configuration settings that match the {@code options} and returns a paged iterable of ConfigurationSetting.", "Fetches the configuration settings that match the {@code selector}.", "Fetches the configuration settings that match the {@code selector} and context.", "Fetches the configuration settings that match the {@code selector} and context.", "Fetches the configuration settings that match the {@code selector} and are specific to the {@code context}."]}
{"SampleId": 5316646, "Origin": "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext.", "Reference": "Autodetect a {@link FreeMarkerConfig} object in the {@code ApplicationContext}.", "LLMCandidates": ["Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext of this application context (may be inherited): FreeMarkerConfigurer is the usual implementation. This bean may be given any name.", "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext of this application.", "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext in this application context (may be inherited).", "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext (may be inherited).", "Autodetect a {@link FreeMarkerConfig} object via the ApplicationContext (may be inherited)."]}
{"SampleId": 1294322, "Origin": "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite", "Reference": "Invoked when the txn has been removed from the queue and is starting to execute at a local PartitionExecutor", "LLMCandidates": ["Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite.", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite.", "Invoked when the txn has been removed from the queue and is starting to execute at a local ExecutionSite."]}
{"SampleId": 1985691, "Origin": "Then return all - block to get the trapped water", "Reference": "Then return total - blocks to get the trapped water.", "LLMCandidates": ["Then return all - blocks to get the trapped water", "Then return all - blocks to get the trapped water", "Then return all - blocks to get the trapped water", "Return all - blocks to get the trapped water", "Return all - blocks to get the trapped water"]}
{"SampleId": 2337095, "Origin": "Delete RADIUS Configuration\n### Functional Description:   Delete existing RADIUS configuration.", "Reference": "Delete RADIUS configuration\n### Functional Description:   Delete existing RADIUS configuration.", "LLMCandidates": ["Delete existing RADIUS configuration.", "Delete existing RADIUS configuration.", "Delete existing RADIUS configuration.", "Delete existing RADIUS configuration using specified xSdsAuthToken parameter.", "Delete existing RADIUS configuration using specified xSdsAuthToken parameter."]}
{"SampleId": 1259760, "Origin": "Check whether the given member is a proxy member of a proxy object.", "Reference": "Check whether the given member is a proxy member of a proxy object or is a static proxy member.", "LLMCandidates": ["Check whether the given member is a proxy member of a non-static proxy object if it's not static, or a regular object.", "Check whether the given member is a proxy member of a proxy object, taking into account if the member is not a static member and the object is not a proxy.", "Check whether the given member is a proxy member of a proxy object, unless it's a non-static member of a non-proxy object.", "Check whether the given member is a proxy member of a proxy object if the member is not static and the object is a proxy.", "Check whether the given member is a proxy member of a non-static proxy object if it's not static, or a regular object."]}
{"SampleId": 4396574, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, redacting sensitive data when necessary.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object, redacting any sensitive data; useful for testing and debugging."]}
{"SampleId": 1875792, "Origin": "Get the normalized variation of information (normalized, 0 = equal) NVI = 1\n- NMI_Joint", "Reference": "Get the normalized variation of information (normalized, small values are\ngood).", "LLMCandidates": ["Get the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint", "Get the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint", "Get the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint", "Get the normalized variation of information (normalized, 0 = equal) NVI = 1 - mutualInformation / entropyJoint", "Get the normalized variation of information (normalized, 0 = equal) NVI = 1 - NMI / entropyJoint"]}
{"SampleId": 1309906, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a API, used to index the API in ES.", "LLMCandidates": ["Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES."]}
{"SampleId": 4132872, "Origin": "Returns the JDBC connection {@link #username} property.", "Reference": "Returns the JDBC connection {@link #userName} property.", "LLMCandidates": ["Returns the JDBC connection {@link #userName} property.", "Returns the JDBC connection {@link #userName} property.", "Returns the JDBC connection {@link #userName} property.", "Returns the JDBC connection {@link #userName} property.", "Returns the JDBC connection {@link #userName} property."]}
{"SampleId": 1629435, "Origin": "When the insertion is complete, the\n{@code ticker} will be {@link CountUpLatch#countUp() incremented} by 1.", "Reference": "When the insertion is complete, the\n{@code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "LLMCandidates": ["When the insertion is complete, the {code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the {code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the {code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the {code tracker} will be {@link CountUpLatch#countUp() incremented} by 1.", "When the insertion is complete, the {code tracker} will be {@link CountUpLatch#countUp() incremented} by 1."]}
{"SampleId": 1442385, "Origin": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of AtomContacts", "Reference": "Calculates all distances of atoms within this cell returning those that are within the given cutoff\nas a list of Contacts containing the indices of the pair and the calculated distance.", "LLMCandidates": ["Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts.", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts", "Calculates all distances of atoms within this cell returning those that are within the given cutoff as a list of Contacts"]}
{"SampleId": 291293, "Origin": "Converts milliseconds to a string containing hours and minutes", "Reference": "Converts milliseconds to a string containing hours and minutes or minutes and seconds", "LLMCandidates": ["Converts milliseconds to a string containing hours, minutes, or seconds depending on whether durationIsInHours is true or false", "Converts milliseconds to a string containing hours, minutes, or seconds depending on whether the duration is specified in hours or not", "Converts milliseconds to a string containing hours, minutes, and seconds", "Converts milliseconds to a string containing hours, minutes, or seconds depending on the value passed for durationIsInHours parameter.", "Converts milliseconds to a string containing hours, minutes, and optionally seconds based on the input duration and durationIsInHours flag."]}
{"SampleId": 4019592, "Origin": "WebPage on a job-by-job basis and thier values indicative of what actions\nshould be associated with a WebPage.", "Reference": "They are assigned to a WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.", "LLMCandidates": ["WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.", "WebPage on a job-by-job basis and thier values indicative of what actions should be associated with a WebPage.", "WebPage on a job-by-job basis and their values indicative of what actions should be associated with a WebPage.", "WebPage on a job-by-job basis and their values indicative of what actions should be associated with a WebPage.", "WebPage on a job-by-job basis and their values indicative of what actions should be associated with a WebPage."]}
{"SampleId": 2912049, "Origin": "Gets the price that was traded, in decimal form.", "Reference": "Gets the price that was traded, together with the trade date, optional.", "LLMCandidates": ["Gets the traded price, if it is non-null, otherwise returns an empty Optional.", "Gets the traded price that was previously traded, if available, otherwise returns an empty Optional.", "Gets the traded price, wrapped in Optional.", "Gets the traded price, wrapped in Optional.", "Gets the traded price, if it was traded; otherwise, returns an empty Optional."]}
{"SampleId": 6291857, "Origin": "Create a TripTimeSubset from a given trip pattern, date and time window.", "Reference": "Create a TripTimeSubset from a given trip pattern, bitset of services running, and time window.", "LLMCandidates": ["Create a TripTimeSubset from a given trip pattern, date and time window using the servicesRunning BitSet to filter down the trips.", "Create a TripTimeSubset from a given trip pattern, date and time window using the servicesRunning BitSet.", "Create a TripTimeSubset from a given trip pattern, date and time window using a BitSet of servicesRunning instead of Graph to get the servicesRunning.", "Create a TripTimeSubset from a given trip pattern, date and time window, using a BitSet to represent services running on the specified date.", "Create a TripTimeSubset from a given trip pattern, services running status, date and time window."]}
{"SampleId": 4383855, "Origin": "Availability Zone in the same Region to increase fault tolerance in\nthe event of a service disruption.", "Reference": "Zone in the same Region to increase fault tolerance in the event of a\nservice disruption.", "LLMCandidates": ["Update an Availability Zone within the same Region to enhance fault tolerance during service disruptions.", "Update the Availability Zone in the same Region to increase fault tolerance in the event of a service disruption.", "Updates the availability zone in the same Region to increase fault tolerance in the event of a service disruption.", "Updates the specified availability option for the load balancer in the same region to increase fault tolerance in the event of a service disruption.", "Updates the availability zone within the same region for fault tolerance during service disruptions."]}
{"SampleId": 3344326, "Origin": "RxRatpack.promise(new AsyncService().observe(\"foo\"))\n    ).getValue();", "Reference": "RxRatpack.promiseAll(new AsyncService().observe(\"foo\"))\n    ).getValue();", "LLMCandidates": ["Converts an Observable into a Promise that resolves to the list of values emitted by the Observable.", "Converts an Observable of lists into a single Promise<List<T>> by subscribing to the Observable and handling the success or error cases using functional interfaces.", "Build a promise of all values emitted by an Observable.", "Converts an Observable of T into a Promise of List<T> using toList and subscribe.", "Converts an Observable of T into a Promise of List<T> using toList and subscribe."]}
{"SampleId": 6044273, "Origin": "Returns all the push notifications devices where platform = ?.", "Reference": "Returns all the push notifications devices where userId = any ?", "LLMCandidates": ["Returns all the push notifications devices where platform = ? and userIds is specified.", "Returns all the push notifications devices where platform = ? and u_P = ?.", "Returns all the push notifications devices where platform = ? and userIds are specified.", "Returns all the push notifications devices where platform = ? and userIds are specified.", "Returns all the push notifications devices where platform = ? and userIds are specified."]}
{"SampleId": 1985765, "Origin": "| Then we can use this range we retrieve levels from the map.", "Reference": "| Then this range can be used to retrieve column values from the map.", "LLMCandidates": ["We can then use this range to retrieve columns from the map.", "Then we can use this range we retrieve columns from the map.", "Then we can use this range we retrieve columns from the map.", "Then we can use this range we retrieve columns from the map.", "Then we can use this range we retrieve columns from the map."]}
{"SampleId": 4850466, "Origin": "Gets the user's avatar URL, if present and in a supported format.", "Reference": "Gets the user's avatar URL, if present.", "LLMCandidates": ["Gets the user's avatar URL, if present in any format and supported by the specified format.", "Gets the user's avatar URL, if present and in a supported format, without considering the animation flag or format restrictions.", "Gets the user's avatar URL if it is present and supported format.", "Gets the user's avatar URL if it is present and supported format.", "Gets the user's avatar URL, if present and in a supported format, without additional filtering."]}
{"SampleId": 4781233, "Origin": "Return  if {@link ITokenTypeAttribute#TF_COMMON_WORD} is set.", "Reference": "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "LLMCandidates": ["Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return  if {@link ITokenizer#TF_COMMON_WORD} is set.", "Return if {@link ITokenizer#TF_COMMON_WORD} is set."]}
{"SampleId": 2048822, "Origin": "Calls {@link #reset()} and releases any held DRM resources.", "Reference": "Calls {@link #reset()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Calls {@link #reset()} and releases any held DRM session references.", "Calls {@link #reset()} and releases any held DRM resources by releasing session references from metadataQueue.", "Calls {@link #reset()} and releases any held DRM resources by releasing session references from metadataQueue.", "Calls {@link #reset()} and releases any held DRM resources by releasing session references from metadataQueue.", "Releases any held DRM resources by calling {@link #reset()} and invoking {@code metadataQueue.releaseDrmSessionReferences()}."]}
{"SampleId": 2478395, "Origin": "Removes given PacketExtension from the list of child packet\nextensions.", "Reference": "Removes given ExtensionElement from the list of child packet\nextensions.", "LLMCandidates": ["Removes given ExtensionElement from the list of child extension elements.", "Removes given ExtensionElement from the list of child extension elements.", "Removes given ExtensionElement from the list of child extension elements.", "Removes given ExtensionElement from the list of child extension elements.", "Removes given ExtensionElement from the list of child packet extensions."]}
{"SampleId": 5078149, "Origin": "Prepare task event for execution on agent.", "Reference": "Prepare exe params for send REST request on node.", "LLMCandidates": ["Prepare event for execution on agent with taskId and nids parameters.", "Prepare task event for execution on agent with provided clusterId and updated parameters.", "Prepare task event for execution on agent with provided clusterId and updated parameters.", "Prepare event parameters for execution on agent.", "Prepare event parameters for execution on agent."]}
{"SampleId": 5452379, "Origin": "This method returns an interface that is\nboth \"up\" and supports multicast.", "Reference": "This method returns the first interface that\nis both \"up\" and supports multicast.", "LLMCandidates": ["This method returns an interface that is both \"up\" and supports multicast. Additionally, if both IPv4 and IPv6 addresses are found on the preferred interface, it will be returned instead of the default one.", "This method returns an interface that is both \"up\" and supports multicast. If a network interface meets these criteria, it will be checked if it has both IPv4 and IPv6 addresses, in which case it will be returned as the default interface; otherwise, the preferred interface (if found) or the PPP or loopback interfaces will be returned.", "This method returns an interface that is both \"up\" and supports multicast. The preferred interface among those meeting this condition will have IPv4 and IPv6 addresses. If no preferred interface exists, it will return the PPP or loopback interface in order of preference.", "This method returns an interface that is both \"up\" and supports multicast, or if none found, it returns the preferred interface with both IPv4 and IPv6 addresses, or otherwise, it returns the point-to-point (PPP) interface or the loopback interface.", "This method returns an interface that is both \"up\" and supports multicast. If a preferred interface with both IPv4 and IPv6 addresses exists, it will be returned. Otherwise, the method returns either the PPP or loopback interface, in that order."]}
{"SampleId": 101881, "Origin": "Return true if the given CmsTreeItem or its children is selected.", "Reference": "Return true if at least one child of the given tree item is selected.", "LLMCandidates": ["Return true if the given CmsTreeItem or its children is selected.", "Return true if the given CmsTreeItem or any of its children is selected.", "Return true if the given CmsTreeItem or any of its children is selected.", "Return true if the given CmsTreeItem or any of its children is selected.", "Return true if the given CmsTreeItem or its children is selected."]}
{"SampleId": 6191662, "Origin": "Note that this performs chains\nconstruction but wil not inject {@link MuleContext} or {@link FlowConstruct} or perform any lifecycle.", "Reference": "Note that this performs chains\nconstruction but will not inject {@link MuleContext} or perform any lifecycle.", "LLMCandidates": ["Constructs MessageProcessorChain from a list of processors and an optional processing strategy, if provided. Note that this method does not inject MuleContext or FlowConstruct or perform any lifecycle management.", "Create a MessageProcessorChain with optional processing strategy and list of processors. Note that this performs chains construction but will not inject MuleContext or FlowConstruct or perform any lifecycle.", "Constructs a new MessageProcessorChain with optional processing strategy and the given list of processors. Note that this method will not inject MuleContext or FlowConstruct or perform any lifecycle.", "Note that this performs chains construction while injecting {@link MuleContext} or {@link FlowConstruct} and performing lifecycle when the processing strategy is provided.", "Constructs a MessageProcessorChain by either returning an existing chain if there is only one processor and it is a MessageProcessorChain or not an ExplicitMessageProcessorChain; otherwise builds a new DefaultMessageProcessorChain using the provided processing strategy, list of processors, and sets the processing strategy for the builder. Note that this method does not inject MuleContext or FlowConstruct, nor does it perform any lifecycle management."]}
{"SampleId": 4386724, "Origin": "NOTE: Amazon Glacier retains recently completed jobs for a\nperiod before deleting them; however, it eventually removes completed\njobs.", "Reference": "Amazon Glacier retains recently completed jobs for a period before\ndeleting them; however, it eventually removes completed jobs.", "LLMCandidates": ["This method retrieves a list of completed jobs for the specified vault, including recently completed jobs that may still be available for retrieval.", "Returns a list of completed jobs for the account and region specified in the request. Amazon Glacier retains recently completed jobs for a period before deleting them; however, it eventually removes completed jobs.", "Retrieves a list of jobs for the specified account and region. Amazon Glacier retains recently completed jobs for a period before deleting them; however, it eventually removes completed jobs.", "This operation lists the jobs that have been submitted to the Glacier vault. Amazon Glacier retains recently completed jobs for a certain period before deleting them; however, it eventually removes completed jobs.", "List jobs with specified parameters."]}
{"SampleId": 5440480, "Origin": "Appends the information about the given handle to {@link #buf buf}.", "Reference": "Appends a string representation of the given handle to {@link #stringBuilder}.", "LLMCandidates": ["Appends the information about the given handle to {@code stringBuilder}.", "Appends the information about the given handle to {@link #buf buf}.", "Appends the information about the given handle to {@link #stringBuilder stringBuilder}.", "Appends the information about the given handle to {@link #stringBuilder stringBuilder}.", "Appends the information about the given handle to {@link #stringBuilder stringBuilder}."]}
{"SampleId": 5177566, "Origin": "Handler method converting a Jetty Connection into a Restlet Call.", "Reference": "Handler method converting a Jetty HttpChannel into a Restlet Call.", "LLMCandidates": ["Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call.", "Handler method converting a Jetty Channel into a Restlet Call."]}
{"SampleId": 5631550, "Origin": "The timestamp for creation of the synonym.", "Reference": "The timestamp for creation of the object.", "LLMCandidates": ["The timestamp for creation of the synonym.", "The timestamp for creation of the synonym.", "The timestamp for creation of the synonym.", "The timestamp for creation of the synonym.", "The timestamp for creation of the synonym."]}
{"SampleId": 2312757, "Origin": "Returns the (unbiased) skew of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link PointSet}\nregion of a {@link Dataset}", "LLMCandidates": ["Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset.", "Returns the (unbiased) kurtosis of all the values within a {@link PointSet} region of a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset.", "Returns the (unbiased) kurtosis of all the values within a PointSet region of a Dataset", "Returns the sample kurtosis of all the values within a PointSet region of a Dataset."]}
{"SampleId": 5218994, "Origin": "remove space for SQL expression and outside parentheses", "Reference": "remove space for SQL expression", "LLMCandidates": ["remove space for SQL expression and outside parentheses (if any)", "Remove space for SQL expression and outside parentheses by using CharMatcher.anyOf(\" \").removeFrom directly on the value.", "Remove space for SQL expression and outside parentheses using CharMatcher.", "Remove space for SQL expression and outside parentheses using CharMatcher.", "remove space for SQL expression and outside parentheses if value is not null or empty."]}
{"SampleId": 1311345, "Origin": "Reads the inbound request headers from the request and sets them on\nthe {@link ServiceRequest}.", "Reference": "Reads the inbound request headers from the request and sets them on\nthe {@link ApiRequest}.", "LLMCandidates": ["Reads the inbound request headers from the request and sets them on the {@link ApiRequest}.", "Reads the inbound request headers from the request and sets them on the {@link ApiRequest}.", "Reads the inbound request headers from the request and sets them on the {@link ApiRequest}.", "Reads the inbound request headers from the request and sets them on the {@link ApiRequest}.", "Reads the inbound request headers from the request and sets them on the {@link ApiRequest}."]}
{"SampleId": 594031, "Origin": "Returns the input stream of this message content.", "Reference": "Returns the CachedOutputStream of this message content.", "LLMCandidates": ["Returns the cached output stream of this message content.", "Returns the output stream of this message content.", "Returns the output stream of this message content.", "Returns the output stream of this message content.", "Returns the output stream of this message content."]}
{"SampleId": 1404511, "Origin": "The value is {@link ArtifactFileMetadata#PLACEHOLDER} if the artifact's metadata is not\nfully captured in {@link #additionalOutputData}.", "Reference": "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully\ncaptured in {@link #additionalOutputData}.", "LLMCandidates": ["The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link #additionalOutputData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link #additionalOutputData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link #additionalOutputData}.", "The value is {@link FileArtifactValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link #additionalOutputData}.", "The value is {@link ArtifactFileValue#PLACEHOLDER} if the artifact's metadata is not fully captured in {@link #additionalOutputData}."]}
{"SampleId": 3036959, "Origin": "Currently, SONA supports Flat, VXLAN and VLAN modes.", "Reference": "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "LLMCandidates": ["SONA currently supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes.", "Currently, SONA supports Flat, VXLAN, GRE and VLAN modes."]}
{"SampleId": 5459561, "Origin": "Returns {@code true} if this module reflectively exports the given\npackage package to the given module.", "Reference": "Returns {@code true} if this module reflectively exports or opens given\npackage package to the given module.", "LLMCandidates": ["Returns {@code true} if this module reflectively exports or opens the given package package to the given module.", "Returns {@code true} if this module reflectively exports or is open to the public the given package package to the given module, taking into account the \"open\" flag.", "Returns {@code true} if this module reflectively exports or makes package {@code pn} open to the given module other, taking into consideration the parameter open. If other is null or EVERYONE_MODULE, returns {@code true} only if the module reflects the package as exported. Otherwise, checks whether the module reflects the package as either exported or open, according to the value of open.", "Returns {@code true} if this module reflectively exports or is open to the public the given package package to the given module.", "Returns {@code true} if this module reflectively exports or opens the given package to the given module."]}
{"SampleId": 5451749, "Origin": "Search for package name in the sorted regular expression\nlist, if found return the group name.", "Reference": "Search for element name in the sorted regular expression\nlist, if found return the group name.", "LLMCandidates": ["Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name.", "Search for element name in the sorted regular expression list, if found return the group name."]}
{"SampleId": 2615604, "Origin": "Returns the keyFrames[] array where all the TextureRegions of the animation are stored.", "Reference": "Returns the keyframes[] array where all the frames of the animation are stored.", "LLMCandidates": ["Returns the keyFrames array where all the TextureRegion objects of the animation are stored.", "Returns the keyFrames[] array where all the Texture<S> of the animation are stored.", "Returns the keyFrames array of type T where all the TextureRegions of the animation are stored.", "Returns the keyFrames array of type T where all the TextureRegion objects of the animation are stored.", "Returns the keyFrames[] array where all the TextureRegion objects of the animation are stored."]}
{"SampleId": 2443539, "Origin": "Get the current {@link RequestScope.Instance request scope instance}\nand mark it as suspended.", "Reference": "Get the current {@link RequestContext request scope context}\nand mark it as suspended.", "LLMCandidates": ["Get the current RequestScope.RequestContext and mark it as suspended.", "Get the current {@link RequestScope.RequestContext request scope context} and mark it as suspended.", "Get the current RequestContext and mark it as suspended.", "Get the current RequestContext and mark it as suspended.", "Get the current RequestScope.RequestContext and mark it as suspended."]}
{"SampleId": 5377094, "Origin": "Whether to group the REST resources together.", "Reference": "How to group the REST resources together.", "LLMCandidates": ["Whether to group the REST resources together. Returns the String representation of the grouping status.", "Whether to group the REST resources together. Returns a String representation of the boolean value.", "Indicates whether to return the grouped REST resources as a string.", "Indicates whether to return the grouped REST resources as a string.", "Returns the value of groupRestResources as a String."]}
{"SampleId": 1353529, "Origin": "Assign available voices to the chords that have no voice assigned yet.", "Reference": "Assign available voices to the chords in this measure with no voice assigned yet.", "LLMCandidates": ["Assign available voices to chords without assigned voice within the given Measure and its list of incoming chords.", "Assign available voices to the chords that have no voice assigned yet within a given measure and its incoming chords.", "Assign available voices to chords that have no voice assigned yet within a given measure, ensuring staff continuity where possible and considering only the specified list of chords for the measure.", "Assign available voices to the chords that have no voice assigned yet in a given measure.", "Assign available voices to the chords that have no voice assigned yet in the given measure and list of incoming chords."]}
{"SampleId": 4404113, "Origin": "NOTE:This operation is eventually consistent.", "Reference": "This operation is eventually consistent.", "LLMCandidates": ["Retrieves the execution history of a workflow for the specified workflow execution using an eventually consistent operation. This method is overridden and should only be used if your code specifically requires it.", "Retrieves the workflow execution history with eventually consistent operation.", "Retrieves the workflow execution history for a given workflow execution using eventually consistent operation.", "Retrieves the history of a workflow execution. Note: This operation is eventually consistent.", "Retrieves the history of a workflow execution for the given workflow and version using eventually consistent operation."]}
{"SampleId": 2403174, "Origin": "Ensures server received authentication request.", "Reference": "Ensures server received an extensions request.", "LLMCandidates": ["Ensures server received extensions request.", "Ensures server received extensions request.", "Ensures server received extensions request.", "Ensures server received extensions request.", "Ensures server received extensions request."]}
{"SampleId": 470385, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:\n type.", "LLMCandidates": ["Sets the property \"dataFrame\" with the given value.", "The input will be converted to a dataFrame type.", "The option will be converted to a  type.", "The option will be converted to a  type.", "The parameter will be converted to a type."]}
{"SampleId": 5446194, "Origin": "Returns true if the given class loader is in the system domain\nin which all permissions are granted.", "Reference": "Returns true if the given class loader is the bootstrap class loader\nor the platform class loader.", "LLMCandidates": ["Returns true if the given class loader is either null or in the system domain in which all permissions are granted.", "Returns true if the given class loader is either null or the platform class loader, in which all permissions are granted.", "Returns true if the given class loader is either null or the platform class loader, in which all permissions are granted.", "Returns true if the given class loader is either null or the platform class loader, in which all permissions are granted.", "Returns true if the given class loader is either null or the platform class loader, in which all permissions are granted."]}
{"SampleId": 4404087, "Origin": "IMPORTANT:Because the number of workflow history events for a\nsingle workflow execution might be very large, the result returned\nmight be split up across a number of pages.", "Reference": "Because the number of workflow history events for a single\nworkflow execution might be very large, the result returned might be\nsplit up across a number of pages.", "LLMCandidates": ["Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages.", "Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across multiple pages.", "IMPORTANT:Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages.", "Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages.", "IMPORTANT:Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages."]}
{"SampleId": 3774087, "Origin": "The default resolution is {@link Resolution#DAY} since Vaadin VERSION.", "Reference": "The default resolution is {@link DateResolution#DAY} since Vaadin VERSION.", "LLMCandidates": ["The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION.", "The default resolution is {@link R#DAY} since Vaadin VERSION."]}
{"SampleId": 2734304, "Origin": "Returns {@link List} of expanded {@link AccordionPane}s.", "Reference": "Asks {@link WebAccordion} to collapse {@link AccordionPane}s with the specified identifiers.", "LLMCandidates": ["Collapses the accordion panes with the specified IDs.", "Collapses the specified {@link AccordionPane}s identified by their IDs.", "Collapses the accordion panes with the given IDs.", "Collapses the AccordionPane with given ids.", "Collapses the AccordionPane with given ids."]}
{"SampleId": 1348111, "Origin": "Initializes the execution of a task.", "Reference": "Initializes the state machine.", "LLMCandidates": ["Initializes the execution of a task if the state machine is a SessionListener and adds it as a listener to sessions. Then initializes the state machine with this context.", "Initializes the execution of a task by updating internal state and registering listeners if necessary.", "Initializes the execution of a task for server statemachines with given context.", "Initializes the execution of a task for server statemachines with given context.", "Initializes the execution of a task by updating the context with the given index, instant, and type."]}
{"SampleId": 1578397, "Origin": "Removes the specified properties of the {@link NamespacedEntityId}.", "Reference": "Removes the specified properties of the {@link MetadataEntity}.", "LLMCandidates": ["Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}.", "Removes the specified properties of the {@link MetadataEntity}."]}
{"SampleId": 3074972, "Origin": "Called in response to the {@link RContext#destroy} method.", "Reference": "Called in response to the {@link RContext#dispose} method.", "LLMCandidates": ["Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method.", "Called in response to the {@link RContext#dispose} method."]}
{"SampleId": 5315712, "Origin": "Each class must represent an annotated class.", "Reference": "Each class must represent a component class.", "LLMCandidates": ["Each class must represent a component class.", "Each class must represent an annotated component class.", "Each class must represent a component class.", "Each class must represent a component class.", "Each class must represent a component class."]}
{"SampleId": 1989254, "Origin": "Add the specified {@link Graph} to the cache.", "Reference": "Add the specified {@link Store} to the cache.", "LLMCandidates": ["Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache.", "Add the specified {@link Store} to the cache."]}
{"SampleId": 4311215, "Origin": "High order byte is serverId, next 5\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "Reference": "High order 1 byte is serverId, next\n5 bytes are from timestamp, and low order 2 bytes are 0s.", "LLMCandidates": ["High order byte is serverId, next 8 bytes are from timestamp, and low order 2 bytes are 0s.", "High order byte is serverId, next 8 bytes are from timestamp, and low order 2 bytes are 0s.", "High order byte is serverId, next 5 bytes are from timestamp, and low order 2 bytes are 0s.", "High order byte is serverId, next 5 bytes are from timestamp, and low order 2 bytes are 0s.", "Initialize a new session ID by adding 8 to the given ID and taking the low order byte from the current timestamp. The high-order byte is the server ID, while the next 5 bytes are derived from the timestamp."]}
{"SampleId": 1135686, "Origin": "Common test method to be able to check security from any authentication plugin", "Reference": "Common test method to be able to check auth metrics from any authentication plugin", "LLMCandidates": ["Check minimum metrics for a given authentication prefix from any authentication plugin.", "Common test method to be able to check security from any authentication plugin, using security metrics for a given cluster and prefix.", "Common test method to be able to check security from any authentication plugin, using security metrics for a given cluster and prefix.", "Common test method to be able to check security from any authentication plugin using countSecurityMetrics and isMetricsEqualOrLarger functions.", "Checks if the minimum metrics for a given authentication plugin prefix match the expected values."]}
{"SampleId": 5230482, "Origin": "An example of a valid direction is\n{@code new Vector(1, 0, 1)}.", "Reference": "An example of a valid direction is\n{@code new BlockVector3(1, 0, 1)}.", "LLMCandidates": ["An example of a valid direction is {@code new BlockVector3(1, 0, 1)}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}.", "An example of a valid direction is {@code new BlockVector3(1, 0, 1)}."]}
{"SampleId": 4478306, "Origin": "Code snippets for {@link LeaseClientBuilder#buildClient()}.", "Reference": "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "LLMCandidates": ["Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}.", "Code snippets for {@link BlobLeaseClientBuilder#buildClient()}."]}
{"SampleId": 2050142, "Origin": "Pauses all downloads.", "Reference": "Pauses downloads.", "LLMCandidates": ["Pauses all downloads if they are not already paused.", "Pauses all downloads if not already paused. Sends a message indicating the pause state.", "Pauses all downloads if they are not already paused. Informs the handler that downloads have been paused by sending a message with the argument MSG_SET_DOWNLOADS_PAUSED.", "Pauses all downloads, sets the state to paused, increments pendingMessages and sends a message with MSG_SET_DOWNLOADS_PAUSED to internalHandler.", "Pauses all downloads if they are not already paused."]}
{"SampleId": 1118538, "Origin": "Decodes a String representing a number of events into a Vector of LoggingEvents", "Reference": "Decodes a String representing a number of events into a", "LLMCandidates": ["Decodes a String representing a number of events into a Vector of LoggingEvents, ensuring that the document is not empty and properly separates the string into the last portion ending with </record> which will be processed, and handles cases where the document does not contain a record end by appending it to the partial event string.", "Decodes a String representing a number of events into a Vector of LoggingEvents if the document is not null or an empty string; otherwise, returns null.", "Decodes a String representing a number of events into a Vector of LoggingEvents by processing each record and combining partial events.", "Decodes a String representing a number of events into a Vector of LoggingEvents by separating the string into the last portion ending with </record> (which will be processed) and the partial event which will be combined and processed in the next section.", "Decodes a String representing one or more events into a Vector of LoggingEvents"]}
{"SampleId": 4245364, "Origin": "Checks whether or not resources in the WEB-INF folder can be access.", "Reference": "Checks whether or not resources in the web root folder can be access.", "LLMCandidates": ["Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be accessed.", "Checks whether or not resources in the root folder can be access.", "Checks whether or not resources in the root folder can be access.", "Checks whether or not resources in the WEB-INF folder can be access."]}
{"SampleId": 2705593, "Origin": "Get Stringwert.", "Reference": "Get Eingaberegister Name.", "LLMCandidates": ["Get Data Entry Tab Name.", "Get String for Data Entry Tab Name.", "Get String for Data Entry Tab Name.", "Get Data Entry Tab Name value.", "Get Data Entry Tab Name value."]}
{"SampleId": 617199, "Origin": "Compare the two queues containing operator/task output by converting them to an array first.", "Reference": "Compare the two queues containing operator/task output by converting them to an array first, sort array by\ncomparator.", "LLMCandidates": ["Compare two collections by first ensuring the sizes are equal and then iterating through watermarks only. Convert each collection to a list of GenericRows and sort them in ascending order before comparing the arrays using Assert.assertArrayEquals with the specified message.", "Compare the two collections containing operator/task output by converting them to an array first and then sorting them before performing the assertion.", "Compare two queues containing operator/task output by converting them to an array first and then sorting the arrays before assertion.", "Compare two queues of operator/task outputs by converting them to an array first and then sorting before comparison.", "Compare two collections by converting them to arrays first before sorting and comparing."]}
{"SampleId": 4132895, "Origin": "Wrapper for close of ResultSet which removes this\nresult set from being traced then calls close on\nthe original ResultSet.", "Reference": "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original", "LLMCandidates": ["Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet.", "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet.", "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet.", "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet.", "Wrapper for close of ResultSet which removes this result set from being traced then calls close on the original ResultSet."]}
{"SampleId": 4372852, "Origin": "Sets the Single character used to indicate a row should be ignored when present at the start of a row.", "Reference": "Sets the character used to indicate a row should be ignored when present at the start of a row.", "LLMCandidates": ["Sets the Single character used to indicate a row should be ignored when present at the start of a row by calling setComments(charToString(comments)).", "Sets the Single character used to indicate a row should be ignored when present at the start of a row.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row, by passing it through charToString method.", "Sets the Single character used to indicate a row should be ignored when present at the start of a row."]}
{"SampleId": 2443544, "Origin": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestScope.Instance scope instance}.", "Reference": "The current thread might\nbe already in any request scope and in that case the scope will be changed to the\nscope defined by the {@link RequestContext scope context}.", "LLMCandidates": ["The current thread might already be in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Context context}.", "The current thread might already be in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.RequestContext current context}.", "The current thread might already be in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Context context}.", "The current thread might already be within a request scope, and if so, the scope will be changed to the scope defined by the {@link RequestScope.Context context}.", "The current thread might already be in any request scope and in that case the scope will be changed to the scope defined by the {@link RequestScope.Context context}."]}
{"SampleId": 2891684, "Origin": "and \"..\" in file names.", "Reference": "and \"..\" in {@link File} names.", "LLMCandidates": ["Gets the parent file of a given File object by walking up the directory structure. If the File represents a directory containing \"..\" in its name, it will skip that directory and continue walking up until it reaches the root directory or a non-directory file. Returns null if the given File is null or does not exist.", "Finds the parent file of a given File, skipping over the number of directory levels specified by \"..\" in file names.", "Retrieve parent File of the given file and handle \".\" and \"..\" in file names.", "Get the parent file of a given file by skipping any \"..\" entries.", "Return the parent file of the given file, skipping any number of \"..\" entries."]}
{"SampleId": 2616150, "Origin": "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Vector2} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()} and sets the values using {@code set(x, y)} instead.", "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}, and sets the instance's x and y values with the parsed float values.", "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}. If successful, returns a new instance with the parsed values. Otherwise, throws a {@link GdxRuntimeException}.", "Parses the {@code Vector2} represented by the given string according to the format of {@link #set(float, float)}.", "Parses the {@code Vector2} represented by the given string according to the format of {@link #toString()}, and sets the values using {@link #set(float, float)}."]}
{"SampleId": 4624426, "Origin": "Returns the function annotations.", "Reference": "Returns the function body expression.", "LLMCandidates": ["Returns the function body.", "Returns the function body.", "Returns the function body.", "Returns the function body.", "Returns the function body."]}
{"SampleId": 5360172, "Origin": "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type.", "Reference": "Configure an {@link RSocketOutboundGateway.Command} for the RSocket request type.", "LLMCandidates": ["Configure a {@link RSocketOutboundGateway.Command} for RSocket request type (deprecated).", "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type. This method is deprecated in favor of the interactionModel method.", "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type. This method is deprecated and should not be used. Use the interactionModel() method instead.", "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type. This method is now deprecated and use the interactionModel() method instead.", "Configure a {@link RSocketOutboundGateway.Command} for RSocket request type. This method is now deprecated in favor of the interactionModel() method."]}
{"SampleId": 1630674, "Origin": "Inserts a {@link Set} to the {@link Dataset}", "Reference": "Inserts a {@code Set} to the {@link Dataset}.", "LLMCandidates": ["Inserts a {@link Set} of {@link DatasetEntry}s to the {@link Dataset}, and returns the count of inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry<E, A, V>} to the {@link Dataset}, returning the count of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry}s to the {@link Dataset}, and returns the count of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry}s to the {@link Dataset}, and returns the count of successfully inserted entries.", "Inserts a {@link Set} of {@link DatasetEntry}s to the {@link Dataset}, and returns the count of successfully inserted entries."]}
{"SampleId": 402253, "Origin": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceDisplayName}", "Reference": "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName}", "LLMCandidates": ["Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName", "Handles: POST /clusters/{clusterName}/servicegroups/{serviceGroupName}/services/{serviceName"]}
{"SampleId": 242261, "Origin": "Then log4j invokes the {@link #setAppenderName(String)}\nmethod to set the value of {@link #mAppenderName}.", "Reference": "Then log4j invokes the {@link #setProcessType(String)}\nmethod to set the value of {@link #mProcessType}.", "LLMCandidates": ["Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}.", "Then log4j invokes the {@link #setProcessType(String)} method to set the value of {@link #mProcessType}."]}
{"SampleId": 6047022, "Origin": "Returns the status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.", "Reference": "Returns the status with the primary key or throws a {@link NoSuchStatusException} if it could not be found.", "LLMCandidates": ["Returns the Status with the primary key or throws a com.liferay.chat.NoSuchStatusException if it could not be found.", "Returns the Status with the primary key or throws a com.liferay.chat.NoSuchStatusException if it could not be found.", "Returns the Status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found.", "Returns the Status with the primary key or throws a com.liferay.chat.NoSuchStatusException if it could not be found.", "Returns the Status with the primary key or throws a {@link com.liferay.chat.NoSuchStatusException} if it could not be found."]}
{"SampleId": 4388500, "Origin": "IMPORTANT: After you create a DB parameter group, you should\nwait at least 5 minutes before creating your first DB instance that\nuses that DB parameter group as the default parameter group.", "Reference": "After you create a DB parameter group, you should wait at least 5 minutes\nbefore creating your first DB instance that uses that DB parameter group\nas the default parameter group.", "LLMCandidates": ["IMPORTANT: After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "IMPORTANT: After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "IMPORTANT: After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "IMPORTANT: After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group.", "IMPORTANT: After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group."]}
{"SampleId": 2484703, "Origin": "Sets the state attribute of this User to\nstate", "Reference": "Sets the state attribute of this User's element to\nstate", "LLMCandidates": ["Sets the state attribute of this UserElement to state", "Sets the state attribute of this UserElement to state", "Sets the state attribute of this UserElement to state", "Sets the state attribute of this UserElement to state.", "Sets the state attribute of this UserElement to state."]}
{"SampleId": 3084770, "Origin": "This call returns true in the interpreter or a low tier compilation that does profiling.", "Reference": "This call returns true in the interpreter or a low grade compilation that does profiling.", "LLMCandidates": ["This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling.", "This call returns true in the interpreter or a low grade compilation that does profiling."]}
{"SampleId": 4117768, "Origin": "Returns the InetAddress associated with the client who created/is interacting with this Subject.", "Reference": "Returns the host name or IP associated with the client who created/is interacting with this Subject.", "LLMCandidates": ["Returns the host associated with the client who created/is interacting with this Subject.", "Returns the host associated with the client who created/is interacting with this Subject.", "Returns the host associated with the client who created/is interacting with this Subject.", "Returns the host associated with the client who created/is interacting with this Subject.", "Returns the host associated with the client who created/is interacting with this Subject."]}
{"SampleId": 4479674, "Origin": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHTTPHeaders, Map, BlobAccessConditions)}", "Reference": "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)}", "LLMCandidates": ["Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)", "Code snippet for {@link AppendBlobAsyncClient#createWithResponse(BlobHttpHeaders, Map, BlobAccessConditions)"]}
{"SampleId": 5600561, "Origin": "class|delay|cron", "Reference": "class|intervalSchedule|cron", "LLMCandidates": ["class|delay|task\n\n\"class|delay|cron\" has been updated to \"class|delay|task\". \nThe variable name in the method signature has also been changed from \"PAT_CREATE_SCHEDULE\" to \"PAT_CREATE_TASK\".", "class|delay|task\n\n\n\nPlease make sure to keep all the code in your question intact while asking a question about it. For example, you may ask a follow-up question like \"Why does this line return `null`?\", or \"What will be the output of this program?\". This way we can ensure that our answers are relevant and accurate. Also, please consider marking the best answer as accepted, so that others know which solution was most helpful to you.", "Finds a match for creating a task schedule using the given statement and returns a Matcher object. This method replaces the previous version that searched for creating a schedule. The regular expression pattern PAT_CREATE_TASK is used to match the statement against the specified pattern.", "class|delay|cron", "class|delay|task"]}
{"SampleId": 3083932, "Origin": "The returned context supplier is intended to be cached in the currently adopted\nAST.", "Reference": "The returned context reference is intended to be cached in the currently adopted\nAST.", "LLMCandidates": ["The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST.", "The returned context reference is intended to be cached in the currently adopted AST."]}
{"SampleId": 291294, "Origin": "Converts short duration string (HH:MM) to milliseconds.", "Reference": "Converts short duration string (XX:YY) to milliseconds.", "LLMCandidates": ["Converts short duration string (HH:MM) to milliseconds, considering the input is either minutes or hours and applying the corresponding modifier when converting to milliseconds.", "Converts short duration string (HH:MM) to milliseconds, considering if the input is in hours or not.", "Converts short duration string (HH:MM) to milliseconds, taking into account if duration is in hours or not.", "Converts short duration string (HH:MM) to milliseconds, considering if the input is in hours or not.", "Converts short duration string (HH:MM) to milliseconds, considering if the input is in hours or not."]}
{"SampleId": 5927587, "Origin": "Returns a new fresh folder with the given name under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given path under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder with the specified name under the temporary directory. If the folder name is absolute, an IOException will be thrown. If a folder with the same name already exists, an IOException will be thrown. Otherwise, it returns the newly created File object representing the folder.", "Returns a new fresh folder with the given relative path under the temporary root folder. If the folder already exists, throws an IOException with an error message.", "Creates a new folder with the specified name under the temporary folder. If the folder name is absolute, an IOException will be thrown. If a folder with the same name already exists, an IOException will be thrown as well. Otherwise, it returns the newly created File object.", "Returns a new fresh folder with the given relative path under the temporary folder. If an absolute path is provided, an IOException will be thrown. If a folder with the given name already exists, an IOException will be thrown.", "Returns a new fresh folder with the given relative path under the temporary root folder. If an absolute path is provided, an IOException will be thrown. If a folder with the given name already exists, an IOException will be thrown."]}
{"SampleId": 5319337, "Origin": "Adds a new CONSTANT_Double_info to the constant pool of this symbol table.", "Reference": "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol\ntable.", "LLMCandidates": ["Adds a new CONSTANT_Integer or CONSTANT_Float info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer or CONSTANT_Float to the constant pool of this symbol table.", "Adds a new CONSTANT_Integer_info or CONSTANT_Float_info to the constant pool of this symbol table."]}
{"SampleId": 5447625, "Origin": "timed invokeAll(empty collection) returns empty collection", "Reference": "timed invokeAll(empty collection) returns empty list", "LLMCandidates": ["Timed invokeAll with empty collection returns an empty list", "timed invokeAll(empty collection) returns an empty collection", "timed invokeAll(empty collection) returns an empty collection", "Invokes all callables with an empty collection within a specified timeout and returns a list of futures. The list is expected to be empty.", "Timed invokeAll with empty collection returns an empty list of Futures"]}
{"SampleId": 2337267, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user (singular, not 'info')", "Created by user", "Created by user", "Created by user", "Created by user"]}
{"SampleId": 2337065, "Origin": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.", "Reference": "### Effects: If `brandingServerBrandingId` is set, `brandingServerCustomer` is **NOT** supplied.", "LLMCandidates": ["If `brandingServerBrandingId` is set, the response does not contain `brandingServerCustomer`.", "Returns the BrandingServerInfo object that represents the branding server information for the currently authenticated user. The method is deprecated and will be removed in future versions. Use getBrandingServerInfoWithHttpInfo() instead, and extract the data from the response object returned.", "If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.", "If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied.", "Retrieves the branding server information. If `brandingServerBrandingId` is set, `brandingServerCustomer` is not supplied."]}
{"SampleId": 2544551, "Origin": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniond)}.", "Reference": "In order to set the matrix to a rotation transformation without post-multiplying,\nuse {@link #rotation(Quaterniondc)}.", "LLMCandidates": ["In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)} if the element type is double.", "In order to set the matrix to a rotation transformation without post-multiplying, use {@link #rotation(Quaterniondc)}."]}
{"SampleId": 1574727, "Origin": "When translated into a QueryTerm object, search terms\ncontaining an operator have the operator removed from the string representation.", "Reference": "When translated into a QueryTerm object, search terms\ncontaining a qualifying operator have the operator removed from the string representation.", "LLMCandidates": ["Converts a string query into a list of QueryTerm objects by splitting the input query using whitespace and removing empty strings or white spaces.", "Converts a comma-separated list of query terms into a list of QueryTerm objects by parsing each term and removing any operators from its string representation.", "When translated into a QueryTerm object, search terms containing an operator have the operator removed from the string representation.", "Parses a query string into a list of QueryTerm objects after removing any operators from individual search terms.", "Parses a query string into a list of QueryTerm objects after removing any operators from individual search terms."]}
{"SampleId": 4962979, "Origin": "This method is currently only used for root-level serializer\nhandling to allow for simpler caching.", "Reference": "This method is mostly used for root-level serializer\nhandling to allow for simpler caching.", "LLMCandidates": ["This method is used for serializer handling and allows for simpler caching.", "Finds a typed value serializer for the given type, considering local non-shared cache and shared map before composing from pieces if necessary, and caches it if specified.", "This method is currently used for root-level serializer handling to allow for simpler caching.", "This method is used for finding a typed value serializer by searching for it first in local non-shared cache and then in shared map. If not found, it composes the serializer from pieces and caches it if necessary.", "This method is currently used for root-level serializer handling to allow for simpler caching."]}
{"SampleId": 2891318, "Origin": "Appends BCC address.", "Reference": "Appends CC address.", "LLMCandidates": ["Appends CC address.", "Appends CC address.", "Appends CC address.", "Appends CC address.", "Appends CC address."]}
{"SampleId": 3758384, "Origin": "Look for contract stored by given slot contract id.", "Reference": "Look for the contract stored using the given slot contract id.", "LLMCandidates": ["Query a contract stored by the given slot and contract id.", "Query a contract stored by given slot ID and contract ID.", "Look for contract stored by given slot, origin, and contract id.", "Look for contract stored by given slot, origin, and contract id.", "Query a contract by given slot and contract id."]}
{"SampleId": 4237630, "Origin": "Sets the {@link IClassCache} for the given application.", "Reference": "Sets the {@link IGetAndSetLocator} for the given application.", "LLMCandidates": ["Sets the {@link IClassCache} for the given application if it's not null; otherwise, sets it for {@link PropertyResolver}. Deprecated since this functionality is now handled by other classes and methods.", "Sets the {@link IClassCache} for the given application if it is not null; otherwise sets it for the {@link PropertyResolver} class. Deprecated since v2019.06.27. Use {@link #setGetAndSetLocator(Application, IGetAndSetLocator)} instead.", "Sets the {@link IClassCache} for the given application or PropertyResolver class if the application is null. The method now also uses a getAndSetLocator to locate and cache the getters and setters of classes in the IClassCache.", "Sets the IClassCache for the given application by using a get and set locator. If the application is null, sets it for PropertyResolver.class instead.", "Sets the {@link IClassCache} for the given application by using a default getter and setter locator. The method deprecated since it is no longer used."]}
{"SampleId": 236986, "Origin": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFileOptions)} method to\ncomplete successfully.", "Reference": "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to\ncomplete successfully.", "LLMCandidates": ["Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully.", "Tests for the {@link BaseFileSystem#openFile(AlluxioURI, OpenFilePOptions)} method to complete successfully."]}
{"SampleId": 3576038, "Origin": "If there is any regular output or error\noutput, it is appended to the given s.", "Reference": "If there is any regular output or error\noutput, it is appended to the given {@code StringBuilder}s.", "LLMCandidates": ["Execute a shell command and retrieve its output or error lines, if any, appending them to the specified StringBuilder objects.", "Appends the regular output or error output to the given StringBuilder objects.", "Appends the regular output or error output to the given StringBuilder objects.", "Executes a shell command and appends its output or error output to the given StringBuilder objects if specified.", "Executes a shell command with given command array and appends any regular output or error output to the specified StringBuilder objects."]}
{"SampleId": 2048820, "Origin": "Calls {@link #discardToEnd()} and releases any held DRM resources.", "Reference": "Calls {@link #discardToEnd()} and releases any owned {@link DrmSession} references.", "LLMCandidates": ["Calls {@link #discardToEnd()} and releases any held DRM resources. Additionally, it releases DRM session references from the metadataQueue.", "Calls {@link #discardToEnd()} and releases any held DRM resources. Additionally, releases DRM session references from the metadata queue.", "Calls {@link #discardToEnd()} and releases any held DRM resources by calling {@link #metadataQueue} method {@link MetadataQueue#releaseDrmSessionReferences()}.", "Calls {@link #discardToEnd()} and releases any held DRM resources.", "Calls {@link #discardToEnd()} and releases any held DRM resources. After this method call, the metadata queue's DRM session references are released."]}
{"SampleId": 2913862, "Origin": "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations and 1% of the observation are above that level.", "Reference": "This is measured from the bottom, that is, Thus the quantile estimation with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level.", "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level.", "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observations are above that level.", "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level.", "This is measured from the bottom, that is, the quantile estimation with the level 99% corresponds to the smallest 99% observations and 1% of the observation are above that level."]}
{"SampleId": 339673, "Origin": "Add a Content {@link Uri} to observe", "Reference": "Adds a content {@link Uri} for system observation", "LLMCandidates": ["Add a Content {@link Uri} to observe with option to trigger for descendants.", "Add a Content {@link Uri} to observe with optional flag for triggering descendants.", "Add a Content {@link Uri} to observe with optional flag for triggering descendants.", "Add a Content {@link Uri} to observe, enabling it to trigger for descendants if specified.", "Add a Content {@link Uri} to observe in the library group."]}
{"SampleId": 367563, "Origin": "Preference summary should be the activated device name", "Reference": "Preference summary should be device's name", "LLMCandidates": ["Preference summary should be the active Bluetooth device name", "Verifies that when there is an active Bluetooth A2DP device connected, the Preference's summary should be set to the name of the active device.", "Preference summary should be the active Bluetooth device's name", "Preference summary should be the active Bluetooth device's name", "Preference summary should be the active Bluetooth device's name when there is at least one active Bluetooth device."]}
{"SampleId": 3467627, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}."]}
{"SampleId": 528022, "Origin": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync).", "Reference": "Differs from the above because it can be used on any file, rather than only\nmanaged commit log segments (and thus cannot call waitForFinalSync), and in\nthe treatment of failures.", "LLMCandidates": ["Diffs from above because it can be used on any file, rather than only managed commit log segments (and thus cannot call waitForFinalSync).", "Adds archive operation for a file, regardless of whether it is managed commit log segment or not.", "Adds archive operation for a file, regardless of whether it is managed commit log segment or not.", "Sets the initial value by adding 8 to n. This method can be used on any file and cannot call waitForFinalSync. It is different from the above because it can handle any file instead of just managed commit log segments.", "Attempts to archive a file with the given path and name, if the archive command is not empty. This method can be used on any file, rather than only managed commit log segments (and thus cannot call waitForFinalSync). The implementation now uses a try-catch block to handle potential IOException exceptions during the archiving process, logging a warning message when failure occurs."]}
{"SampleId": 5630798, "Origin": "Gets the description.", "Reference": "Gets the code.", "LLMCandidates": ["Gets the code.", "Gets the code.", "Gets the code.", "Gets the code.", "Gets the code."]}
{"SampleId": 1136150, "Origin": "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Reference": "Result is returned them in sorted order (most recent 1st)", "LLMCandidates": ["Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st), considering a TreeMap but not using it due to log(N) for grabbing the most recent.", "Parses the timestamp from the collection list and returns them in reverse sorted order (most recent 1st)."]}
{"SampleId": 3574164, "Origin": "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Reference": "Does a simple HEAD request to a configuration endpoint to check if it's reachable.", "LLMCandidates": ["Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an", "Does a simple HEAD request to the server's /health endpoint to check if it's reachable If not an"]}
{"SampleId": 4475929, "Origin": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, AppendBlobRequestConditions,", "Reference": "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions,", "LLMCandidates": ["Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)", "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)", "AppendBlock2 appends data to an Append Blob, calculating the MD5 hash of the input data before sending it to Azure Storage. It sets the append position and maximum size for the blob, and returns the committed block count for the operation.\n\nCode snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)", "Append block operation for AppendBlobClient using input stream data, length, MD5 hash of data, AppendBlobRequestConditions, timeout and Context.", "Code snippet for {@link AppendBlobClient#appendBlockWithResponse(InputStream, long, byte[], AppendBlobRequestConditions, Duration, Context)"]}
{"SampleId": 2395154, "Origin": "Returns true if the class has the specified annotation class.", "Reference": "Returns true if the class has the specified annotation type.", "LLMCandidates": ["Returns true if the class has the specified annotation type class.", "Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation type.", "Returns true if the class has the specified annotation class."]}
{"SampleId": 2911558, "Origin": "A typical use case would be to convert index names to curve names valid for an underlying system.", "Reference": "A typical use case would be to convert parameter metadata tenors to be valid for an underlying system.", "LLMCandidates": ["Updates the parameter metadata for all sensitivities with a given function.", "Returns a new instance of CurveSensitivities with updated ParameterMetadatas for each sensitivity using the provided Function.", "A typical use case would be to convert index parameter metadatas to curve parameter metadatas valid for an underlying system.", "Modifies the parameter metadatas of a CurveSensitivities object using a function that maps from List<ParameterMetadata> to List<ParameterMetadata>.", "Applies the given function to update the parameter metadata of each CurrencyParameterSensitivity object in typedSensitivities map and returns a new CurveSensitivities instance with updated parameter metadata."]}
{"SampleId": 2111867, "Origin": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module or within the default imports.", "Reference": "There are cases where a type is seen as unresolved but can be found\namongst the imports of the module.", "LLMCandidates": ["There are cases where a type is seen as unresolved but can be found amongst the imports of the module or within the default imports.", "There are cases where a type is seen as unresolved but can be found amongst the imports of the module or within the default imports.", "Checks each missing type against the module's single-type and on-demand imports, as well as default imports. Removes the type if found among the imports or within the default imports.", "There are cases where a type is seen as unresolved but can be found among the imports of the module or within the default imports.", "There are cases where a type is seen as unresolved but can be found amongst the imports of the module or within the default imports."]}
{"SampleId": 5455011, "Origin": "Checks a name to ensure that it's a legal type name.", "Reference": "Checks a name to ensure that it's a legal qualified class name.", "LLMCandidates": ["Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name.", "Checks a name to ensure that it's a legal qualified class name."]}
{"SampleId": 1348848, "Origin": "Returns the log compactor.", "Reference": "Returns the log writer.", "LLMCandidates": ["Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer.", "Returns the log writer."]}
{"SampleId": 5631506, "Origin": "This property is not returned if the dialog node has no parent.", "Reference": "This property is omitted if the dialog node has no parent.", "LLMCandidates": ["This property is not returned if the dialog node has no parent.", "This property is not returned if the dialog node has no parent.", "This property is not returned if the dialog node has no parent.", "This property is not returned if the dialog node has no parent.", "This property is not returned if the dialog node has no parent."]}
{"SampleId": 3847346, "Origin": "Parses {@link SparseVector} from the given Matrix Market string.", "Reference": "Parses {@link SparseVector} from the given Matrix Market.", "LLMCandidates": ["Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream.", "Parses {@link SparseVector} from the given Matrix Market input stream."]}
{"SampleId": 4479574, "Origin": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHTTPHeaders)}", "Reference": "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)}", "LLMCandidates": ["Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)", "Code snippets for {@link BlobAsyncClient#setHTTPHeaders(BlobHttpHeaders)"]}
{"SampleId": 5841626, "Origin": "Get the gradle paths for the given list of modules and all the tested projects (if it is a test app).", "Reference": "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "LLMCandidates": ["Get the gradle paths for the given module and all the tested projects (if it is a test app).", "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "Get the gradle paths for the given module and all the tested projects (if it is a test app).", "Get the gradle paths for the given module and all the tested projects (if it is a test app)."]}
{"SampleId": 5176845, "Origin": "Getter for {@link #exposeHeaders}", "Reference": "Getter for {@link #allowHeaders}", "LLMCandidates": ["Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders", "Getter for {@link #allowHeaders"]}
{"SampleId": 4237183, "Origin": "Creates a {@link Behavior} that uses the given {@link WicketConsumer consumer}\nto do something with the component's tag.", "Reference": "Creates a {@link Behavior} that uses the given {@code SerializableConsumer consumer} to do\nsomething with the component's tag.", "LLMCandidates": ["Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} of type {@link ComponentTag} to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer}\nto do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} of type {@link ComponentTag} to do something with the component's tag.", "Creates a {@link Behavior} that uses the given {@link SerializableConsumer consumer} of type {@code SerializableConsumer<ComponentTag>} to do something with the component's tag."]}
{"SampleId": 3964812, "Origin": "Accumulate secondarys into a LinkedListX (extended Persistent List) and Right with the supplied combiner function", "Reference": "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function", "LLMCandidates": ["Accumulate secondarys into a LazySeq (extended Lazy List) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy List) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Lazy List) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended Persistent List) and Right with the supplied combiner function", "Accumulate secondarys into a LazySeq (extended LazyList) and Right with the supplied combiner function"]}
{"SampleId": 2872597, "Origin": "Retrieves the position in the list corresponding to itemId.", "Reference": "Retrieves the position in the list corresponding to itemId, subtracting any header views.", "LLMCandidates": ["Retrieves the position in the list corresponding to itemId, considering the header views count.", "Retrieves the position in the list corresponding to itemId, and subtracts the number of header views.", "Retrieves the position in the list corresponding to itemId, considering the header views count.", "Retrieves the position in the list corresponding to itemId, considering the header views count.", "Retrieves the position in the list corresponding to itemId, considering the header views count."]}
{"SampleId": 2624224, "Origin": "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "Reference": "Configures SSL or TLS of the {@link Server} from the specified {@code keyCertChainFile}\nand cleartext {@code keyFile}.", "LLMCandidates": ["Configures SSL or TLS of the virtual {@link VirtualHostTemplate} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the default {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}.", "Configures SSL or TLS of the current {@link VirtualHost} from the specified {@code keyCertChainFile} and cleartext {@code keyFile}."]}
{"SampleId": 2337239, "Origin": "Phone Number", "Reference": "Phone number", "LLMCandidates": ["Phone number", "Phone number", "Phone number", "Phone number", "Phone number"]}
{"SampleId": 3991730, "Origin": "Set the number of expected records for this task.", "Reference": "Set the number of expected records for this connector.", "LLMCandidates": ["Set the number of expected records for this task.", "Set the number of expected records for this task.", "Set the number of expected records for this task.", "Set the number of expected records for this task.", "Set the number of expected records for this task."]}
{"SampleId": 2134050, "Origin": "predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["predict the rating given a sparse appender vector for a specific user and item.", "predict the rating given a sparse appender vector for a specific user and item.", "predict the rating given a sparse vector for a specific user and item", "predict the rating given a sparse appender vector for a specific user and item", "predict the rating given a sparse appender vector for a specific user and item"]}
{"SampleId": 3760874, "Origin": "Each of the available players is passed the provided information\nand the first that reports it is compatible will be returned.", "Reference": "Each of the available {@link Player} instances are\npassed the provided information and the first that reports that it is\ncompatible will be returned.", "LLMCandidates": ["Each of the available players is passed the provided information and the first that reports it is compatible or not will be returned.", "Each of the available players is passed the provided information and the first that reports it is compatible will be returned.", "Each of the available players is passed the provided information and the first that reports it is compatible will be returned.", "Each of the available players is passed the provided information and the first that reports it is compatible will be returned. If no player is compatible or available, null will be returned.", "Each of the available players is passed the provided information and the first that reports it is enabled and compatible will be returned."]}
{"SampleId": 617914, "Origin": "Adding fields to a POJO as operator state should require a state migration.", "Reference": "Adding fields to a POJO as operator state should succeed.", "LLMCandidates": ["Adding fields to a POJO as operator state should result in a state migration.", "Adding fields to a POJO as operator state should require a state migration.", "Testing whether adding fields to a POJO as operator state requires a state migration by calling testPojoSerializerUpgrade(SOURCE_A, SOURCE_D, true, false).", "Adding fields with operator state requires a state migration when upgrading a POJO serializer.", "Testing that adding fields to a POJO as operator state triggers a state migration exception."]}
{"SampleId": 5630039, "Origin": "Sets the sensitivity.", "Reference": "Set the sensitivity.", "LLMCandidates": ["Sets the sensitivity for the Builder.", "Sets the sensitivity for this Builder instance.", "Sets the sensitivity for this Builder instance.", "Sets the sensitivity in Builder pattern.", "Sets the sensitivity in Builder pattern."]}
{"SampleId": 340617, "Origin": "Requests that the player prefetch a media item with the media id for playback.", "Reference": "Requests that the player prepare a media item with the media id for playback.", "LLMCandidates": ["Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback.", "Requests that the player prepare a media item with the media id for playback."]}
{"SampleId": 4476666, "Origin": "Creates a new block blob, or updates the content of an existing block blob.", "Reference": "Creates a new block blob.", "LLMCandidates": ["Creates a new block blob, or updates the content of an existing block blob.", "Creates a new block blob, or updates the content of an existing block blob with parallel transfer option disabled by default.", "Creates a new block blob, or updates the content of an existing block blob using parallel transfer options.", "Creates a new block blob, or updates the content of an existing block blob using parallel transfer options.", "Creates a new block blob, or updates the content of an existing block blob using parallel transfer with options."]}
{"SampleId": 4479525, "Origin": "Get the etag property: The etag property.", "Reference": "Get the eTag property: The eTag property.", "LLMCandidates": ["Get the ETag property: The ETag property.", "Get the ETag property: The ETag property.", "Get the ETag property: The ETag property.", "Get the ETag property: The ETag property.", "Get the ETag property: The ETag property."]}
{"SampleId": 2484852, "Origin": "Causes  to have its \nmethod called in the event dispatch thread with low priority.", "Reference": "Causes runnable to have its run method called in the\nevent dispatch thread with low priority.", "LLMCandidates": ["Causes the passed Runnable to have its method called in the event dispatch thread with low priority.", "Causes  to have its runnable method called in the event dispatch thread with low priority.", "Causes  to have its  method called in the event dispatch thread with low priority.", "Causes  to have its  method called in the event dispatch thread with low priority.", "Causes to have its method called in the event dispatch thread with low priority."]}
{"SampleId": 4903008, "Origin": "Checks if the deletion policy can release some index commits with the latest global checkpoint.", "Reference": "Checks if the deletion policy can delete some index commits with the latest global checkpoint.", "LLMCandidates": ["Checks if there are any unreferenced commits that can be cleaned up with the current global checkpoint.", "Checks if all index commits are referenced by the global checkpoint. Returns true if there are no unreferenced index commits.", "Checks if there are any unreferenced commits that can be cleaned up with the current global checkpoint.", "Checks if all index commits up to the next safe commit are referenced by the current global checkpoint.", "Checks if all index commits up to the next safe commit have been referenced by the global checkpoint."]}
{"SampleId": 617915, "Origin": "Removing fields from a POJO as keyed state should require a state migration.", "Reference": "Removing fields from a POJO as keyed state should succeed.", "LLMCandidates": ["Removing fields from a POJO as keyed state should require a state migration.", "Removing fields from a POJO as keyed state should require a state migration.", "Removing fields from a POJO as keyed state should require a state migration. This test verifies that removing fields will trigger a state migration exception.", "Removing fields from a POJO as keyed state should require a state migration.", "Removing fields from a POJO as keyed state should require a state migration."]}
{"SampleId": 5845110, "Origin": "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources\njust like the app does.", "Reference": "When a layout is rendered in the layout editor, it is getting resources from the app resource repository: it should see all\nthe resources just like the app does.", "LLMCandidates": ["When a layout is rendered in the layout, it should see all the resources just like the app does.", "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources just like the app does.", "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources just like the app does.", "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources just like the app does.", "When a layout is rendered in the layout, it is fetching resources from the app resource repository: it should see all the resources just like the app does."]}
{"SampleId": 6034464, "Origin": "Enables initial {@literal PING} barrier before any connection is usable.", "Reference": "Returns the {@link ProtocolVersion} to use.", "LLMCandidates": ["Returns the current protocol version being used by this client.", "Returns the current protocol version used by this client.", "Returns the current protocol version used by this client.", "Returns the current protocol version of the connection.", "Returns the current protocol version of the connection."]}
{"SampleId": 3242213, "Origin": "Get the content of this element.", "Reference": "Gets the value of the content property.", "LLMCandidates": ["Get the content of this element.", "Get the content of this element.", "Get the content of this element.", "Get the content of this element.", "Get the content of this element."]}
{"SampleId": 2535872, "Origin": "Extract the values of given field or property from the array's elements under test into a new array, this new array\nbecoming the array under test.", "Reference": "Extract the values of given field or property from the array's elements under test into a new list, this new list\nbecoming the object under test.", "LLMCandidates": ["Extract the values of given field or property from the array's elements under test into a new list, this list\nbecoming the array under test.", "Extracts the values of the given field or property from the array's elements under test into a new list, this list becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new list, this list becoming the array under test.", "Extract the values of given field or property from the array's elements under test into a new list, this new list becoming the list under test.", "Extract the values of given field or property from the array's elements under test into a new abstract list, this new abstract list becoming the list under test."]}
{"SampleId": 671354, "Origin": "Converts a JSON document into a PdxInstance", "Reference": "Converts a Byte Array JSON document into a PdxInstance", "LLMCandidates": ["Converts a JSON document into a PdxInstance with optional identityFields parameter.", "Converts a JSON document into a PdxInstance, using additional identityFields parameter to customize the conversion process", "Converts a JSON document into a PdxInstance with specified identity fields", "Converts a JSON document into a PdxInstance with specified identity fields", "Converts a JSON document into a PdxInstance with optional identityFields parameter(s)."]}
{"SampleId": 3512219, "Origin": "Gets the current {@link Art} value represented by this {@link Painting}.", "Reference": "Gets the current {@link ArtType} value represented by this {@link Painting}.", "LLMCandidates": ["Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}.", "Gets the current {@link ArtType} value represented by this {@link Painting}."]}
{"SampleId": 3894604, "Origin": "In error message, exclude {@code @rultor} from list of commanders (REF).", "Reference": "QnAskedBy can exclude {@code @rultor} from list of commanders (REF).", "LLMCandidates": ["Checks if {@code @rultor} is excluded from list of authorized commanders for a Github issue comment.", "Tests if a Github issue comment excludes {@code @rultor} from the list of authorized commanders.", "In error message, exclude {@code rultor} from list of commanders.", "Test that a Github comment excludes {@code @rultor} from list of authorized commanders.", "Test that a Github comment excludes {@code @rultor} from list of authorized commanders."]}
{"SampleId": 1843359, "Origin": "WebElement#getText()} equals to provided {@code expectedText}.", "Reference": "WebElement#getText()} equals to provided {@code expected} one.", "LLMCandidates": ["Waits until the text of the specified WebElement is equal to the provided expected text within the given timeout. If the timeout elapses or the text differs from the expected one, an assertion error will be thrown with the actual and expected values displayed.", "Wait for the text of WebElement to be equal to provided expected string.", "Waits for the text of the WebElement to be equal to the provided expected text, with a timeout and an error message.", "Waits for the text of the WebElement to be equal to the provided expected text, with a timeout and an error message.", "Wait until the text of the given WebElement equals to provided expectedText, and report a formatted difference message if not."]}
{"SampleId": 2700102, "Origin": "Set UPC/EAN.", "Reference": "Set CU-UPC.", "LLMCandidates": ["Set UPC/EAN at client level.", "Set UPC/EAN_CU.", "Set UPC/EAN_CU.", "Set UPC/EAN for Custom Unit.", "Set UPC/EAN for Custom Unit."]}
{"SampleId": 4396695, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted where applicable."]}
{"SampleId": 4236719, "Origin": "WARNING: Read the javadoc of {@link Component#canCallListenerInterface()} for important\nsecurity-related information.", "Reference": "WARNING: Read the javadoc of {@link Component#canCallListener()} for important\nsecurity-related information.", "LLMCandidates": ["WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information.", "WARNING: Read the javadoc of {@link Component#canCallListener()} for important security-related information."]}
{"SampleId": 2916154, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "The updated method calculates the PV01 for a ResolvedSwapLeg by iterating over its payment periods and summing up the PV01s calculated by the paymentPeriodPricer for each period with the given RatesProvider. They must not be of type {@link SwapPaymentPeriod}.", "Calculates the PV01 of a ResolvedSwapLeg by summing the PV01 values of each payment period, taking into account only SwapPaymentPeriods."]}
{"SampleId": 4396563, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging; sensitive data is now redacted.", "Returns a string representation of this object; useful for testing and debugging, but sensitive data is redacted with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive variables redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted."]}
{"SampleId": 3771649, "Origin": "Checks whether caption and description are interpreted as html or plain\ntext.", "Reference": "Checks whether caption and description are interpreted as HTML or plain\ntext.", "LLMCandidates": ["Checks whether caption and description are interpreted as html or plain text based on the current state.", "Checks whether caption and description are interpreted as html or plain text based on the state of the object.", "Checks whether caption and description are interpreted as html or plain text based on the current state.", "Checks whether caption and description are interpreted as html or plain text based on the state.", "Checks whether caption and description are interpreted as html or plain text based on the state."]}
{"SampleId": 278863, "Origin": "Determines if this BeaconManager instance is part of the process hosting the beacon scanning\nservice.", "Reference": "Determines if this BeaconManager instance is not part of the process hosting the beacon scanning\nservice.", "LLMCandidates": ["Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process hosting the beacon scanning service.", "Determines if this BeaconManager instance is part of a different process from the one hosting the beacon scanning service."]}
{"SampleId": 5873660, "Origin": "The domain portion of the ObjectName in the query if useObjDomain is set to true\n3. else, the Class Name of the MBean.", "Reference": "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true\n3. else, the Class Name of the MBean.", "LLMCandidates": ["The MBean identifier portion of the ObjectName in the query if useObjDomainAsKey is set to true, else the Class Name of the MBean.", "Adds the MBean identifier to the query's ObjectName. If useObjDomainAsKey is true, uses the object domain or class name based on allowDottedKeys flag. Otherwise, uses the class name.", "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true; else, the Class Name of the MBean.", "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true; else, the Class Name of the MBean.", "The domain portion of the ObjectName in the query if useObjDomainAsKey is set to true, otherwise, the Class Name of the MBean."]}
{"SampleId": 5762169, "Origin": "Forget all entries that match the scheme+host+port of the given key, so\nthat they can be crawled again if discovered again.", "Reference": "Forget all entries that match the scheme+host+port of the given url, so\nthat they can be crawled again if discovered again.", "LLMCandidates": ["Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again.", "Forget all entries that match the scheme+authority of the given URL, so that they can be crawled again if discovered again."]}
{"SampleId": 5640433, "Origin": "Keys and values are separated by {@value #SEPARATOR}.", "Reference": "Keys and values are separated by {@value #KEY_VALUE_SEPARATOR}.", "LLMCandidates": ["Parses the provided filters using the {@code parseFilters} method and processes each filter by calling the {@code processFilter} method with its key-value pair.", "Parses the input filters using the specified separator, then processes each filter's key and value separately.", "Parses the input filters using the specified separator, then processes each filter's key and value separately.", "Parses the provided filters by using a map to store each key and value pair, with keys and values separated by {@value #SEPARATOR}.", "Parses the given filters by separating keys and values using {@value #SEPARATOR}, then processes each filter pair in a loop."]}
{"SampleId": 3357863, "Origin": "Set the time a publication will linger in nanoseconds after being drained.", "Reference": "Set the time a network publication will linger in nanoseconds after being drained.", "LLMCandidates": ["Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained.", "Set the time a publication will linger in nanoseconds after being drained, using Long instead of Integer.", "Set the time a publication will linger in nanoseconds after being drained."]}
{"SampleId": 4474502, "Origin": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubDirectory#string}", "Reference": "{@codesnippet com.azure.storage.file.share.ShareDirectoryClient.createSubdirectory#string}", "LLMCandidates": ["Creates a new subdirectory within the share directory with the specified name using the given parameters and context.", "Creates a new subdirectory within the share directory and returns the client to access the newly created subdirectory.", "Creates a new subdirectory within the share directory and returns the client to access the newly created subdirectory.", "Create a subdirectory in the share directory with the given name.\n\nThe method takes the name of the subdirectory to be created and returns a ShareDirectoryClient object representing the newly created subdirectory.", "Creates a new subdirectory under an existing Share directory. The newly created subdirectory is returned as a ShareDirectoryClient object."]}
{"SampleId": 2337263, "Origin": "Created by user info", "Reference": "Created by user", "LLMCandidates": ["Created by user", "Created by user", "Created by user", "Created by user", "Created by user"]}
{"SampleId": 1578381, "Origin": "Retrieves the metadata for the specified {@link NamespacedEntityId}.", "Reference": "Retrieves the metadata for the specified {@link MetadataEntity}.", "LLMCandidates": ["Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}.", "Retrieves the metadata for the specified {@link MetadataEntity}."]}
{"SampleId": 4477036, "Origin": "BlobRange, ParallelTransferOptions, ReliableDownloadOptions, BlobRequestConditions, boolean)}", "Reference": "BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean)}", "LLMCandidates": ["Downloads a file from Azure Blob storage to the specified local file path. The method supports resumable downloads and retrying on failures. It takes a file path as input and returns a Publisher that completes when the download is finished. Optionally, you can specify a range of bytes to download, parallel transfer options, download retry options, blob request conditions, and indicate whether to return the response body in the result.", "Downloads a file from a Blob storage to a specified file on the local system using Azure Blob storage client. This method supports downloading a specific range of a blob or retrying the request upon failure by specifying appropriate options.\\n\\n@param file The path of the file to which the blob content will be downloaded. \\n@param range Optional, a BlobRange object representing the start and end byte positions to download from the blob. By default, it downloads the whole blob.\\n@param parallelTransferOptions Optional, a ParallelTransferOptions object controlling the concurrency of downloads.\\n@param downloadRetryOptions Optional, a DownloadRetryOptions object specifying how many times the request should be retried when errors occur during the transfer. By default, no retries are performed.\\n@param blobRequestConditions Optional, a BlobRequestConditions object that contains optional conditions that must be met before performing the operation. For example, if this value is not null and it specifies that an ETag condition must be satisfied but the server returns 412 (Precondition Failed), then the operation fails.\\n@param truncateRange Optional, a boolean indicating whether or not to truncate the file at the position specified by the range parameter before downloading. If true, the file is truncated; if false, the file isn't truncated and the request will fail if it attempts to write past the current end of the file.\\n@return A CompletableFuture that completes when the blob content has been fully downloaded. When completed, the response contains information about the status of the operation, such as the ETag value for the downloaded blob.", "BlobRange, ParallelTransferOptions, DownloadRetryOptions, BlobRequestConditions, boolean}\n\nThe downloadToFileWithResponse method allows you to download a blob to a specified file on disk while providing advanced options for parallelism and retries. It takes the following parameters:\n- String: The path of the file where the blob contents are stored.\n- BlobRange (optional): A specific range within the blob to be downloaded. By default, it downloads the entire blob.\n- ParallelTransferOptions (optional): Controls parallelism when downloading a blob. If not specified, the default settings are used.\n- DownloadRetryOptions (optional): Configures retry behavior when downloading the blob. If not specified, the default settings are used.\n- BlobRequestConditions (optional): Specifies conditions that must be met before the server can fulfill the request. If not specified, no conditions are applied.\n- boolean: Whether to overwrite the file if it already exists. If set to true, any existing content of the file will be replaced by the downloaded blob contents.", "Downloads a file from a blob using downloadToFileWithResponse and applies retry options for downloading. The method takes a file path as a parameter, an optional BlobRange specifying the range of bytes to download, nullable ParallelTransferOptions for transfer optimization, DownloadRetryOptions with maximum retry attempts, nullable BlobRequestConditions to apply conditions before sending the request, and a boolean value indicating whether the operation should be cancelled. Upon successful completion, it prints \"Completed download to file\".", "Downloads a file from the specified blob using the default block size and starts an asynchronous download operation with specified options. The method takes a file path, a range of bytes to read from the blob, optional parallel transfer options, download retry options, blob request conditions, and a flag indicating whether the response should include the downloaded content or not. Upon completion, it prints \"Completed download to file\"."]}
{"SampleId": 5270017, "Origin": "Request for graceful stop then blocks until process is stopped.", "Reference": "Request for quick stop then blocks until process is stopped.", "LLMCandidates": ["Request for hard stop then blocks until process is stopped.", "Request for hard stop then blocks until process is stopped.", "Requests for a hard stop then blocks until process is stopped.", "Requests for a hard stop then blocks until process is stopped.", "Requests for a forceful stop then blocks until process is stopped."]}
{"SampleId": 2384658, "Origin": "For now, just consume the message and throw it away.", "Reference": "Consume the message and save it.", "LLMCandidates": ["Reads a message from the super class and writes it to the instance's message buffer after formatting it appropriately.", "Consume the message and format it before setting it to the instance message.", "Reads the message and encodes it in UTF-8 before setting it as the message.", "Reads the message and encodes it in UTF-8 before setting it as the message.", "Reads the message from the input stream, processes it by removing leading dots and appending each line to a buffer, and then sets the processed message as the new value."]}
{"SampleId": 2887747, "Origin": "This signature is the one specified in the\nconstructor (see {@link #SignatureReader(String) SignatureReader}).", "Reference": "This signature is\nthe one specified in the constructor (see {@link #SignatureReader}).", "LLMCandidates": ["This signature is the one specified in the constructor (see {@link #SignatureReader(String) SignatureReader}).", "This signature is the one specified in the constructor (see {@link #SignatureReader(String) SignatureReader}).", "Parses the specified signature and visits each type parameter, class, interface or method based on the format of the given signature string.", "This signature is the one specified in the constructor (see {@link #SignatureReader(String) SignatureReader}).", "This signature is the one specified in the constructor (see {@link #SignatureReader(String) SignatureReader})."]}
{"SampleId": 237013, "Origin": "Converts a {@link CreateFileOptions} object to an {@link OpenFileOptions} object with a\nmatching Alluxio storage type.", "Reference": "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a\nmatching Alluxio storage type.", "LLMCandidates": ["Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type.", "Converts a {@link CreateFilePOptions} object to an {@link OpenFilePOptions} object with a matching Alluxio storage type."]}
{"SampleId": 1314716, "Origin": "Called when the user reorders the policies in a service.", "Reference": "Called when the user reorders the policies in a API.", "LLMCandidates": ["Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API.", "Called when the user reorders the policies in an API."]}
{"SampleId": 1880460, "Origin": "This lacks a mathematical argument, but is a handcrafted heuristic to avoid\nnumerical problems.", "Reference": "This lacks a thorough mathematical argument, but is a handcrafted heuristic\nto avoid numerical problems.", "LLMCandidates": ["This heuristic estimates the initial beta value for t-Stochastic Neighbor Embedding (t-SNE), considering degenerate cases where all distances are zero. It is inspired by the work of Erich Schubert and Michael Gertz in \"Intrinsic t-Stochastic Neighbor Embedding for Visualization and Outlier Detection: A Remedy Against the Curse of Dimensionality?\" at Proc. Int. Conf. Similarity Search and Applications, SISAP'2017. The estimate is based on the sum of distances between points excluding the ignored point, perplexity, and the size of the dataset. In degenerate cases where all distances are zero, it returns 1 to avoid numerical issues.", "This heuristic estimates an initial value for beta to avoid numerical problems, based on the work of Erich Schubert and Michael Gertz in \"Intrinsic t-Stochastic Neighbor Embedding for Visualization and Outlier Detection: A Remedy Against the Curse of Dimensionality?\", published at Proc. Int. Conf. Similarity Search and Applications, SISAP'2017. In degenerate cases, simply returns 1.", "Estimates the initial beta value for intrinsic t-Stochastic Neighbor Embedding using a handcrafted heuristic to avoid numerical problems.", "This heuristic estimates the initial beta value by averaging the logarithm of the distances between data points and a specified ignore point, to avoid numerical problems. In degenerate cases, it simply returns 1. The method is inspired by \"Intrinsic t-Stochastic Neighbor Embedding for Visualization and Outlier Detection: A Remedy Against the Curse of Dimensionality?\" by Erich Schubert and Michael Gertz.", "This heuristic estimates an initial beta value using t-Stochastic Neighbor Embedding and handles degenerate cases by returning 1 for simplicity."]}
{"SampleId": 2608946, "Origin": "Tests {@code globalRecommend(Set, int, Set, Set)}.", "Reference": "Tests {@code recommendRelatedItems()(Set, int, Set, Set)}.", "LLMCandidates": ["Tests {@code recommendRelatedItems(Set, int, Set, Set)", "Tests {@code recommendRelatedItems(Set, int, Set, Set)", "Tests {@code recommendRelatedItems(Set, int, Set, Set)", "Tests {@code recommendRelatedItems(Set, int, Set, Set)}.", "Tests {@code recommendRelatedItems(Set, int, Set, Set)}."]}
{"SampleId": 1759643, "Origin": "Setter for the output directory where the data files are stored.", "Reference": "Setter for the directory where the data files are stored.", "LLMCandidates": ["Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored.", "Setter for the directory where the data files are stored."]}
{"SampleId": 4470079, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error."]}
{"SampleId": 4404087, "Origin": "Note that you do not call", "Reference": "Note that you do\nnot call  with this\n.", "LLMCandidates": ["This method polls for a DecisionTask by taking a PollForDecisionTaskRequest and returning a DecisionTask in response. It creates an ExecutionContext using the provided request, initializes AWSRequestMetrics from the ExecutionContext, starts client execute time event, marshalls the request, sets the AWSRequestMetrics on the request, sends the request, unmarshalls the response using a JsonUnmarshaller, returns the DecisionTask from the response, and ends client execution by setting the operation name.", "This method polls for a DecisionTask using the provided PollForDecisionTaskRequest and returns the AWS response. It creates an ExecutionContext, starts the ClientExecuteTime event, marshalls the request, sets the AWSRequestMetrics on the request, invokes the service with the request, unmarshalls the response using a JsonUnmarshaller, and ends the client execution.", "This method polls for a DecisionTask using the provided PollForDecisionTaskRequest and returns the response containing the DecisionTask. It first creates an ExecutionContext and starts the ClientExecuteTime event in AWSRequestMetrics. Then, it marshalls the request, binds the request metrics to the current request, invokes the API call with a JsonResponseHandler<DecisionTask>, and finally ends the client execution by calling endClientExecution method.", "Polls for a DecisionTask based on the specified request and returns the response.", "This method polls for a DecisionTask by marshalling the request, setting AWSRequestMetrics, and invoking the service using the request and a JsonResponseHandler with a DecisionTaskJsonUnmarshaller. After receiving the response, it returns the AWS response. Finally, it ends the client execution."]}
{"SampleId": 5452026, "Origin": "Adds a qualified \"exports dynamic\" directive to the declaration.", "Reference": "Adds a qualified \"opens\" directive to the declaration.", "LLMCandidates": ["Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration.", "Adds a qualified \"opens\" directive to the declaration."]}
{"SampleId": 1985765, "Origin": "| 2. if it's a right child, it should have a incremented column value.", "Reference": "| If it's a right child, its column should increment by 1.", "LLMCandidates": ["If it's a right child, it should have an incremented column value.", "The level range is used for vertical order traversal in a binary tree. Each element in the list corresponds to a column, and the elements are ordered from top to bottom in that column. If it's a left child, it should have a decremented row value. If it's a right child, it should have an incremented column value.", "For each level, the column value is incremented when moving from left to right.", "If it's a right child, it should have an incremented column value.", "In BFS order traversal, if it's a right child, it should have an incremented column value."]}
{"SampleId": 2482285, "Origin": "Queries this search source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a query for the specified contact source using the given queryString.", "Queries this search source for the given queryString using a demultiplexing approach.", "Queries this search source for the given queryString using a new method \"createContactQuery\" to create the DemuxContactQuery object.", "Queries this search source for the given queryString using createContactQuery method.", "Queries this search source for the given queryString using createContactQuery method."]}
{"SampleId": 4470466, "Origin": "Gets the list of {@link CertificateProperties CertificateProperties} on this page.", "Reference": "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "LLMCandidates": ["Gets the list of {@link CertificateProperties CertificateProperties} on this page as an IterableStream.", "Gets the list of {@link CertificateProperties CertificateProperties} on this page.", "Gets the list of {@link CertificateProperties CertificateProperties} on this page, as an IterableStream.", "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page.", "Gets the iterable stream of {@link CertificateProperties CertificateProperties} on this page."]}
{"SampleId": 2312346, "Origin": "Users\ncannot poke the threshold values via this Condition.", "Reference": "Users must not poke the threshold values via this Condition.", "LLMCandidates": ["Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin.", "Users cannot poke the threshold values via this ConditionWithin."]}
{"SampleId": 2616149, "Origin": "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}.", "Reference": "Sets this {@code Rectangle} to the value represented by the specified string according to the format of {@link #toString()}.", "LLMCandidates": ["Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}, possibly setting the coordinates and dimensions instead of creating a new object.", "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()} and sets its attributes using {@code set(float x, float y, float width, float height)} method.", "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}, and sets its values using the {@link Rectangle#set(float, float, float, float)} method.", "Parses the {@code Rectangle} represented by the given string according to the format of {@link #toString()}. Returns a new instance with the specified values.", "Parses the Rectangle represented by the given string according to the format of #toString(), and sets it using the set method."]}
{"SampleId": 3573462, "Origin": "Set name of the noun.", "Reference": "Set the noun.", "LLMCandidates": ["Set noun of the builder.", "Set noun of the builder.", "Set noun of the builder.", "Set noun of the noun.", "Set noun of the noun."]}
{"SampleId": 2302360, "Origin": "Delegateaction to the track(s) clicked on.", "Reference": "Delegate action to the track(s) clicked on.", "LLMCandidates": ["Delegate action to the track(s) clicked on in igvMouseClicked event.", "Delegate action to the track(s) clicked on in igvMouseClicked event.", "Delegate action to the track(s) clicked on in the igvMouseClicked event.", "Delegate action to the track(s) clicked on in igvMouseClicked event.", "Delegate action to the track(s) clicked on in igvMouseClicked event."]}
{"SampleId": 1052994, "Origin": "Receive indicator result from persistence, after it is saved into storage.", "Reference": "Receive metrics result from persistence, after it is saved into storage.", "LLMCandidates": ["Receive metrics result from persistence, after it is saved into storage.", "Receive metric result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage.", "Receive metrics result from persistence, after it is saved into storage."]}
{"SampleId": 1328525, "Origin": "Sets the journal serializer, returning the builder for method chaining.", "Reference": "Sets the journal namespace, returning the builder for method chaining.", "LLMCandidates": ["Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining.", "Sets the journal namespace, returning the builder for method chaining."]}
{"SampleId": 1066822, "Origin": "Return the {@code Graph} from the underlying switchable.", "Reference": "Return the {@code Graph} from the underlying DatasetGraph", "LLMCandidates": ["Return the {@code Graph} from the underlying switchable. If no graph name is specified, return the default graph; otherwise, get a graph by its name.", "Return the Graph from the underlying DataStore if the graph name is null; otherwise, return the Graph from the underlying DataStore with the specified graph name.", "Return the {@code Graph} from the underlying DSG, using the default graph if no specific graph name is set.", "Return the {@code Graph} from the underlying DSG, either using its default graph if no graph name is specified, or by the specified graph name otherwise.", "Return the {@code Graph} from the underlying data structure graph with its default name or custom name based on the value of getGraphName()."]}
{"SampleId": 1353787, "Origin": "(Try to) create a Flag inter (either standard FlagInter or SmallFlagInter).", "Reference": "(Try to) create and add a Flag inter (either standard FlagInter or SmallFlagInter).", "LLMCandidates": ["Create a valid FlagInter instance with the specified parameters, if it can be linked to systemStems, add it to the system's graph and return it; otherwise, return null.", "Create a valid FlagInter object if it can be linked with one of the given system stems, otherwise return null.", "Create a valid Flag inter (either standard FlagInter or SmallFlagInter), considering the given parameters and adding it to the system's signature if a link is found.", "Create a valid Flag inter (either standard FlagInter or SmallFlagInter), and add it to the system's vertex if there is a corresponding link with the provided system stems.", "Create a valid and added FlagInter (either standard FlagInter or SmallFlagInter)."]}
{"SampleId": 4396618, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted when present.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted when present.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted when necessary.", "Returns a string representation of this object; useful for testing and debugging, except for Payload which will display '***Sensitive Data Redacted***' when it is not null."]}
{"SampleId": 5435232, "Origin": "If the new lookup class is not within the same package member\nas the old one, private members will not be accessible, and protected members\nwill not be accessible by virtue of inheritance.", "Reference": "If the new lookup class is not within the same package member\n as the old one, private members will not be accessible, and protected members\n will not be accessible by virtue of inheritance,\n i.e.", "LLMCandidates": ["If the new lookup class is not within the same package member as the old one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance. If you are teleporting between modules or if the previous lookup class was not in the same module as the requested lookup class, all access modes except PUBLIC and UNCONDITIONAL will be dropped.", "If the new lookup class is not within the same package or module as the old one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance.", "If the new lookup class is not within the same package member as the old one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance.", "If the new lookup class is not within the same package member or module as the previous one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance.", "If the new lookup class is not within the same package member or module as the previous one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance."]}
{"SampleId": 2913759, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name using the enum mapping.", "Obtains an instance from the specified name using the enum mapping.", "Obtains an instance from the specified name using the enum values' unique names and then parses it."]}
{"SampleId": 1356182, "Origin": "Report the ID of the sample sheet that contains the provided sample.", "Reference": "Report the name of the sample sheet that contains the provided sample.", "LLMCandidates": ["Return the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample.", "Report the name of the sample sheet that contains the provided sample."]}
{"SampleId": 576503, "Origin": "The format used is ISO 8601-like:\nH:m:s.S.", "Reference": "The format used is ISO 8601-like: {@code HH:mm:ss.SSS}.", "LLMCandidates": ["The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:mm:ss.SSS.", "The format used is ISO 8601-like:\nHH:m:s.S.", "The format used is ISO 8601-like: HH:mm:ss.SSS.", "The format used is ISO 8601-like: HH:mm:ss.SSS."]}
{"SampleId": 2251648, "Origin": "Get the object, and return it, throws RuntimeException", "Reference": "Get the object, and return it, throws RuntimeException if not found", "LLMCandidates": ["Get an object using the provided key from the data structure. If found, return it; otherwise, throw RuntimeException \"Key not found\".", "Get the object by its key and return it, throwing RuntimeException if key not found.", "Get the object by its key and return it, throwing RuntimeException if key not found.", "Get an object associated with a key from the data structure, and return it; throws RuntimeException if the key is not found.", "Gets the object with the specified key, and returns it; if not found, throws RuntimeException."]}
{"SampleId": 2939253, "Origin": "This polling job tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "Reference": "This function tries to find another UPnP\ndevices related to same Samsung TV and create handler for those.", "LLMCandidates": ["This polling job tries to find another UPnP devices related to same Samsung TV and create handler for those; afterwards, checkCreateManualConnection() is called.", "This polling job tries to find missing UPnP devices related to the same Samsung TV and create handlers for those.", "This polling job tries to find any missing UPnP devices related to the same Samsung TV and create handlers for them. Additionally, it calls the checkCreateManualConnection() method.", "This polling job tries to find other UPnP devices related to the same Samsung TV and create handlers for those; it also checks for creating manual connection.", "This polling job tries to find missing UPnP devices related to the same Samsung TV and create handlers for those."]}
{"SampleId": 4474437, "Origin": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubDirectory#String}", "Reference": "{@codesnippet com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient.deleteSubdirectory#String}", "LLMCandidates": ["Delete a subdirectory and its contents in the Data Lake storage account.", "Deletes a subdirectory from the Data Lake Storage Gen2 file system, given its name. If any error occurs, it will return an error.", "Deletes the specified subdirectory within the Data Lake Storage Gen2 file system by its name. Returns a Mono containing Void.", "Deletes the subdirectory with the given name under the root directory of the Data Lake Storage Gen2 file system. If a subdirectory with the specified name does not exist, no exception is thrown. This method returns a Mono<Void> which represents a single value asynchronously.", "Deletes a subdirectory and its contents recursively from the Data Lake Storage Gen2 file system."]}
{"SampleId": 4471749, "Origin": "If {@code labels = \"\\0\"}, settings without any label are returned.", "Reference": "If {@code labelFilter = \"\\0\"}, settings without any label are returned.", "LLMCandidates": ["If labelFilter is an empty string, settings without any label filter are returned.", "Set the label filter by setting labelFilter. If {@code labelFilter = \"\"}, settings without any label are returned.", "If labelFilter is empty or null, settings without any label filter are returned.", "If labelFilter is empty or null, settings without any label filter are returned.", "Sets the label filter by replacing the current label filter with the new one. If {@code labelFilter = \"\"}, settings without any label are returned."]}
{"SampleId": 6165109, "Origin": "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace.", "Reference": "The namespace document is a BsonDocument containing the values associated with a MongoNamespace.", "LLMCandidates": ["The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace. This method now returns nullable values.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace, and may be null.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace, and may be null.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace. This method now returns null if the namespaceDocument is not set.", "The namespaceDocument is a BsonDocument containing the values associated with a MongoNamespace; it may be null."]}
{"SampleId": 3083929, "Origin": "Returns a supplier that returns the current language instance.", "Reference": "Returns a reference that returns the current language instance.", "LLMCandidates": ["Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance.", "Returns a LanguageReference that returns the current language instance."]}
{"SampleId": 5203568, "Origin": "After the recreation, it brings back its lifecycle state to the resumed state.", "Reference": "After the recreation, it brings back its lifecycle state to the original state.", "LLMCandidates": ["After recreation, it brings back its lifecycle state to match the on device behavior, which may include pausing and/or stopping if appropriate for the original stage.", "Recreates the activity by updating its lifecycle stages to resumed state and returns the result.", "Recreates the activity by updating its lifecycle stages to resumed state and returns the result.", "Recreates the activity by simulating the Android framework's recreation process and restores its lifecycle state to the resumed state if it was paused or stopped before. If the original stage was a transient stage (paused or stopped), it will bring it to the resumed state to match on-device behavior.", "Performs a recreation of the activity, restoring it to its previous lifecycle state before the recreation process."]}
{"SampleId": 3242255, "Origin": "Create an instance of {@link CTWebProperties }", "Reference": "Create an instance of {@link CTRel }", "LLMCandidates": ["Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel", "Create an instance of {@link CTRel"]}
{"SampleId": 2337259, "Origin": "Classification ID (for files only): * `1` - public * `2` - for internal use only * `3` - confidential * `4` - strictly confidential", "Reference": "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "LLMCandidates": ["Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID (for all types): * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID (for files only): * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential", "Classification ID: * `1` - public * `2` - internal * `3` - confidential * `4` - strictly confidential"]}
{"SampleId": 1750901, "Origin": "Appends to a collection column, as in {@code SET l+=?}.", "Reference": "Appends to a collection column, as in {@code SET l=l+?}.", "LLMCandidates": ["Appends to a collection column, as in {@code SET l+=?}, where the column is represented by a CqlIdentifier and the suffix is represented by a Term.", "Appends to a collection column, as in {@code SET l+=?}.", "Appends to a collection column, as in {@code SET l+=?}.", "Appends to a collection column, as in {@code SET l+=?}.", "Appends to a collection column, as in {@code SET l+=?}."]}
{"SampleId": 2127259, "Origin": "Start a Task with a Tag to identify it and with a time threshold; a task represents some work\nthat spans some time, and you are interested in both its start time and end time.", "Reference": "End a Task with a Tag to identify it; a task represents some work that spans some time, and\nyou are interested in both its start time and end time.", "LLMCandidates": ["End a Task with a Tag to identify it and with a time threshold; a task represents some work that spans some time, and you are interested in both its start time and end time.", "End a Task with a Tag to identify it and with a time threshold; a task represents some work that spans some time, and you are interested in both its start time and end time.", "End a Task with a Tag to identify it and without any time threshold; a task represents some work that spans some time, and you are interested in both its start time and end time.", "End a Task with a Tag to identify it; a task represents some work that spans some time, and you are interested in both its start and end times.", "End a Task with a Tag to identify it and to indicate that this task has finished; a task represents some work that spans some time, and you are interested in both its start time and end time."]}
{"SampleId": 2913708, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name by parsing it using the NAMES cache.", "Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name using the static map of all names."]}
{"SampleId": 6048292, "Origin": "or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Reference": "or throws a {@link NoSuchAccountException} if it could not be found.", "LLMCandidates": ["Finds the account by user ID and address, or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Finds an account by user ID and email address. Returns the model object if found; otherwise, throws a {@link com.liferay.mail.NoSuchAccountException}.", "Finds an account by its user ID and email address, or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Finds an account by user ID and address. The method returns the account or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found.", "Returns an instance of {@link com.liferay.mail.model.Account} that has the specified userId and address, or throws a {@link com.liferay.mail.NoSuchAccountException} if it could not be found."]}
{"SampleId": 5828271, "Origin": "Loads the update center data, if any and if modified since last read.", "Reference": "Loads the update center data, if any.", "LLMCandidates": ["Loads the update center data if it has been modified since last read or if it is null.", "Loads the update center data, if any and if it has been modified since last read.", "Loads the update center data if it has been modified since last read or if it is not null.", "Loads the update center data, if any and if it has been modified since last read.", "Loads the update center data, if any and if it has been modified since last read."]}
{"SampleId": 3923671, "Origin": "Produces a Collapsed SemanticGraph with no extras.", "Reference": "Produces a Collapsed SemanticGraph.", "LLMCandidates": ["Produces a Collapsed SemanticGraph with no extras (deprecated).", "Produces a Collapsed SemanticGraph with no extras. (deprecated)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated since version 1.0)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated method)", "Produces a Collapsed SemanticGraph with no extras. (Deprecated method)"]}
{"SampleId": 5218897, "Origin": "Is has plain column or not.", "Reference": "Contains plain column or not.", "LLMCandidates": ["Checks if the table has a plain column with the given logicTable key.", "Checks if a plain column exists in the given logic table.", "Checks if a plain column exists in the given logic table.", "Determines if the table contains a plain column with the given logicTable name.", "Determines if the table contains a plain column with the given logicTable name."]}
{"SampleId": 1352583, "Origin": "Report the note which if vertically farthest from stem tail.", "Reference": "Report the highest note by default.", "LLMCandidates": ["Report the note which is highest in terms of pitch.", "Return the highest note among all chord members.", "Return the highest note among all chord members.", "Returns the highest note in the chord.", "Returns the highest note in the chord."]}
{"SampleId": 5589244, "Origin": "If the given language code is {@code null}, uses {@link DisplaySettings#getContentLanguage(Context)}.", "Reference": "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "LLMCandidates": ["If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}.", "If the given language code is {@code null}, uses {@link DisplaySettings#getShowsLanguage(Context)}."]}
{"SampleId": 5844942, "Origin": "Creates an Android framework resource repository without using a persistent cache.", "Reference": "Creates an Android framework resource repository.", "LLMCandidates": ["Creates an Android framework resource repository with optional persistent cache loading and creation.", "Creates an Android framework resource repository with optional persistent cache and locale resources.", "Creates an Android framework resource repository with optional persistent cache and locale resources.", "Creates an Android framework resource repository with optional persistent cache and locale resources.", "Creates an Android framework resource repository with optional persistent cache and locale resources."]}
{"SampleId": 5631353, "Origin": "Convert file to HTML.", "Reference": "Convert document to HTML.", "LLMCandidates": ["Convert file to HTML using provided options and model.", "Convert file to HTML using specified options and a given file.", "Convert file to HTML using given options and model, if provided.", "Convert file to HTML using given options and model, if provided.", "Convert file to HTML with optional model and given file to create an HTML representation of the content. The method takes a ConvertToHtmlOptions object containing the file, version date, file's MIME type, and filename. It constructs an HTTP request by setting headers, query parameters, and multipart form data parts. Finally, it returns a ServiceCall object wrapping the request and using ResponseConverterUtils to convert the response into an HTMLReturn object."]}
{"SampleId": 1354710, "Origin": "Try to detect link between this Slur instance and head on left side\nplus head on right.", "Reference": "Try to detect link between this Slur instance and head on left side\nplus head on right side.", "LLMCandidates": ["Looks up for link(s) between this Slur instance and heads on either side, while considering chords and slurs in the system.", "Detect link between this Slur instance and head on left side plus head on right.", "Looks for link pairs between this Slur instance and head on each side by defining slur side areas, retrieving candidate chords, and selecting the best link pair.", "Lookup links between this Slur instance and head on left side plus head on right by considering slur side areas and candidate chords.", "Lookup a link between this Slur instance and heads on both sides plus define slur side areas, retrieve candidate chords, select the best link pair, and return the links."]}
{"SampleId": 1548425, "Origin": "Slight performance increase over {@link #render(BufferBuilder)}.", "Reference": "Slight performance increase over {@link #render(VertexBuffer)}.", "LLMCandidates": ["Slight performance increase over {@link #render(VertexBuffer)}.", "Slight performance increase over {@link #render(VertexBuffer)}.", "Slight performance increase over {@link #render(VertexBuffer)}.", "Slight performance increase over {@link #render(VertexBuffer)}.", "Slight performance increase over {@link #render(VertexBuffer)}."]}
{"SampleId": 2133750, "Origin": "Calculate a sample's standard deviation.", "Reference": "Calculate the standard deviation.", "LLMCandidates": ["Calculate a sample's standard deviation for a collection of numbers by using the given method to calculate the mean.", "Calculate a sample's standard deviation from a collection of numbers.", "Calculate a sample's standard deviation from a collection of numbers.", "Calculate a collection's standard deviation.", "Calculate a collection's standard deviation."]}
{"SampleId": 2545534, "Origin": "When transforming a vector by the resulting matrix the rotation transformation will be applied first and then the translation.", "Reference": "When transforming a vector by the resulting matrix the rotation - and possibly scaling - transformation will be applied first and then the translation.", "LLMCandidates": ["When transforming a vector by the resulting matrix, the translation transformation will be applied first and then the rotation.", "When transforming a vector by the resulting matrix, the rotation transformation will be applied first and then the translation.", "When transforming a vector by the resulting matrix, the translation transformation will be applied first and then the rotation.", "When transforming a vector by the resulting matrix, the translation transformation will be applied first and then the rotation.", "When transforming a vector by the resulting matrix, the translation transformation will be applied first and then the rotation."]}
{"SampleId": 6049369, "Origin": "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Reference": "Returns the foo with the primary key or throws a {@link NoSuchFooException} if it could not be found.", "LLMCandidates": ["Finds the foo with the given primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Returns the foo with the primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Returns the Foo with the primary key or throws a NoSuchFooException if it could not be found.", "Finds the foo with the specified primary key or throws a {@link com.liferay.sampleservicebuilder.NoSuchFooException} if it could not be found.", "Returns the foo with the primary key or throws a NoSuchFooException if it could not be found."]}
{"SampleId": 2882033, "Origin": "Gets the String or Long id from the key, or null if incomplete", "Reference": "Gets the String or Long id from the key as a Value, or null if incomplete", "LLMCandidates": ["Gets the String or Long id from the key, or null if incomplete, where Key has been changed to IncompleteKey and returns Value instead of id.", "Gets the String or Long id from the key, or null if incomplete, but only for Google Cloud Datastore Key \n\n```java\n@SuppressWarnings(\"unchecked\")\npublic static <S> Value<S> getIdValue(final IncompleteKey key) {\n\tif (key instanceof com.google.cloud.datastore.Key) {\n\t\tfinal com.google.cloud.datastore.Key completeKey = (com.google.cloud.datastore.Key)key;\n\t\tif (completeKey.hasId())\n\t\t\treturn (Value<S>)LongValue.of(completeKey.getId());\n\t\telse\n\t\t\treturn (Value<S>)StringValue.of(completeKey.getName());\n\t} else {\n\t\treturn null;\n\t}\n}\n```", "Gets the Long or String id from the key, or null if incomplete", "Gets the Long or String id from the key, or null if incomplete", "Gets the Long or String id from the key, or null if incomplete"]}
{"SampleId": 1327914, "Origin": "Returns a list of backup nodes.", "Reference": "Returns a list of follower nodes.", "LLMCandidates": ["Returns a list of follower nodes.", "Returns a list of follower nodes.", "Returns a list of follower nodes.", "Returns a list of follower nodes.", "Returns a list of follower nodes."]}
{"SampleId": 1542632, "Origin": "This method creates a temporary VCF file and it's appropriately named index file, and will delete them on exit.", "Reference": "This method creates a temporary VCF or Bam file and its appropriately named index file, and will delete them on exit.", "LLMCandidates": ["This method creates a temporary indexed file, whether it is VCF or BAM, and its appropriately named index file, and will delete them on exit.", "This method creates a temporary indexed file (either VCF or BAM), and it is appropriately named; the respective index file will also be created, and they will all be deleted on exit.", "This method creates a temporary indexed file based on the specified prefix and suffix, and will delete them on exit.", "This method creates a temporary indexed file based on its suffix, and it will delete them on exit.", "This method creates a temporary indexed file and it's appropriately named index file, and will delete them on exit."]}
{"SampleId": 2050311, "Origin": "Starts the service if not started already and starts all downloads.", "Reference": "Starts the service if not started already and resumes all downloads.", "LLMCandidates": ["Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads.", "Starts the service if not started already and resumes all downloads."]}
{"SampleId": 125737, "Origin": "Helper method to retrieve the parent folder type.", "Reference": "Helper method to retrieve the parent folder type or  if none available.", "LLMCandidates": ["Helper method to retrieve the parent folder type, which may return null if no valid type is found for the given root path.", "Helper method to retrieve the parent folder type, considering that type may be null.", "Helper method to retrieve the parent folder type, considering that type may be null.", "Helper method to retrieve the parent folder type, which may return null if no such type exists or if the parent folder type is not found in the cache.", "Helper method to retrieve the parent folder type, considering that type may be null."]}
{"SampleId": 6235650, "Origin": "The input stream should\ncontain an X.509 certificate chain in PEM format.", "Reference": "The input stream should\ncontain an X.509 certificate collection in PEM format.", "LLMCandidates": ["The input stream should contain an X.509 certificate chain in PEM format.", "The input stream should contain an X.509 certificate chain in PEM format.", "The input stream should contain an X.509 certificate chain in PEM format.", "The input stream should contain an X.509 certificate chain in PEM format.", "The input stream should contain an X.509 certificate chain in PEM format."]}
{"SampleId": 3389056, "Origin": "Unregister the given event from the current context (provided).", "Reference": "Unregister all methods observing the given event from the provided context.", "LLMCandidates": ["Unregisters the given event instance from the specified observer registrations. If the event instance matches with the registered instance of an ObserverMethodListener, it will be removed from the list of observers for the specified event.", "Registers an observer for events of the specified type on the current context.", "Unregisters the given observer instance from all events to which it's listening.", "Unregisters the given observer instance from all events to which it's listening.", "Unregister the given event from the current context (provided), by removing observers that match the given instance and event type."]}
{"SampleId": 1328163, "Origin": "Sets the storage serializer.", "Reference": "Sets the storage namespace.", "LLMCandidates": ["Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace.", "Sets the storage namespace."]}
{"SampleId": 2912410, "Origin": "Gets the groups used to find an issuer curve.", "Reference": "Gets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Gets the groups used to find an issuer curve based on the LegalEntityId.", "Gets the groups used to find an issuer curve with LegalEntityId instead of StandardId.", "Gets the groups used to find an issuer curve with LegalEntityId instead of StandardId.", "Gets the groups used to find an issuer curve with LegalEntityId.", "Gets the groups used to find an issuer curve by LegalEntityId."]}
{"SampleId": 1578587, "Origin": "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}", "Reference": "Returns a new {@link MetadataEntity} which consists of the given key and values following the key and values of\nthis {@link MetadataEntity}.", "LLMCandidates": ["Appends the given key-value pair to the existing ones of this MetadataEntity, creating a new one if none exist yet.", "Creates a new {@link MetadataEntity} which consists of the given key and values following the details of this {@link MetadataEntity", "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of this {@link MetadataEntity}.", "Appends the given key and value to the existing key-value pairs of this {@link MetadataEntity}.", "Creates a new {@link MetadataEntity} which consists of the given key and values following the key and values of this {@link MetadataEntity}."]}
{"SampleId": 4396433, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by replacing it with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging, with any sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with any sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging."]}
{"SampleId": 3677761, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).", "LLMCandidates": ["The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (one week earlier)."]}
{"SampleId": 3993404, "Origin": "Complete the request.", "Reference": "2.", "LLMCandidates": ["Complete a batch request by updating the final state to SUCCEEDED or FAILED based on success or failure respectively, and fire callbacks accordingly.", "Sets the final state of a batch based on whether it succeeded or failed in producing messages. If it succeeded, logs a trace message indicating success with the topic partition and base offset. If it failed, logs a trace message indicating failure with the topic partition, base offset, and exception. Finally, updates the final state if possible, completes the future and fires callbacks if successful, and handles situations where batch has already been completed or attempted another state change.", "Set the final state based on whether an exception occurred while producing messages to a topic partition. If no exception occurred, the final state is SUCCEEDED; otherwise, it's FAILED. The method also checks if the final state has changed successfully before completing the batch and firing callbacks.", "Complete the request by setting the final state of the batch based on whether an exception occurred during message production.", "Complete the request with final state being SUCCEEDED or FAILED based on success or failure of producing messages to a topicPartition, and handle possible concurrent modifications to the finalState variable."]}
{"SampleId": 2060821, "Origin": "It tests that the method {@code addEdge}\nwill silently add the missing nodes to the graph, then add the edge connecting them.", "Reference": "Tests that the method {@code addEdge} will silently add the missing nodes to the graph, then\nadd the edge connecting them.", "LLMCandidates": ["It tests that the method addEdge will silently add the missing nodes to the graph, then add the edge connecting them.", "It tests that the method {@code addEdge} will silently add the missing nodes to the graph, then add the edge connecting them if the graph is mutable.", "It tests that the method addEdge will silently add the missing nodes to the graph, then add the edge connecting them.", "It tests that the method addEdge will silently add the missing nodes to the graph, then add the edge connecting them.", "It tests that the method addEdge will silently add the missing nodes to the graph, then add the edge connecting them, assuming that the graph is mutable."]}
{"SampleId": 6104045, "Origin": "Will set Object as TAG to this request, wrapped by WeakReference", "Reference": "Will set Object as TAG to underlying AsyncHttpRequest", "LLMCandidates": ["Set the Object as TAG to this request if it's not null or already has a tag, wrapped by WeakReference", "Sets the tag for this request by calling setRequestTag method if the async http request is not null.", "Will set Object as TAG to this request by directly setting it through AsyncHttpRequest's setRequestTag method.", "Will set Object as TAG to this request by directly setting it through AsyncHttpRequest's setRequestTag method.", "Will set Object as TAG to this request by calling request's setRequestTag method if the request is not null."]}
{"SampleId": 3492756, "Origin": "Whether the channel product is a beta product", "Reference": "Whether the channel product is a betaMarker product", "LLMCandidates": ["Whether the channel product is a beta product based on the betaMarker property", "Whether the channel product is a beta product based on the current value of betaMarker being equal to \"Y", "Whether the channel product is a beta product based on the betaMarker value", "Whether the channel product is a beta product based on the betaMarker value", "Whether the channel product is a beta product based on the current value of betaMarker."]}
{"SampleId": 6006976, "Origin": "Write a Chart series as rows in a CSV file.", "Reference": "Export a XYChart series into rows in a CSV file.", "LLMCandidates": ["Write a XYSeries series as rows in a CSV file.", "Write a XYSeries series as rows in a CSV file.", "Write a XYSeries series as rows in a CSV file.", "Write a XYSeries series as rows in a CSV file.", "Write a XYSeries series as rows in a CSV file."]}
{"SampleId": 3677760, "Origin": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "Reference": "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).", "LLMCandidates": ["The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later).", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return the next occurrence of the given day of week.", "The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (one week later)."]}
{"SampleId": 2700520, "Origin": "Set Bewegungsdatum.", "Reference": "Set Inventurdatum.", "LLMCandidates": ["Set Inventardatum.", "Set Inventardatum.", "Set Inventardatum.", "Set Inventardatum.", "Set Inventardatum."]}
{"SampleId": 5631504, "Origin": "Gets the dialogNodeId.", "Reference": "Gets the dialogNode.", "LLMCandidates": ["Returns the dialogNode as a string.", "Returns the dialogNode as a string.", "Returns the dialogNode as a string.", "Gets the dialogNode.", "Gets the dialogNode."]}
{"SampleId": 2959054, "Origin": "the barChartProperties of the chart", "Reference": "the chartProperties of the chart", "LLMCandidates": ["the chartProperties of the chart", "the chartProperties of the chart", "the chartProperties of the chart", "the chartProperties of the chart", "the chartProperties of the chart"]}
{"SampleId": 3037217, "Origin": "Gets forwarding function type of the forwarding objective.", "Reference": "Attempts to guess the forwarding function type of the given forwarding\nobjective.", "LLMCandidates": ["Gets forwarding function type of the forwarding objective considering criteria and meta criteria.", "Returns the forwarding function type of a given ForwardingObjective, considering both its included criteria and meta-criteria, if any.", "Get the forwarding function type of a ForwardingObjective, considering the expected and matching criteria types, and those not found in the objective.", "Gets the forwarding function type of the forwarding objective by considering the criteria included in both selector and meta criteria, if any.", "Returns the forwarding function type for the given ForwardingObjective by matching the expected criterion types and criteria found in the objective."]}
{"SampleId": 5749203, "Origin": "Returns an iterator of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "Reference": "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the\norder of the Provider registration and/or class path order.", "LLMCandidates": ["Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.", "Returns a collection of all of the registered {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order."]}
{"SampleId": 2229197, "Origin": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code cursor#getNext()} to the result.", "Reference": "Otherwise, it traverses all objects in\ngiven array and adds their scalar values named\n{@code pathCursor#getNext()} to the result.", "LLMCandidates": ["Otherwise, it traverses all objects in given array and adds their scalar values named {code cursor#getNext()} to the result.", "Traverses all objects in given array and adds their scalar values named {code cursor#getNext()} to the result.", "Otherwise, it traverses all objects in given array and adds their scalar values named {code pathCursor#getNext()} to the result.", "Otherwise, it traverses all objects in given array and adds their scalar values named {code pathCursor#getNext()} to the result.", "Traverses all objects within the given array and adds their scalar values named {code cursor#getNext()} to the result."]}
{"SampleId": 1665715, "Origin": "This method is run everytime the service is executed", "Reference": "This method is run every time the service is executed", "LLMCandidates": ["This method is run everytime the service is executed", "This method is run every time the service executes", "This method is run everytime the service is executed", "This method is run everytime the service is executed", "This method is run everytime the service is executed"]}
{"SampleId": 4933730, "Origin": "If one param is a float, the other is converted to a float.", "Reference": "a/b If one param is a\nfloat, the other is converted to a float.", "LLMCandidates": ["If one param is an int, the other is converted to an int. Otherwise, both are converted to floats.", "Calculates the power of two ExpressionValues. If both parameters are integers, returns an ExpressionValue containing the integer result of a^b. Otherwise, returns an ExpressionValue containing the floating-point result of a^b.", "If one param is an int, the other is converted to an int. Otherwise, if both params are float, or one param is a float and the other is an int, the latter is converted to a float.", "If either parameter is a float, the other is converted to a float.", "If either parameter is a float, the other is converted to a float."]}
{"SampleId": 4478592, "Origin": "Get the fileContentType property: Sets the MIME content type of the\nfile.", "Reference": "Get the contentType property: Sets the MIME content type of the\nfile.", "LLMCandidates": ["Get the contentType property: Sets the MIME content type of the file.", "Get the contentType property: Sets the MIME content type of the file.", "Get the contentType property: Sets the MIME content type of the file.", "Get the contentType property: Sets the MIME content type of the file.", "Get the contentType property: Sets the MIME content type of the file."]}
{"SampleId": 4390872, "Origin": "For more information about managing snapshot copy grants, go to", "Reference": "For more information about managing snapshot copy grants, go to Amazon Redshift Database Encryption in the Amazon Redshift", "LLMCandidates": ["Creates a snapshot copy grant for a snapshot of an Amazon EBS volume.", "Creates a snapshot copy grant for the specified Amazon Web Services account and resource ARN.", "Create a snapshot copy grant for a given Amazon EC2 instance, using the specified parameters.", "Creates a snapshot copy grant by invoking the AWS service using the provided request, and returns the resulting SnapshotCopyGrant object.", "Creates a snapshot copy grant for a specified snapshot copy. This method takes a CreateSnapshotCopyGrantRequest object as input and returns a SnapshotCopyGrant object as response. The request is marshalled using CreateSnapshotCopyGrantRequestMarshaller, and the AWS request metrics are bound to the current request. A StaxResponseHandler with SnapshotCopyGrantStaxUnmarshaller is used to handle the response. Finally, client execution is ended after invoking the request."]}
{"SampleId": 2061801, "Origin": "Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\nnumber of keys.", "Reference": "Uses a hash table to map keys to value collections, initialized to expect the specified\nnumber of keys.", "LLMCandidates": ["Uses a {@link HashMap} from the Platform to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link HashMap} from the Platform package to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link HashMap} from the Platform package to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link HashMap} from the Platform package to map keys to value collections, initialized to expect the specified number of keys.", "Uses a {@link HashMap} from Platform package to map keys to value collections, initialized to expect the specified number of keys."]}
{"SampleId": 4620088, "Origin": "Returns the number of occurrences, or {@code -1} if the exact number is unknown.", "Reference": "Returns the result size, or {@code -1} if the exact size is unknown.", "LLMCandidates": ["Returns the number of size, or {@code -1} if the exact number is unknown.", "Returns the number of size, or {@code -1} if the exact size is unknown.", "Returns the number of elements, or {@code -1} if the exact number is unknown.", "Returns the number of elements, or {@code -1} if the exact number is unknown.", "Returns the number of elements, or {@code -1} if the exact number is unknown."]}
{"SampleId": 1467613, "Origin": "Log rule execution statistics.", "Reference": "Log rule execution statistics @ INFO.", "LLMCandidates": ["Log rule execution statistics with potential contention issues resolved by avoiding heap churn for buffer allocation.", "Log rule execution statistics, avoiding potential deadlocks by allocating a new StringBuilder for each log operation.", "Log rule execution statistics by checking if log is enabled first; use a new StringBuilder for each query and avoid potential deadlocks when there are child subqueries.", "Log rule execution statistics, avoiding deadlocks by allocating a new StringBuilder for each invocation instead of reusing a static one when there are child subqueries.", "Log rule execution statistics, avoiding potential deadlock by using a new StringBuilder object instead of reusing a global static one when subqueries are present."]}
{"SampleId": 2217836, "Origin": "Test of var method, of class HyperGeometricDistribution.", "Reference": "Test of variance method, of class HyperGeometricDistribution.", "LLMCandidates": ["Test of variance calculation for class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution.", "Test of variance method, of class HyperGeometricDistribution."]}
{"SampleId": 275709, "Origin": "Load all profile names.", "Reference": "A task that reads all profile names.", "LLMCandidates": ["Read all profile names.", "Load all profile names by using fs.loadDirectoryNamesTask(\"./\" + PROFILES_DIR, false).", "Read all profile names.", "Read all profile names.", "Read all profile names."]}
{"SampleId": 337244, "Origin": "Get the {@link SessionConfiguration} for the specified camera id.", "Reference": "Get the {@link SessionConfig} for the specified camera id.", "LLMCandidates": ["Get the SessionConfig for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id.", "Get the {@link SessionConfig} for the specified camera id."]}
{"SampleId": 3677731, "Origin": "Obtains an instance of {@code ZoneOffset} from a date-time object.", "Reference": "Obtains an instance of {@code ZoneOffset} from a temporal object.", "LLMCandidates": ["Obtains an instance of ZoneOffset from a date-time object, handling potential DateTimeException.", "Obtains an instance of ZoneOffset from a date-time object, handling potential exceptions when obtaining the offset seconds.", "Obtains an instance of {@code ZoneOffset} from a date-time object, handling potential exceptions during the process.", "Obtains an instance of ZoneOffset from a date-time object, handling possible exceptions.", "Obtains an instance of ZoneOffset from a date-time object, handling possible exceptions."]}
{"SampleId": 4245995, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Convert to object types, returning null if text is empty.", "Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty.", "Convert to object types, returning null if text is empty."]}
{"SampleId": 3384765, "Origin": "Returns the attack range for a {@link robocode.SentryRobot SentryRobot}.", "Reference": "Returns the border size that defines the attack range for a {@link robocode.SentryRobot SentryRobot}\nfrom the border.", "LLMCandidates": ["Returns the border size for a {@link robocode.SentryRobot SentryRobot}.", "Returns the border size for a {@link robocode.SentryRobot SentryRobot}.", "Returns the border size for a {@link robocode.SentryRobot SentryRobot}.", "Returns the border size for a {@link robocode.SentryRobot SentryRobot}.", "Returns the border size for a {@link robocode.SentryRobot SentryRobot}."]}
{"SampleId": 3036764, "Origin": "Decode an action profile member to PI action group member.", "Reference": "Decode an action profile member to PI action profile member.", "LLMCandidates": ["Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member.", "Decode an action profile member to PI action profile member."]}
{"SampleId": 3734139, "Origin": "If not, returns -1.", "Reference": "If not, returns null.", "LLMCandidates": ["If not, returns null.", "Returns an Integer representing the minimum length of the given Tree, or null if the Tree does not have a MinLen annotation. If the Tree has multiple MinLen annotations, returns the first one encountered in depth-first order. If the annotated type is not valid, returns -1.", "If not, returns null.", "If the input type is not annotated with MinLen, returns null.", "If the input type is not annotated with MinLen, returns null."]}
{"SampleId": 2230461, "Origin": "Sets the quorum name for operations.", "Reference": "Sets the split brain protection name for operations.", "LLMCandidates": ["Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations.", "Sets the split brain protection name for operations."]}
{"SampleId": 2142909, "Origin": "Visit class header and get class name, access , and intefraces\ninformatoin (step 1,2, and 3) for SVUID computation.", "Reference": "Visit class header and get class name, access , and interfaces\ninformation (step 1,2, and 3) for SVUID computation.", "LLMCandidates": ["Visit class header and get class name, access, and interface information for SVUID computation (step 1, 2, and 3).", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. Overrides the method of the superclass.", "Visit class header, get class name, access, and interface information for SVUID computation (step 1, 2, and 3).", "Visit class header and get class name, access, and interface information for SVUID computation (step 1, 2, and 3).", "Visit class header and get class name, access, and interface information (step 1, 2, and 3) for SVUID computation. Overrides the method in the superclass."]}
{"SampleId": 3677731, "Origin": "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}.", "Reference": "This factory converts the arbitrary temporal object to an instance of {@code ZoneOffset}.", "LLMCandidates": ["This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}, with exception handling for potential DateTimeExceptions.", "This factory converts the arbitrary date-time object to an instance of ZoneOffset.", "This factory converts the arbitrary date-time object to an instance of ZoneOffset.", "This factory converts the arbitrary date-time object to an instance of {@code ZoneOffset}, handling potential exceptions during the conversion process.", "This factory converts the arbitrary date-time object to an instance of ZoneOffset, with error handling for potential DateTimeExceptions."]}
{"SampleId": 1381360, "Origin": "Validates that trailing checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "Reference": "Validates that checksums should be enabled based on {@link ClientType} and the presence\nor S3 specific headers.", "LLMCandidates": ["Validates that trailing checksums should be enabled based on {@link ClientType} and the presence of S3 specific headers in a PutObject request.", "Validates that trailing checksums should be enabled based on the client type and the presence of S3 specific headers.", "Validates that trailing checksums should be enabled based on {@link ClientType} and the presence or S3 specific headers for a PutObject request.", "Validates that trailing checksums should be enabled based on the {@code ClientType} and the presence of specific S3 headers.", "Validates that trailing checksums should be enabled based on {@link ClientType}, the presence or S3 specific headers, and whether it is a PutObject request."]}
{"SampleId": 6044783, "Origin": "or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Reference": "or throws a {@link NoSuchBookingException} if it could not be found.", "LLMCandidates": ["Finds a calendar booking by UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Finds the calendar booking with the given UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Finds the CalendarBooking with the specified UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchBookingException} if it could not be found.", "Finds a CalendarBooking by UUID and group ID, or throws a NoSuchBookingException if it could not be found.", "Finds the CalendarBooking with the given UUID and group ID. If it does not exist, throws a {@link com.liferay.calendar.NoSuchBookingException}."]}
{"SampleId": 4862706, "Origin": "This method will called {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "Reference": "This method calls {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has\nbeen configured.", "LLMCandidates": ["This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured.", "This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured and the given buffer is not an empty buffer.", "This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured.", "This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured and the passed in buffer is not empty.", "This method will call {@link ByteBufferPool#release(ByteBuffer)} if a buffer pool has been configured."]}
{"SampleId": 5242834, "Origin": "Generate and write the html page that shows the snapshot and the state of\nthe ZoomParams", "Reference": "Generate and write the html page that shows the snapshot and the ZoomState", "LLMCandidates": ["Generate and write the HTML page that shows the snapshot and the state of the ZoomState", "Generate and write the html page that shows the snapshot and the state of the ZoomState", "Generate and write the HTML page that shows the snapshot and the state of the ZoomState", "Generate and write the HTML page that shows the snapshot and the state of the ZoomState", "Generate and write the HTML page that shows the snapshot and the state of the ZoomState"]}
{"SampleId": 4476928, "Origin": "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)}.", "Reference": "SecretProperties secret} and call {@link SecretClient#getSecret(String, String)}.", "LLMCandidates": ["Retrieve properties of a secret version by calling {@link SecretClient#getSecret(SecretProperties)} and pass a PagedIterable of {@link SecretProperties} for the given secret name.", "Returns a PagedIterable of SecretProperties representing the secret versions for the specified name and call {@link SecretClient#getSecret(SecretProperties)} with the returned SecretProperties.", "Lists the properties of all versions of a secret with the given name and call {@link SecretClient#getSecret(SecretProperties)}.", "SecretProperties secret} and call {@link SecretClient#getSecret(SecretProperties)} for more detailed information.", "Return a PagedIterable of SecretProperties for the specified secret version and call {@link SecretClient#getPropertiesOfSecretVersions(String, Context)}."]}
{"SampleId": 2615723, "Origin": "Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and\ncell, column, and row defaults.", "Reference": "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties\nand cell, column, and row defaults.", "LLMCandidates": ["Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults.", "Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties and cell, column, and row defaults."]}
{"SampleId": 1220435, "Origin": "If the number of missing elements is\n    32 x times the number of present elements, treat it as sparse", "Reference": "If the number of missing elements is 32x times the number of present\nelements, consider it as sparse.", "LLMCandidates": ["If the number of missing elements is approximately 32 times the number of present elements, treat it as sparse", "MRTask to aggregate precalculated per-chunk sparse lengths", "MRTask to aggregate precalculated per-chunk sparse lengths", "MRTask to aggregate precalculated per-chunk sparse lengths", "MRTask to aggregate precalculated per-chunk sparse lengths"]}
{"SampleId": 3629306, "Origin": "Returns an immutable set containing one element.", "Reference": "Returns an unmodifiable set containing one element.", "LLMCandidates": ["Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element.", "Returns an unmodifiable set containing one element."]}
{"SampleId": 1956974, "Origin": "Compute the number of bytes that would be needed to encode a {@code uint32} field.", "Reference": "Compute the number of bytes that would be needed to encode a varInt.", "LLMCandidates": ["Compute the number of bytes that would be needed to encode a raw uint32 field.", "Compute the number of bytes that would be needed to encode a {@code raw uint32} field.", "Compute the number of bytes that would be needed to encode a {@code raw uint32} field.", "Compute the number of bytes that would be needed to encode a raw uint32 field.", "Compute the number of bytes that would be needed to encode a uint32 field using raw representation."]}
{"SampleId": 3344422, "Origin": "Create a new read/write access object.", "Reference": "Create a new read/write access object with the given default timeout.", "LLMCandidates": ["Create a new read/write access object with the given default timeout.", "Create a new read/write access object with the specified default timeout.", "Create a new read/write access object with the specified default timeout.", "Create a new read/write access object with the specified default timeout.", "Create a new read/write access object with the specified default timeout."]}
{"SampleId": 2535861, "Origin": "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName}\nis null.", "Reference": "Filter the array under test into a list composed of the elements whose property or field specified\nby {@code propertyOrFieldName} are null.", "LLMCandidates": ["Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName} is null.", "Filter the array under test keeping only elements whose property or field specified by {@code propertyOrFieldName} is null. However, this updated method also returns an AbstractListAssert instance instead of a SELF, so the return type should be updated as well.", "Filter the list under test keeping only elements whose property or field specified by {@code propertyOrFieldName} is null.", "Filter the list under test keeping only elements whose property or field specified by {@code propertyOrFieldName} is null.", "Filter the list under test keeping only elements whose property or field specified by {@code propertyOrFieldName} is null."]}
{"SampleId": 1135007, "Origin": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given coreName.", "Reference": "First sends a request to the BlobStore and gets a list of all blob file summaries\nprefixed by the given blobName.", "LLMCandidates": ["First sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName.", "First sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName.", "First sends a request to the BlobStore and gets a list of all blob file summaries prefaced by the given blobName.", "First sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName.", "First sends a request to the BlobStore and gets a list of all blob file summaries prefixed by the given blobName."]}
{"SampleId": 2624584, "Origin": "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s.", "Reference": "Creates a new HTTP authorization {@link HttpService} decorator using the specified\n{@link Authorizer}s.", "LLMCandidates": ["Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s, where the input is a generic type of {@link HttpService}.", "Creates a new HTTP authorization {@link Service} decorator using the specified {@link Authorizer}s.", "Creates a new HTTP authorization Service decorator using the specified Authorizer<HttpRequest>s.", "Creates a new HTTP authorization Service decorator using the specified Authorizer<HttpRequest>s.", "Creates a new HTTP authorization {@link Service} decorator using the specified\n{@link Authorizer}s."]}
{"SampleId": 2034558, "Origin": "Method that returns code to access a named state parameter.", "Reference": "Method that returns code to access a named prop parameter.", "LLMCandidates": ["Method that returns code to access a named property.", "Method that returns code to access a named property parameter.", "Method that returns code to access a named property parameter.", "Method that returns code to access a named property parameter.", "Method that returns code to access a named property parameter."]}
{"SampleId": 5433545, "Origin": "Do nothing if\n{@link BaseConfiguration#nocomment} is set to true.", "Reference": "Do nothing if\n{@link BaseOptions#noComment} is set to true.", "LLMCandidates": ["Do nothing if {@link Options#noComment} is set to true.", "Do nothing if {@link BaseOptions#noComment} is set to true.", "Do nothing if {@link BaseOptions#noComment} is set to true.", "Do nothing if {@link BaseConfiguration#noComment} is set to true.", "Do nothing if {@link BaseOptions#noComment} is set to true."]}
{"SampleId": 2404072, "Origin": "Executes {@link Pems#privateKeySpec(InputSupplier)} on the string which contains an encoded private key in PEM\nformat.", "Reference": "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM\nformat.", "LLMCandidates": ["Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format.", "Executes {@link Pems#privateKeySpec(InputStreamSupplier)} on the string which contains an encoded private key in PEM format, using ByteSource.wrap(pem.getBytes(Charsets.UTF_8)) as the InputStreamSupplier.", "Executes {@link Pems#privateKeySpec(InputSupplier)} on the string which contains an encoded private key in PEM format using ByteSource instead of InputStreamSupplier.", "Executes {@link Pems#privateKeySpec(InputStreamSupplier)} on the string which contains an encoded private key in PEM format using ByteSource.wrap for input.", "Executes {@link Pems#privateKeySpec(ByteSource)} on the string which contains an encoded private key in PEM format."]}
{"SampleId": 4233858, "Origin": "Verify that at most {@code maxEntries} per session can be put in the cache", "Reference": "Verify that at most {@code maxEntries} per session can be put in the store", "LLMCandidates": ["Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache", "Verify that at most {@code maxEntries} per session can be added to the cache"]}
{"SampleId": 1449477, "Origin": "Creates RedeemData for P2PKH or P2PK input.", "Reference": "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "LLMCandidates": ["Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH, or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH, or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input.", "Creates RedeemData for P2PKH, P2WPKH or P2PK input."]}
{"SampleId": 1131869, "Origin": "Return a new {@link Terms} in which term of {@code coreNodeName} is removed", "Reference": "Return a new {@link Terms} in which terms for the {@code coreNodeName} are removed", "LLMCandidates": ["Return a new {@link Terms} in which terms of {@code coreNodeName} and its recovering term are removed.", "Return a new Terms in which terms of coreNodeName and recoveringTerm(coreNodeName) are removed if they exist in the map.", "Return a new {@link Terms} in which terms of {@code coreNodeName} and its recovering term are removed", "Return a new Terms in which terms of coreNodeName or its recovering term are removed", "Return a new {@link Terms} in which terms of {@code coreNodeName} and its recovering term are removed"]}
{"SampleId": 239880, "Origin": "Typically used for RPCs\nat best efforts (e.g., async cache).", "Reference": "This method is typically used for RPCs\nproviding best efforts (e.g., async cache).", "LLMCandidates": ["Typically used for RPCs at best efforts (e.g., async cache).", "Fire and forget an RPC request without waiting for a response. This method is used to send a ProtoMessage over the network to the specified channel in a non-blocking manner.", "Fire and forget message sending for RPCs at best efforts (e.g., async cache).", "Typically used for RPCs at best efforts (e.g., async cache).", "Fire and forget RPC invocation at best efforts."]}
{"SampleId": 5149993, "Origin": "Create an initial optimistic locking value according the {@link VersionType}\ncontract for the version property if required and inject it into\nthe snapshot state.", "Reference": "Create an initial optimistic locking value according the {@link VersionSupport}\ncontract for the version property if required and inject it into\nthe snapshot state.", "LLMCandidates": ["Create an initial optimistic locking value according to the {@link VersionType} contract for the version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according the {@link VersionType} contract for the version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according the {@link VersionType} contract for the version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according to the VersionType contract for the version property if required and inject it into the snapshot state.", "Create an initial optimistic locking value according the {@link VersionType} contract for the version property if required and inject it into the snapshot state."]}
{"SampleId": 4850223, "Origin": "Returns the number of allowed parallel requests the configured {@link Router} should adhere to.", "Reference": "Returns the currently configured {@link ExchangeStrategies}.", "LLMCandidates": ["Returns the configured {@link ExchangeStrategies} for the exchange handler.", "Returns the configured ExchangeStrategies for the Router.", "Returns the configured ExchangeStrategies for the Router.", "Returns the exchange strategies configured for the component.", "Returns the exchange strategies configured for the component."]}
{"SampleId": 5079050, "Origin": "Checks that collection {@param col} doesn't contains string {@param str}.", "Reference": "Checks that collection {@param col} doesn't contains element {@param str}.", "LLMCandidates": ["Checks that collection {@param col} doesn't contain element of type {@param T} {@param elem}.", "Checks that collection {@param col} doesn't contain element of type {@param T} {@param elem}.", "Checks that collection {@param col} doesn't contains element {@param elem}.", "Checks that collection {@param col} doesn't contains element {@param elem}.", "Checks that collection {@param col} doesn't contain element of type {@param T} {@param elem}."]}
{"SampleId": 5442858, "Origin": "Return the initial pixel size used to define initial arrays\n(tile AA chunk, alpha line, buckets)", "Reference": "Return the initial pixel height used to define initial arrays\n(buckets)", "LLMCandidates": ["Return the initial pixel height used to define initial arrays\n(tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays\n(tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)", "Return the initial pixel height used to define initial arrays (tile AA chunk, alpha line, buckets)"]}
{"SampleId": 4117755, "Origin": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without an inetAddress is valid or not.", "Reference": "It is up to the Authenticator\nimplementation processing this token if an authentication attempt without a host is valid or not.", "LLMCandidates": ["It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not.", "It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not.", "It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not.", "It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not.", "It is up to the Authenticator implementation processing this token if an authentication attempt without a host is valid or not."]}
{"SampleId": 2988281, "Origin": "Useful because the\ngranularity of the clock on some systems is low, so doing a Thread.sleep(10) may not give you\na different clock value, for example.", "Reference": "(Also, useful because the granularity\nof the clock on some systems is low, so doing a Thread.sleep(10) may not give you a different clock value", "LLMCandidates": ["Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value, for example.", "Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value, for example.", "Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value, for example.", "Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value, for example.", "Useful because the granularity of the clock on some systems is low, so doing a Thread.sleep(100) may not give you a different clock value, for example."]}
{"SampleId": 340520, "Origin": "Sets {@link MediaItem2} object to render using VideoView2.", "Reference": "Sets {@link MediaItem} object to render using VideoView2.", "LLMCandidates": ["Sets {@link MediaItem} object to render using VideoView.", "Sets {@link MediaItem} object to render using VideoView.", "Sets {@link MediaItem} object to render using VideoView.", "Sets {@link MediaItem} object to render using VideoView.", "Sets {@link MediaItem} object to render using VideoView."]}
{"SampleId": 3579668, "Origin": "Otherwise,\nthe specified consumer is invoked with the leader index metadata fetched from the remote cluster.", "Reference": "Otherwise, the specified consumer is invoked with the cluster state and leader index metadata\nfetched from the remote cluster.", "LLMCandidates": ["Otherwise, the specified consumer is invoked with a tuple containing the ClusterState and IndexMetaData fetched from the remote cluster for the leader index.", "Otherwise, the specified consumer is invoked with a tuple containing the cluster state and leader index metadata fetched from the remote cluster, if fetching nodes is set to true.", "Otherwise, the specified consumer is invoked with a Tuple of the remote cluster state and leader index metadata fetched from the remote cluster.", "Checks remote cluster license, fetches cluster state, leader index metadata and history UUIDs for the specified client, cluster alias, fetch nodes flag, leader index and invokes the consumer with the tuple containing the remote cluster state and leader index metadata if the user has permissions to follow indices.", "Otherwise, the specified consumer is invoked with the leader index metadata and the cluster state fetched from the remote cluster."]}
{"SampleId": 368454, "Origin": "Returns true if the currently set key guard matches our minimum quality requirements.", "Reference": "Returns true if the currently set key guard violates our minimum quality requirements.", "LLMCandidates": ["Returns true if the currently set key guard password quality is equal to or greater than the specified minimum quality requirements.", "Returns true if the currently set key guard's quality is equal to or higher than our minimum quality requirements.", "Returns false if the currently set key guard does not meet our minimum quality requirements.", "Returns false if the currently set key guard does not meet our minimum quality requirements.", "Returns true if the currently set password meets our minimum quality requirements."]}
{"SampleId": 2939584, "Origin": "It incorporates the zone, bulb type and command\ncategory.", "Reference": "It incorporates the bridge, zone, bulb type and command\ncategory.", "LLMCandidates": ["It incorporates the bridgeOffset, config zone, bulb type and command category.", "It incorporates the bridgeOffset, zone, bulb type and command category.", "It incorporates the zone, bulb type, bridgeOffset and command category.", "It incorporates the zone, bulb type and command category, along with bridgeOffset.", "It incorporates the zone, bulb type and command category, along with bridgeOffset."]}
{"SampleId": 1706012, "Origin": "Restore redundancy with backoff.", "Reference": "Restore redundancy with an exponential backoff.", "LLMCandidates": ["Restore redundancy with backoff and return the result of the execution.", "Restore redundancy with backoff by executing the action and returning its result.", "Restore redundancy with backoff by executing the action and returning its result.", "Restore redundancy with backoff using a supplier action.", "Restore redundancy with exponential backoff."]}
{"SampleId": 4479778, "Origin": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, URI)}", "Reference": "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)}", "LLMCandidates": ["Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)", "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)", "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)", "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)", "Generates a code sample for using {@link FileClient#uploadRangeFromUrl(long, long, long, String)"]}
{"SampleId": 3731150, "Origin": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "Reference": "If typeVar is a captured wildcard, returns that wildcard; otherwise returns {@code null}.", "LLMCandidates": ["If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null.", "If typeVar is a captured wildcard, returns that wildcard; otherwise returns null."]}
{"SampleId": 2543276, "Origin": "Set this quaternion to be a representation of the supplied axis and\nangle (in radians).", "Reference": "Set this quaternion to be a representation of the supplied axis and\nangle (in degrees).", "LLMCandidates": ["Set this quaternion to be a representation of the supplied axis and angle (in degrees), converted to radians before computation.", "Set this quaternion to be a representation of the supplied axis and angle (in degrees).", "Set this quaternion to be a representation of the supplied axis and angle (in degrees).", "Set this quaternion to be a representation of the supplied axis and angle (in degrees).", "Set this quaternion to be a representation of the supplied axis and angle (in degrees)."]}
{"SampleId": 437253, "Origin": "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link\nPCollection}.", "Reference": "Like {@link #readGenericRecords(Schema)}, but for a {@link PCollection} of {@link", "LLMCandidates": ["Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link PCollection}.", "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link PCollection}.", "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link PCollection}.", "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link PCollection}.", "Like {@link #readGenericRecords(Schema)}, but reads each filepattern in the input {@link PCollection} with a default bundle size of 64MB."]}
{"SampleId": 6310269, "Origin": "Returns the whitelisted regular expressions.", "Reference": "Returns the white regular expressions.", "LLMCandidates": ["Returns the whitelisted regular expressions as an array.", "Returns the whitelisted regular expressions as an array.", "Returns the whitelisted regular expressions in an array format.", "Returns the whitelisted regular expressions in an array format.", "Returns the whitelisted regular expressions as an array."]}
{"SampleId": 613054, "Origin": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph or merge the resource consumed by state backend.", "Reference": "Used by system internally to merge the other resources of chained operators\nwhen generating the job graph.", "LLMCandidates": ["Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by state backend, including task heap memory, task off-heap memory, on-heap managed memory and off-heap managed memory.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by state backend.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by state backend, considering task heap memory, task off-heap memory, on-heap managed memory and off-heap managed memory.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by state backend, including task heap memory, task off-heap memory, on-heap managed memory and off-heap managed memory.", "Used by system internally to merge the other resources of chained operators when generating the job graph or merge the resource consumed by state backend, including task heap memory, task off-heap memory, on-heap managed memory, and off-heap managed memory."]}
{"SampleId": 2911559, "Origin": "Adds a single sensitivity to the builder using metadata.", "Reference": "Adds a single sensitivity to the builder.", "LLMCandidates": ["Adds a single sensitivity to the builder using metadata with a specified currency and value.", "Adds a single sensitivity to the builder using metadata for the given curve and currency.", "Adds a single sensitivity to the builder using metadata for the given curve and currency.", "Adds a single sensitivity to the builder using metadata with specified currency and curve name.", "Adds a single sensitivity to the builder using metadata for a given curve and currency."]}
{"SampleId": 3653159, "Origin": "Creates a Course object and an Instructor object for the Course.", "Reference": "Creates a course and an associated instructor for the course.", "LLMCandidates": ["Creates a Course object using the given CourseAttributes and an Instructor object for the Course.", "Creates a Course object with the given CourseAttributes and an Instructor object for the created Course using the provided instructor's Google ID.", "Creates a Course object from the provided CourseAttributes and an Instructor object for the created Course with the specified instructorGoogleId.", "Creates a Course object with given parameters and an Instructor object for the Course with specified instructor Google ID.", "Creates a Course object and an Instructor object for the Course using the provided CourseAttributes and account information."]}
{"SampleId": 5240878, "Origin": "Indicates if the display name of the XRY meta key is a recognized type.", "Reference": "Indicates if the display name of the XRY key is a recognized type.", "LLMCandidates": ["Indicates if the display name of an XRY meta key is a recognized type.", "Indicates if the display name of an XRY meta key is a recognized type.", "Indicates if the display name of an XRY meta key is a recognized type.", "Indicates if the display name of an XRY meta key is a recognized type.", "Indicates if the display name of an XRY meta key is a recognized type."]}
{"SampleId": 2217816, "Origin": "Test of var method, of class BinomialDistribution.", "Reference": "Test of variance method, of class BinomialDistribution.", "LLMCandidates": ["Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution.", "Test of variance method, of class BinomialDistribution."]}
{"SampleId": 2133792, "Origin": "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "Reference": "bold driver: Gemulla et al., Large-times matrix factorization with distributed stochastic gradient descent,\nKDD 2011.\nconstant decay: Niu et al, Hogwild!", "LLMCandidates": ["Updates the learning rate based on whether it's a bold driver or applies constant decay. If learnRate is less than 0.0, it returns without doing anything. Otherwise, if it's a bold driver and iter is greater than 1, it updates learnRate depending on which loss is higher. If there is decay between 0 and 1, it decreases learnRate accordingly. Lastly, it limits the updated learnRate to maxLearnRate and stores the current loss value.", "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011; constant decay: Niu et al, Hogwild!", "Bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011. Constant decay: Niu et al, Hogwild!", "This method updates the learning rate based on the current iteration. If the learnRate is less than 0.0, return without making any changes. If it is a bold driver iteration and iter is greater than 1, update the learnRate by multiplying it with 1.05f if the absolute value of the previous loss is greater than the absolute value of the current loss, or by multiplying it with 0.5f otherwise. If there is a non-zero decay rate, update the learnRate by multiplying it with the decay rate. Finally, limit the learnRate to the maximum learn rate after the update and set lastLoss to the current loss value.", "bold driver: Gemulla et al., Large-scale matrix factorization with distributed stochastic gradient descent, KDD 2011; constant decay: Niu et al, Hogwild!"]}
{"SampleId": 2062875, "Origin": "With natural ordering,\n{@link Ordering#natural()} is returned.", "Reference": "Ordering#natural()} is returned.", "LLMCandidates": ["With natural ordering, {@link Ordering#natural()} is returned if this columnComparator is not set. Otherwise, it returns the specified Comparator.", "With natural ordering, {@link Ordering#natural()} is returned. However, this method is deprecated.", "With natural ordering, {@link Ordering#natural()} is returned.", "With natural ordering, {@link Ordering#natural()} is returned.", "With natural ordering, {@link Ordering#natural()} is returned. However, note that this method is deprecated."]}
{"SampleId": 2404068, "Origin": "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM\nformat.", "Reference": "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM\nformat.", "LLMCandidates": ["Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM format using ByteSource instead of InputStreamSupplier.", "Executes {@link Pems#publicKeySpec(ByteSource)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM format using a ByteSource instead of InputStreamSupplier.", "Executes {@link Pems#publicKeySpec(InputStreamSupplier)} on the string which contains an encoded public key in PEM format.", "Executes {@link Pems#publicKeySpec(InputSupplier)} on the string which contains an encoded public key in PEM format using ByteSource instead of InputStreamSupplier."]}
{"SampleId": 4004239, "Origin": "This method schedules the disablement for asynchronous execution.", "Reference": "This method deactivates and disables the component immediately.", "LLMCandidates": ["This method disables the component synchronously without scheduling for asynchronous execution.", "This method disables the component synchronously without scheduling for asynchronous execution.", "This method disables the component immediately without any scheduling for asynchronous execution.", "This method disables the component immediately without waiting for any asynchronous execution.", "This method disables the component immediately without waiting for any asynchronous execution."]}
{"SampleId": 5588757, "Origin": "Switch to the given page, update the highlighted episode.", "Reference": "Switch to the episode at the given position.", "LLMCandidates": ["Switch to the given page, update the highlighted episode by calling switchView(false).", "Switch to the given page, update the highlighted episode by calling switchView(false).", "Switch to the given page, update the highlighted episode by calling switchView(false).", "Switch to the given page, update the highlighted episode. If in single pane view, hide container list and show container pager.", "Set the current page, update the highlighted episode by switching the view if in single pane mode."]}
{"SampleId": 1968999, "Origin": "Repairs the metadata table.", "Reference": "Repairs the schema history table.", "LLMCandidates": ["Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table.", "Repairs the schema history table."]}
{"SampleId": 3629275, "Origin": "Returns an immutable list containing three elements.", "Reference": "Returns an unmodifiable list containing three elements.", "LLMCandidates": ["Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements.", "Returns an unmodifiable list containing three elements."]}
{"SampleId": 3306952, "Origin": "Sets SSLHostConfig infos.", "Reference": "Sets SslHostConfig infos.", "LLMCandidates": ["Sets SSLHostConfigInfos infos.", "Sets SSLHostConfigInfo infos.", "Sets SSLHostConfigInfo infos.", "Sets SSLHostConfigInfo infos.", "Sets SSLHostConfigInfo infos."]}
{"SampleId": 3629303, "Origin": "See Immutable Set Static Factory Methods for details.", "Reference": "See Unmodifiable Sets for details.", "LLMCandidates": ["See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details.", "See Unmodifiable Set Static Factory Methods for details."]}
{"SampleId": 2404091, "Origin": "Sets the CSS pages for the Static Website.", "Reference": "Sets the listings CSS page for the Static Website.", "LLMCandidates": ["Sets the CSS pages for the Static Website using the specified key (STATIC_WEB_LISTINGS_CSS).", "Sets the CSS pages for the Static Website using the specified key STATIC_WEB_LISTINGS_CSS.", "Sets the CSS pages for the Static Website using the specified key STATIC_WEB_LISTINGS_CSS.", "Sets the CSS pages for the Static Website using the specified key.", "Sets the CSS pages for the Static Website using the specified key \"STATIC_WEB_LISTINGS_CSS\"."]}
{"SampleId": 4002573, "Origin": "Returns a literal for the {@link Reference} policy.", "Reference": "Returns a literal for the {@link ScrService.Reference} policy.", "LLMCandidates": ["Returns a literal for the {@link ScrService.Reference} policy.", "Returns a literal for the {@link ScrService.Reference} policy.", "Returns a literal for the {@link ScrService.Reference} policy.", "Returns a literal for the {@link ScrService.Reference} policy.", "Returns a literal for the ScrService.Reference policy."]}
{"SampleId": 3772633, "Origin": "Expands the given row.", "Reference": "Expands the given item at given index.", "LLMCandidates": ["Expands the given row by adding its child rows if it is not already expanded.", "Expands the given row by adding its children rows if it's not already expanded and retrieves their data to be pushed to client.", "Expands the given row by adding it to the tree grid and fetching its child rows if not already expanded.", "Expands the given row by adding it to the tree grid and fetching its child rows if not already expanded.", "Expands the given row by updating its child rows if it is not already expanded and there are pending expansions."]}
{"SampleId": 340561, "Origin": "Sets playback rate using {@link PlaybackParams2}.", "Reference": "Sets playback rate using {@link PlaybackParams}.", "LLMCandidates": ["Sets playback rate using {@link PlaybackParams}.", "Sets playback rate using {@link PlaybackParams}.", "Sets playback rate using {@link PlaybackParams}.", "Sets playback rate using {@link PlaybackParams}.", "Sets playback rate using {@link PlaybackParams}."]}
{"SampleId": 4617700, "Origin": "Adds the specified argument as XQuery string.", "Reference": "Adds the specified argument unchanged.", "LLMCandidates": ["Adds the specified argument as string, if it's not null.", "Adds the specified argument as string. If it is not null, adds space and the string to the buffer.", "Adds the specified argument as a string. If the argument is not null, it appends the argument value with a space to the StringBuilder.", "Adds the specified argument as string. If the argument is not null, appends it after a space.", "Adds the specified argument as string. If the argument is not null, appends it after a space."]}
{"SampleId": 6043581, "Origin": "Returns an ordered range of all the sync d l objects where companyId = ?", "Reference": "Returns an ordered range of all the sync d l objects where modifiedTime > ?", "LLMCandidates": ["Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ? and parentFolderId = ?", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ? and parentFolderId = ?", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ? and parentFolderId = ?", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ? and parentFolderId = ?", "Returns an ordered range of all the sync d l objects where modifiedTime = ? and repositoryId = ? and parentFolderId = ?"]}
{"SampleId": 2913863, "Origin": "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to\nthe average of the smallest 99% of the observations.", "Reference": "This is measured from the bottom, that is, Thus the expected shortfall with the level 99% corresponds to\nthe smallest 99% observations.", "LLMCandidates": ["This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the observations.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the observations.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the observations.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the observations.", "This is measured from the bottom, that is, the expected shortfall with the level 99% corresponds to the average of the smallest 99% of the observations."]}
{"SampleId": 3652786, "Origin": "The base URL will be the application URL.", "Reference": "The base URL will be the application back-end URL.", "LLMCandidates": ["The base URL will be the back-end application URL.", "The base URL will be the back-end application URL.", "The base URL will be the back end application URL.", "The base URL will be the back end application URL.", "The base URL will be the back-end application URL."]}
{"SampleId": 4863800, "Origin": "Atomically updates the current hi value with the results of\napplying the given delta, returning the updated value.", "Reference": "Atomically adds the given delta to the current hi value, returning the updated hi value.", "LLMCandidates": ["Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically updates the current hi value with the results of applying the given delta, returning the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value.", "Atomically adds the given delta to the current hi value and returns the updated value."]}
{"SampleId": 3562209, "Origin": "Returns the report builder for the rootmost component that contains any of the duplicate\nbindings.", "Reference": "Returns the report builder for the rootmost component that contains any of the {@code\nbindings}.", "LLMCandidates": ["Returns the report builder for the rootmost component that contains any of the bindings.", "Returns the report builder for the rootmost component that contains any of the bindings.", "Returns the report builder for the rootmost component that contains any of the bindings.", "Returns the report builder for the rootmost component that contains any of the bindings.", "Returns the report builder for the rootmost component that contains any of the bindings."]}
{"SampleId": 3906717, "Origin": "Centres this dialog on the main fame.", "Reference": "Centres this dialog on the parent window.", "LLMCandidates": ["Centres this dialog on the main frame using SwingUtilities.getWindowAncestor(this).", "Centres this dialog on the main frame's ancestor window using SwingUtilities.getWindowAncestor(this).", "Centres this dialog on the main frame's ancestor window using SwingUtilities.getWindowAncestor.", "Centres this dialog on the main frame's window ancestor.", "Centres this dialog on the main frame's window ancestor."]}
{"SampleId": 1790907, "Origin": "Gets the value of the source property.", "Reference": "Gets the value of the parameter property.", "LLMCandidates": ["Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property.", "Gets the value of the parameter property."]}
{"SampleId": 4465302, "Origin": "If an event\nlistener is assignable to {@link EventListener} it will registered as is.", "Reference": "If an event\nhandler is assignable to {@link EventMessageHandler} it will registered as is.", "LLMCandidates": ["If an event handler is assignable to {@link EventListener} it will registered as is.", "If an event handler is assignable to {@link EventListener} it will be registered as is.", "If an event handler is assignable to {@link EventListener} it will registered as is.", "If an event handler is assignable to {@link EventListener} it will registered as is.", "If an event handler is assignable to {@link EventListener} it will registered as is."]}
{"SampleId": 4239806, "Origin": "use_credentials: Cross-origin CORS requests for the element will have the credentials flag set.", "Reference": "USE_CREDENTIALS: Cross-origin CORS requests for the element will have the credentials flag set.", "LLMCandidates": ["Sets the cross-origin CORS requests for the element to include credentials when making cross-origin CORS requests.", "Sets the cross-origin flag for CORS requests to allow credentials for the element.", "Sets the Cross-origin CORS requests for the element to have the credentials flag set.", "Sets the cross-origin CORS requests for the element to have the credentials flag set.", "Sets the cross-origin CORS requests for the element to have the credentials flag set."]}
{"SampleId": 3081518, "Origin": "Allocates an array of the specified length in unmanaged memory to hold references to objects\non the Java heap.", "Reference": "Allocates an array of the specified length to hold references to objects on the Java heap.", "LLMCandidates": ["Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap.", "Allocates an array of the specified length in unmanaged memory to hold references to objects on the Java heap."]}
{"SampleId": 1351493, "Origin": "Nota: the defining points are meant to be the extrema points inside the ribbon.", "Reference": "Nota: the defining points are meant to be the precise extrema Point2D values on the\nborders of the ribbon.", "LLMCandidates": ["Nota: the defining points are meant to be the extrema points inside the ribbon.", "Nota: the defining points are meant to be the extrema points inside the ribbon.", "Creates a vertical ribbon area by appending left and right lines to a GeoPath object.", "Create a vertical ribbon from a given shape with width by drawing a left line shifted to the left by half of the width and a right line reversed and shifted to the right by half of the width.", "Creates a vertical ribbon by extending a line segment from the left end of the median shape to the right end and applying an affine transformation to translate it by half the width."]}
{"SampleId": 2337343, "Origin": "Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Reference": "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "LLMCandidates": ["Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "DEPRECATED. Please use isIsLocked. Customer lock status: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore. (default: `false`)", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore.", "Customer is locked: * `false` - unlocked * `true` - locked  All users of this customer will be blocked and can not login anymore."]}
{"SampleId": 1878720, "Origin": "A comparison of document clustering techniques\nKDD workshop on text mining, 2000", "Reference": "A Comparison of Document Clustering Techniques\nKDD workshop on text mining.", "LLMCandidates": ["A comparison of document clustering techniques\nKDD workshop on text mining, 2000", "A comparison of document clustering techniques\nKDD workshop on text mining, 2000\n\nKDD workshop on text mining. Vol. 400. No. 1\n\nhttp://glaros.dtc.umn.edu/gkhome/fetch/papers/docclusterKDDTMW00.pdf\n\nbibkey:conf/kdd/SteinbachKK00", "A comparison of document clustering techniques - KDD workshop on text mining, 2000", "A comparison of document clustering techniques - KDD workshop on text mining, 2000", "A comparison of document clustering techniques\nKDD workshop on text mining. Vol. 400. No. 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnswer:\nA Comparison of Document Clustering Techniques\nKDD Workshop on Text Mining, 2000"]}
{"SampleId": 437086, "Origin": "Doesn't support date types.", "Reference": "Doesn't support date types or structs.", "LLMCandidates": ["This function converts TableRows to Beam Row without needing a TableSchema object because TableSchema contains redundant information already available in the Schema object and TableSchema objects are not serializable. However, it currently doesn't support date types.", "Converts a BigQuery TableRow into an Avro Row without relying on a TableSchema object because it is not serializable and can cause difficulties in a pipeline. However, this function currently doesn't support date types.", "Converts a BigQuery TableRow to a Beam Row without requiring a BigQuery TableSchema object, as the Schema object contains all necessary information and BigQuery TableSchema objects are not serializable. Currently does not support date types.", "Converts TableRows to BeamRow without requiring access to TableSchema. This method supports all data types except date types.", "Converts a BigQuery TableRow into a Beam Row without requiring a TableSchema object, as they are not serializable and the Schema contains sufficient information to match column names. Supports all field types except for date."]}
{"SampleId": 5749488, "Origin": "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Reference": "Test method for {@link org.infinispan.spring.remote.provider.SpringRemoteCacheManager#start()}.", "LLMCandidates": ["Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}, when the native cache manager is initialized with a parameter of false.", "Test method for {@link org.infinispan.spring.provider.SpringRemoteCacheManager#start()}."]}
{"SampleId": 3270305, "Origin": "Returns the expression node to the left of the \"::\" if it exists.", "Reference": "Returns the expression to the left of the \"::\" if it exists and is\nunambiguous.", "LLMCandidates": ["Returns the expression node to the left of the \"::\" if it exists and is not an ASTAmbiguousName; otherwise, returns null.", "Returns the expression node to the left of the \"::\" if it exists and is not an ASTAmbiguousName; otherwise, returns null.", "Returns the expression node to the left of the \"::\" if it exists and is not an ASTAmbiguousName; otherwise, returns null.", "Returns the expression node to the left of the \"::\" if it exists and is not an ASTAmbiguousName. Otherwise returns null.", "Returns the expression node to the left of the \"::\" if it exists and is not an ASTAmbiguousName; otherwise, returns null."]}
{"SampleId": 1678724, "Origin": "Execute function for each chunk of arguments.", "Reference": "Execute function for each chunk of arguments and collect the result.", "LLMCandidates": ["Execute function for each chunk of arguments using the given processor.", "Execute function for each chunk of arguments with a lambda expression.", "Execute function for each chunk of arguments with a lambda expression.", "Execute function for each chunk of arguments using a lambda expression.", "Execute function for each chunk of arguments using a lambda expression."]}
{"SampleId": 5241596, "Origin": "Runs a process using a custom timeout and a process terminator.", "Reference": "Runs a process using a custom termination check interval and a process\nterminator.", "LLMCandidates": ["Runs a process using a custom termination check interval and a process terminator.", "Runs a process using a custom termination check interval and a process terminator.", "Runs a process using a custom termination check interval and a process terminator.", "Runs a process using a custom termination check interval and a process terminator.", "Runs a process using a custom termination check interval and a process terminator."]}
{"SampleId": 4117756, "Origin": "(Shiro's default Authenticator\nallows null IPs to support localhost and proxy server environments).", "Reference": "(Shiro's default Authenticator allows null hosts to support localhost and proxy server environments).", "LLMCandidates": ["Returns the host of this InetAddress object. This method allows null hosts to support localhost and proxy server environments.", "(Shiro's default Authenticator allows null hostnames to support localhost and proxy server environments).", "(Shiro's default Authenticator allows null strings to support localhost and proxy server environments).", "Returns the host of the InetAddress object associated with this connection manager.", "Returns the host of the InetAddress object associated with this connection manager."]}
{"SampleId": 2615599, "Origin": "Adds an actor as a child of this group, immediately after another child actor.", "Reference": "If the\nactor is already a child of this group, no changes are made.", "LLMCandidates": ["Adds an actor as a child of this group, immediately after another child actor, unless the actor is already a child of this group or its current parent is this group.", "Adds an actor as a child of this group, immediately after another child actor, but only if the actor to be added is not already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor, if the actor is not already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor, unless the actor is already a child of this group.", "Adds an actor as a child of this group, immediately after another child actor. If the actor is already added to another parent node, it will be removed before being added to this group."]}
{"SampleId": 616737, "Origin": "TODO: If an input result partition of an involved region is not available, i.e.", "Reference": "If an input result partition of an involved region is not available, i.e.", "LLMCandidates": ["Starts from a failed region and visits all involved regions by checking needed input result partitions' availability and consumer regions.", "Starts from a failed region and visits all involved regions, including those that produce unavailable input result partitions or consume output of the failed region. Returns a set containing all involved regions as restart candidates.", "Determines all involved regions that need restarting based on the given failed region by traversing all involved regions recursively until no more unavailable result partitions are found.", "Computes all regions that need to be restarted due to unavailability of input or consumer result partitions. The method starts from the given failed region and visits all involved regions using backtracking logic. An involved region should be restarted, and all consumer regions of an involved region and producer regions of its input edges are also considered as involved regions if they haven't been visited before.", "If an input result partition of an involved region is not available, i.e."]}
{"SampleId": 1880564, "Origin": "Use {@link #destroyToNaiveMatrix()} if you do not need further\nupdates.", "Reference": "Use {@link #destroyToPopulationMatrix()} if you do not need further\nupdates.", "LLMCandidates": ["Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates.", "Use {@link #destroyToPopulationMatrix()} if you do not need further updates."]}
{"SampleId": 1095693, "Origin": "This method currently handles\nevents for the classname combo box.", "Reference": "This method currently handles\nevents for the classname JLabeledChoice", "LLMCandidates": ["This method currently handles events for the class name labeled choice.", "This method currently handles events for the classname LabeledChoice.", "This method currently handles events for the classname labeled choice box.", "This method currently handles events for the classname labeled choice box.", "This method now handles events for the classname labeled choice."]}
{"SampleId": 4622144, "Origin": "Waits until the query with the specified id has been started.", "Reference": "Waits until a very slow query has been started.", "LLMCandidates": ["Waits until the very slow query has been started.", "Waits until the very slow query has been started.", "Waits until the very slow query has been started.", "Waits until the very slow query has been started.", "Waits until the very slow query has been started."]}
{"SampleId": 3566648, "Origin": "{@code handshake} will be null and {@code throwable} will be non-null in the case of a\nfailed TLS connection attempt.", "Reference": "{@code handshake} will be null and {@code ioe} will be non-null in the case of a\nfailed TLS connection attempt.", "LLMCandidates": ["handshake\" will be null and \"throwable\" will be non-null in the case of a failed TLS connection attempt.", "@{code ioe} will be null and {@code throwable} will be non-null in the case of a failed TLS connection attempt.", "In the case of a failed TLS connection attempt, {@code ioe} will be non-null and both {@code handshake} and {@code throwable} will be null.", "The updated version of secureConnectEnd takes {@code ioe} instead of {@code throwable}, and it indicates a failed TLS connection attempt when {@code ioe} is non-null.", "In the case of a failed TLS connection attempt, {@code ioe} will be non-null."]}
{"SampleId": 1314713, "Origin": "Creates an audit entry when a service definition is deleted.", "Reference": "Creates an audit entry when a API definition is deleted.", "LLMCandidates": ["Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted.", "Creates an audit entry when an API definition is deleted."]}
{"SampleId": 3493342, "Origin": "Schedules package actions differentiating their type among Linux and Solaris\nservers.", "Reference": "Schedules package actions.", "LLMCandidates": ["Schedules package actions differentiating their type among Linux servers and returns the result.", "Schedules package actions differentiating their type among Linux servers only.", "Schedules package actions differentiating their type among Linux servers only.", "Schedules package actions differentiating their type among Linux servers only.", "Schedules package actions differentiating their type among Linux servers only."]}
{"SampleId": 1327230, "Origin": "Returns the partition ID for the given key.", "Reference": "Returns the service ID for the given primitive ID.", "LLMCandidates": ["Returns a ServiceId object for the given ID. The ServiceId object contains the name of the primitive and its type.", "Gets the Service ID for the given identifier I.", "Gets the Service ID for the given identifier I.", "Returns the service ID for the given key.", "Returns the service ID for the given key."]}
{"SampleId": 2480730, "Origin": "Return the formatted string.", "Reference": "Return the formatted string in its current state.", "LLMCandidates": ["Return a formatted string representation of this object's text field.", "Return the formatted string representing the text.", "Return the formatted string representing the contents of the text object.", "Return the formatted string representing the contents of the text object.", "Return the formatted string representing this text."]}
{"SampleId": 5367566, "Origin": "If --all is specified, --interface won't be visible", "Reference": "If --all is specified, --entity won't be visible", "LLMCandidates": ["If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible", "If --all is specified, --entity won't be visible"]}
{"SampleId": 1836978, "Origin": "Returns the raw binary representation of the handshake header.", "Reference": "Returns the raw binary representation of the handshake message.", "LLMCandidates": ["Returns the raw binary representation of the handshake header including the message fragment if it has not been previously computed and stored in byteArray.", "Returns the raw binary representation of the handshake header, considering fragmentation and sequence number if applicable.", "Returns the raw binary representation of the handshake header, considering the message's fragmentation and length. If the rawMessage is not null, it will be returned directly instead of encoding the message.", "Returns the raw binary representation of the handshake header, only if the rawMessage is null; otherwise, it returns the cached byte array.", "Returns the raw binary representation of the handshake header including the message fragment. If the byte array is already generated, it will return it directly without re-generating it."]}
{"SampleId": 4386708, "Origin": "Access Control Using AWS Identity and Access Management (IAM) \n.", "Reference": "For more information, see Access Control Using AWS Identity and Access Management (IAM).", "LLMCandidates": ["Completes a multipart upload initiated with InitiateMultipartUpload and returns the completed multipart upload.", "Complete the multipart upload for the specified S3 object using AWS Identity and Access Management (IAM).", "Complete the multipart upload for the specified S3 object using AWS Identity and Access Management (IAM).", "Completes a multipart upload by providing all the parts of an object and returns a CompleteMultipartUploadResult. The method takes a CompleteMultipartUploadRequest as input and returns a CompleteMultipartUploadResult. This method uses protocolFactory to create the appropriate response handler for handling the JSON response from the API.", "This method completes a multipart upload initiated with InitiateMultipartUpload and returns the complete multipart upload result. It takes a CompleteMultipartUploadRequest as input and returns a CompleteMultipartUploadResult. The request is marshalled and sent to AWS using the provided protocol factory. The response handler created from the provided JSON unmarshaller is used to handle the response, and the AWS request metrics are logged at various stages of the request execution."]}
{"SampleId": 125265, "Origin": "Sets the console script.", "Reference": "Sets the web server script.", "LLMCandidates": ["Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script.", "Sets the web server script."]}
{"SampleId": 2824496, "Origin": "Should return {@code null} for values that cannot be compared\nunder Comparability semantics.", "Reference": "Should return {@code Comparison.UNDEFINED} for values that cannot be compared\nunder Comparability semantics.", "LLMCandidates": ["Should return {@code null} for values that cannot be compared under Comparability semantics when either this or the other value is undefined.", "Returns {@code Comparison.UNDEFINED} for values that cannot be compared under Comparability semantics when either the current value or the specified value is undefined. Otherwise returns a comparison result based on the unsafeCompareTo method.", "Should return {@code null} for values that cannot be compared under Comparability semantics when either this or the other value are undefined.", "Should return {@code null} if either this or other value is undefined under Comparability semantics. Otherwise, return a valid Comparison object based on the result of unsafeCompareTo().", "Returns {@code null} for values that cannot be compared under Comparability semantics when either this or the other value is undefined. Otherwise, returns the comparison result."]}
{"SampleId": 4479746, "Origin": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#URL-String}", "Reference": "{@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String}", "LLMCandidates": ["@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String", "@codesnippet com.azure.storage.blob.specialized.PageBlobClient.copyIncremental#String-String"]}
{"SampleId": 3325967, "Origin": "Backs up the subscriptions and bookmarks databases to external storage.", "Reference": "Backs up the databases to external storage.", "LLMCandidates": ["Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage.", "Backs up the subscriptions, bookmarks, playback status, channel filtering, and search history databases to external storage."]}
{"SampleId": 234012, "Origin": "If the lock list is write locked, returns LockMode.WRITE.", "Reference": "If mode is read but the lock list is write locked, returns LockMode.WRITE.", "LLMCandidates": ["If the lock list is write locked, returns LockMode.WRITE; otherwise returns the given mode.", "If the lock list is write locked, returns LockMode.WRITE.", "If the lock list is write locked, returns LockMode.WRITE.", "Returns LockMode.WRITE if the lock list is currently write locked; otherwise, returns the given mode.", "If the lock list is write locked, returns LockMode.WRITE."]}
{"SampleId": 6188983, "Origin": "Custom logic to only enable the configuration element as this is immutable and once the MuleContext is started we cannot change\nvalues.", "Reference": "MuleConfiguration for instance is immutable and once the MuleContext is started we cannot change its values.", "LLMCandidates": ["Updates the MuleObjects to enable only the configuration element by checking its identifier and returns true if it matches the CONFIGURATION_IDENTIFIER. Also, checks for other elements that use a transaction manager factory and returns their boolean flag accordingly.", "Enables Mule objects by checking if a specific component model identifier matches CONFIGURATION_IDENTIFIER. If it does not match, it also checks for a TransactionManagerFactory type in the configuration attribute and returns the result. This ensures that only the configuration element is enabled and other Mule objects are not affected.", "Enables Mule objects by conditionally checking if a configuration element is present and handling it accordingly, taking into account potential Transaction Manager factories in the process.", "Custom logic to only enable the MuleObject element based on its identifier, and determine if it needs a TransactionManagerFactory by checking its type definition. This is used when the MuleContext is started, as values cannot be changed once it's started.", "Enables MuleObjects by checking if the component model identifier matches CONFIGURATION_IDENTIFIER and determining if it is a TransactionManagerFactory type. If not, it checks all building definitions for a potential TransactionManagerFactory type definition."]}
{"SampleId": 3775230, "Origin": "If the new value is not equal to\n{@code getValue()}, fires a value change event.", "Reference": "If the new value is not equal to\n{@code getValue()}, fires a {@link ValueChangeEvent}.", "LLMCandidates": ["If the new value is not equal to {super.getValue()}, fires a value change event.", "If the new value is not equal to {@code getValue()}, fires a value change event.", "If the new value is not equal to {code getValue()}, fires a value change event.", "If the new value is not equal to {@code getValue()}, fires a value change event.", "If the new value is not equal to {@code getValue()}, fires a value change event."]}
{"SampleId": 5763909, "Origin": "Gets a collection of bibentries and sets an ID for every entry.", "Reference": "Gets a collection of entries and sets an ID for every entry.", "LLMCandidates": ["Creates a BibDatabase object from a given collection of entries and assigns a unique ID to each entry using the IdGenerator. It then inserts all the entries into the database.", "Creates a BibDatabase object from a given collection of BibEntry objects and assigns unique IDs to each entry using the IdGenerator. Finally, inserts all entries into the database.", "Creates a BibDatabase object with entries from the given collection and sets an ID for each entry using the IdGenerator's next method. Inserts all entries into the database.", "Gets a collection of entries and sets an ID for every entry by using the IdGenerator.", "Creates a BibDatabase using the given entries and sets an ID for each entry using IdGenerator."]}
{"SampleId": 3678294, "Origin": "Obtains an instance of {@code ZonedDateTime} from an {@code OffsetDateTime}.", "Reference": "Obtains an instance of {@code ZonedDateTime} from the instant formed by combining\nthe local date-time and offset.", "LLMCandidates": ["Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime} and {@code ZoneOffset}.", "Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}.", "Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime} and {@code ZoneOffset}.", "Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime}, {@code ZoneOffset}, and {@code ZoneId}.", "Obtains an instance of {@code ZonedDateTime} from a {@code LocalDateTime} and {@code ZoneOffset}."]}
{"SampleId": 336223, "Origin": "Called when a track info is deselected.", "Reference": "Called when a track is deselected.", "LLMCandidates": ["Called when a track info is deselected for the given controller.", "Called when a selected track info is deselected.", "Called when a selected track info is deselected.", "Called when a track info is deselected with non-null controller and TrackInfo parameters.", "Called when a track info is deselected with non-null controller and TrackInfo parameters."]}
{"SampleId": 340563, "Origin": "Gets current playback position as a {@link MediaTimestamp2}.", "Reference": "Gets current playback position as a {@link MediaTimestamp}.", "LLMCandidates": ["Gets current playback position as a {@link MediaTimestamp}.", "Gets current playback position as a {@link MediaTimestamp}.", "Gets current playback position as a {@link MediaTimestamp}.", "Gets current playback position as a {@link MediaTimestamp}.", "Gets current playback position as a {@link MediaTimestamp}."]}
{"SampleId": 1765423, "Origin": "Internal mapper to remember and add all types for the RecyclerView.", "Reference": "Internal mapper to remember and add all view types for the items.", "LLMCandidates": ["Internal mapper to remember and add all types for the RecyclerView.", "Internal mapper to remember and add all types for the RecyclerView, with logging using Log class instead of Android log class.", "Internal mapper to remember and add all types for the RecyclerView with a logging statement.", "Internal mapper to remember and add all types for the RecyclerView, logging when a type is mapped.", "Internal mapper to remember and add all types for the RecyclerView, logging the mapping event."]}
{"SampleId": 3355672, "Origin": "They are not accessible in the handler provided as parameter.", "Reference": "They are NOT accessible in the handler provided as parameter.", "LLMCandidates": ["The handler parameter's WebSocket objects are not directly accessible here.", "They are not accessible from outside of the handler provided as parameter.", "Parameters are not accessible within the handler provided.", "Parameters are not accessible within the handler provided.", "Parameters are not accessible within the handler provided."]}
{"SampleId": 5456947, "Origin": "XML Catalogs, OASIS Standard V1.1, invalid path entries will be ignored.", "Reference": "XML Catalogs, OASIS Standard V1.1, if a catalog entry is invalid, it\nis ignored.", "LLMCandidates": ["Create a new XML catalog using the specified features and URIs. Invalid URI entries will be validated before creating the catalog.", "Create a new XML Catalog from provided features and URIs. Invalid URI syntax will be validated before creating the catalog.", "XML Catalogs, OASIS Standard V1.1, invalid URI entries will be ignored.", "Creates a new catalog with the specified features and URI paths, validates the URI syntax, and loads the catalog. Invalid URI entries will be ignored.", "Creates a new catalog with the specified features and URIs, validating the URI syntax before using them. Invalid path entries will be ignored."]}
{"SampleId": 2544523, "Origin": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniond) rotate()} instead.", "Reference": "In order to apply the rotation transformation to an existing transformation,\nuse {@link #rotate(Quaterniondc) rotate()} instead.", "LLMCandidates": ["In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniondc) rotate()} instead.", "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniondc) rotate()} instead.", "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniond) rotate()} instead.", "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniond) rotate()} instead.", "In order to apply the rotation transformation to an existing transformation, use {@link #rotate(Quaterniondc) rotate()} instead."]}
{"SampleId": 4622194, "Origin": "Returns the servlet request instance.", "Reference": "Returns the current HTTP connection.", "LLMCandidates": ["Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance.", "Returns the HTTP connection instance."]}
{"SampleId": 431986, "Origin": "Varargs version of {@link #addState(Closure, Object, java.util.Set)}.", "Reference": "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "LLMCandidates": ["Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}.", "Varargs version of {@link #addState(Consumer, Object, java.util.Set)}."]}
{"SampleId": 4374184, "Origin": "This completes the switch.", "Reference": "This completes the change.", "LLMCandidates": ["This completes the switch from enableFullControl to enableAllFeatures.", "This completes the switch from EnableFullControlResult to EnableAllFeaturesResult.", "This completes the switch from EnableFullControlResult to EnableAllFeaturesResult and from EnableFullControlRequest to EnableAllFeaturesRequest.", "This completes the enable all features switch.", "This completes the enable all features switch."]}
{"SampleId": 2312555, "Origin": "Creates a command that can be run later which will restore a display to its\ncurrent state.", "Reference": "Creates a module that can be run later which will restore a display to its\ncurrent state.", "LLMCandidates": ["Creates a module containing a command that can be run later which will restore a display to its current state.", "Creates a module that can be run later which will restore a display to its current state.", "Creates a module that can be undone later which will restore a display to its current state.", "Creates a module that can be undone later which will restore a display to its current state.", "Creates a module that can be run later which will restore a display to its current state."]}
{"SampleId": 2427472, "Origin": "Return the underlying expression tree.", "Reference": "Return the math expression as operation tree.", "LLMCandidates": ["Return the underlying expression tree.", "Return the underlying expression tree represented by the current object.", "Return the underlying expression tree.", "Return the underlying expression tree.", "Return the underlying expression tree."]}
{"SampleId": 3080392, "Origin": "A guarded transition from native to Java.", "Reference": "An unguarded transition to Java.", "LLMCandidates": ["Sets the status to Java without guard.", "A guarded transition from native to Java, updating the statusTL with STATUS_IN_JAVA.", "A guarded transition from native to Java by setting the volatile value to STATUS_IN_JAVA.", "A guarded transition from native to Java by setting the volatile value to STATUS_IN_JAVA.", "A guarded transition from native to Java, setting statusTL volatile to STATUS_IN_JAVA."]}
{"SampleId": 115634, "Origin": "Setter for the auto-pull flag.", "Reference": "Setter for the pull-after flag.", "LLMCandidates": ["Setter for the pull-after flag.", "Setter for the pull-after flag.", "Setter for the pull-after flag.", "Setter for the pull after flag.", "Setter for the pull after flag."]}
{"SampleId": 3084134, "Origin": "Calls {@link #arrayAllocationSize(int, int, int, GraalHotSpotVMConfig)} using an injected VM\nconfiguration object.", "Reference": "Calls {@link #arrayAllocationSize(int, int, int, int)} using an injected VM configuration\nobject.", "LLMCandidates": ["Calls {@link #arrayAllocationSize(int, int, int, ObjectAlignment)} using an injected VM configuration object.", "Calls {@link #arrayAllocationSize(int, int, int, objectAlignment)} using an injected VM configuration object.", "Calls {@link #arrayAllocationSize(int, int, int, objectAlignment)} using an injected VM configuration object.", "Calls {@link #arrayAllocationSize(int, int, int, objectAlignment)} using an injected VM configuration object.", "Calls {@link #arrayAllocationSize(int, int, int, objectAlignment)} using an injected VM configuration object."]}
{"SampleId": 232605, "Origin": "Get a table object based on the identifier.", "Reference": "Get a table object by name.", "LLMCandidates": ["Get a table object based on the database and table name.", "Get a table object based on the database and table names.", "Get a table object based on the database and table names.", "Get a table object based on the database name and table name.", "Get a table object based on the database name and table name."]}
{"SampleId": 3861954, "Origin": "reverts local changes for this post, replacing it with the latest version from the server", "Reference": "discard local changes for this post, replacing it with the latest version from the server", "LLMCandidates": ["discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server", "discards local changes for this post, replacing it with the latest version from the server"]}
{"SampleId": 2706458, "Origin": "Get Multiply Rate.", "Reference": "Get Faktor.", "LLMCandidates": ["Get Multiply Rate - Returns the multiply rate as a BigDecimal. If the value is null, it returns ZERO.", "Get Multiply Rate (returns a BigDecimal value if it exists for the column, otherwise returns BigDecimal.ZERO)", "Get Multiply Rate as java.math.BigDecimal.", "Get Multiply Rate as java.math.BigDecimal.", "Get Multiply Rate, returning a BigDecimal value or zero if not available."]}
{"SampleId": 2312346, "Origin": "By design the return value is not a {@link WithinRangeCondition}.", "Reference": "By design the return value is not a speciailized version of a Condition.", "LLMCandidates": ["By design the return value is not a {@link WithinRangeCondition}.", "By design, the return value is not a {@link WithinRangeCondition}.", "By design, the return value is not a {@link WithinRangeCondition}.", "By design the return value is not a WithinRangeCondition.", "By design the return value is not a WithinRangeCondition."]}
{"SampleId": 2794170, "Origin": "This method sets the value of the database column m_prj_risk.dateraised", "Reference": "This method sets the value of the database column m_prj_risk.raisedDate", "LLMCandidates": ["This method sets the value of the database column m_prj_risk.raiseddate.", "This method sets the value of the database column m_prj_risk.raiseddate", "This method sets the value of the database column m_prj_risk.raiseddate", "This method sets the value of the database column m_prj_risk.raiseddate", "This method sets the value of the database column m_prj_risk.raiseddate."]}
{"SampleId": 3366652, "Origin": "Returns the Realm Type, in the described table, of the named column.", "Reference": "Returns the {@link ColumnDetails}, in the described table, of the named column.", "LLMCandidates": ["Returns the column details of the named column from the indicesMap.", "Returns the ColumnDetails object of the named column from the indicesMap if it exists, otherwise null.", "Returns the ColumnDetails object of the named column from the indicesMap if it exists, otherwise null.", "Returns the details of the named column in the described table.", "Returns the column details, in the described table, of the named column."]}
{"SampleId": 611958, "Origin": "Finds the table schema that can be used for a format schema (without time attributes).", "Reference": "Finds the table schema that can be used for a format schema (without time attributes and generated columns).", "LLMCandidates": ["Finds the table schema that can be used for a format schema (without time attributes), considering generated columns and aliasing.", "Finds the table schema that can be used for a format schema without time attributes, considering generated columns and aliases if present.", "Finds the table schema that can be used for a format schema (without time attributes), considering generated columns and excluding proctime and rowtime fields.", "Finds the physical table schema that can be used for a format schema (without time attributes).", "Finds the table schema that can be used for a format schema (without time attributes), considering generated columns and modifying the code accordingly."]}
{"SampleId": 5471048, "Origin": "Note: This API uses {@link Class} instead of {@link Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "Reference": "Note: This API uses {@link Class} instead of {@code Module} to provide backwards\ncompatibility for JVMCI clients compiled against a JDK release earlier than 9.", "LLMCandidates": ["Note: This API uses {@link Class} instead of {@link Module} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9. If the Java Specification Version is 9 or higher, this method dynamically exports all JVMCI packages rather than requiring multiple --add-exports options on the JVM command line.", "Note: This API uses {@link Class} instead of {@link Module} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9. If the current Java version is 9 or later, it dynamically exports all JVMCI packages without requiring long lists of --add-exports options on the JVM command line.", "Note: This API uses {@link Class} instead of {@link Module} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9. Additionally, the method now checks if the current Java specification version is 9 or greater before proceeding with the export operation.", "Note: This API uses {@link Class} instead of {@link Module} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9. If the current JDK version is 9 or above, it dynamically exports all JVMCI packages instead of requiring a long list of --add-exports options on the JVM command line.", "Note: This API uses {@link Class} instead of {@link Module} to provide backwards compatibility for JVMCI clients compiled against a JDK release earlier than 9. The method now checks if the current Java version is equal to or greater than 9 and handles modules accordingly."]}
{"SampleId": 3677398, "Origin": "Obtains an instance of {@code OffsetDateTime} from a date-time object.", "Reference": "Obtains an instance of {@code OffsetDateTime} from a temporal object.", "LLMCandidates": ["Obtains an instance of OffsetDateTime from a TemporalAccessor object while handling potential DateTimeException during conversion.", "Obtains an instance of OffsetDateTime from a TemporalAccessor object, handling potential exceptions and returning the result when possible.", "Obtains an instance of OffsetDateTime from a date-time object with possible exception handling for invalid temporal accessor instances.", "Obtains an instance of {@code OffsetDateTime} from a date-time object.", "Obtains an instance of OffsetDateTime from a TemporalAccessor object with possible conversion exceptions handling."]}
{"SampleId": 84978, "Origin": "Primitive operation which inserts the node at the tail of the frontier.", "Reference": "Inserts the node at the tail of the frontier.", "LLMCandidates": ["Inserts the node at the front of the frontier.", "Inserts the node at the head of the frontier.", "Inserts the node at the tail of the frontier.", "Inserts the node at the tail of the frontier.", "Inserts the node at the head of the frontier."]}
{"SampleId": 4476355, "Origin": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listSettingRevisions#settingSelector}", "Reference": "{@codesnippet com.azure.data.applicationconfig.configurationclient.listRevisions#settingSelector}", "LLMCandidates": ["Lists revisions of a configuration setting with specified selector.", "Retrieves a paged collection of configuration setting revisions for the specified selector.", "Lists the revisions of the configuration setting with the given selector.", "Retrieves a paged collection of ConfigurationSetting revisions for the specified setting selector.", "Retrieves a paged collection of ConfigurationSetting revisions for the specified setting selector."]}
{"SampleId": 2913757, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using NAMES parser.", "Obtains an instance from the specified name using NAMES parser.", "Parses an instance from the specified name.", "Parses an instance from the specified name.", "Obtains an instance from the specified name using the static factory method NAMES.parse(name)."]}
{"SampleId": 4396564, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive message content redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive message content redacted.", "Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging."]}
{"SampleId": 6320778, "Origin": "Create a new detached JDOQuery instance with the given projection", "Reference": "Create a new detached {@link JDOQuery} instance with the given projection", "LLMCandidates": ["Create a new detached JDOQuery instance with the given projection and apply distinct selection.", "Create a new detached JDOQuery instance by selecting with the given projection and applying distinct constraint.", "Create a new detached JDOQuery instance with the given projection and apply distinct on it.", "Create a new detached JDOQuery instance with the given projection and apply distinct selection.", "Create a new detached JDOQuery instance with the given projection and apply distinct selection."]}
{"SampleId": 237391, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen some files are consistent in a larger inode tree.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen some files are consistent in a larger inode tree.", "LLMCandidates": ["Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when some files are consistent in a larger inode tree.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when some files are consistent in a larger inode tree.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when some files are consistent in a larger inode tree.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when some files are consistent in a larger inode tree.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method when some files are consistent in a larger inode tree."]}
{"SampleId": 4591717, "Origin": "Add init return statments.", "Reference": "Add nil return statement.", "LLMCandidates": ["Add nil return statements.", "Add nil return statements.", "Add nil return statements.", "Add nil return statements.", "Add nil return statements."]}
{"SampleId": 4476809, "Origin": "The {@link RsaKeyCreateOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "Reference": "The {@link CreateRsaKeyOptions#isEnabled() enabled}\nfield is set to true by Azure Key Vault, if not specified.", "LLMCandidates": ["The CreateRsaKeyOptions#isEnabled() enabled field is set to true by Azure Key Vault, if not specified.", "The CreateRsaKeyOptions#isEnabled() enabled field is set to true by Azure Key Vault, if not specified.", "The <code>CreateRsaKeyOptions#isEnabled()</code> field is set to true by Azure Key Vault, if not specified.", "The CreateRsaKeyOptions#isEnabled() enabled field is set to true by Azure Key Vault, if not specified.", "The {CreateRsaKeyOptions#isEnabled() enabled} field is set to true by Azure Key Vault, if not specified."]}
{"SampleId": 2049948, "Origin": "Asserts that the cache contains the given data for {@code uriString}.", "Reference": "Asserts that the cache contains necessary data for the {@code requestSet}.", "LLMCandidates": ["Asserts that the cache contains the given data for the requested URIs.", "Asserts that the cache contains the given data for all uris in requestSet.", "Asserts that the cache contains the given data for all requests in requestSet.", "Asserts that the cache contains the given data for requests in the given RequestSet.", "Asserts that the cache contains the given data for requests in the given RequestSet."]}
{"SampleId": 232736, "Origin": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry containing that master.", "Reference": "Creates a new leader {@link FileSystemMaster} from journal along with its dependencies, and\nreturns the master registry and the journal system.", "LLMCandidates": ["Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that master.", "Creates a new leader {@link FsMasterResource} from journal along with its dependencies, and returns the master registry containing that master."]}
{"SampleId": 4856970, "Origin": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI}", "Reference": "{@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI UNKNOWN_EMOJI}", "LLMCandidates": ["@link net.dv8tion.jda.api.requests.ErrorResponse#UNKNOWN_EMOJI", "This method adds a reaction to a message using the provided Message ID and Unicode. The provided Unicode is first encoded before sending it to the server. If the Unicode starts with \"U+\", it uses EncodingUtil.encodeCodepointsUTF8, otherwise it uses EncodingUtil.encodeUTF8. After encoding, the compiled route of Route.Messages.ADD_REACTION is created and a new RestActionImpl is returned.", "This method adds a reaction by ID to the specified message. The given unicode is first encoded using either UTF-8 or codepoints UTF-8 depending on its format. If the unicode starts with \"U+\", it is encoded using EncodingUtil.encodeCodepointsUTF8, otherwise it is encoded using EncodingUtil.encodeUTF8. Then, a Route.CompiledRoute is compiled and passed to RestActionImpl to return the result.", "Adds a reaction with the specified unicode to the message with the specified ID, if the bot has the necessary permissions. If the unicode does not start with \"U+\", it is encoded as UTF-8; otherwise, it is encoded as UTF-8 using code points.", "Adds a reaction with the given unicode to the specified message. The unicode should be trimmed and not null or empty. If the unicode starts with \"U+\", it will be encoded as CodepointsUTF8, otherwise it will be encoded as UTF8."]}
{"SampleId": 2289333, "Origin": "The provided {@link XMPPError XMPPError}.", "Reference": "The provided {@link StanzaError XMPPError}.", "LLMCandidates": ["The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}.", "The provided {@link StanzaError StanzaError}."]}
{"SampleId": 1837081, "Origin": "The executor will shutdown\non {@link #shutdown()}, if not detached.", "Reference": "The executors will shutdown\non {@link #shutdown()}, if not detached.", "LLMCandidates": ["Sets both executors and detach flag", "The executors will shutdown on {@link #shutdown()}, if not detached.", "Sets both primary and secondary executors and detaches them on shutdown if specified.", "Sets both primary and secondary executors and detaches them on shutdown if specified.", "The executor will shutdown on {@link #shutdown()}, if not detached. The secondaryExecutor will shutdown on {@link ScheduledThreadPoolExecutor#shutdown()} if not detached."]}
{"SampleId": 339145, "Origin": "The ParcelFileDescriptor will be closed when the list\nbecomes empty.", "Reference": "The ParcelFileDescriptor will\nbe closed when the count becomes zero.", "LLMCandidates": ["The ParcelFileDescriptor will be closed when the reference count becomes zero.", "The ParcelFileDescriptor will be closed when the reference count becomes 0.", "The ParcelFileDescriptor will be closed when the reference count becomes 0.", "The ParcelFileDescriptor will be closed when the reference count becomes 0 or less.", "The ParcelFileDescriptor will be closed when the ref count reaches 0 and the instance is already closed."]}
{"SampleId": 5179168, "Origin": "Returns the client preferences.", "Reference": "Returns the request including client preferences.", "LLMCandidates": ["Returns the request information.", "Returns the request object.", "Returns the request object.", "Returns the request object.", "Returns the request preferences."]}
{"SampleId": 2700190, "Origin": "Get UPC/EAN.", "Reference": "Get TU-UPC.", "LLMCandidates": ["Get UPC/EAN (TU).", "Get UPC/EAN (Transactional UPC).", "Get UPC/EAN (Transactional UPC).", "Get UPC/EAN_TU.", "Get UPC/EAN_TU."]}
{"SampleId": 6104684, "Origin": "Returns the value of the {@code bitfield} field.", "Reference": "Returns the value of the {@code direction} field.", "LLMCandidates": ["Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field.", "Returns the value of the {@code direction} field."]}
{"SampleId": 4132857, "Origin": "Get the last time this object was used in ms.", "Reference": "Gets the last time this object was used in milliseconds.", "LLMCandidates": ["Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds.", "Get the last time this object was used in milliseconds.", "Get the last time this object was used in ms.", "Get the last time this object was used in ms."]}
{"SampleId": 5724509, "Origin": "Convenience method for getScheme(host.getSchemeName())", "Reference": "Convenience method for {@code getScheme(host.getSchemeName())}", "LLMCandidates": ["Convenience method for getScheme(host.getSchemeName()), ensuring the host is not null by checking it with Args.notNull.", "Convenience method for getScheme(host.getSchemeName()), with null check using Args.notNull and unchanged behavior.", "Convenience method for getScheme(host.getSchemeName())", "Convenience method for getScheme(host.getSchemeName())", "Convenience method for getScheme(host.getSchemeName()) using Args.notNull to validate non-null host."]}
{"SampleId": 2916600, "Origin": "The meta-property for the {@code expiryDateTime} property.", "Reference": "The meta-property for the {@code expiry} property.", "LLMCandidates": ["The meta-property for the {@code expiry} property.", "The meta-property for the {@code expiry} property.", "The meta-property for the {@code expiry} property.", "The meta-property for the {@code expiry} property.", "The meta-property for the {@code expiry} property."]}
{"SampleId": 2783358, "Origin": "If this happens, a configuration {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "Reference": "If this happens, a CONFIGURATION {@link ConfigurationEvent event} will\nbe sent to all registered listeners.", "LLMCandidates": ["If this occurs, a configuration {@link ConfigurationEvent event} will be sent to all registered listeners.", "If this happens, a configuration {@link ConfigurationEvent event} will be sent to all registered listeners.", "If this happens, a configuration {@link ConfigurationEvent event} will be sent to all registered listeners.", "If this happens, a configuration {@link ConfigurationEvent event} will be sent to all registered listeners.", "If this occurs, a configuration {@link ConfigurationEvent event} will be sent to all registered listeners."]}
{"SampleId": 4245592, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to duration, returning default value if text is inconvertible.", "LLMCandidates": ["Convert to Duration, returning default value if text is null or an error occurred while converting it.", "Convert to Duration type, returning default value if text is null.", "Convert to Duration, returning default value if text is null.", "Convert to Duration, returning default value if text is null.", "Convert to Duration, returning default value if text is null."]}
{"SampleId": 4320983, "Origin": "Gets policy for resource set.", "Reference": "Delete policy for resource set.", "LLMCandidates": ["Deletes policies for resource set.", "Deletes policies for resource set.", "Deletes policies for resource set.", "Deletes policies for resource set.", "Deletes policies for a resource set."]}
{"SampleId": 3506149, "Origin": "The alias is a boolean value located\nunder the {@link #ENABLED} key.", "Reference": "The alias is a boolean value located\nunder the {@link HasEnableUtil#ENABLED} key.", "LLMCandidates": ["The alias is a boolean value located under the {@link HasEnableUtil#ENABLED} key.", "The alias is a boolean value located under the {@link HasEnableUtil#ENABLED} key.", "The alias is a boolean value located under the {@link HasEnableUtil#ENABLED} key.", "The alias is a boolean value located under the {@link HasEnableUtil#ENABLED} key.", "The alias is a boolean value located under the {@link HasEnableUtil#ENABLED} key."]}
{"SampleId": 337258, "Origin": "Returns the {@link CaptureRequestConfiguration} for the {@link CaptureStage} object.", "Reference": "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "LLMCandidates": ["Returns the CaptureRequestConfig for the Camera2Stage object.", "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "Returns the {@link CaptureRequestConfig} for the {@link CaptureStage} object.", "Returns the CaptureRequestConfig for the CaptureStage object."]}
{"SampleId": 4781139, "Origin": "Simple names for a given type.", "Reference": "Return the descriptor class for a given type.", "LLMCandidates": ["Returns a string representing the binary name of a given type element.", "Returns the fully qualified name of a given type.", "Returns the fully qualified names for a given type.", "Returns the fully qualified names for a given type.", "Get the fully qualified name for a given type element using BindableDescriptorUtils."]}
{"SampleId": 4470234, "Origin": "Get the preventEncryptionScopeOverride property: Optional.", "Reference": "Get the encryptionScopeOverridePrevented property: Optional.", "LLMCandidates": ["Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional.", "Get the encryptionScopeOverridePrevented property: Optional."]}
{"SampleId": 4986646, "Origin": "Get the FCPClient if it exists.", "Reference": "Get the PersistentRequestClient if it exists.", "LLMCandidates": ["Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists.", "Get the PersistentRequestClient if it exists."]}
{"SampleId": 4891063, "Origin": "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Reference": "Set the connection, this is called when the channel is added to the pipeline.", "LLMCandidates": ["Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Set the connection, this is usually called by subclasses when the channel is added to the pipeline.", "Set the connection, this is usually called by subclasses when the channel is added to the pipeline."]}
{"SampleId": 4807132, "Origin": "Get the classloader and module finder.", "Reference": "Get the callstack.", "LLMCandidates": ["Get the call stack.", "Get the call stack using classLoaderFinder.", "Get the call stack using classLoaderFinder.", "Get the call stack using classLoaderFinder.", "Get the call stack using classLoaderFinder's getCallStack method."]}
{"SampleId": 1730901, "Origin": "Validation type is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Reference": "Validation mode affects whether entity bean validation will be applied on {@link DataManager} level.", "LLMCandidates": ["Validation mode is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Validation mode is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Validation mode is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Validation mode is responsible for whether entity bean validation will be applied on {@link DataManager} level.", "Validation mode is responsible for whether entity bean validation will be applied on {@link DataManager} level."]}
{"SampleId": 1042205, "Origin": "Delete persisted {@link WorkUnit}s upon job completion.", "Reference": "Delete persisted {@link WorkUnit}s and {@link JobState} upon job completion.", "LLMCandidates": ["Delete persisted WorkUnits upon job completion; clean up working directory and delete job state file.", "Delete persisted {@link WorkUnit}s upon job completion; clean up working directory and delete job state file.", "Delete persisted {@link WorkUnit}s upon job completion; delete job state file for job.", "Delete persisted {@link WorkUnit}s upon job completion; delete job state file for job.", "Delete persisted {@link WorkUnit}s upon job completion. Perform additional cleanup tasks."]}
{"SampleId": 4797744, "Origin": "A return value of {@code -1} necessarily\nindicate that the map contains no mapping for the key.", "Reference": "A return value of {@code #FREE} necessarily\nindicate that the map contains no mapping for the key.", "LLMCandidates": ["A return value of {@code FREE} indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicate that the map contains no mapping for the key.", "A return value of {@code FREE} indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key.", "A return value of {@code FREE} necessarily indicates that the map contains no mapping for the key."]}
{"SampleId": 4473555, "Origin": "Create Subject Alternative names with dns names.", "Reference": "Set the dns names.", "LLMCandidates": ["Update Subject Alternative names with DNS names by setting dnsNames.", "Set Subject Alternative names with DNS names.", "Set Subject Alternative names with DNS names.", "Update subject alternative names with DNS names.", "Update subject alternative names with DNS names."]}
{"SampleId": 3758708, "Origin": "So when we got block and all is ok - call this method.", "Reference": "So when we got packet and all is ok - call this method.", "LLMCandidates": ["Send an acknowledgement packet for the specified session reader and packet ID. Throws an EncryptionError if encryption fails.", "Call this method when a new packet is ready to be sent.", "Call this method when a new packet is ready to be sent.", "Call this method when a block has been received and validated successfully from another node.", "Call this method when a block has been received and validated successfully from another node."]}
{"SampleId": 431798, "Origin": "Creates execution sequence for pending task groups by interleaving their unique occurrences.", "Reference": "Creates execution sequence for pending task groups by interleaving batches of requested size of\ntheir occurrences.", "LLMCandidates": ["Creates execution sequence for pending task groups by interleaving their unique occurrences up to a specified batch size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences with batchSize as the maximum number of elements to process at a time.", "Creates execution sequence for pending task groups by interleaving their unique occurrences with a specified batch size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences up to a specified batch size.", "Creates execution sequence for pending task groups by interleaving their unique occurrences up to a specified batch size."]}
{"SampleId": 3990800, "Origin": "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}.", "Reference": "Wait up to the specified timeout for this task to meet the expected number of records as\ndefined by {@code expectedRecords}.", "LLMCandidates": ["Wait for this task to meet the expected number of records as defined by `expectedRecords`, with the timeout and time unit specified.", "Wait for this task to meet the expected number of records as defined by `expectedRecords`. The timeout value can now be specified in any TimeUnit.", "Wait for this task to meet the expected number of records as defined by {@code\nexpectedRecords}. This method now takes a {@code TimeUnit} and {@code long timeout} as parameters.", "Wait for this task to meet the expected number of records as defined by `expectedRecords`, using the specified `timeout` and `TimeUnit`.", "Wait for this task to meet the expected number of records as defined by `expectedRecords`. The timeout is now specified with a TimeUnit."]}
{"SampleId": 5441293, "Origin": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistring bad font\nin case when scaler reports this.", "Reference": "Therefore this is very convinient place to register\nscaler with Disposer as well as trigger deregistering a bad font\nwhen the scaler reports this.", "LLMCandidates": ["Registers the new scaler for the specified font and triggers deregistration of bad fonts if necessary.", "This method creates a FontScaler object based on the given parameters and registers it with Disposer. In case of an exception during instantiation, it sets the scaler to null and deregisters the font as bad.", "This method returns a new FontScaler instance based on the given Font2D, indexInCollection, supportsCJK, and filesize parameters. If instantiation of the scaler fails, it assumes the font is bad and deregisters it using FontManager.", "Creates a new FontScaler object using FreetypeFontScaler and registers it with Disposer. If instantiation fails, assumes bad font and deregisters it.", "Returns a FontScaler object for the specified font, indexInCollection, supportsCJK and filesize. Creates a new FreetypeFontScaler instance by default. If an error occurs during instantiation, it sets the scaler to null and deregisters the font as bad."]}
{"SampleId": 5003417, "Origin": "gets all tv show episodes from database", "Reference": "SYNCHRONOUSLY gets all tv show episodes from database", "LLMCandidates": ["Retrieves all TV show episodes from the database.", "gets all tv show episodes from database", "gets all tv show episodes from database", "Retrieves all TV show episodes from the database, applying custom sorting and visibility options based on user preferences.", "Gets all TV show episodes from the database."]}
{"SampleId": 2913765, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name by parsing it with NAMES.", "Obtains an instance from the specified name using NAMES.parse(name).", "Parses an instance from the specified name.", "Parses an instance from the specified name.", "Obtains an instance from the specified name."]}
{"SampleId": 3358024, "Origin": "Value of the code encoded.", "Reference": "Value of the errorCode encoded.", "LLMCandidates": ["Get the error code value.", "Returns the error code value encoded.", "Returns the value of the encoded error code.", "Returns the value of the encoded error code.", "Returns the value of the encoded error code."]}
{"SampleId": 1346741, "Origin": "Closes the session.", "Reference": "Updates the session state.", "LLMCandidates": ["Sets the current state of the session.", "Sets the session state to the specified value. If the new state is SUSPENDED, records the current time in suspendedTime; otherwise, sets it to null. Notifies all registered change listeners of the new state. If the session's state is SUSPENDED and the time elapsed since suspendedTime exceeds timeout, changes the state to CLOSED.", "Sets the current state of the session to the specified state. If the new state is CopycatSession.State.SUSPENDED and suspendedTime is null, sets suspendedTime to the current time in milliseconds. Otherwise, if the new state is not CopycatSession.State.SUSPENDED, resets suspendedTime to null. Notifies all registered change listeners of the updated state. If the session's state is CopycatSession.State.SUSPENDED and the difference between the current time in milliseconds and suspendedTime exceeds the timeout value, changes the state to CopycatSession.State.CLOSED.", "Sets the current state of the session to the specified state. If the new state is CLOSED and the session was previously open, inform all change listeners about the new state. If the new state is SUSPENDED and the session was already in the SUSPENDED state, record the suspension time, otherwise clear the suspension time and set the state to null. If the session was previously in the SUSPENDED state and the new state is not CLOSED, check if the timeout has been exceeded since the last suspension; if it has, close the session by calling the setState method with the parameter CLOSED.", "Sets the current state of the session to the specified state. If the new state is SUSPENDED, records the suspended time; otherwise, resets it to null. Notifies all change listeners with the new state. If the current state is SUSPENDED and the suspended time plus timeout has passed since the suspension, sets the state to CLOSED."]}
{"SampleId": 5724390, "Origin": "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in\nRFC 1521.", "Reference": "This function fully implements the quoted-printable encoding specification (rule REF through rule REF) as\ndefined in RFC 1521.", "LLMCandidates": ["This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521. Overrides the decode method from the superclass.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521. This method is now overridden and takes a final byte array as its input parameter.", "This function implements a subset of quoted-printable encoding specification (rule REF and rule REF) as defined in RFC 1521."]}
{"SampleId": 6130393, "Origin": "Method to get the configuration knowning the set", "Reference": "Method to get the first configuration knowning the set", "LLMCandidates": ["Method to get the configuration knowing the set and offset 0", "Get the configuration knowing the set and return the default if no such key exists.", "Method to get the configuration knowing the set and an offset of 0.", "Method to get the configuration knowing the set and an offset of 0.", "Gets the configuration knowning the set and index 0."]}
{"SampleId": 4617953, "Origin": "Binds the HTTP connection.", "Reference": "Assigns an external property.", "LLMCandidates": ["Sets a property with the given key and value.", "Binds the property with the given key and value.", "Sets the property with the given key and value.", "Sets the property with the given key and value.", "Sets the property with the given key and value."]}
{"SampleId": 5324303, "Origin": "Note that the writing process does not start until the returned {@code Mono} is subscribed\nto.", "Reference": "Note that the writing process does not start until the returned {@code Flux} is subscribed\nto.", "LLMCandidates": ["Note that the writing process does not start until the returned {@code Flux} is subscribed to.", "Note that the writing process does not start until the returned {@code Flux} is subscribed to.", "Note that the writing process does not start until the returned {@code Flux} is subscribed to.", "Note that the writing process does not start until the returned {@code Flux} is subscribed to.", "Note that the writing process does not start until the returned Flux is subscribed to."]}
{"SampleId": 3037775, "Origin": "Tests resilency when D2 device availability is changed.", "Reference": "Tests resiliency when D2 device availability is changed.", "LLMCandidates": ["Tests resilency when D2 device availability is changed; topology changes by removing device2, link1 and link2 are applied; path after removal should be D1-D3-D4 with total weight of 180.0.", "Tests resilency when D2 device availability is changed by setting up a path and verifying the path after changing topology due to D2, link1, and link2 removal.", "Tests resilency when D2 device availability is changed and the path is re-established after removal of link1, link2, and D2 device.", "Tests resilency when D2 device availability is changed by setting up a path with cost constraint and PCE bandwidth constraint, removing D2, link1, and link2 from the topology, and verifying the resulting path.", "Tests resilency when D2 device availability is changed."]}
{"SampleId": 2443922, "Origin": "Start building a new factory class-based service binding.", "Reference": "Start building a new supplier class-based service binding.", "LLMCandidates": ["Start building a new factory class-based service binding using a Supplier.", "Start building a new supplier class-based service binding.", "Start building a new supplier class-based service binding.", "Start building a new factory class-based service binding using the given supplier class type.", "Start building a new factory class-based service binding using the given supplier class type."]}
{"SampleId": 1314730, "Origin": "Creates an exception from an service name.", "Reference": "Creates an exception from an API name.", "LLMCandidates": ["Creates an exception from an API name.", "Creates an exception from a API name.", "Creates an exception from a API name.", "Creates an exception from an API name.", "Creates an exception from an API name."]}
{"SampleId": 2913760, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name using the static factory method NAMES.parse(name).", "Obtains an instance from the specified name.", "Obtains an instance from the specified name.", "Obtains an instance from the specified name by parsing it.", "Obtains an instance from the specified name by parsing it."]}
{"SampleId": 5840707, "Origin": "Removes the source location value from this list of elements.", "Reference": "Removes the source location value from this map of elements.", "LLMCandidates": ["Removes the source location values from this list of elements. If the map is not null, first removes the source locations from all items in the list and then iterates over the entries in the map, removing the source location value for each key and value entry.", "Removes the source location value from this list of elements if the map is not null.", "Removes the source location value from this list of elements if the map is not null.", "Removes the source location values from this list of elements if the map is not null.", "Removes the source location values from this list of elements if the map is not null."]}
{"SampleId": 3074824, "Origin": "Make you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Reference": "Make sure you have enabled the NA check properly using\n{@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "LLMCandidates": ["Make sure you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Make sure you have enabled the NA check properly using {link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Make you have enabled the NA check properly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Make sure to enable the NA check correctly using {@link #enable(RAbstractVector, RAbstractVector)} before relying on this method.", "Make sure you have enabled the NA check properly using {link #enable(RAbstractVector, RAbstractVector)} before relying on this method."]}
{"SampleId": 4124110, "Origin": "Make sure to\n{@link #releaseParser(SAXParser)} in\na  block every time you call this.", "Reference": "Make sure to\n{@link #releaseParser(PoolSAXParser)} in\na  block every time you call this.", "LLMCandidates": ["Acquires a SAXParser from the pool of available parsers. Make sure to \n{@link #releaseParser(PoolSAXParser)} in a block every time you call this.", "Make sure to #{link #releaseParser(PoolSAXParser)} in a block every time you call this.", "Acquire a SAXParser from the pool or create a new one if necessary, ensuring that it's returned to the pool with {@link #releaseSAXParser(PoolSAXParser)} when done.", "Make sure to acquire a new PoolSAXParser by calling this method, and {@link #releaseParser(PoolSAXParser)} in a block every time you use it.", "Acquires a SAXParser from the pool. Make sure to release the parser using {@link #releaseParser(PoolSAXParser)} in a block every time you call this."]}
{"SampleId": 2603540, "Origin": "Send a non-mutation message to a given endpoint.", "Reference": "Send a non-mutation message to a given node.", "LLMCandidates": ["Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode.", "Send a non-mutation message to a given NetNode."]}
{"SampleId": 1753706, "Origin": "Whether this codec is capable of encoding the given Java type.", "Reference": "Whether this codec is capable of processing the given Java type.", "LLMCandidates": ["Whether this codec is capable of accepting the given Java type.", "Whether this codec is capable of accepting the given Java type.", "Whether this codec is capable of accepting the given Java type.", "Whether this codec is capable of accepting the given Java type.", "Whether this codec is capable of accepting the given Java type."]}
{"SampleId": 2603544, "Origin": "unlike excise we just need this endpoint gone without going through any notifications *", "Reference": "unlike excise we just need this node gone without going through any notifications *", "LLMCandidates": ["unlike notifications we just need this node gone without going through any endpoints *", "unlike excise we just need this node gone without going through any notifications *", "unlike excise we just need this node gone without going through any notifications *", "unlike excise we just need this node gone without going through any notifications *", "unlike excise we just need this node gone without going through any notifications *"]}
{"SampleId": 2017647, "Origin": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, even if B's constructor is not explicitly annotated.", "Reference": "When a class B inherits from A and A is annotated as a struct, then B automatically gets the\nannotation, if B's constructor is not explicitly annotated.", "LLMCandidates": ["When a class B inherits from A and A is annotated as a struct or if propAccess equals PropAccess.ANY_EXPLICIT and explicitly marked as @unresticted, then B automatically gets the annotation, even if B's constructor is not explicitly annotated.", "When a class B inherits from A and A is annotated as a struct or if the propAccess of B is PropAccess.ANY_EXPLICIT and not explicitly marked as @unresticted, then B automatically gets the annotation, even if B's constructor is not explicitly annotated.", "When a class B inherits from A and A is annotated as a struct or when B's constructor is explicitly marked as @unrestricted, then B automatically gets the annotation.", "When a class B inherits from A and A is annotated as a struct or if B's constructor is explicitly marked as @unrestricted (PropAccess.ANY_EXPLICIT), then B automatically gets the annotation, even if B's constructor is not explicitly annotated.", "When a class B inherits from A and A is annotated as a struct or if propAccess equals to PropAccess.ANY_EXPLICIT but not explicitly marked as @unresticted, then B automatically gets the annotation, even if B's constructor is not explicitly annotated."]}
{"SampleId": 4396425, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted where applicable.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted."]}
{"SampleId": 1406605, "Origin": "Overrides previous instances of the exact\nsame subclass of FragmentOptions.", "Reference": "Overrides previous instances of the exact same subclass of {@code FragmentOptions}.", "LLMCandidates": ["Overrides previous instances of the exact same subclass of FragmentOptions, including the normalized version of the options.", "Overrides previous instances of the exact same subclass of FragmentOptions, using the normalized value.", "Overrides previous instances of the exact subclass of FragmentOptions with the normalized option value.", "Overrides previous instances of the exact subclass of FragmentOptions using the normalized options.", "Overrides previous instances of the exact subclass of FragmentOptions using the normalized options."]}
{"SampleId": 4386708, "Origin": "List Multipart Uploads response, even if idempotent complete is\npossible.", "Reference": "Uploads response, even if idempotent complete is possible.", "LLMCandidates": ["List Multipart Uploads response even if idempotent complete is possible.", "CompleteMultipart Uploads response even if idempotent complete is possible.", "Completes a multipart upload initiated by the InitiateMultipartUpload operation. This call must be made after all of the parts have been uploaded and any necessary part manipulations (e.g. aborting or completing individual parts) have been performed. The response includes the upload ID, which can be used for future reference to the completed multipart upload. If a previous completeMultipartUpload operation was called with the same parameters, this operation returns the completed multipart upload information without actually creating a new one.", "Complete a multipart upload initiated by calling InitiateMultipartUpload and upload all the parts. This method is idempotent, which means that you can safely call it more than once without any side effects. Note that this operation may be throttled if you exceed the service quota for the number of requests per second.", "Completes a multipart upload for the specified key in the specified bucket. This method lists Multipart Uploads response, even if idempotent complete is possible."]}
{"SampleId": 3710575, "Origin": "Load a {@link android.graphics.drawable.Drawable} asynchronously", "Reference": "Load a {@link android.graphics.drawable.Drawable} asynchronously (convenience method)", "LLMCandidates": ["Load a {@link android.graphics.drawable.Drawable} asynchronously with optional error handling and cache control", "Load a {@link android.graphics.drawable.Drawable} asynchronously with default error handling and without caching.", "Load a {@link android.graphics.drawable.Drawable} asynchronously with error handling", "Load a {@link android.graphics.drawable.Drawable} asynchronously into the given {@code ImageView}.", "Load an Android {@link android.graphics.drawable.Drawable} asynchronously into the given ImageView."]}
{"SampleId": 2700191, "Origin": "Set UPC/EAN.", "Reference": "Set TU-UPC.", "LLMCandidates": ["Set UPC/EAN or UPC Tracking Units.", "Set UPC/EAN_TU.", "Set UPC/EAN/TU.", "Set UPC/EAN/TU.", "Set UPC/EAN or EAN/TU."]}
{"SampleId": 2680294, "Origin": "Returns the opening {@link Month} within this set of bounds.", "Reference": "Returns the openAt {@link Month} within this set of bounds.", "LLMCandidates": ["Returns the opening {@link Month} within this set of bounds.", "Returns the opening {@link Month} within this set of bounds.", "Returns the opening {@link Month} within this set of bounds.", "Returns the opening {@link Month} within this set of bounds.", "Returns the opening {@link Month} within this set of bounds."]}
{"SampleId": 2272830, "Origin": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this\nlistener.", "Reference": "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections of a particular type.", "LLMCandidates": ["The KeyStore type (jks, jceks, pkcs12, etc.) for the identity and trust store for connections created by this listener. This method is now deprecated.", "The KeyStore type (jks, jceks, pkcs12, etc) for the identity and trust store for connections created by this listener. This method is deprecated.", "The KeyStore type (jks, jceks, pkcs12, etc.) for the identity and trust store for connections created by this listener. Note that this method is deprecated now.", "The KeyStore type (jks, jceks, pkcs12, etc.) for the identity and trust store for connections created by this listener. This method is deprecated.", "The KeyStore type (jks, jceks, pkcs12, etc.) for the identity and trust store for connections created by this listener.\n\nNote: This method is deprecated."]}
{"SampleId": 3678449, "Origin": "Returns a copy of this date-time with the zone ID locked to the offset.", "Reference": "Returns a copy of this date-time with the zone ID set to the offset.", "LLMCandidates": ["Returns a copy of this date-time with the zone locked to the offset.", "Returns a copy of this date-time with the zone ID locked to the offset.", "Returns a copy of this date-time with the zone ID locked to the offset.", "Returns a copy of this date-time with the zone ID locked to the offset.", "Returns a copy of this date-time with the zone locked to the offset."]}
{"SampleId": 1310050, "Origin": "Generates a valid document ID for a service, used to index the service in ES.", "Reference": "Generates a valid document ID for a api, used to index the api in ES.", "LLMCandidates": ["Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES.", "Generates a valid document ID for an API, used to index the API in ES."]}
{"SampleId": 5447042, "Origin": "If the range of the variable has not been set yet, it will be set to be\nval id from the start to the end of the instruction list.", "Reference": "If the range of the variable has not been set yet, it will be set to be\nvalid from the start to the end of the instruction list.", "LLMCandidates": ["Updates the list of local variables or types, if their range has not been set yet, it will be set to be val id from the start to the end of the instruction list.", "Sets the local variable types by calling getLocalVariableOrTypes with parameter \"true\". If the start or end of a local variable's range has not been set yet, it will be set to be equal to the start or end of the instruction list. The returned array is sorted if there are more than one entries.", "Returns the local variable types as an array of LocalVariableGen objects or Types array if the range has already been set, otherwise it will be set to be val id from the start to the end of the instruction list.", "Gets the local variable types from the instruction list and sets the range of the variables if not set yet.", "If the range of the local variable has not been set yet, it will be set to be val id from the start to the end of the instruction list."]}
{"SampleId": 6247256, "Origin": "Deletes the elements in the mValues list and notifies the Adapter", "Reference": "Deletes the elements in the values list and notifies the Adapter", "LLMCandidates": ["Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter", "Deletes the elements in the values list and notifies the Adapter"]}
{"SampleId": 2382765, "Origin": "The version of this Titan graph database", "Reference": "The version of this JanusGraph graph database", "LLMCandidates": ["The version of this JanusGraph database", "The version of this JanusGraph database", "The version of this JanusGraph database", "The version of this JanusGraph database", "The version of this JanusGraph graph database"]}
{"SampleId": 4386726, "Origin": "Uploading Large Archives in Parts (Multipart Upload)  and  Upload Part \nin the Amazon Glacier Developer Guide .", "Reference": "For conceptual information and underlying REST API, go to Uploading Large Archives in Parts (Multipart Upload) and Upload Part  in the Amazon Glacier Developer Guide.", "LLMCandidates": ["Uploads a part of a large archive using multipart upload in Amazon Glacier and uploads the part.", "Uploads parts of a large archive in multiple requests using multipart upload and returns an UploadMultipartPartResult for the specified UploadMultipartPartRequest. The method marshals the request, sets AWSRequestMetrics, sends the request to Amazon Glacier service, unmarshals the response, handles exceptions, and ends client execution.", "Uploading Large Archives in Parts (Multipart Upload) and Upload Part in the Amazon Glacier Developer Guide.", "Uploading Large Archives in Parts (Multipart Upload) and Upload Part in the Amazon Glacier Developer Guide.", "Uploads a part of an archive using multipart upload in Amazon Glacier and retrieves the response information."]}
{"SampleId": 3772938, "Origin": "Creates a column instance from a value provider and a renderer.", "Reference": "Creates a column instance from a value provider, presentation provider\nand a renderer.", "LLMCandidates": ["Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider, and a renderer.", "Creates a column instance from a value provider, a presentation provider and a renderer.", "Creates a column instance from two value providers and a renderer."]}
{"SampleId": 2912413, "Origin": "This maps either the security ID or the legal entity ID to a group.", "Reference": "This maps the legal entity ID to a group.", "LLMCandidates": ["This maps either the legal entity ID to a group.", "This maps either the LegalEntityId to a group or the security ID to a group.", "This maps either the LegalEntityId to a group or the security ID to a group.", "This maps either the LegalEntityId to a group or the security ID to a group.", "This maps either the security ID or the legal entity ID to a group."]}
{"SampleId": 367453, "Origin": "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri}\nif exists", "Reference": "Returns the singleton instance of {@link SliceBackgroundWorker} for specified {@link Uri} if\nexists", "LLMCandidates": ["Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri} if exists with a generic type T.", "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri} if exists. Returns null otherwise.", "Returns the singleton instance of the {@link SliceBackgroundWorker&lt;T extends SliceBackgroundWorker&gt;} for specified {@link Uri} if exists.", "Returns the singleton instance of the {@link SliceBackgroundWorker} for specified {@link Uri} if exists, or null if not found.", "Returns the singleton instance of the {@link SliceBackgroundWorker&lt;T extends SliceBackgroundWorker&gt;} for specified {@link Uri} if exists."]}
{"SampleId": 2783671, "Origin": "A {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:", "Reference": "This method throws an {@link IOException} if the operation failed, for any of the following reasons:", "LLMCandidates": ["Moves this {@code AbstractFile} to the specified {@code destFile}. If the operation is supported, it tries to rename the file first. If renaming fails or the operation is not supported, it copies the file to the destination and then deletes the source file. Throws a {@link FileTransferException} if any of these operations fail.", "Moves this file to the specified destination file, or throws a {@link FileTransferException} if the operation fails for any of the following reasons:", "Moves this file to the specified destination file, if possible. If moving fails or if the operation is not supported, a {@link FileTransferException} will be thrown with one of the following error codes: DELETING_SOURCE, MOVING_FAILED.", "Moves this file to the specified destination file. If renaming operation is not supported, it will fall back to moving the file manually by copying and deleting the source file. Throws a {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:", "Moves this file to the specified destination file, creating a shortcut on the source location. This method may be overridden to customize the behavior when moving files. Throws a {@link FileTransferException} if the operation was attempted but failed for any of the following reasons:"]}
{"SampleId": 3366327, "Origin": "Sets the schema version to the given {@link SharedRealm}.", "Reference": "Sets the schema version to the given {@link OsSharedRealm}.", "LLMCandidates": ["Sets the schema version to the given {@link OsSharedRealm}.", "Sets the schema version to the given {@link OsSharedRealm}.", "Sets the schema version to the given {@link OsSharedRealm}.", "Sets the schema version to the given {@link OsSharedRealm}.", "Sets the schema version to the given {@link OsSharedRealm}."]}
{"SampleId": 5243388, "Origin": "Compare two groups based on the grouping attribute.", "Reference": "Compare two groups based on the group key", "LLMCandidates": ["Compare two groups based on the group key.", "Compare two groups based on the group key attribute.", "Compare two groups based on the group key attribute.", "Compare two groups based on the group key attribute.", "Compare two groups based on the group key attribute."]}
{"SampleId": 2526359, "Origin": "Adds a handle to the constant pool of the class being built.", "Reference": "Adds a method handle to the constant pool of the class being built.", "LLMCandidates": ["Adds a method handle to the constant pool of the class being built.", "Adds a MethodHandle to the constant pool of the class being built.", "Creates a new MethodHandleItem by adding it to the constant pool of the class being built.", "Adds a method handle to the constant pool of the class being built.", "Adds a method handle to the constant pool of the class being built."]}
{"SampleId": 2443738, "Origin": "Bind contract provider model to a provider class using the supplied instance manager.", "Reference": "Bind contract provider model to a provider class using the supplied injection manager.", "LLMCandidates": ["Bind contract provider model to a provider class using the supplied injection manager.", "Bind contract provider model to a provider class using the supplied injection manager.", "Bind contract provider model to a provider class using the supplied injection manager.", "Bind contract provider model to a provider class using the supplied injection manager.", "Bind contract provider model to a provider class using the supplied injection manager."]}
{"SampleId": 2848845, "Origin": "The manifest produced by this service do not include checksum for each entry.", "Reference": "The manifest produced by this service do not include checksum for entries and caches manifests recently created.", "LLMCandidates": ["The manifest produced by this service do not include checksum for each entry.", "The manifest produced by this service do not include checksum for each entry.", "The manifest produced by this service do not include checksum for each entry when called with the second boolean argument set to false.", "This service generates a manifest without checksum for each entry. It replaces the previous implementation with the same method signature and variable name. Note that it now has an additional condition to check if the existing bean is missing before creating a new one.", "Produces manifest without checksum for each entry, using the provided DirectoryManifest.Factory and jobDirectoryPath."]}
{"SampleId": 4780345, "Origin": "Returns all documents contained in this cluster.", "Reference": "Returns all documents contained in this cluster or an empty list if none.", "LLMCandidates": ["Returns all documents contained in this cluster, or an empty list if none are available.", "Returns all documents contained in this cluster; if no documents exist, returns an empty list.", "Returns all documents contained in this cluster; if no documents exist, returns an empty list.", "Returns all documents contained in this cluster if they exist; otherwise, returns an empty list.", "Returns all documents contained in this cluster if they exist; otherwise, returns an empty list."]}
{"SampleId": 1067852, "Origin": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain an entry for a {@code StreamManager}.", "Reference": "Return the {@code StreamManager} in a context, or the global one if the context is\nnull or does not contain a valid entry for a {@code StreamManager}.", "LLMCandidates": ["Return the StreamManager in a context, or the global one if the context is null or does not contain an entry for a StreamManager after checking it's defined.", "Return the StreamManager in a context, or the global one if the context is null or does not contain an entry for a StreamManager after checking whether it's defined.", "Return the StreamManager in a context, or the global one if the context is null or does not contain an entry for a StreamManager. If the context contains a defined entry for a StreamManager, return it directly. Otherwise, return the global one.", "Return the StreamManager in a context, or the global one if the context is null or does not contain an entry for a StreamManager after checking if it's defined in the context.", "Return the StreamManager in a context, or the global one if the context is null or does not contain an entry for a StreamManager after checking if the context is defined."]}
{"SampleId": 2230476, "Origin": "Sets the quorum name for lock operations.", "Reference": "Sets the split brain protection name for lock operations.", "LLMCandidates": ["Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations.", "Sets the split brain protection name for lock operations."]}
{"SampleId": 1855232, "Origin": "[IF Sidecar19-SE]", "Reference": "[IF Java14]", "LLMCandidates": ["[IF Sidecar19-SE]", "This feature is deprecated for removal since Java 12 and is not applicable to this VM, no-op. In Java 14, it is only deprecated without removal plan; in Java 11 and before, it is simply deprecated.", "[IF Sidecar19-SE || Java14]", "[IF Sidecar19-SE][ELSE]Java14[ENDIF][ELSE]Java11[ENDIF]", "[IF Sidecar19-SE] Deprecated due to thread suspension support being removed from this VM in Java 14 and later versions, but still applicable to Java 11 and earlier."]}
{"SampleId": 1464613, "Origin": "Obtain a {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "Reference": "Obtain a flyweight {@link RemoteRepository} for the data set having the specified\nSPARQL end point.", "LLMCandidates": ["Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point, using this instance and the given URL.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point, using this instance's configuration.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point using the current instance of this class as the repository's context.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point, using this object and the provided URL.", "Obtain a {@link RemoteRepository} for the data set having the specified SPARQL end point using this instance's parameters."]}
{"SampleId": 6247260, "Origin": "Returns an AccountListItem from the specified position in the mValues list", "Reference": "Returns an AccountListItem from the specified position in the values list", "LLMCandidates": ["Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list", "Returns an AccountListItem from the specified position in the values list"]}
{"SampleId": 340561, "Origin": "PlaybackParams2 to the given input.", "Reference": "PlaybackParams to the given input.", "LLMCandidates": ["Sets the playback parameters for PlaybackParams to the given input.", "Set playback parameters according to the given input.", "Sets the playback parameters specified by the given PlaybackParams object.", "Sets the playback parameters specified by the given PlaybackParams object.", "Sets the playback parameters for PlaybackParams to the given input."]}
{"SampleId": 5176607, "Origin": "Setter for {@link #allowCredentials}", "Reference": "Setter for {@link #allowedCredentials}", "LLMCandidates": ["Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials", "Setter for {@link #allowedCredentials"]}
{"SampleId": 5299668, "Origin": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDbFactory factory}.", "Reference": "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "LLMCandidates": ["Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}.", "Obtain the {@link MongoDatabase database} with given name form the given {@link MongoDatabaseFactory factory}."]}
{"SampleId": 4396605, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted."]}
{"SampleId": 4620051, "Origin": "Copies this expression's return type and size to the given expression.", "Reference": "Copies this expression's type to the specified expression.", "LLMCandidates": ["Copies this expression's return type and size to the given expression.", "Copies this expression's return type and size to the given expression.", "Copies this expression's return type and size to the given expression.", "Copies this expression's return type and size to the given expression.", "Copies this expression's return type and size to the given expression."]}
{"SampleId": 1578100, "Origin": "The returned {@link MetadataEntity} is of the same type.", "Reference": "The returned {@link MetadataEntity.Builder} is of the same type.", "LLMCandidates": ["The returned Builder is of the same type.", "The updated {@link Builder} appends the specified key-value pair to this instance and returns this instance for method chaining.", "The returned Builder is of the same type.", "The returned Builder is of the same type.", "The returned Builder is of the same type."]}
{"SampleId": 3629288, "Origin": "Returns an immutable map containing a single mapping.", "Reference": "Returns an unmodifiable map containing a single mapping.", "LLMCandidates": ["Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping.", "Returns an unmodifiable map containing a single mapping."]}
{"SampleId": 4474528, "Origin": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubDirectoryWithResponse(String, Duration,", "Reference": "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,", "LLMCandidates": ["Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration, Context)", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,", "Generates a code sample for using {@link ShareDirectoryClient#deleteSubdirectoryWithResponse(String, Duration,\n\nNote that the only change made was updating \"subDirectoryWithResponse\" to \"subdirectoryWithResponse\" in the comment reference."]}
{"SampleId": 1611738, "Origin": "The expected indentation should be the same as the indentation of the node\nwhich is the parent of the target modifier node.", "Reference": "The expected indentation should be the same as the indentation of the target node.", "LLMCandidates": ["The expected indentation should be the same as the indentation of the node which is the parent of the target node.", "The expected indentation should be the same as the indentation of the node which is the parent of the target modifier node.", "The expected indentation should be the same as the indentation of the node which is the parent of the target modifier node.", "The expected indentation should be the same as the indentation of the node which is the parent of the target modifier node.", "The expected indentation should be the same as the indentation of the node which is the parent of the target modifier node."]}
{"SampleId": 1356230, "Origin": "Check if the last item in key signature has some trailing space (before any head).", "Reference": "Check if last item in key signature has some trailing space (before any head).", "LLMCandidates": ["Check if the last item in key signature has some trailing space (before any staff's specific interline).", "Check if the last item in key signature has some trailing space (before any staff line).", "Check if the last item in key signature has some trailing space (before any staff).", "Check if the last item in key signature has some trailing space (before any staff).", "Check if the last item in key signature has some trailing space (before any staff line)."]}
{"SampleId": 1405621, "Origin": "Marks the action as analyzing.", "Reference": "Marks the action as scanning.", "LLMCandidates": ["Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning.", "Marks the action as scanning."]}
{"SampleId": 4396654, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, redacting sensitive data when necessary.", "Returns a string representation of this object; useful for testing and debugging, with sensitive output data redacted.", "Returns a string representation of this object; useful for testing and debugging, with sensitive output data redacted.", "Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive output data redacted."]}
{"SampleId": 2527768, "Origin": "Get or create a storage block by the name.", "Reference": "Gets or creates a buffer block by the name.", "LLMCandidates": ["Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name.", "Get or create a ShaderBufferBlock by the name."]}
{"SampleId": 1760055, "Origin": "Calculates Minimum - Nulls are handled as zeros.", "Reference": "Calculates Minimum - Nulls are ignored.", "LLMCandidates": ["Calculates Minimum - Nulls are handled as zeros.", "Calculates Minimum - Nulls are handled as zeros.", "Calculates Minimum - Nulls are handled as zeros.", "Calculates Minimum - Nulls are handled as zeros.", "Calculates Minimum - Nulls are handled as zeros."]}
{"SampleId": 6043566, "Origin": "and repositoryId = ?.", "Reference": "and parentFolderId = ?.", "LLMCandidates": ["Finds all SyncDLObjects by repositoryId and parentFolderId.", "Finds all SyncDLObjects by repositoryId and parentFolderId in Liferay DDMSync service.", "Returns the SyncDLObjects where repositoryId = ? and parentFolderId = ?.", "Finds all SyncDLObjects by repositoryId and parentFolderId.", "Finds all SyncDLObjects by repositoryId and parentFolderId."]}
{"SampleId": 2217819, "Origin": "Test of var method, of class Exponential.", "Reference": "Test of variance method, of class Exponential.", "LLMCandidates": ["Test of variance method, of class ExponentialDistribution.", "Test of variance calculation in ExponentialDistribution instances.", "Test of variance method, of class ExponentialDistribution.", "Test of variance method, of class ExponentialDistribution.", "Test of variance calculation for ExponentialDistribution class."]}
{"SampleId": 4003565, "Origin": "If you want to extend a value (e.g.", "Reference": "If you like to extend an option (e.g.", "LLMCandidates": ["Updates the specified configuration file by putting the given value at a certain location defined by the ConfigurationPointer.", "Modifies a value in the configuration file at the specified path using PUT method.", "Edits a Karaf distribution configuration file's key-value pair, specified by a ConfigurationPointer and a String value.", "If you want to extend a value (e.g. for a Karaf distribution configuration file), use this method to put the updated value with the given ConfigurationPointer.", "Adds a new line to the Karaf distribution configuration file at the given pointer location with the specified value."]}
{"SampleId": 1841602, "Origin": "Returns the ssh configuration entry which includes host and identity file location", "Reference": "Returns the ssh configuration entry which includes host, identity file location and Host Key\nchecking policy", "LLMCandidates": ["Returns the ssh configuration entry which includes host, identity file location and StrictHostKeyChecking set to \"no", "Returns the ssh configuration entry which includes host, identity file location and StrictHostKeyChecking = no setting.", "Returns the ssh configuration entry which includes host, identity file location and disables strict host key checking.", "Returns the ssh configuration entry which includes host, identity file location and disables strict host key checking.", "Returns the ssh configuration entry which includes host, identity file location and \"StrictHostKeyChecking = no\" option."]}
{"SampleId": 2912364, "Origin": "Extracts the underlying quotes from the {@link CurveInputs} instances and returns them in a map.", "Reference": "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "LLMCandidates": ["Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map.", "Extracts the underlying quotes from the {@link RatesCurveInputs} instances and returns them in a map."]}
{"SampleId": 1327233, "Origin": "Sets the minimum session timeout.", "Reference": "Sets the session timeout.", "LLMCandidates": ["Sets the session timeout.", "Sets the session timeout.", "Sets the session timeout.", "Sets the session timeout.", "Sets the session timeout."]}
{"SampleId": 3512228, "Origin": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Reference": "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link Cat}.", "LLMCandidates": ["Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this {@link CatData}.", "Gets the {@link Value.Mutable} for the {@link CatType} of this\n{@link CatData}."]}
{"SampleId": 4986032, "Origin": "Copy the contents of a Bucket to a RandomAccessThing at a specific offset.", "Reference": "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "LLMCandidates": ["Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset.", "Copy the contents of a Bucket to a RandomAccessBuffer at a specific offset."]}
{"SampleId": 5177780, "Origin": "This method is used\nonly to initialize the acceptReplacers field.", "Reference": "This method is used\nonly to initialize the headerReplacers field.", "LLMCandidates": ["This method is used only to initialize the acceptReplacers field by loading the accept.properties file and returning a list of HeaderReplacer objects using getHeaderReplacers method with appropriate parameters.", "This method initializes the acceptReplacers field by loading the content from the accept.properties file and creating HeaderReplacer instances for each entry with keys \"acceptOld\" and \"acceptNew\".", "This method retrieves the acceptReplacers by loading the accept.properties file and initializing the HeaderReplacer objects using the \"acceptOld\" and \"acceptNew\" properties.", "This method is used to initialize the acceptReplacers field by loading the accept.properties file and returning a list of HeaderReplacer objects with the \"acceptOld\" and \"acceptNew\" values.", "This method initializes the acceptReplacers field using the content of the accept.properties file. It reads all lines except those starting with \"#\", splits each line into key-value pairs and builds a List<HeaderReplacer> based on the values in \"acceptOld\" and \"acceptNew\". If the key matches \"acceptOld\" or \"acceptNew\", it adds a new HeaderReplacer to the list."]}
{"SampleId": 4388460, "Origin": "To add or remove access for an AWS account to copy or restore a\nmanual DB snapshot, or to make the manual DB snapshot public or\nprivate, use the ModifyDBSnapshotAttribute API.", "Reference": "To add or remove access for an AWS account to copy or restore a manual DB\nsnapshot, or to make the manual DB snapshot public or private, use the", "LLMCandidates": ["To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the ModifyDBSnapshotAttribute API.", "To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the ModifyDBSnapshotAttribute API.", "To add or remove access for an AWS account to copy or restore a DB snapshot, or to make the DB snapshot public or private, use the ModifyDBSnapshotAttribute API.", "To add or remove access for an AWS account to copy or restore a DB snapshot, or to make it public or private, use the ModifyDBSnapshotAttribute API.", "To add or remove access for an AWS account to copy or restore a DB snapshot, or to make the DB snapshot public or private, use the ModifyDBSnapshotAttribute API."]}
{"SampleId": 6018371, "Origin": "Computes the average for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum value across all bands in the {@link Planar} image for each pixel.", "Computes the minimum value for each pixel across all bands in the Planar image.", "Computes the minimum value for each pixel across all bands in the Planar image.", "Computes the minimum value for each pixel across all bands in the Planar<GrayS32> image.", "Computes the minimum value for each pixel across all bands in the Planar<GrayS32> image."]}
{"SampleId": 3992810, "Origin": "{@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "Reference": "{@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\"\nvalue (which would result in a negative window size).", "LLMCandidates": ["@code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\" value (which would result in a negative window size). This method is deprecated.", "@{code timeDifferenceMs} can be negative but its absolute value must not be larger than current window \"before\" value (which would result in a negative window size).", "timeDifferenceMs can be negative but it's absolute value must not be larger than current window \"before\" value (which would result in a negative window size).", "code timeDifferenceMs} can be negative but its absolute value must not exceed the window \"before\" value.", "@code timeDifferenceMs} can be negative but it's absolute value must not be larger than current window \"before\" value (which would result in a negative window size)."]}
{"SampleId": 4788914, "Origin": "If they are not\nthe same an AssertionFailedError is thrown.", "Reference": "AssertionFailedError is thrown.", "LLMCandidates": ["If they are not the same an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown.", "If they are not the same, an AssertionFailedError is thrown."]}
{"SampleId": 1310037, "Origin": "Asynchronously gets a service.", "Reference": "Asynchronously gets a api.", "LLMCandidates": ["Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API.", "Asynchronously gets an API."]}
{"SampleId": 4850245, "Origin": "Tests this matcher against the given {@link DiscordRequest}.", "Reference": "Tests this matcher against the given {@link DiscordWebRequest}.", "LLMCandidates": ["Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given DiscordWebRequest.", "Tests this matcher against the given DiscordWebRequest."]}
{"SampleId": 5218913, "Origin": "Add optimized insert value.", "Reference": "Add insert value.", "LLMCandidates": ["Add insert value with given column names, assignments, and parameters.", "Add insert value by combining column names from the current list with those derived from the given Collection of strings, and create a new InsertValue object using these combined column names, the assignments, derived columns count, parameters, and start index of appended parameters.", "Add insert value by combining column names from this instance with the given derived column names.", "Add insert value by combining column names from the original collection and derived column names.", "Add insert value by combining column names from the original collection and derived column names."]}
{"SampleId": 5177561, "Origin": "Creates a new internal Jetty connector.", "Reference": "Creates a new Jetty connection factory.", "LLMCandidates": ["Creates a new Jetty connection factory with the provided configuration.", "Creates a new internal Jetty connection factory with the given HTTP configuration.", "Creates a new internal Jetty connection factory with the given configuration.", "Creates a new internal Jetty connection factory with the given configuration.", "Creates a new internal Jetty connection factory using the given HTTP configuration."]}
{"SampleId": 3588530, "Origin": "See\n{@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set)} for details.", "Reference": "See\n{@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "LLMCandidates": ["See {@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.", "See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details."]}
{"SampleId": 1725851, "Origin": "This test asserts that only one\nstate is added to the stateflowgraph.", "Reference": "This test asserts that only one state is added to the state-flow graph.", "LLMCandidates": ["This test asserts that only one state is added to the state flow graph and uses a custom StateVertexFactory to compare states. It also sets the browser configuration based on the browser type and checks if the CrawlSession has reached exhaustion.", "This test asserts that only one state is added to the state flow graph and that the runner exited due to exhaustion when the maximum depth was reached.", "This test asserts that only one state is added to the state flow graph and uses a browser config with a specified embedded browser for comparison purposes.", "This test asserts that only one state is added to the state flow graph and uses a custom StateVertexFactory to compare states. Additionally, it sets a browser configuration based on the browser type and creates a CrawlSession by calling the CrawljaxRunner.", "This test asserts that only one state is added to the stateflowgraph when a StateVertexFactory is defined and Crawljax is run with a maximum depth of 3. Additionally, it ensures that the runner exits due to exhaustion."]}
{"SampleId": 5595783, "Origin": "Update the metadata version for the given key (cluster or store).", "Reference": "Update the metadata versions for the given keys (cluster or store).", "LLMCandidates": ["Update the metadata version for the given key (cluster or store), providing a collection of nodeIds.", "Update the metadata version for the given key (cluster or store). The method takes a Collection of nodeIds and a versionKey. If no nodeIds are provided, it defaults to one element collection with the specified versionKey.", "Update the metadata version for a given key (cluster or store). The method accepts a collection of node IDs and a version key.", "Update the metadata version for the given key (cluster or store), specified by nodeIds and versionKey.", "Update the metadata version for a given key (cluster or store). Takes a list of node IDs and the version key."]}
{"SampleId": 3344327, "Origin": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Observable;", "Reference": "{@code\nimport ratpack.rx2.RxRatpack;\nimport ratpack.test.exec.ExecHarness;\nimport io.reactivex.Single;", "LLMCandidates": ["Creates a Promise that subscribes to a Single onSubscribe and returns the resulting Promise<T> on the unmanaged thread.", "Create a new Promise from a Single Observable onSubscribe.", "Create a new Promise from a Single Observable onSubscribe.", "Create a Promise that completes with a value emitted by SingleOnSubscribe on a background thread, or errors if any error occurs during the execution.", "Creates a Promise that is completed with the result of a Single Observable created from the given onSubscribe action."]}
{"SampleId": 3080416, "Origin": "We include all flags that enable CPU instructions as we want best possible performance for\nthe code.", "Reference": "We include all flags that enable AMD64 CPU instructions as we want best possible performance\nfor the code.", "LLMCandidates": ["We include all AMD64 flags that enable CPU instructions as we want best possible performance for the code.", "We include all flags that enable CPU instructions as we want best possible performance for the code.", "We include all flags that enable AMD64 CPU instructions as we want best possible performance for the code.", "We include all flags that enable AMD64 CPU instructions as we want best possible performance for the code.", "We include all flags that enable AMD64 CPU instructions as we want best possible performance for the code."]}
{"SampleId": 2568439, "Origin": "Sets the value of the 'ValueType' field.", "Reference": "Sets the value of the 'valueType' field.", "LLMCandidates": ["Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field.", "Sets the value of the 'valueType' field."]}
{"SampleId": 3921113, "Origin": "The LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Lake.", "Reference": "The ORGANIZATION on Ontario Bank should not ve overrwritten since Ontario (STATE_OR_PROVINCE)\ndoes not span Ontario Bank.", "LLMCandidates": ["The ORGANIZATION of Ontario Bank should not overwrite since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.", "The ORGANIZATION on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.", "The ORGANIZATION on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.", "The ORGANIZATION on Ontario Bank should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Bank.", "The ORGANIZATION of Ontario Bank and the LOCATION on Ontario Lake should not be overwritten since Ontario (STATE_OR_PROVINCE) does not span Ontario Lake."]}
{"SampleId": 5440225, "Origin": "This method should only be used for steps whose value is\n{@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "Reference": "This method should\nonly be used for steps whose value is {@link #TYPE_ARGUMENT}.", "LLMCandidates": ["This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.", "This method should only be used for steps whose value is {@link #TYPE_ARGUMENT TYPE_ARGUMENT}."]}
{"SampleId": 3805026, "Origin": "Registers a new content observer for the media library", "Reference": "Registers a new library observer for the media library", "LLMCandidates": ["Registers a new library observer for the media library.", "Registers a new library observer for the media library", "Registers a new library observer for the media library", "Registers a new library observer for the media library", "Registers a new library observer for the media library"]}
{"SampleId": 2615521, "Origin": "Returns the height of the specified row, or 0 if the table layout has not been validated.", "Reference": "Returns the height of the specified row.", "LLMCandidates": ["Returns the height of the specified row. If the table layout has not been validated, it returns 0.", "Returns the height of the specified row. If the table layout has not been validated, it will return 0.", "Returns the height of the specified row. If the table layout has not been validated, the default value 0 will be returned.", "Returns the height of the specified row. If no row layout has been validated, returns 0.", "Returns the height of the specified row. If no row layout has been validated, returns 0."]}
{"SampleId": 2774802, "Origin": "Specifies the component's horizontal width, measured in pixels.", "Reference": "Specifies the horizontal width of the %type%, measured in pixels.", "LLMCandidates": ["Specifies the %type%'s horizontal width, measured in pixels.", "Specifies the horizontal width of the %type%, measured in pixels.", "Specifies the %type%'s horizontal width, measured in pixels.", "Specifies the %type%'s horizontal width, measured in pixels.", "Specifies the component's horizontal width of the %, measured in pixels."]}
{"SampleId": 3399007, "Origin": "Test of parse method, of class FinishedMessageParser.", "Reference": "Test of parse method, of class FinishedParser.", "LLMCandidates": ["Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser.", "Test of parse method, of class FinishedParser."]}
{"SampleId": 4473556, "Origin": "Create Subject Alternative names with emails.", "Reference": "Set the emails.", "LLMCandidates": ["Set Subject Alternative names with emails.", "Set subject alternative names from the provided email list.", "Set Subject Alternative names with emails.", "Set Subject Alternative names with emails.", "Set Subject Alternative names with emails."]}
{"SampleId": 4615496, "Origin": "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "Reference": "Before nodes are added to the result, they must be finalized via {@link ANode#finish()}.", "LLMCandidates": ["If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}.", "If nodes returned are to be further used, they must be finalized via {@link ANode#finish()}."]}
{"SampleId": 2081521, "Origin": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but failes if it doesn't.", "Reference": "We make sure that\ntrying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "LLMCandidates": ["We make sure that trying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update the field works if the user has the \"correct\" role, but fails if it doesn't.", "We make sure that trying to update the field works if the user has the \"correct\" role, but fails if it doesn't."]}
{"SampleId": 6192516, "Origin": "Create new {@link Builder} based on an existing {@link BaseEvent} instance and and {@link EventContext}.", "Reference": "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "LLMCandidates": ["Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}.", "Create new {@link Builder} based on an existing {@link CoreEvent} instance and and {@link EventContext}."]}
{"SampleId": 2217848, "Origin": "Test of npara method, of class MultivariateGaussian.", "Reference": "Test of length method, of class MultivariateGaussian.", "LLMCandidates": ["Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussianDistribution.", "Test of length method, of class MultivariateGaussianDistribution."]}
{"SampleId": 3552099, "Origin": "Create a {@link Jwt} Validator that contains all standard validators as well as\nany supplied in the parameter list.", "Reference": "Create a {@link Jwt} Validator that contains all standard validators when an issuer is known.", "LLMCandidates": ["Create a {@link Jwt} Validator that contains all standard validators and a new {@link JwtIssuerValidator} with the specified issuer.", "Create a {@link Jwt} Validator with issuer validation that contains all standard validators as well as any supplied in the parameter list.", "Create a {@link Jwt} Validator with default settings that includes standard validators and an optional issuer validator specified by the parameter.", "Create a default {@link Jwt} Validator that contains all standard validators as well as an additional {@link JwtIssuerValidator} with the provided issuer.", "Create a default {@link Jwt} Validator that contains all standard validators and an additional {@link JwtIssuerValidator}."]}
{"SampleId": 373027, "Origin": "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing\nsupported environment variables.", "Reference": "Gets a property of type {@link PropertyType#PATH}.", "LLMCandidates": ["Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing supported environment variables. If the property's value contains \"$ACCUMULO_\" prefix, an error is thrown indicating that environment variable interpolation is not supported in this method.", "Gets a property of type {@link PropertyType#PATH}, ensuring that it is not of environment variable interpolation and returning the unmodified value.", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing supported environment variables. Throws an exception if the property value contains \"ACCUMULO_\".", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing supported environment variables, except for $ACCUMULO_ related ones.", "Gets a property of type {@link PropertyType#PATH}, interpreting the value properly, replacing supported environment variables, unless the path contains \"$ACCUMULO_\" in which case it throws an exception."]}
{"SampleId": 2732049, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not specified @NotNull {@link SVGElement} fits this {@link SvgSelector} conditions.", "Returns whether or not specified @NotNull {@link SVGElement} fits this {@link SvgSelector} conditions.", "Returns whether or not specified @NotNull {@link SVGElement} fits this {@link SvgSelector} conditions.", "Returns whether or not specified @NotNull {@link SVGElement} fits this {@link SvgSelector} conditions.", "Returns whether or not specified @NotNull {@link SVGElement} fits this {@link SvgSelector} conditions."]}
{"SampleId": 5062115, "Origin": "Parent will have\nmodified time to set to {@link LayerConfiguration#DEFAULT_MODIFIED_TIME}.", "Reference": "Parent will have\nmodification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "LLMCandidates": ["Parent will have modification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Parent will have modified time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Adds all directories along extraction paths to explicitly set permissions for those directories. Parent will have modified time to set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Parent will have modification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}.", "Parent will have modification time set to {@link LayerConfiguration#DEFAULT_MODIFICATION_TIME}."]}
{"SampleId": 3406829, "Origin": "Returns true if the method m is visible from code in the class from.", "Reference": "Returns true if the classmember m is visible from code in the class from.", "LLMCandidates": ["Returns true if the method m is visible from code in the class from, considering its access modifiers.", "Returns true if the member m is visible from code in the class from.", "Returns true if the method m is visible from code in the class from when considering access modifiers such as public, private, protected and package.", "Returns true if the ClassMember m is visible from code in the class from.", "Returns true if the ClassMember m is visible from code in the class from."]}
{"SampleId": 2706894, "Origin": "Set Balancing.", "Reference": "Set Saldierung.", "LLMCandidates": ["Sets the IsBalancing value by updating the corresponding column in the database.", "Set the current value of IsBalancing.\n\nOverridden method that sets the current value of IsBalancing based on the provided boolean parameter.\n\nParameters:\nIsBalancing - The new value for IsBalancing.\n\nNote: This method is overridden from its parent class, so it retains all the functionality of the original setIsBalancing() method while allowing for possible additional logic or modifications in the subclass.", "Set balancing by setting IsBalancing field.", "Set balancing by setting IsBalancing field.", "Set balancing."]}
{"SampleId": 471489, "Origin": "The option will be converted to a  type.", "Reference": "The option is a:  type.", "LLMCandidates": ["The property will be converted to a boolean type.", "The option will be converted to a  type.", "The option will be converted to a boolean type indicating whether or not to disable stream cache.", "The option will be converted to a boolean type indicating whether or not to disable stream cache.", "The option will be converted to a CacheDiff type."]}
{"SampleId": 2915665, "Origin": "Returns a curve node for a CDS quoted in points upfront.", "Reference": "Returns a curve node with points upfront convention.", "LLMCandidates": ["Returns a curve node for a CDS with fixed rate quoted in points upfront.", "Returns a curve node for a CDS quoted with fixed rate and legal entity specified.", "Returns a curve node for a CDS quoted with points upfront.", "Returns a curve node for a CDS quoted with points upfront.", "Returns a curve node for a CDS quoted in points upfront with the given quote convention."]}
{"SampleId": 733850, "Origin": "Recursively find all operators under root, that are of class clazz, and\nput them in result.", "Reference": "Recursively find all operators under root, that are of class clazz or are the sub-class of clazz, and\nput them in result.", "LLMCandidates": ["Recursively find all operators under root that are of class or a subclass of clazz, and put them in result.", "Recursively find all operators under root, that are assignable from class clazz, and put them in result.", "Recursively find all operators under root, that are of class or a subclass of clazz, and put them in result.", "Recursively find all operators under root, that are of type or subtype of clazz, and put them in result.", "Recursively find all operators under root, that are assignable from class clazz, and put them in result."]}
{"SampleId": 4245998, "Origin": "Convert to object types, returning null if text is null.", "Reference": "Convert to object types, returning null if text is null or empty.", "LLMCandidates": ["Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty or null.", "Convert to object types, returning null if text is empty or null."]}
{"SampleId": 230839, "Origin": "Sets the transformed layout.", "Reference": "Transform the partition.", "LLMCandidates": ["Sets the transformed layout by applying the given definition and layout.", "Sets the transformed layout using the given definition and layout.", "Sets the transformed layout.", "Sets the transformed layout.", "Sets the transformed layout."]}
{"SampleId": 6174108, "Origin": "Creates an entity and populates its state based on the dbObject given.", "Reference": "Creates an entity and populates its state based on the document given.", "LLMCandidates": ["Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given.", "Creates an entity and populates its state based on the Document given."]}
{"SampleId": 5629969, "Origin": "Sets the entity.", "Reference": "Set the entity.", "LLMCandidates": ["Sets the entity for this builder and returns this builder for method chaining.", "Sets the entity for the builder.", "Sets the entity for the builder.", "Sets the entity for the Builder object.", "Sets the entity for the Builder object."]}
{"SampleId": 1150835, "Origin": "An empty NumericDocValues which returns zero for every document", "Reference": "An empty NumericDocValues which returns no documents", "LLMCandidates": ["An empty NumericDocValues which returns NO_MORE_DOCS for every document operation and 0 for longValue()", "An empty NumericDocValues which returns zero for every document operation and has been exhausted.", "An empty NumericDocValues which returns zero for every document operation and has been exhausted.", "An empty NumericDocValues which returns -1 for every document and returns 0 for get() method.", "An empty NumericDocValues which returns NO_MORE_DOCS for all methods except cost() and longValue(), which return 0 and throw an AssertionError, respectively."]}
{"SampleId": 3427796, "Origin": "Setter for the URL of the content review icon associated with this item", "Reference": "Setter for the css class of the content review icon associated with this item", "LLMCandidates": ["Setter for the CSS class of the content review icon associated with this item.", "Setter for the CSS class of the content review icon associated with this item", "Setter for the CSS class of the content review icon associated with this item", "Setter for the CSS class of the content review icon associated with this item", "Setter for the CSS class of the content review icon associated with this item"]}
{"SampleId": 3196536, "Origin": "Returns\n {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "Reference": "Returns\n if {@link RolapConnectionProperties#UseContentChecksum}\nis set to false.", "LLMCandidates": ["Returns {@link RolapConnectionProperties#UseContentChecksum} is set to false.", "Returns the checksum as a ByteString. If {@link RolapConnectionProperties#UseContentChecksum} is set to false.", "Returns the MD5 checksum as a ByteString if RolapConnectionProperties#UseContentChecksum is set to false. Otherwise, returns null.", "Returns the value of {@link RolapConnectionProperties#UseContentChecksum} if it is set to false. Otherwise, returns a ByteString.", "Returns the checksum in ByteString format if RolapConnectionProperties#UseContentChecksum is set to false."]}
{"SampleId": 1576617, "Origin": "Returns an {@link InputSupplier} for a given entry.", "Reference": "Gets the {@link Manifest} inside the given jar.", "LLMCandidates": ["Returns an {@link InputSupplier} for a given entry.", "Returns an {@link InputSupplier} for a given entry. If the location is local, it will return an {@link InputStream} directly. Otherwise, it will search for the Manifest file inside the JAR.", "Returns an {@link InputSupplier} for a given entry in a JAR file. If the location is local, it will use {@code File}, otherwise, it will use {@code JarInputStream} to search for the specified entry.", "Returns an {@link InputSupplier} for a given entry if the location is local, otherwise search for the Manifest file.", "Returns an {@link InputSupplier} for a given entry in local file system or retrieves the Manifest from the JAR at the provided URL."]}
{"SampleId": 2732050, "Origin": "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions.", "Reference": "Returns whether or not specified {@link SVGElement} matches this {@link SvgSelector} conditions.", "LLMCandidates": ["Returns whether or not specified SVGElement fits this SvgSelector selector conditions.", "Checks whether or not the specified SVGElement fits this SvgSelector's selector conditions.", "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions based on the defined criteria for IDs, classes and elements.", "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions.", "Returns whether or not specified {@link SVGElement} fits this {@link SvgSelector} selector conditions."]}
{"SampleId": 2134051, "Origin": "bounded predict\n* predict the rating given a sparse appender vector", "Reference": "Predict the rating given a sparse appender vector.", "LLMCandidates": ["Bounded predict\n* Predicts the rating given a sparse vector appender for userId and itemId.", "Bounded predict\n* Predict the rating given a sparse vector appender for user and item IDs.", "bounded predict\n* predict the rating given a sparse appender vector for a user and item\n* bounds are enforced if bound parameter is set to true", "Bounded predict\n* Predicts the rating given a sparse appender vector and ensures the result stays within the bounds of maxRate and minRate if bound is true.", "bounded predict\n* predict the rating given a sparse appender vector for a specific user and item, taking into account any bounds if specified."]}
{"SampleId": 5440405, "Origin": "One way to ensure this is to always call\n{@link #declareLabel declared} before calling this method.", "Reference": "One way to ensure this is to always call {@link #declareLabel} before\ncalling this method.", "LLMCandidates": ["One way to ensure this is to always call {link #declareLabel declared} before calling this method.", "One way to ensure this is to always call {link #declareLabel declared} before calling this method.", "One way to ensure this is to always call {link #declareLabel declared} before calling this method.", "One way to ensure this is to always call {@link #declareLabel declared} before calling this method.", "One way to ensure this is to always call {@link #declareLabel declared} before calling this method."]}
{"SampleId": 4003873, "Origin": "Felix constructor documentation for more information on\nframework configuration options.", "Reference": "Refer to the  Felix\n constructor documentation for more information on framework\nconfiguration options.", "LLMCandidates": ["Felix constructor documentation for more information on framework configuration options.", "Launches and manages a Karaf OSGi framework.", "This method continuously attempts to launch and manage a Karaf framework. It waits for the framework to stop before exiting or restarting based on the \"karaf.restart\" property value. If an error occurs during launching or shutting down, appropriate error messages are printed and the program exits with a non-zero code.", "Starts a Felix OSGi framework and keeps it running indefinitely by continuously restarting it when it stops or times out. The LifecycleManager is used to manage the lifecycle of the Felix framework and the exit code determines whether the program exits or restarts based on certain conditions.", "Launches a Karaf framework in an infinite loop, shutting it down and restarting based on system properties."]}
{"SampleId": 2775452, "Origin": "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.", "Reference": "The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom.", "LLMCandidates": ["The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.", "The choices are: 1 = top, 2 = vertically centered, 3 = bottom.", "The choices are: 1 = top, 2 = vertically centered, 3 = aligned at the bottom.", "A number that encodes how the contents of the arrangement are aligned vertically. The choices are: 1 = top, 3 = aligned at the bottom. Alignment has no effect if the arrangement's height is automatic.", "A number that encodes how the contents of the arrangement are aligned vertically. The choices are: 1 = top, 2 = vertically centered, 3 = bottom. Alignment has no effect if the arrangement's height is automatic."]}
{"SampleId": 3652423, "Origin": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code filePathParam}.", "Reference": "Verifies that the given {@code emailContent} is the same as\nthe content given in the file at {@code fileName}.", "LLMCandidates": ["Verifies that the given emailContent is the same as the content given in the file at fileName.", "Verifies that the given emailContent is the same as the content given in the file at fileName.", "Verifies that the given emailContent is the same as the content given in the file at fileName.", "Verifies that the given emailContent is the same as the content in the file at fileName.", "Verifies that the given emailContent is the same as the content given in the file at fileName."]}
{"SampleId": 2732074, "Origin": "Returns a better disabled icon than BasicLookAndFeel offers.", "Reference": "Returns better disabled icon than {@link BasicLookAndFeel} offers.", "LLMCandidates": ["Returns an optimized disabled icon based on the provided icon.", "Returns a disabled icon based on the given icon, using a more suitable implementation for different icon types if available, and returns null otherwise. If no icon is provided or the provided icon is not an appropriate size, this method returns the provided icon as-is.", "Returns a disabled icon for the given icon if it is not null and has non-zero width and height; otherwise returns the given icon. If the given icon is an instance of any subclass of ImageIcon, SvgIcon, GifIcon or LazyIcon, a disabled copy of the image is created using ImageUtils; otherwise, null is returned.", "Returns a disabled icon by using ImageUtils or matching existing cached disabled icons if available.", "Returns a disabled icon using the provided icon if it is non-null and has a non-zero width and height, otherwise returns the input icon. The implementation now utilizes ImageUtils for creating disabled copies of icons."]}
{"SampleId": 4048110, "Origin": "This will set the margin between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "Reference": "This will set the difference between the annotations \"outer\" rectangle defined by\n/Rect and the border.", "LLMCandidates": ["This will set the margin between the annotations \"outer\" rectangle defined by /Rect and the border using the new parameter names.", "This will set the margin between the annotations \"outer\" rectangle defined by /Rect and the border using different variable names for margins.", "This will set the margin between the annotations \"outer\" rectangle defined by /Rect and the border using the difference values for left, top, right, and bottom.", "This will set the margin between the annotations \"outer\" rectangle defined by /Rect and the border.", "This will set the margin between the annotations \"outer\" rectangle defined by /Rect and the border, using new variable names for the differences instead of margins."]}
{"SampleId": 1703350, "Origin": "Compute the total number of transferred addresses.", "Reference": "Get the total number of addresses in range.", "LLMCandidates": ["Calculate the total number of transferred addresses.", "Retrieve the total number of transferred addresses.", "Retrieve the total number of transferred addresses.", "Retrieve the total number of transferred addresses.", "Calculate the total number of transferred addresses."]}
{"SampleId": 664505, "Origin": "Convenience method for calling {@link #newGenericExecuteException(TemplateCallableModel, boolean, String)}.", "Reference": "Convenience method for calling\n{@link #newGenericExecuteException(String, TemplateCallableModel, boolean, Throwable)}", "LLMCandidates": ["Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, boolean, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, boolean, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, boolean, Throwable)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, boolean)}.", "Convenience method for calling {@link #newGenericExecuteException(String, TemplateFunctionModel, boolean, Throwable)}."]}
{"SampleId": 3035868, "Origin": "Backs up all buckets for the device to the given node.", "Reference": "Backs up the given flow bucket.", "LLMCandidates": ["Replicates a given bucket to each of the backup nodes if the bucket's term matches the replica term and the local node is the current master.", "Backups all buckets for the device using a CompletableFuture to each backup node.", "Backups all buckets for the device using a CompletableFuture to each backup node.", "Replicates a given bucket to all backup nodes for the current device replica.", "Back up all buckets for the device to the given node."]}
{"SampleId": 2848848, "Origin": "Make JobDirectoryManifestService beans are configured as expected.", "Reference": "Make JobDirectoryManifestService beans is configured as expected.", "LLMCandidates": ["Verify that there is exactly one bean of type JobDirectoryManifestService configured.", "Make JobDirectoryManifestService beans are configured with exactly one bean instance.", "Ensure that there is exactly one bean of type JobDirectoryManifestService configured.", "Ensure that there is exactly one bean of type JobDirectoryManifestService configured.", "Test that the JobDirectoryManifestService bean is configured correctly."]}
{"SampleId": 2577115, "Origin": "Runs the given {@code runnable} at most {@code retryCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "Reference": "Runs the given {@code runnable} at most {@code attemptsCount} times until it passes,\nleaving {@code intervalMillis} milliseconds between the invocations.", "LLMCandidates": ["Runs the given {@code supplier} at most {@code attemptsCount} times until it passes, leaving {@code intervalMillis} milliseconds between the invocations.", "Runs the given Supplier at most attemptsCount times until it returns a non-exceptional result, leaving intervalMillis milliseconds between the invocations.", "Runs the given Supplier at most attemptsCount times until it returns a non-exception result, leaving intervalMillis milliseconds between the invocations and using the iteration index.", "Runs the given Supplier at most attemptsCount times until it does not throw a RuntimeException or AssertionError, leaving intervalMillis milliseconds between the invocations.", "Runs the given Supplier at most attemptsCount times until it passes, leaving intervalMillis milliseconds between the invocations."]}
{"SampleId": 4618280, "Origin": "Removes a query focus from the stack.", "Reference": "Removes the current query focus from the stack.", "LLMCandidates": ["Removes a query focus from the stack using pollLast() method.", "Removes a query focus from the stack using pollLast() method.", "Removes a query focus from the end of the stack.", "Removes a query focus from the end of the stack.", "Removes a query focus from the stack using pollLast() instead of remove(focuses.size() - 1)."]}
{"SampleId": 5458245, "Origin": "It\nsatisfies the general contract of the {@link Object#hashCode", "Reference": "It satisfies the general\ncontract of the {@link Object#hashCode Object.hashCode} method.", "LLMCandidates": ["Calculates a hash code for this object based on its fields; if compiledVersion is not null, includes a contribution from it.", "It returns a hash code value for this object, suitable as a key into a hash table. This method is supported for the benefit of hash tables used throughout this library. The general contract for hashCode() is that two objects with the same field values will return the same hash codes. To make sure this hash code is consistent across different JVMs, we use a hash function based on the name, mods and compiledVersion if not null, and apply the ASCII value of 43 as a multiplier. The resulting hashCode() is likely to distribute values evenly over the 32-bit range, but there can be no guarantee that it will do so.", "Returns a hash code for this instance, suitable for use in hashing mechanisms that produce different results even when the same object is used to produce those results. This method is guaranteed to return the same hash value for this object at all times, as long as the internal state of the object remains unchanged. If two objects are equal according to the equals(Object) method, then they must have equal hashCode values; otherwise, the hashCode method is not required to follow this principle. This implementation computes a hash code by taking into account the name, mods and compiledVersion (if it is not null) of the object. The initial hash value for the name field is multiplied by 43 and then the hash code from the mods field is added, resulting in a new hash value. If compiledVersion is not null, its hashCode is also multiplied by 43 and added to the hash value.", "Overrides the {@link Object#hashCode} method to compute a suitable hash code for this object using the name, mods, and compiledVersion values. If the compiledVersion is not null, its hash code is added to the result with a multiplier of 43 before returning it.", "It returns a hash code value for the object; the general contract of the {@link Object#hashCode} method is satisfied. The hash code is computed by taking the sum of the ASCII values of the name and mods, multiplied by 43, and then possibly adding the hash code of compiledVersion if it's not null."]}
{"SampleId": 1922860, "Origin": "NativeLinkable}.", "Reference": "NativeLinkableGroup}.", "LLMCandidates": ["NativeLinkableGroup}.", "NativeLinkableGroup}.", "Returns an iterable of {@code NativeLinkableGroup} objects that represents the native linkable dependencies for this rule.", "NativeLinkableGroup}.", "NativeLinkableGroup}."]}
{"SampleId": 3830101, "Origin": "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Reference": "Returns a new Run with the status of the given completed step set accordingly.", "LLMCandidates": ["Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly.", "Returns a new Run with the new status, and with the status of the given, completed step set accordingly."]}
{"SampleId": 2912437, "Origin": "Sets the groups used to find an issuer curve.", "Reference": "Sets the groups used to find an issuer curve by legal entity.", "LLMCandidates": ["Sets the groups used to find an issuer curve by key of LegalEntityId.", "Sets the groups used to find an issuer curve by LegalEntityId instead of StandardId.", "Sets the groups used to find an issuer curve with the specified LegalEntityId.", "Sets the groups used to find an issuer curve by key of LegalEntityId.", "Sets the groups used to find an issuer curve by key of LegalEntityId."]}
{"SampleId": 4776185, "Origin": "Sets the amount of damage caused by the event", "Reference": "Sets the raw amount of damage caused by the event", "LLMCandidates": ["Sets the amount of damage caused by the event through a specific modifier.", "Sets the amount of damage caused by the event using a base value and the given damage.", "Sets the amount of damage caused by the event using a base value and the given damage.", "Sets the amount of damage caused by the event for the base DamageModifier.", "Sets the amount of damage caused by the event for the base DamageModifier."]}
{"SampleId": 2544522, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given Quaterniond to this matrix and store the result in ."]}
{"SampleId": 4470238, "Origin": "Gets the {@link EncryptionScope} used to encrypt this blob's content on the server.", "Reference": "Gets the {@code encryption scope} used to encrypt this blob's content on the server.", "LLMCandidates": ["Gets the {@link String} used to encrypt this blob's content on the server.", "Gets the String used to encrypt this blob's content on the server.", "Gets the String used to encrypt this blob's content on the server.", "Gets the {@link String} used to encrypt this blob's content on the server.", "Gets the {@link String} used to encrypt this blob's content on the server."]}
{"SampleId": 1131683, "Origin": "If version is null, \"latest\" or \"$LATEST\",\nthen it returns the highest version available in the system for the package.", "Reference": "If version is null, PackageUtils.LATEST or PackagePluginHolder.LATEST,\nthen it returns the highest version available in the system for the package.", "LLMCandidates": ["If version is null, \"latest\" or PackageUtils.LATEST, then it returns the highest version available in the system for the package.", "If version is null, \"latest\" or \"$LATEST\", then it returns the highest version available in the system for the package, taking into account PackageUtils.LATEST and PackagePluginHolder.LATEST as well.", "If version is null, \"latest\" or \"$LATEST\", then it returns the highest version available in the system for the package. If version equals PackageUtils.LATEST or PackagePluginHolder.LATEST, then it returns the latest version for the package.", "If version is null, \"latest\", or \"$LATEST\", then it returns the highest version available in the system for the package. If version is set to PackageUtils.LATEST or PackagePluginHolder.LATEST, then it also returns the highest version available in the system for the package.", "If version is null, \"latest\", \"$LATEST\", or PackageUtils.LATEST, then it returns the highest version available in the system for the package."]}
{"SampleId": 5175625, "Origin": "Configuration)", "Reference": "Dynamic Configuration)", "LLMCandidates": ["If no redirection URI has been provided by the client or if multiple redirection URIs have been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)", "If multiple redirection URIs have been registered, if only part of the redirection URI has been registered, or if no redirection URI has been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)", "If multiple redirection URIs have been registered, if only part of the redirection URI has been registered, or if no redirection URI has been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)", "If multiple redirection URIs have been registered, if only part of the redirection URI has been registered, or if no redirection URI has been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)", "If only part of the redirection URI has been registered, or if no redirection URI has been registered, the client MUST include a redirection URI with the authorization request using the \"redirect_uri\" request parameter. (See 3.1.2.3. Dynamic Configuration)"]}
{"SampleId": 803642, "Origin": "Gets the threshold parameter value.", "Reference": "Get the threshold parameter value.", "LLMCandidates": ["Gets the threshold parameter value.", "Gets the threshold parameter value as a double.", "Gets the threshold parameter value as a double.", "Gets the threshold parameter value as a double.", "Gets the threshold parameter value, which can be obtained by calling this method."]}
{"SampleId": 237395, "Origin": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method\nwhen a file is not the correct size.", "Reference": "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext)} method\nwhen a file is not the correct size.", "LLMCandidates": ["Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when a file is not the correct size.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when a file is not the correct size.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when a file is not the correct size.", "Tests the FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyContext) method when a file is not the correct size.", "Tests the {@link FileSystemMaster#checkConsistency(AlluxioURI, CheckConsistencyOptions)} method when a file is not the correct size."]}
{"SampleId": 1612089, "Origin": "Returns list of nodes matching defined line and column number.", "Reference": "Returns list of nodes matching defined line number, column number and token type.", "LLMCandidates": ["Returns list of nodes matching defined line and column number and token type.", "Returns list of nodes matching defined line and column number including token type.", "Returns list of nodes matching defined line and column number and token type.", "Returns list of nodes matching defined line and column number and token type.", "Returns list of nodes matching defined line, column and token type number."]}
{"SampleId": 1992986, "Origin": "Deletes an external ID.", "Reference": "Inserts or updates an external ID.", "LLMCandidates": ["Updates an external ID.", "Upserts an external ID.", "Upserts an external ID.", "Updates an external ID.", "Updates an external ID."]}
{"SampleId": 6330486, "Origin": "Calls the specified converter function with the current Maybe instance\nduring assembly time and returns its result.", "Reference": "Calls the specified converter function during assembly time and returns its resulting value.", "LLMCandidates": ["Calls the specified converter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified converter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified converter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified converter function with the current Maybe instance during assembly time and returns its result.", "Calls the specified converter function with the current Maybe instance during assembly time and returns its result."]}
{"SampleId": 2337101, "Origin": "Get OpenID IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "Reference": "Get list of OpenID Connect IDP configurations\n### Functional Description:   Retrieve a list of configured OpenID Connect IDPs.", "LLMCandidates": ["Get a list of configured OpenID Connect IDPs.", "Retrieve a list of configured OpenID Connect IDPs using the provided X-Sds-Auth-Token for authorization.", "Retrieve a list of configured OpenID Connect IDPs using provided X-Sds-Auth-Token.", "Get OpenID IDP configurations\n### Functional Description: Retrieve a list of configured OpenID Connect IDPs.", "Retrieve a list of configured OpenID Connect IDPs with the given xSdsAuthToken."]}
{"SampleId": 431814, "Origin": "Reports the percentile value from the given list ordered in a non-descending order.", "Reference": "Reports the percentile value from the continuous distribution described by a given list of\nsamples.", "LLMCandidates": ["Computes the quantile value for a list of Long values using a custom quantile scale to support percentile reporting up to p99.9.", "Reports the percentile value from the given list ordered in a non-descending order with possible quantiles scale.", "Computes the percentile value from the given list ordered in a non-descending order using quantile scaling to allow reporting of percentile values such as p99.9.", "Reports the percentile value from the given list ordered in a non-descending order, taking into account the quantile scale to allow reporting of percentile values such as p99.9.", "Reports the percentile value from the given list ordered in a non-descending order, taking into account the quantile scale to allow reporting of percentile values such as p99.9."]}
{"SampleId": 3571800, "Origin": "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is\nalso specifically included.", "Reference": "Marks {@code protoMember}, throwing if it is explicitly excluded.", "LLMCandidates": ["Marks {@code protoMember}, throwing if it is explicitly excluded or if its enclosing type is also specifically included.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is specifically included and adds the type to the list of types.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is also specifically included. Adds the type of {@code protoMember} to the set of types and puts the {@code protoMember} in the map with its type as the key.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is specifically included. If the protoMember is not null and its type has not already been added to the set of types, add the type to the set of types and store the protoMember in the map using the type as the key.", "Marks {@code protoMember}, throwing if it is explicitly excluded, or if its enclosing type is also specifically included. If the type is not already present in the list of types, adds the type to the list and then associates the protoMember with its type in the members map."]}
{"SampleId": 4003565, "Origin": "This option allows to configure each configuration file based on the  location.", "Reference": "This option allows to configure each configuration fille based on the karaf.home location.", "LLMCandidates": ["This option allows to configure each configuration file based on the location using the specified pointer and value.", "This option allows to configure each configuration file based on the location of the ConfigurationPointer.", "This option allows to configure each configuration file based on the location of the ConfigurationPointer.", "This option allows to configure each configuration file based on the location of the ConfigurationPointer.", "This option allows to configure each configuration file based on the location of the ConfigurationPointer."]}
{"SampleId": 6364977, "Origin": "Get all the jobs present in the wiki.", "Reference": "Get all the intervals/jobs present in the wiki.", "LLMCandidates": ["Initialize the intervals cache, then get all the watchlist job documents from the main wiki and add them to the list of intervals. Finally, initialize the subscribers cache for each interval.", "Initialize the intervals cache with watchlist job document names from the main wiki and then initialize the subscribers cache for each interval.", "Initialize the intervals cache with all the watchlist job documents from the main wiki and initialize the subscribers cache for each interval.", "Initialize the intervals cache and the subscribers cache from all the watchlist jobs present in the wiki.", "Initialize the intervals cache and the subscribers cache from all the watchlist jobs present in the wiki."]}
{"SampleId": 5322278, "Origin": "Return a single {@link ReflectiveMethodResolver}.", "Reference": "Return the specified {@link MethodResolver} delegates, if any.", "LLMCandidates": ["Return a list of {@link MethodResolver}s.", "Return all {@code MethodResolver}s stored in this object.", "Return a list of {@link MethodResolver}.", "Return a list of {@link MethodResolver}.", "Return a list of {@link MethodResolver}."]}
{"SampleId": 5360748, "Origin": "This is useful for typical \nblocks in manual JavaMail code.", "Reference": "blocks in manual JavaMail code.", "LLMCandidates": ["Useful for typical blocks in manual JavaMail code.", "Useful for typical blocks in manual JavaMail code involving the CacheDiff operation.", "This is useful for typical blocks in manual JavaMail code.", "This is useful for typical blocks in manual JavaMail code.", "This is useful for typical blocks in manual JavaMail code."]}
{"SampleId": 575173, "Origin": "Two objects are considered different if\n{@code value.compareTo(reference) != 0}", "Reference": "Two objects are considered different if\n{@code value.equals(reference) == false}", "LLMCandidates": ["Two objects are considered different if {@code value.equals(reference)} returns false.", "Two objects are considered different if {@code value.equals(reference)", "Two objects are considered different if {@code value} and {@code reference} are not equal ({@code !value.equals(reference)})", "Two objects are considered different if {@code value.equals(reference) != true", "Two objects are considered different if {@code value.equals(reference)} is false."]}
{"SampleId": 2732385, "Origin": "Expands all tree nodes in a single call.", "Reference": "Expands all tree nodes.", "LLMCandidates": ["Expands all tree nodes recursively up to the maximum depth level in a single call.", "Expands all tree nodes recursively in a single call using the expandAllImpl method with getRootNode() as the starting node and null as the parent node. The method stops when the maximum level is reached (Integer.MAX_VALUE).", "Expands all tree nodes in a single call using expandAllImpl method with getRootNode and null as parameters, with maximum depth set to Integer.MAX_VALUE.", "Expands all tree nodes in a single call by invoking expandAllImpl method with getRootNode, null, and Integer.MAX_VALUE as arguments.", "Expands all tree nodes in a single call. This method internally calls the expandAllImpl function with appropriate parameters."]}
{"SampleId": 235252, "Origin": "Tests for defaults {@link CreateOptions}.", "Reference": "Tests for defaults {@link GetWorkerOptions}.", "LLMCandidates": ["Tests for defaults {@link GetWorkerOptions} with setBlockInfo(new BlockInfo()).", "Tests for defaults {@link CreateOptions} with added block info.", "Tests for defaults {@link CreateOptions}, including setting a new block info.", "Tests for defaults {@link GetWorkerOptions} with added block info.", "Tests for defaults {@link GetWorkerOptions} with added block info."]}
{"SampleId": 2337171, "Origin": "Modified by user info", "Reference": "Modified by user", "LLMCandidates": ["Modified by user", "Modified by user (fixing a typo)", "Modified by user", "Modified by user", "Modified by user"]}
{"SampleId": 2913748, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Parses an instance from the specified name using the NAMES table.", "Parses an instance from the specified name using the NAMES table.", "Obtains an instance from the specified name using the NAMES parser.", "Obtains an instance from the specified name using the NAMES parser."]}
{"SampleId": 4476805, "Origin": "The {@link EcKeyCreateOptions#getCurve() key curve} can be\noptionally specified.", "Reference": "The {@link CreateEcKeyOptions#getCurveName() key curve} can be\noptionally specified.", "LLMCandidates": ["The {CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {CreateEcKeyOptions#getCurve() key curve} can be optionally specified.", "The {CreateEcKeyOptions#getCurve() key curve} can be optionally specified."]}
{"SampleId": 5841424, "Origin": "Used by track model container (e.g.", "Reference": "Only exposed to track model container (e.g.", "LLMCandidates": ["Used by track model container (e.g. Builder<M, R>)", "Used by track builder container (e.g.", "Used by track model container (e.g. Builder<M, R>)", "Used by track model container (e.g. Builder<M, R>)", "Used by track builder container (e.g."]}
{"SampleId": 4388477, "Origin": "IMPORTANT: The source DB instance must have backup retention\nenabled.", "Reference": "The source DB instance must have backup retention enabled.", "LLMCandidates": ["IMPORTANT: The source DB instance must have backup retention enabled.", "IMPORTANT: The source DB instance must have backup retention enabled.", "This method creates a read replica of a source DB instance. Before creating the read replica, ensure that the backup retention is enabled for the source DB instance. The method takes a CreateDBInstanceReadReplicaRequest object as input and returns a DBInstance object representing the created read replica.", "This method creates a read replica of a specified DB instance with backup retention enabled. It takes a CreateDBInstanceReadReplicaRequest object as input and returns a DBInstance object representing the newly created read replica. The method also handles request metrics and response handling, and ensures proper cleanup in case of exceptions or errors.", "IMPORTANT: Before creating a read replica for the source DB instance, ensure that backup retention is enabled for it."]}
{"SampleId": 340614, "Origin": "Requests that the player prefetch the media items for playback.", "Reference": "Requests that the player prepare the media items for playback.", "LLMCandidates": ["Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback.", "Requests that the player prepare the media items for playback."]}
{"SampleId": 4383857, "Origin": "Getting Search Suggestions \nin the Amazon CloudSearch Developer Guide .", "Reference": "CloudSearch Developer Guide.", "LLMCandidates": ["Deletes search suggestions for a specific index in Amazon CloudSearch.", "Deletes a suggestion for the SearchSuggest API in Amazon CloudSearch.", "Deletes a suggestion for the SearchSuggest API in Amazon CloudSearch.", "Deletes search suggestions for a search domain using the provided request object and returns the result.", "Deletes search suggestions for one or more searches specified in a DeleteSuggesterRequest. Returns a DeleteSuggesterResult object containing information about the request status and result."]}
{"SampleId": 6017980, "Origin": "Computes the minimum for each pixel across all bands in the {@link Planar} image.", "Reference": "Computes the minimum for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the minimum for each pixel across all bands in the {@link Planar} image and reshapes the output to match the input's dimensions.", "Computes the minimum for each pixel across all bands in the {@link Planar} image and reshapes the output to match the input's width and height.", "Computes the minimum for each pixel across all bands in the specified range of a Planar image.", "Computes the minimum for each pixel across all bands in the {@link Planar} image. Before computing the minimum, it reshapes the output to have the same dimensions as the input.", "Computes the minimum for each pixel across all bands in the Planar image, and then reshapes the output array to have the same dimensions as the input."]}
{"SampleId": 2891419, "Origin": "Sets current date as e-mails sent date.", "Reference": "Sets current date as the sent date.", "LLMCandidates": ["Sets current date as e-mails sent date by calling setSentDate(new Date()).", "Sets current date as e-mails sent date by calling setSentDate method with new Date().", "Sets current date as e-mails sent date by calling setSentDate method with new Date().", "Sets current date as e-mails sent date by calling setSentDate(new Date()) method.", "Sets current date as e-mails sent date by calling setSentDate(new Date()) method."]}
{"SampleId": 3242248, "Origin": "Sets the value of the cryptAlgorithmType property.", "Reference": "Sets the value of the algorithmName property.", "LLMCandidates": ["Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property.", "Sets the value of the algorithmName property."]}
{"SampleId": 4470108, "Origin": "In case of\nfailure the {@link Flux} will error.", "Reference": "In case of\nfailure the {@link CosmosContinuablePagedFlux} will error.", "LLMCandidates": ["In case of failure, the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure, the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error.", "In case of failure the {@link CosmosContinuablePagedFlux} will error."]}
{"SampleId": 3038914, "Origin": "Adds a network interface (aka port) into a given bridge of openstack node.", "Reference": "Adds or removes a network interface (aka port) into a given bridge of openstack node.", "LLMCandidates": ["Adds or removes a network interface (aka port) into a given bridge of an openstack node based on the boolean flag.", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the boolean parameter \"addOrRemove\".", "Adds or removes a network interface (aka port) into a given bridge of openstack node based on the value of addOrRemove parameter.", "Adds or removes a network interface (aka port) into a given bridge of an openstack node based on the addOrRemove parameter.", "Adds or removes a network interface (aka port) into a given bridge of an openstack node depending on the value of addOrRemove parameter."]}
{"SampleId": 754537, "Origin": "Sets the amount of time, in milliseconds, to wait between\nadjustments in pool sizes for a given host, to allow\nenough time for the adjustments to take effect.", "Reference": "Sets the amount of time to wait between adjustments in\npool sizes for a given host, to allow enough time for\nthe adjustments to take effect.", "LLMCandidates": ["Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect.", "Sets the amount of time, in milliseconds, to wait between adjustments in pool sizes for a given host, to allow enough time for the adjustments to take effect."]}
{"SampleId": 1122902, "Origin": "Constuct a trace log event.", "Reference": "Constuct a fatal log event.", "LLMCandidates": ["Construct a fatal log event.", "Constuct a trace log event with fatal level.", "Constuct a trace log event with fatal level.", "Construct a fatal log event.", "Construct a fatal log event."]}
{"SampleId": 2230469, "Origin": "Returns the QuorumConfig for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "Reference": "Returns the {@link SplitBrainProtectionConfig} for the given name, creating one\nif necessary and adding it to the collection of known configurations.", "LLMCandidates": ["Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations.", "Returns the SplitBrainProtectionConfig for the given name, creating one if necessary and adding it to the collection of known configurations."]}
{"SampleId": 5447619, "Origin": "timed invokeAll(,,null) throws NPE", "Reference": "timed invokeAll(,,null) throws NullPointerException", "LLMCandidates": ["Tests invoking all tasks with a random timeout and null TimeUnit, expecting a NullPointerException.", "Timed invocation of all tasks with a random timeout and null TimeUnit throws NPE", "Invokes all tasks concurrently with a random timeout instead of a fixed Medium delay ms value, and throws NPE if the tasks are not null.", "tests invoking CustomExecutor with two threads and passing a list of Callables with random timeouts, expecting a NullPointerException to be thrown.", "Invoke all tasks with random timeout and null TimeUnit."]}
{"SampleId": 2081832, "Origin": "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex}", "Reference": "All {@link ForeignKeyIndex} types\n  {@link EppResourceIndex}", "LLMCandidates": ["All {@link ForeignKeyIndex} types except for {@link DomainApplicationIndex} and {@link EppResourceIndex}.", "All {@link ForeignKeyIndex} types\n  {@link DomainApplicationIndex}\n  {@link EppResourceIndex", "All {@link ForeignKeyIndex} types including {@link EppResourceIndex}. Specifically excludes {@link DomainApplicationIndex}, and sets the index key for the resource.", "All {@link ForeignKeyIndex} types, including {@link DomainApplicationIndex} and {@link EppResourceIndex}.", "All {@link ForeignKeyIndex} types, except for {@link EppResourceIndex}, which is handled separately."]}
{"SampleId": 2630413, "Origin": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path segments in {@code segments}.", "Reference": "This method checks if the region of {@code path} starting\nat {@code pathOffset} matches the path pathSegments in {@code pathSegments}.", "LLMCandidates": ["This method checks if the region of {@code path} starting at {@code pathOffset} matches the path segments in {@code pathSegments}.", "This method checks if the region of {@code path} starting at {@code pathOffset} matches the path segments in {@code pathSegments}.", "This method checks if the region of {@code path} starting at {@code pathOffset} matches the path segments in {@code pathSegments}.", "This method checks if the region of {@code path} starting at {@code pathOffset} matches the path segments in {@code pathSegments}.", "This method checks if the region of {@code path} starting at {@code pathOffset} matches the path segments in {@code pathSegments}."]}
{"SampleId": 5243394, "Origin": "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Reference": "Indicates whether this filter needs to use the secondary, non-SQL method applyAlternateFilter().", "LLMCandidates": ["Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles().", "Indicates whether this filter needs to use the secondary, non-SQL method getMatchingFiles()."]}
{"SampleId": 338759, "Origin": "This only functions after we have been attached to a hierarchy.", "Reference": "This only works after this preference has been attached to a hierarchy.", "LLMCandidates": ["This only functions after we have been attached to a hierarchy, and requires mPreferenceManager not be null.", "This only functions after we have been attached to a non-null hierarchy.", "This only functions if a valid key is passed and we have been attached to a hierarchy.", "This only functions after we have been attached to a non-null PreferenceManager hierarchy.", "This only functions after we have been attached to a non-null PreferenceManager hierarchy."]}
{"SampleId": 4476777, "Origin": "The {@link RsaKeyCreateOptions#getKeyType() keyType} indicates the type of key to create.", "Reference": "The {@link CreateRsaKeyOptions#getKeyType() keyType} indicates the type of key to create.", "LLMCandidates": ["The CreateRsaKeyOptions#getKeyType() indicates the type of key to create.", "The CreateRsaKeyOptions#getKeyType() indicates the type of key to create.", "The `CreateRsaKeyOptions#getKeyType()` indicates the type of key to create.", "The `CreateRsaKeyOptions#getKeyType()` indicates the type of key to create.", "The {CreateRsaKeyOptions#getKeyType()} indicates the type of key to create."]}
{"SampleId": 2544520, "Origin": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniond}.", "Reference": "Set this {@link AxisAngle4f} to be equivalent to the given\n{@link Quaterniondc}.", "LLMCandidates": ["Set this {@link AxisAngle4f} to be equivalent to the given {@code Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@code Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@code Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@code Quaterniondc}.", "Set this {@link AxisAngle4f} to be equivalent to the given {@code Quaterniondc}."]}
{"SampleId": 4132953, "Origin": "Create or obtain a {@link CallableStatement} from the pool.", "Reference": "Creates or obtains a {@link CallableStatement} from the pool.", "LLMCandidates": ["Create or obtain a CallableStatement from the pool.", "Create or obtain a {@link CallableStatement} from the pool.", "Create or obtain a {@link CallableStatement} from the pool.", "Create or obtain a CallableStatement from the pool.", "Create or obtain a CallableStatement from the pool."]}
{"SampleId": 5454969, "Origin": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the {@link", "Reference": "If the JAR file has a {@code Main-Class} attribute in its\n    main manifest then its value is the module {@link", "LLMCandidates": ["If the JAR file has a {@code Main-Class} attribute in its main manifest then its value is the {@link Optional}. Returns an empty optional if no value was given. Otherwise, creates a new {@link ModulePath} with the specified entries.", "Returns a new ModuleFinder if there are no entries, otherwise returns a new ModulePath with the given entries.", "If the JAR file has a {@code Main-Class} attribute in its main manifest then its value is the {@link Optional}. Otherwise returns a new ModulePath instance with the specified entries.", "If the JAR file has a {@code Main-Class} attribute in its main manifest then its value is the {@link", "Static factory method that returns a new instance of ModuleFinder when given an array of paths to entries. If there are no entries provided, it will return a ModuleFinder that always returns an empty Optional for any module name queried and an empty set of all modules found. Otherwise, the returned ModuleFinder is created using ModulePath.of(entries)."]}
{"SampleId": 3773945, "Origin": "It is used for\nadapting this data provider to a filter type provided by a Component such\nas ComboBox.", "Reference": "This can be used for adapting this data provider to a filter\ntype provided by a Component such as ComboBox.", "LLMCandidates": ["It is used for adapting this data provider to a filter type provided by a Component such as ComboBox.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, by converting the input filter using a given function.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, by converting the filter using the specified filterConverter.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, by converting the filter using a given function.", "It is used for adapting this data provider to a filter type provided by a Component such as ComboBox, by converting the filter with the given filterConverter."]}
{"SampleId": 2482494, "Origin": "Creates query for the given queryString.", "Reference": "Queries this search source for the given queryString.", "LLMCandidates": ["Creates query for the given queryString for contact source.", "Creates query for the given queryString using default page size of -1.", "Creates query for the given queryString.", "Creates query for the given queryString.", "Creates query for the given queryString."]}
{"SampleId": 4132958, "Origin": "Create or obtain a {@link PreparedStatement} from the pool.", "Reference": "Creates or obtains a {@link PreparedStatement} from the pool.", "LLMCandidates": ["Create or obtain a PreparedStatement from the pool.", "Create or obtain a PreparedStatement from the pool.", "Create or obtain a PreparedStatement from the pool.", "Create or obtain a PreparedStatement from the pool.", "Create or obtain a PreparedStatement from the pool."]}
{"SampleId": 437930, "Origin": "Creates a {@link MetadataCoder}.", "Reference": "Returns the singleton {@link MetadataCoder} instance.", "LLMCandidates": ["Creates an instance of {@link MetadataCoder}.", "Creates a singleton {@link MetadataCoder} using its unique instance.", "Creates a {@link MetadataCoder} using the singleton instance.", "Creates a {@link MetadataCoder} using the singleton instance.", "Creates a {@link MetadataCoder} using the instance of the class."]}
{"SampleId": 84963, "Origin": "Inserts the node at the tail of the frontier.", "Reference": "Primitive operation which inserts the node at the tail of the frontier.", "LLMCandidates": ["Inserts the node at the head of the frontier.", "Inserts the node at the head of the frontier.", "Inserts the node at the head of the frontier.", "Inserts the node at the head of the frontier.", "Inserts the node at the head of the frontier."]}
{"SampleId": 2049500, "Origin": "Returns the codec's supported type for decoding {@code requestedMimeType} on the current\ndevice, or {@code null} if the codec can't be used.", "Reference": "Returns the codec's supported MIME type for media of type {@code mimeType}, or {@code null} if\nthe codec can't be used.", "LLMCandidates": ["Returns the codec's supported type for decoding {@code mimeType} on the current device, or {@code null} if the codec can't be used.", "Returns the codec's supported type for decoding {@code mimeType} on the current device, or {@code null} if the codec can't be used.", "Returns the codec's supported type for decoding {@code mimeType} on the current device, or {@code null} if the codec can't be used.", "Returns the codec's supported type for decoding {@code mimeType} on the current device, or {@code null} if the codec can't be used.", "Returns the codec's supported type for decoding {@code mimeType} on the current device, or {@code null} if the codec can't be used."]}
{"SampleId": 1353937, "Origin": "Remove all free glyphs that are assigned the provided group.", "Reference": "Remove all free glyphs that are only assigned the provided group.", "LLMCandidates": ["Remove all free glyphs that are assigned only the provided group.", "Removes all free glyphs that are assigned only the provided group.", "Remove all free glyphs that are assigned only the provided group.", "Remove all free glyphs that are assigned only the provided group.", "Remove all free glyphs that are assigned only the provided group."]}
{"SampleId": 5219060, "Origin": "Add insert optimize result uint.", "Reference": "Add insert optimize result unit into units.", "LLMCandidates": ["Add insert optimize result unit to the list of units.", "Add insert optimize result unit to the list of existing units.", "Add insert optimize result unit to the list of existing units.", "Add an insert optimize result unit to the list of units.", "Add an insert optimize result unit to the list of units."]}
{"SampleId": 6050238, "Origin": "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Reference": "Returns the tasks entry with the primary key or throws a {@link NoSuchTasksEntryException} if it could not be found.", "LLMCandidates": ["Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found.", "Returns the tasks entry with the primary key or throws a NoSuchTasksEntryException if it could not be found.", "Returns the tasks entry with the primary key or throws a {@link com.liferay.tasks.NoSuchTasksEntryException} if it could not be found."]}
{"SampleId": 5015241, "Origin": "If no sld file, throws an exception", "Reference": "If no sld file, throws an appropriate exception", "LLMCandidates": ["Retrieves an sld file from the specified directory or throws an exception if no sld file is provided.", "Returns the first SLD file found in the given directory. If no SLD file is present, throws an exception with status FORBIDDEN.", "Retrieves an SLD file from a directory, throws an exception if no SLD file is provided.", "Retrieve an sld file from the specified directory or throw an exception if no sld file is provided.", "Retrieves the first sld file from a directory. If no sld file is provided, throws an exception."]}
{"SampleId": 3574224, "Origin": "Use this method if setting this option is not required and to express that it may be .", "Reference": "Builds the option and marks it as not required  Use this method if setting this option is not required and\nto express that it may be .", "LLMCandidates": ["Use this method if setting this option is not required and to express that it may be optional, and add the provided list of valid options.", "Use this method if setting this option is not required and to express that it may be optional or null.", "Use this method if setting this option is not required and to express that it may be optional or null.", "Use this method if setting this option is not required and to express that it may be optional.", "Use this method if setting this option is not required and to express that it may be optional."]}
{"SampleId": 3239399, "Origin": "Gets the value of the descrption property.", "Reference": "Gets the value of the description property.", "LLMCandidates": ["Gets the value of the description property.", "Gets the value of the description property.", "Gets the value of the description property.", "Gets the value of the description property.", "Gets the value of the description property."]}
{"SampleId": 3814021, "Origin": "Gets the amount of available items in the network of the type passed in, checking NBT or not.", "Reference": "Gets the number of available items in the network satisfying the given matcher.", "LLMCandidates": ["Gets the amount of available items in the network matching the CorporeaRequestMatcher passed in, checking NBT or not.", "Gets the amount of available CorporeaRequestMatcher items in the network, checking inventories or not.", "Gets the amount of available items with the matching corporea request in the network, checking NBT or not.", "Gets the amount of available items in the network of the type passed in, by matching the CorporeaRequestMatcher and checking the inventories.", "Gets the amount of available items in the network of the type passed in, checking NBT or not."]}
{"SampleId": 2641058, "Origin": "This makes it\nhard to debug because if task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "Reference": "This makes it\nhard to debug because if a task throws an exception, its call stack ends in the execution engine that actually\nstarts a thread that serves the task.", "LLMCandidates": ["This makes it hard to debug because if task throws an exception, its call stack ends in the execution engine that actually starts a thread that serves the task.", "This enables or disables the capturing of stack traces across threads. Enabling this feature may make debugging easier, but it could also slow down performance as it requires additional memory and processing resources.", "This enables or disables cross-thread stack traces by setting the static variable _crossThreadStackTracesEnabled to the given boolean value. If enabled, it makes debugging easier as task exceptions will show their call stacks instead of ending in the execution engine that starts the thread serving the task.", "This makes it hard to debug because if task throws an exception, its call stack ends in the execution engine that actually starts a thread that serves the task.", "This enables cross-thread stack traces when set to true, making it easier to debug tasks that throw exceptions by showing their call stacks instead of ending in the execution engine."]}
{"SampleId": 5300344, "Origin": "Creates new {@link DayOfMonth} in UTC.", "Reference": "Creates new {@link DayOfMonth}.", "LLMCandidates": ["Creates new {@link DayOfMonth} in UTC with the given {@code expression}.", "Creates new DayOfMonth in UTC with non-null expression.", "Creates new {@link DayOfMonth} in UTC.", "Creates new {@link DayOfMonth} in UTC.", "Creates new {@link DayOfMonth} in UTC after checking if expression is not null."]}
{"SampleId": 5629938, "Origin": "Sets the entities.", "Reference": "Set the entities.", "LLMCandidates": ["Sets the entities for this builder.", "Sets the entities in this Builder instance.", "Sets the entities in this Builder instance.", "Sets the entities for this builder.", "Sets the entities for this builder."]}
{"SampleId": 471391, "Origin": "The option is a:\n type.", "Reference": "The option is a:", "LLMCandidates": ["Set the initial value by adding 8 to n. The method returns a AdvancedCxfRsEndpointBuilder for method chaining purposes.", "Sets the cxfRsConfigurer object for this builder.", "Sets the cxfRsConfigurer object for this builder.", "Set the initial value by adding 8 to n.", "Set the initial value by adding 8 to n."]}
{"SampleId": 3105257, "Origin": "Test of from method, of class Statistics.", "Reference": "Test of fromJson method, of class Statistics.", "LLMCandidates": ["Test of from method, of class Statistics. The method takes a JSON string representing a Statistics object and returns a Statistics object. In this test case, the input JSON is generated using JsonFactory and JsonGenerator, and then deserialized using fromJson method. Asserts are used to verify the values returned by the Statistics instance created from the input JSON.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics.", "Test of fromJson method, of class Statistics."]}
{"SampleId": 438097, "Origin": "Infer a {@link Schema} from an AVRO-generated SpecificRecord.", "Reference": "Infer a {@link Schema} from either an AVRO-generated SpecificRecord or a POJO.", "LLMCandidates": ["Infer a {@link Schema} from an AVRO SpecificRecord.", "Infer a {@link Schema} from a class implementing the AVRO interface.", "Infer a {@link Schema} from a SpecificRecord.", "Infer a {@link Schema} from a SpecificRecord.", "Infer a {@link Schema} from any class."]}
{"SampleId": 4617594, "Origin": "Deletes the element at the specified position.", "Reference": "Removes the element at the specified position.", "LLMCandidates": ["Deletes the element at the specified position and adjusts the list size accordingly.", "Deletes the element at the specified position and reduces the size by one after deletion.", "Removes the element at the specified position and returns its value.", "Removes the element at the specified index.", "Removes the element at the specified index."]}
{"SampleId": 2017357, "Origin": "Creates an empty object literal, `{}`.", "Reference": "Creates an object-literal with zero or more elements, `{}`.", "LLMCandidates": ["Creates an object literal with optional elements. If adding types is enabled, sets the JavaScript type of the resulting anonymous object.", "Creates an object literal with optional elements `{}`.", "Creates an object literal with optional elements `{}`.", "Creates an object literal with specified elements, `{}`.", "Creates an object literal with specified elements, `{}`."]}
{"SampleId": 3195611, "Origin": "Creates an iterable that iterates in parallel over a three iterables.", "Reference": "Creates an iterable that iterates in parallel over three iterables.", "LLMCandidates": ["Creates an iterable that iterates in parallel over three iterables.", "Creates an iterable that iterates in parallel over three iterables, checking for size mismatches.", "Creates an iterable that iterates in parallel over three iterables.", "Creates an iterable that iterates in parallel over three iterables.", "Creates an iterable that iterates in parallel over three iterables."]}
{"SampleId": 2939899, "Origin": "Initializes this.audioFormats", "Reference": "Initializes audioFormats", "LLMCandidates": ["Initializes this.audioFormats using the available audio formats obtained from voiceRssImpl and stores them in a new HashSet<AudioFormat>", "Initializes the audio formats by adding AudioFormats obtained from voiceRssImpl's availableAudioFormats list to a HashSet<AudioFormat> set.", "Initializes this.audioFormats using a HashSet and adding AudioFormat instances from available audio formats returned by voiceRssImpl's getAvailableAudioFormats method.", "Initializes this.audioFormats using a for-each loop over voiceRssImpl's available audio formats.", "Initializes this.audioFormats using getAvailableAudioFormats and adds them to a Set<AudioFormat>"]}
{"SampleId": 4396424, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object, with sensitive data redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive phone numbers redacted.", "Returns a string representation of this object with sensitive phone number redacted; useful for testing and debugging.", "Returns a string representation of this object with sensitive phone number redacted; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging, with sensitive phone numbers redacted."]}
{"SampleId": 1328641, "Origin": "Sets the partition storage level.", "Reference": "Sets the storage configuration.", "LLMCandidates": ["Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration.", "Sets the partition storage configuration."]}
{"SampleId": 1880371, "Origin": "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class.", "Reference": "Testing the isSPD (is symmetric positive definite) method of", "LLMCandidates": ["Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class using various matrices: symmetric but not positive definite and non-symmetric positive definite.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class by checking if given matrices are symmetric and positive definite.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class for various matrices.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class for various matrices.", "Testing the isSPD (is symmetric positive definite) method of CholeskyDecomposition class using given matrices."]}
{"SampleId": 1388665, "Origin": "showIndex.", "Reference": "showTagArticles.", "LLMCandidates": ["showTagArticles - Test the servlet for a tag page with GET request.", "Test if a GET request to \"/tags/Solo\" returns the correct page title with \"Solo - Solo 示例", "Tests that when accessing the /tags/Solo URL with a GET request, it returns the corresponding page titled \"Solo - Solo 示例\".", "Tests that the \"showTagArticles\" view renders correctly with a title of \"Solo - Solo 示例\".", "Test if a GET request is correctly handled by dispatcher servlet and shows articles under Solo tag."]}
{"SampleId": 440279, "Origin": "Creates an instance of {@link RowFactory} using provided {@link RowTypeFactory}\nand {@link GetterFactory}.", "Reference": "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory}\nand {@link GetterFactory}.", "LLMCandidates": ["Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}.", "Creates an instance of {@link RowFactory} using provided {@link SchemaFactory} and {@link GetterFactory}."]}
{"SampleId": 5360344, "Origin": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route}.", "Reference": "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway\nbased on provided {@code route} and optional variables to expand route template.", "LLMCandidates": ["Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional {@code routeVariables}.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional {@code routeVariables}.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and route variables.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route} and optional {@code routeVariables}.", "Create an {@link RSocketOutboundGatewaySpec} builder for request-reply gateway based on provided {@code route}, with optional {@code routeVariables}."]}
{"SampleId": 2544551, "Origin": "Apply the rotation transformation of the given {@link Quaterniond} to this matrix and store\nthe result in .", "Reference": "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store\nthe result in .", "LLMCandidates": ["Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in .", "Apply the rotation transformation of the given {@link Quaterniondc} to this matrix and store the result in ."]}
{"SampleId": 4715990, "Origin": "Constructs a URL to save the data to", "Reference": "Constructs a final path save the data to", "LLMCandidates": ["Constructs a final path to save the data to", "Constructs a final path to save the data to", "Constructs a final path to save the data to", "Constructs a final path to save the data to", "Constructs a final path to save the data to"]}
{"SampleId": 613117, "Origin": "Returns the ratio of stack traces indicating back pressure to total\nnumber of sampled stack traces.", "Reference": "Returns the back pressure ratio of the given subtask index.", "LLMCandidates": ["Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces.", "Returns the ratio of stack traces indicating back pressure to total number of sampled stack traces."]}
{"SampleId": 2913755, "Origin": "Obtains an instance from the specified unique name.", "Reference": "Obtains an instance from the specified name.", "LLMCandidates": ["Obtains an instance from the specified name.", "Obtains an instance from the specified name using NAMES parser.", "Obtains an instance from the specified name using NAMES parser.", "Obtains an instance from the specified name using NAMES parser.", "Obtains an instance from the specified name using NAMES parser."]}
{"SampleId": 4471188, "Origin": "Prints out the created certificate\nissuer details when a response has been received.", "Reference": "Subscribes to the call and prints out the\nupdated certificate operation details when a response has been received.", "LLMCandidates": ["Updates the status of a certificate operation.", "Cancels a certificate operation for the specified certificate when a response has been received.", "Cancels a certificate operation for the specified certificate when a response has been received.", "Creates a new CertificateOperation object when a response has been received.", "Cancel a Certificate operation with the specified name when a response has been received."]}
{"SampleId": 1730796, "Origin": "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari", "Reference": "Workaround to avoid disappearing footer when changing the predefined styles at runtime in Safari", "LLMCandidates": ["Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari.", "Hack to avoid disappearing footer when changing predefined styles at runtime in Safari", "Hack to avoid disappearing footer when changing predefined styles at runtime in Safari", "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari, only if it's initially visible.", "Hack to avoid disappearing footer when changing the predefined styles at runtime in Safari"]}
{"SampleId": 3734023, "Origin": "If the offsets list is empty, then an offset of 0 is used for each array.", "Reference": "If the offsets list is empty, then an offset of 0 is used for each\nsequence.", "LLMCandidates": ["If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty or all elements are empty strings, then an offset of 0 is used for each sequence. Otherwise, a non-empty string in the offsets list corresponds to the same indexed element in the sequences list and an OffsetEquation is created from that Java expression, which if hasError returns UpperBoundUnknownQualifier.UNKNOWN.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence.", "If the offsets list is empty, then an offset of 0 is used for each sequence."]}
{"SampleId": 5179883, "Origin": "Indicates if the way is ready to handle new messages.", "Reference": "Indicates if the way is available to handle new messages.", "LLMCandidates": ["Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages.", "Indicates if the way is available to handle new messages."]}
{"SampleId": 3038653, "Origin": "Handles an iterate commit.", "Reference": "Handles an iterator next commit.", "LLMCandidates": ["Handles a next commit for an iterator batch.", "Handles a next commit with an iteratorId and position, returning an IteratorBatch containing entries to be processed.", "Handles a next commit for an iterator batch with specified iterator ID and position.", "Handles a next commit for an iterator batch with specified iterator ID and position.", "Handles an iterator commit by returning the next batch of iterators with the given position, up to a maximum batch size."]}
{"SampleId": 4367578, "Origin": "Add a duration (with the same time unit as the current duration)", "Reference": "Add a amount (with the same time unit as the current duration)", "LLMCandidates": ["Add a duration with the same time unit as the current duration.", "Add a duration (with the same time unit as the current duration)", "Add a duration (with the same time unit as the current duration)", "Add a duration (with the same time unit as the current duration)", "Add a duration with the same time unit as the current duration"]}
{"SampleId": 2912048, "Origin": "Gets the additional trade information, defaulted to an empty instance.", "Reference": "Gets the additional information, defaulted to an empty instance.", "LLMCandidates": ["Gets the additional portfolio item information, defaulted to an empty instance.", "Gets the additional portfolio item information, defaulted to an empty instance.", "Gets the additional portfolio information, defaulted to an empty instance.", "Gets the additional portfolio information, defaulted to an empty instance.", "Gets the additional portfolio item information, defaulted to an empty instance."]}
{"SampleId": 2891854, "Origin": "Returns  if annotation is present on\ngiven accessible object.", "Reference": "Returns  if annotation is present on\ngiven annotated element.", "LLMCandidates": ["Returns if annotation is present on given AnnotatedElement.", "Returns if annotation is present on given AnnotatedElement.", "Returns if annotation is present on given AnnotatedElement.", "Returns if annotation is present on given AnnotatedElement.", "Returns if annotation is present on given AnnotatedElement."]}
{"SampleId": 5630008, "Origin": "Gets the nodeType.", "Reference": "Gets the newType.", "LLMCandidates": ["Gets the newType.", "Gets the newType.", "Gets the newType.", "Gets the newType.", "Gets the newType."]}
{"SampleId": 6049437, "Origin": "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Reference": "Returns the favorite site with the primary key or throws a {@link NoSuchFavoriteSiteException} if it could not be found.", "LLMCandidates": ["Finds the favorite site with the specified primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it cannot be found.", "Returns the FavoriteSite with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Returns the FavoriteSite with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Returns the favorite site with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found.", "Returns the FavoriteSite with the primary key or throws a {@link com.liferay.so.NoSuchFavoriteSiteException} if it could not be found."]}
{"SampleId": 2443732, "Origin": "Create an unnamed, parented {@link InstanceManager}.", "Reference": "Create an unnamed, parented {@link InjectionManager}.", "LLMCandidates": ["Create an unnamed, parented {InjectionManager}.", "Create an unnamed, parented InjectionManager.", "Create an unnamed, parented InjectionManager.", "Create an unnamed, parented InjectionManager.", "Create an unnamed, parented InjectionManager."]}
{"SampleId": 5077304, "Origin": "Starts continuous task.", "Reference": "Starts local continuous task.", "LLMCandidates": ["Starts a local continuous task.", "Starts local continuous task.", "Starts local continuous task.", "Starts local continuous task.", "Starts local continuous task."]}
{"SampleId": 3425073, "Origin": "Since category uses \"totalPointsPossible\" property instead of\n\"pointsPossible\" property, as in Assignments", "Reference": "Fix for Category NPE reported in SAK-14519 Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property,\nas in Assignments", "LLMCandidates": ["Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments.", "Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments, this method returns the total points possible.", "Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments, this method returns the total points possible.", "Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments.", "Since category uses \"totalPointsPossible\" property instead of \"pointsPossible\" property, as in Assignments, this method returns the total points possible by accessing the \"this.totalPointsPossible\" instance variable."]}
{"SampleId": 2916155, "Origin": "They must not be of type {@link KnownAmountPaymentPeriod}.", "Reference": "They must not be of type {@link KnownAmountSwapPaymentPeriod}.", "LLMCandidates": ["They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}.", "They must not be of type {@link SwapPaymentPeriod}."]}
{"SampleId": 6133932, "Origin": "Get the address of the datagram's data field.", "Reference": "Get the datagram's data field.", "LLMCandidates": ["Get the content of the datagram's data field.", "Retrieves the data field of the datagram as a byte array.", "Get the content of the datagram's data field.", "Get the content of the datagram's data field.", "Retrieve the byte array representing the data field."]}
{"SampleId": 1352180, "Origin": "Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Reference": "Upgrade from oldStaffBarlines to staffBarlines.", "LLMCandidates": ["Temporary method to upgrade from oldStaffBarlines to staffBarlines.", "Upgrades oldStaffBarlines to staffBarlines.", "Upgrades oldStaffBarlines to staffBarlines by adding corresponding StaffBarlineInter objects.", "Upgrades oldStaffBarlines to staffBarlines by adding corresponding StaffBarlineInter objects.", "Upgrades oldStaffBarlines to staffBarlines by adding new StaffBarlineInter instances with the same number of bars."]}
{"SampleId": 3920802, "Origin": "Given a pattern and a string, returns a list with the values of the\ncaptured groups in the pattern.", "Reference": "Given a pattern, which contains one or more capturing groups, and a String,\nreturns a list with the values of the\ncaptured groups in the pattern.", "LLMCandidates": ["Given a pattern and a string, returns a list with the values of the captured groups in the pattern.", "Returns a list with the values of the captured groups in the pattern.", "Given a pattern and a string, returns a list with the values of the captured groups in the pattern.", "Given a pattern and a string, returns a list with the values of the captured groups in the pattern.", "Given a pattern and a string, returns a list with the values of the captured groups in the pattern."]}
{"SampleId": 4476791, "Origin": "The {@link KeyCreateOptions} is required.", "Reference": "The {@link CreateKeyOptions} is required.", "LLMCandidates": ["The KeyVaultKeyCreateOptions is required.", "The KeyVaultKeyCreateOptions is required.", "The CreateKeyOptions is required.", "The CreateKeyOptions is required.", "The `CreateKeyOptions` is required."]}
{"SampleId": 3629294, "Origin": "See Immutable Map Static Factory Methods for details.", "Reference": "See Unmodifiable Maps for details.", "LLMCandidates": ["See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details.", "See Unmodifiable Map Static Factory Methods for details."]}
{"SampleId": 2849528, "Origin": "Make sure we can get the {@link GenieHostInfo} instance even if EC2 metadata fails.", "Reference": "Make sure we can get the {@link GenieHostInfo}.", "LLMCandidates": ["Make sure we can get the {@link GenieHostInfo} instance even if AWS credentials are not set and EC2 metadata fails.", "Make sure we can get the GenieHostInfo instance even if EC2 metadata fails.", "Make sure we can get the GenieHostInfo instance even if EC2 metadata fails.", "Make sure we can get the {@link GenieHostInfo} instance even if AWS credentials are missing or invalid and EC2 metadata fails.", "Make sure we can get the {@link GenieHostInfo} instance even if the AWS credentials are not set or EC2 metadata fails."]}
{"SampleId": 4826489, "Origin": "Equivalent to: {@code .weightInit(WeightInit.DISTRIBUTION).dist(distribution)}", "Reference": "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution))}", "LLMCandidates": ["Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution)).dist(distribution)", "Equivalent to: {@code .weightInit(WeightInitDistribution(distribution)).dist(distribution)", "Equivalent to: {@code .weightInit(WeightInitDistribution(distribution)).dist(distribution)", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution)).dist(distribution)", "Equivalent to: {@code .weightInit(new WeightInitDistribution(distribution)).dist(distribution)"]}
{"SampleId": 6017985, "Origin": "Computes the median for each pixel across all bands in the {@link Planar}\nimage.", "Reference": "Computes the median for each pixel across selected bands in the {@link Planar} image.", "LLMCandidates": ["Computes the median for each pixel across all bands in the {@link Planar} image and reshapes the output {@code GrayU8} image to match the input's dimensions before performing the median operation.", "Computes the median for each pixel across all bands in the {@link Planar} image and reshapes the output if necessary before performing the operation.", "Computes the median for each pixel across all bands in the {@link Planar} image. Afterwards, reshapes the output image to have a width and height equal to the input's width and height respectively before calling ImplImageBandMath.median.", "Computes the median for each pixel across all bands in the {@link Planar} image, reshapes the output image to match the input image's dimensions before computing.", "Computes the median for each pixel across all bands in the {@link Planar} image and reshapes the output image to match the input's dimensions."]}
{"SampleId": 3982157, "Origin": "Converts Hex encoded string to byte[] if necessary.", "Reference": "Converts a Hex encoded string to a byte array.", "LLMCandidates": ["Converts Hex encoded string to byte[] if stringValue is a Hex encoded string.", "Converts Hex encoded string to byte[] if it is a String.", "Converts Hex encoded string to byte[] if it is a String.", "Converts Hex encoded string to byte[] if stringValue is not null.", "Converts Hex encoded string to byte[] if stringValue is not null."]}
{"SampleId": 2568424, "Origin": "Sets the value of the 'BloomFilter' field", "Reference": "Sets the value of the 'bloomFilter' field.", "LLMCandidates": ["Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field", "Sets the value of the 'bloomFilter' field"]}
{"SampleId": 4390861, "Origin": "Amazon Redshift returns all resources that match any combination of\nthe specified keys and values.", "Reference": "Redshift returns all resources that match any combination of the\nspecified keys and values.", "LLMCandidates": ["Amazon Redshift returns all resources that match any combination of the specified keys and values using StaxResponseHandler for response unmarshalling.", "Amazon Redshift returns all resources that match any combination of the specified tags.", "Amazon Redshift returns all resources that match any combination of the specified keys and values using a StaxResponseHandler.", "Amazon Redshift returns all resources that match any combination of the specified keys and values using the updated StaxResponseHandler.", "Amazon Redshift returns all resources that match any combination of the specified keys and values using the updated StaxResponseHandler."]}
{"SampleId": 5415531, "Origin": "Generate a FormType from a string.", "Reference": "Generate a FormTypes from a string.", "LLMCandidates": ["Generate a FormTypes from a string.", "Generate a FormType from a string.", "Generate a FormType from a string using the specified enum type.", "Generate a FormType from a string using the specified enum type.", "Generate a FormType from a string."]}
{"SampleId": 5922687, "Origin": "Append TLVMsg to the TLVList.", "Reference": "Append TLVMsg to the TLV list.", "LLMCandidates": ["Appends TLVMsg to the TLVList, throwing a NullPointerException if the TLV message is null.", "Append TLVMsg to the TLVList, ensuring it's not null.", "Append TLVMsg to the TLVList, validating that the TLV message is not null.", "Append TLVMsg to the TLVList, validating that the TLV message is not null.", "Append TLVMsg to the TLVList, ensuring it is not null."]}
{"SampleId": 2568426, "Origin": "Gets the value of the 'KeepDeletedCells' field", "Reference": "Gets the value of the 'keepDeletedCells' field.", "LLMCandidates": ["Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field", "Gets the value of the 'keepDeletedCells' field"]}
{"SampleId": 2794191, "Origin": "This method sets the value of the database column m_prj_project.projectType", "Reference": "This method sets the value of the database column m_prj_project.type", "LLMCandidates": ["This method sets the value of the database column m_type.type", "This method sets the value of the database column m_type.type", "This method sets the value of the database column m_prj_type.type", "This method sets the value of the database column m_obj_type.type", "This method sets the value of the database column m_obj_type.type"]}
{"SampleId": 5446622, "Origin": "Return type of method signature as a byte value as defined in Constants", "Reference": "Return type of method signature as a byte value as defined in", "LLMCandidates": ["Return type of method signature as a byte value as defined in Constants.", "Return type of method signature as a byte value as defined in Constants", "Return type of method signature as a byte value as defined in Constants", "Return type of method signature as a byte value as defined in Constants, with updated code to handle exceptions and final keyword for the String parameter.", "Return type of method signature as a byte value as defined in Constants."]}
{"SampleId": 4476800, "Origin": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(KeyProperties key properties)}.", "Reference": "Loop over the\n{@link KeyProperties key} and call {@link KeyClient#getKey(String, String)}.", "LLMCandidates": ["Loop over the {link KeyProperties key} and call {link KeyClient#getKey(KeyProperties key properties)}.", "Loop over the KeyProperties key and call KeyClient#getKey(KeyProperties key properties).", "Loop over the KeyProperties key and call KeyClient#getKey(KeyProperties key properties).", "Loop over the KeyProperties key and call KeyClient#getKey(KeyProperties key properties).", "Loop over the {@link KeyProperties key} and call {@link KeyClient#getPropertiesOfKey(KeyProperties key properties)}."]}
{"SampleId": 2615557, "Origin": "Sets the alignment of the items in the list.", "Reference": "Sets the horizontal alignment of the list items.", "LLMCandidates": ["Sets the alignment of the items in the list.", "Sets the alignment of the items in the list.", "Sets the alignment of the items in the list.", "Sets the alignment of the items in the list.", "Sets the alignment of the items in the list."]}
{"SampleId": 4625121, "Origin": "Atomize Java items.", "Reference": "Return Java items.", "LLMCandidates": ["Atomize Java items to ArrayList.", "Atomize Java items using ArrayList.", "Atomize Java items with Q{java:java.util.ArrayList}new().", "Atomize Java items with Q{java:java.util.ArrayList}new().", "Atomize Java items (e.g., Q{java:java.util.ArrayList}new() to [])"]}
{"SampleId": 1122903, "Origin": "Constuct a trace log event.", "Reference": "Constuct a debug log event.", "LLMCandidates": ["Constructs a debug log event.", "Construct a debug log event.", "Construct a debug log event.", "Constructs a debug log event.", "Constructs a debug log event."]}
{"SampleId": 5595690, "Origin": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific exception class.", "Reference": "Inspects a given {@link Throwable} as well as its nested causes, in order to look\nfor a specific set of exception classes.", "LLMCandidates": ["Inspects a given Throwable as well as its nested causes and specified classes, to look for one or more specific exception class.", "Inspects a given {@link Throwable} as well as its nested causes, in order to look for one or more specific exception classes.", "Inspects a given {@link Throwable} as well as its nested causes, in order to look for any of the specified exception classes.", "Inspects a given {@link Throwable} and its nested causes to look for one or more specific exception class(es).", "Inspects a given Throwable as well as its nested causes, in order to look for one or more specific exception class(es)."]}
{"SampleId": 2782536, "Origin": "Returns an iterator on all registered commands.", "Reference": "Returns a sorted collection of all registered commands.", "LLMCandidates": ["Returns a sorted list of all registered commands.", "Returns a sorted collection of all registered commands.", "Returns a sorted collection of all registered commands.", "Returns a sorted list of all registered commands.", "Returns a sorted list of all registered commands."]}
{"SampleId": 3116178, "Origin": "Returns the server list for the requested cluster.", "Reference": "Returns the configured server list for the requested cluster.", "LLMCandidates": ["Returns the configured server list for the requested cluster.", "Returns a list of configured servers for the specified cluster.", "Returns a list of configured servers for the specified cluster.", "Returns the configured server list for the requested cluster.", "Returns the configured server list for the requested cluster."]}
{"SampleId": 5654768, "Origin": "Creates a service name for the deployment unit to define the service.", "Reference": "Creates a service name for the batch environment service.", "LLMCandidates": ["Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the service, with \"batch\" and \"environment\" appended.", "Creates a service name for the deployment unit to define the service, and appends \"batch\" and \"environment\" suffixes.", "Creates a service name for the deployment unit to define the batch environment service.", "Creates a service name for the deployment unit to define the service with a 'batch' and 'environment' suffix."]}
{"SampleId": 4232631, "Origin": "Warning: the conditional comments don't work when injected dynamically\nwith JavaScript (i.e.", "Reference": "Warning: the conditional comments don't work when injected dynamically with", "LLMCandidates": ["Warning: the conditional comments don't work when injected dynamically with JavaScript (i.e.", "Warning: the conditional comments don't work when injected dynamically with JavaScript (i.e.", "Warning: the conditional comments don't work when injected dynamically with JavaScript (i.e.", "Warning: the conditional comments don't work when injected dynamically with JavaScript (i.e.", "Warning: the conditional comments don't work when injected dynamically with JavaScript (i.e."]}
{"SampleId": 4961626, "Origin": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining; otherwise {@link IllegalArgumentException} is thrown.", "Reference": "If this node is Object Node and has value for specified property, {@code this} is returned\n to allow chaining;\n otherwise exception is thrown.", "LLMCandidates": ["If this node is a JsonNode and has value for specified property, {@code this} is returned to allow chaining; otherwise no exception is thrown.", "If this node is Object Node and has a value for the specified field, {@code this} is returned to allow chaining; otherwise no exception is thrown.", "If this node is of any type and has value for specified property, {@code this} is returned to allow chaining; otherwise no exception is thrown.", "If this node is Object Node and has value for specified property, {@code this} is returned to allow chaining; otherwise no exception is thrown.", "If this node is JsonNode and has value for specified property, {@code this} is returned to allow chaining; otherwise, no exception is thrown."]}
{"SampleId": 3677389, "Origin": "Returns a copy of this date with the specified field altered.", "Reference": "Returns a copy of this date with the specified field set to a new value.", "LLMCandidates": ["Returns a copy of this OffsetDate with the specified field altered.", "Returns a copy of this date with the specified field altered if the field is an instance of ChronoField. If the field is not an instance of ChronoField, it will return the result of applying the given field and new value to the provided OffsetDate instance. If the field is not valid, or if the newValue cannot be applied to the field, the method will throw an exception.", "Returns a copy of this OffsetDate with the specified field altered.", "Returns a copy of this OffsetDate with the specified field altered.", "Returns a copy of this OffsetDate with the specified field altered."]}
{"SampleId": 4478386, "Origin": "Sets the {@link SharedKeyCredential} used to authorize requests sent to the service.", "Reference": "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "LLMCandidates": ["Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service.", "Sets the {@link StorageSharedKeyCredential} used to authorize requests sent to the service."]}
{"SampleId": 3828357, "Origin": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present `alt` or \"/\" is used.", "Reference": "The string \"back\" is special-cased\nto provide Referrer support, when Referrer\nis not present \"/\" is used.", "LLMCandidates": ["The string \"back\" is special-cased to provide Referrer support, when Referrer is not present `alt` or \"/\" is used.", "The string \"back\" is special-cased to provide Referrer support, when Referrer or alt is not present \"/\" is used.", "The string \"back\" is special-cased to provide Referrer support when Referrer is not present `alt` or \"/\" is used.", "The string \"back\" is special-cased to provide Referrer support, when Referrer or alt is not present \"/\" is used.", "The string \"back\" is special-cased to provide Referrer support, when Referrer is not present \"/\" is used."]}
{"SampleId": 2891644, "Origin": "Creates all folders at once.", "Reference": "Creates all directories at once.", "LLMCandidates": ["Creates all folders at once, checking if the input is a directory and creating them if they don't exist.", "Creates all folders at once by checking if they exist or not and throwing exceptions accordingly.", "Creates all folders at once by checking if they exist or not and throwing exceptions accordingly.", "Creates all parent folders at once.", "Creates all folders at once if they exist or throw an exception if creating them fails."]}
{"SampleId": 4903187, "Origin": "Note that the returned {@link Bits}\ninstance MUST be consumed in order.", "Reference": "NOTE: that the returned {@link Bits} instance MUST be consumed in order.", "LLMCandidates": ["Note that the returned {@link Bits} instance MUST be consumed in order.", "Note that the returned {@link Bits} instance MUST be consumed in order.", "Returns a sequential access Bits instance that MUST be consumed in order.", "Returns a sequential access Bits instance that MUST be consumed in order.", "Note that the returned {@link Bits} instance MUST be consumed in order."]}
{"SampleId": 2887744, "Origin": "This method must only be\nused for type references whose sort is {@link #THROWS THROWS}.", "Reference": "This method must only be used for type references whose sort is {@link\n#THROWS}.", "LLMCandidates": ["This method must only be used for type references whose sort is {@link #THROWS THROWS}.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}.", "This method must only be used for type references whose sort is {@link #THROWS THROWS}."]}
{"SampleId": 6006977, "Origin": "Write a Chart series as columns in a CSV file.", "Reference": "Export a Chart series in columns in a CSV file.", "LLMCandidates": ["Write a XYSeries as columns in a CSV file with optional error bar data.", "Write a XYSeries series as columns in a CSV file.", "Write a XYSeries series as columns in a CSV file.", "Write a chart series with XY data as columns in a CSV file.", "Write a XYSeries series as columns in a CSV file."]}
{"SampleId": 2061869, "Origin": "Determines whether a character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "Reference": "Determines whether a BMP character is lower case according to\n{@linkplain Character#isLowerCase(char) Java's definition}.", "LLMCandidates": ["Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}. This method is deprecated due to some updates in the code.", "Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}. This method is deprecated.", "Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}. This method is deprecated and may be removed in future versions.", "Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition} (deprecated).", "Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}. This method is now deprecated."]}
{"SampleId": 2142578, "Origin": "Returns the split point number, 1-based.", "Reference": "Returns a unique id for each runAsync, 1-based.", "LLMCandidates": ["Returns the run async ID number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the runAsyncId number, 1-based.", "Returns the run async ID number, 1-based."]}
{"SampleId": 3652742, "Origin": "Fails silently if no match found.", "Reference": "Fails silently if the student does not exist.", "LLMCandidates": ["Deletes a student from the course with the specified courseId and studentEmail. The deletion operation cascades to related entities. Throws an exception if no match is found.", "Deletes the specified student from the given course by calling the deleteStudentCascade method of studentsLogic with the provided arguments. Fails silently if no match found.", "Deletes a student from the course with the given ID and email. Throws an exception if no match found.", "Deletes a student from the given course by cascade deletion if no match found.", "Deletes a student from the given course by cascade deletion if no match found."]}
{"SampleId": 3238740, "Origin": "Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }", "Reference": "Objects of the following type(s) are allowed in the list\n{@link CTRelSizeAnchor }\n{@link CTAbsSizeAnchor }", "LLMCandidates": ["Objects of the following type(s) are allowed in the list\n{@link CTAbsSizeAnchor }\n{@link CTRelSizeAnchor }\n\nNote: Please update the method signature and variable name related to the changes.", "Objects of the following type(s) are allowed in the list {@link CTAbsSizeAnchor } {@link CTRelSizeAnchor", "Objects of the following type(s) are allowed in the list {@link CTAbsSizeAnchor } {@link CTRelSizeAnchor", "Objects of the following type(s) are allowed in the list {@link CTAbsSizeAnchor } {@link CTRelSizeAnchor", "Objects of the following type(s) are allowed in the list {@link CTAbsSizeAnchor } {@link CTRelSizeAnchor"]}
{"SampleId": 5455337, "Origin": "Sets item to self and waiter to null, to avoid garbage\nretention after matching or cancelling.", "Reference": "Sets item (of a request node) to self and waiter to null,\nto avoid garbage retention after matching or cancelling.", "LLMCandidates": ["Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling; if not data item.", "Sets item to self if it's not data and waiter to null, to avoid garbage retention after matching or cancelling.", "Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling; if isData flag is not set.", "Sets item to self and waiter to null, to avoid garbage retention after matching or cancelling if not yet data-ready.", "Sets item to self if not data flag is set, and waiter to null, to avoid garbage retention after matching or cancelling."]}
{"SampleId": 4589585, "Origin": "Create error value with given reason and error details.", "Reference": "Create error value with given type, reason and details.", "LLMCandidates": ["Create error value with given type, reason, and error details.", "Create error value with given type, reason and error details.", "Create error value with given type, reason, and error details.", "Create error value with given type, reason, and error details.", "Create error value with given type, reason, and error details."]}
{"SampleId": 3566647, "Origin": "{@code protocol} and {@code proxy} will be non-null and {@code throwable} will be null when\nthe connection is successfully established.", "Reference": "{@code protocol} and {@code proxy} will be non-null and {@code ioe} will be null when\nthe connection is successfully established.", "LLMCandidates": ["Protocol and Proxy parameters will be non-null and IOException parameter will be null when the connection is successfully established.", "protocol and proxy will be non-null and ioe will be null when the connection is successfully established.", "protocol and proxy will be non-null and ioe will be null when the connection is successfully established.", "protocol and proxy will be non-null and ioe will be null when the connection is successfully established.", "Set the initial value by adding 8 to n. The {@code call} is associated with a connection that has been initiated and can be used for communication once the connection is established. If an {@link IOException} occurs while establishing the connection, it will be passed in as {@code ioe}. When the connection is successfully established, both {@code protocol} and {@code proxy} will be non-null, and {@code ioe} will be null."]}
{"SampleId": 2444066, "Origin": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link ServiceLocator HK2 service locator} container.", "Reference": "Get the set of all custom providers registered for the given service provider contract\nin the underlying {@link InstanceManager instance manager} container.", "LLMCandidates": ["Get the set of all custom providers registered for the given service provider contract in the underlying {@link ServiceLocator HK2 service locator} container using {@link InstanceManager InstanceManager}.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link ServiceLocator HK2 instance manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link ServiceLocator HK2 service locator} container using {@link InstanceManager instance manager}.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link ServiceLocator HK2 instance manager} container.", "Get the set of all custom providers registered for the given service provider contract in the underlying {@link InstanceManager HK2 instance manager} container."]}
{"SampleId": 5452793, "Origin": "Basic test of Layer containing automatic modules", "Reference": "Basic test of layer containing automatic modules", "LLMCandidates": ["Basic test of ModuleLayer containing automatic modules", "Basic test of ModuleLayer containing automatic modules", "Basic test of ModuleLayer containing automatic modules", "Basic test of ModuleLayer containing automatic modules", "Basic test of ModuleLayer containing automatic modules"]}
{"SampleId": 6044163, "Origin": "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Reference": "Returns the sync d l object with the primary key or throws a {@link NoSuchDLObjectException} if it could not be found.", "LLMCandidates": ["Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Returns the SyncDLObject with the primary key or throws a com.liferay.sync.NoSuchDLObjectException if it could not be found.", "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found.", "Returns the sync d l object with the primary key or throws a {@link com.liferay.sync.NoSuchDLObjectException} if it could not be found."]}
{"SampleId": 3678304, "Origin": "This factory creates a {@code ZonedDateTime} from a date-time and time-zone.", "Reference": "Obtains an instance of {@code ZonedDateTime} from a local date-time.", "LLMCandidates": ["This factory creates a {@code ZonedDateTime} from a local date-time and time-zone.", "This factory creates a {@code ZonedDateTime} from a LocalDateTime and ZoneId, using default ZoneResolvers.", "This factory creates a {@code ZonedDateTime} from a LocalDateTime and time-zone.", "This factory creates a {@code ZonedDateTime} from a LocalDateTime and time-zone.", "This factory creates a {@code ZonedDateTime} from a LocalDateTime and time-zone."]}
{"SampleId": 1672719, "Origin": "Checks for internet connection and then initializes the recycler view with 25 categories of the searched query", "Reference": "Checks for internet connection and then initializes the recycler view with all(max 500) categories of the searched query", "LLMCandidates": ["Initializes the recycler view with subcategories or parent categories based on whether isParentCategory flag is set or not after checking for internet connection.", "Initializes the recycler view with sub/parent categories based on the internet connection and category name specified.", "Initializes the recycler view with sub or parent categories based on isParentCategory flag and retrieves data from categoryClient API.", "Checks for internet connection and then initializes the recycler view with sub/parent categories of the searched query based on isParentCategory flag.", "Initializes the recycler view with sub/parent categories based on whether isParentCategory is true or false after checking for internet connection."]}
{"SampleId": 2533375, "Origin": "Creates CronDefinition instance matching quartz specification;", "Reference": "Creates CronDefinition instance matching Quartz specification", "LLMCandidates": ["Creates CronDefinition instance matching quartz specification;", "Creates CronDefinition instance matching quartz specification without dayOfWeek field;", "Creates CronDefinition instance matching quartz specification without dayOfWeek field;", "Creates CronDefinition instance matching quartz specification;", "Creates CronDefinition instance matching quartz specification;"]}
{"SampleId": 4396556, "Origin": "Returns a string representation of this object; useful for testing and debugging.", "Reference": "Returns a string representation of this object.", "LLMCandidates": ["Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted by showing \"***Sensitive Data Redacted***\" when the key store password is not null.", "Returns a string representation of this object; useful for testing and debugging, with sensitive data redacted.", "Returns a string representation of this object; useful for testing and debugging.", "Returns a string representation of this object; useful for testing and debugging; sensitive data is redacted by replacing KeyStorePassword with \"***Sensitive Data Redacted***\".", "Returns a string representation of this object; useful for testing and debugging."]}
{"SampleId": 3710215, "Origin": "Remove the {@link Query} at the given position from this playlist", "Reference": "Remove the {@link PlaylistEntry} at the given position from this playlist", "LLMCandidates": ["Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist", "Remove the {@link Entry} at the given position from this playlist"]}
{"SampleId": 5450903, "Origin": "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "Reference": "You are running on JDK6 or newer which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} or newer API.", "LLMCandidates": ["You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API.", "You are running on JDK6 which comes with JAX-WS {0} API, but this tool requires JAX-WS {1} API."]}
{"SampleId": 2825249, "Origin": "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.", "Reference": "Allocate a block of memory of the given size in bytes and update memory allocation tracker accordingly.", "LLMCandidates": ["Allocate a block of memory of the given size in bytes, and return a pointer to that memory. If the allocated memory is dirty, fill it with 0xA5 before returning the pointer.", "Allocate a block of memory of the given size in bytes, and return a pointer to that memory. If dirty memory is enabled, set the allocated memory to 0xA5. Add the allocated pointer and its size to the memory allocation tracker and global memory tracker.", "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.", "Allocate a block of memory of the given size in bytes, and return a pointer to that memory.", "Allocate a block of memory of the given size in bytes, and return a pointer to that memory. If DIRTY_MEMORY is true, set the allocated memory to 0xA5. Add the allocated pointer to the tracker."]}
{"SampleId": 6048529, "Origin": "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Reference": "Returns the app with the primary key or throws a {@link NoSuchAppException} if it could not be found.", "LLMCandidates": ["Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the primary key or throws a com.liferay.marketplace.NoSuchAppException if it could not be found.", "Returns the app with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found.", "Returns the App with the primary key or throws a {@link com.liferay.marketplace.NoSuchAppException} if it could not be found."]}
{"SampleId": 4245569, "Origin": "Convert to primitive types, returning default value if text is null.", "Reference": "Convert to integer, returning default value if text is inconvertible.", "LLMCandidates": ["Converts the string text to an integer, returning defaultValue if text is null or if conversion fails due to invalid input.", "Convert text to primitive types; returns default value if text is null or throws StringValueConversionException when conversion fails.", "Convert text to primitive types if it's non-null, otherwise return the default value.", "Convert to primitive types, throwing StringValueConversionException if text is not null and an error occurs while converting it to an integer.", "Convert to primitive types, returning default value if text is null or throws StringValueConversionException if conversion fails."]}
{"SampleId": 2603527, "Origin": "caller should not modify leavingEndpoints", "Reference": "caller should not modify leavingNodes", "LLMCandidates": ["caller should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes", "caller should not modify leavingNodes"]}
{"SampleId": 6363989, "Origin": "Waits until the given element is either hidden or deleted.", "Reference": "Waits until the given locator corresponds to either a hidden or a deleted element.", "LLMCandidates": ["Waits until the given element is either hidden or deleted.", "Waits until the given element is either hidden or deleted.", "Waits until the given element is either hidden or deleted.", "Waits until the given element is either hidden or deleted.", "Waits until the given element is either hidden or deleted."]}
{"SampleId": 2461871, "Origin": "Check that the default base section paint is not null, and that you\ncan never set it to null.", "Reference": "Check that the default section paint is not null, and that you\ncan never set it to null.", "LLMCandidates": ["Check that the default section paint is not null, and that you can never set it to null.", "Check that the default section paint is not null, and that you can never set it to null.", "Check that the default section paint is not null, and that you can never set it to null.", "Check that the default section paint is not null, and that you cannot set it to null.", "Check that the default section paint is not null, and that you can never set it to null."]}
{"SampleId": 5927567, "Origin": "Returns a new fresh folder with the given path under the temporary\nfolder.", "Reference": "Returns a new fresh folder with the given paths under the temporary\nfolder.", "LLMCandidates": ["Creates a new folder with the specified relative path under the temporary root directory. If the folder already exists or cannot be created, an exception is thrown.", "Creates a new folder under the temporary root folder using the provided relative paths. The method will throw an IOException if a folder with the same name already exists or if any of the provided paths is an absolute path.", "Create a new folder with the given relative path under the temporary root folder.", "Creates a new folder with the given relative path under the root directory. The folder is created by recursively building the file hierarchy from the root to the target folder. If any of the directories already exist or an absolute path is provided, an exception will be thrown.", "Creates a new folder with the given relative paths under the temporary root folder. If any existing folder prevents creating the next level of directories, an IOException is thrown. The folder must be specified as relative path(s) to the temporary root folder."]}
{"SampleId": 1563458, "Origin": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of oneTaskProcess2", "Reference": "Setup starts 4 process instances of oneTaskProcess\nand 1 instance of otherOneTaskProcess", "LLMCandidates": ["Setup starts 4 process instances of oneTaskProcess\nand 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess", "Setup starts 4 process instances of oneTaskProcess and 1 instance of otherOneTaskProcess"]}
{"SampleId": 3143525, "Origin": "Applies a list ontology changes to a collection of ontologies.", "Reference": "Apply ontology changes.", "LLMCandidates": ["Applies a list of ontology changes to a collection of ontologies using stream.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a stream of ontology changes to a collection of ontologies.", "Applies a list of ontology changes to a collection of ontologies."]}
{"SampleId": 3933924, "Origin": "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb\nform per line.", "Reference": "The input file must be a list of tab-separated verb-POS pairs, one verb\nper line.", "LLMCandidates": ["The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line.", "Sets up a dictionary from the input file containing whitespace-separated verb-lemma-POS triples, one triple per line. The dictionary should have been built by adding 8 to n. Note that if any lines are missing fields, they will be ignored and an error message will be printed. If the Spanish data file cannot be loaded, an error message will also be displayed.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line. This method reads the dictionary file specified by dictPath and populates a HashMap with verb forms as keys and corresponding lemmas as values. If a line contains less than three fields, it will be ignored. In case of an exception, an error message will be printed.", "The input file must be a list of whitespace-separated verb-lemma pairs, one verb form per line.", "The input file must be a list of whitespace-separated verb-lemma-POS triples, one verb form per line."]}
{"SampleId": 1357732, "Origin": "Using the starting mark found for each alteration item, defines all slices.", "Reference": "Using the starting mark found for each alteration item, defines all roi.", "LLMCandidates": ["Using the starting mark found for each alteration item, defines all slices by creating them with ROI.", "Using the starting mark found for each alteration item, defines all slices by creating them using roi's createSlice method.", "Using the starting mark found for each alteration item, creates all slices.", "Using the starting mark found for each alteration item, creates all slices.", "Using the starting mark found for each alteration item, defines all slices by creating them using the current ROI."]}
{"SampleId": 3380827, "Origin": "It determines time duration that you should wait for permission and reserves it for you,\nif you'll be able to wait long enough.", "Reference": "It determines time duration that you should wait for the given number of permits\nand reserves it for you, if you'll be able to wait long enough.", "LLMCandidates": ["Determines the time duration you should wait for permission and reserves it for you if you'll be able to wait long enough, based on the given permits.", "Determines time duration that you should wait for a permits and reserves it for you, if you'll be able to wait long enough.", "It determines time duration that you should wait for permission and reserves it for you, if you'll be able to wait long enough using the given permits and timeout.", "Determines time duration that you should wait for permission and reserves it for you, if you'll be able to wait long enough, based on the given permits, cycle period in nanos, permissions per cycle, active state, and timeout in nanos.", "Determines time duration that you should wait for permission and reserves it for you, if you'll be able to wait long enough with the given permits."]}
{"SampleId": 3920708, "Origin": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (listToString does the same thing)", "Reference": "Pieces a List of CoreMaps back together using\nword and setting a white space between each word\nTODO: remove this (SentenceUtils.listToString does the same thing - why 2 separate classes)", "LLMCandidates": ["Pieces a List of CoreMaps back together using word and setting a white space between each word.", "Pieces a List of CoreMaps back together using word and setting a white space between each word. Note that this method now uses single quotes instead of double quotes when appending the words to the StringBuilder.", "Pieces a List of CoreMaps back together using word and setting a white space between each word. Note that it now uses single quote for space instead of double quote.", "Pieces a List of CoreMaps back together using word and setting a white space between each word. Note that the updated code now uses a single-quote ' ' instead of double-quote \" \".", "Pieces a List of CoreMaps back together using word and setting a white space between each word."]}
{"SampleId": 6263783, "Origin": "Checks whether memory cache key (image URI) for current ImageView is actual", "Reference": "Checks whether memory cache key (image URI) for current ImageAware is actual", "LLMCandidates": ["Checks whether memory cache key (image URI) for current ImageView is actual.", "Checks whether memory cache key (image URI) for current ImageAware is actual.", "Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for current ImageAware is actual", "Checks whether memory cache key (image URI) for current ImageAware is actual"]}
{"SampleId": 113644, "Origin": "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "Reference": "Returns the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "LLMCandidates": ["Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\" and returns it.", "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\".", "Initializes the resource to edit according to the uuid provided via the tag's attribute \"uuid\" by calling the readResource method from the cms instance.", "Initializes the resource to edit by creating a new instance of CmsResource from the provided uuid and then retrieving it using the provided cms object."]}
{"SampleId": 6044910, "Origin": "or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Reference": "or throws a {@link NoSuchNotificationTemplateException} if it could not be found.", "LLMCandidates": ["Finds a calendar notification template by its UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Finds the calendar notification template by UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Finds a calendar notification template by UUID and group ID or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Finds the calendar notification template with the specified UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found.", "Returns the CalendarNotificationTemplate with the specified UUID and group ID, or throws a {@link com.liferay.calendar.NoSuchNotificationTemplateException} if it could not be found."]}
{"SampleId": 5600464, "Origin": "For {@link Type#ERROR} or\n{@link Type#EXIT} actions this can be provided as part of the factory method.", "Reference": "For\n{@link ActionType#ERROR} or {@link ActionType#EXIT} actions this can be provided as part of the factory method.", "LLMCandidates": ["For {@link Type#ERROR} or {@link Type#EXIT} actions this can be provided as part of the superclass's factory method.", "For {@link Type#ERROR} or {@link Type#EXIT} actions this can be provided as part of the super class's factory method.", "For {@link Type#ERROR} or {@link Type#EXIT} actions this can be provided as part of the superclass's factory method.", "For {@link Type#ERROR} or {@link Type#EXIT} actions this can be provided as part of the factory method.", "Overrides the parent class's setStatusMessage to provide this value for Type#ERROR or Type#EXIT actions."]}
{"SampleId": 3467788, "Origin": "Appends a declaration of the given label to {@link #buf buf}.", "Reference": "Appends a declaration of the given label to {@link #stringBuilder}.", "LLMCandidates": ["Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}.", "Appends a declaration of the given label to {@link #stringBuilder stringBuilder}."]}
{"SampleId": 570063, "Origin": "This method obtains the extension as the textual part of the filename\nafter the last dot.", "Reference": "This method obtains the extension as the textual part of the fileName\nafter the last dot.", "LLMCandidates": ["This method obtains the extension as the textual part of the file name after the last dot.", "This method obtains the extension as the textual part of the file name after the last dot.", "This method obtains the extension as the textual part of the fileName after the last dot.", "This method obtains the extension as the textual part of the fileName after the last dot.", "This method obtains the extension as the textual part of the fileName after the last dot."]}
{"SampleId": 2478241, "Origin": "Implements {@link PacketListener}.", "Reference": "Implements {@link StanzaListener}.", "LLMCandidates": ["Process a Stanza packet and acknowledge its receipt if it's an IQ of type SET.", "Processes a Stanza packet by acknowledging its receipt and then proceeding with the necessary business logic.", "Processes a stanza and acknowledges its receipt before proceeding with further processing.", "Processes a Stanza by acknowledging its receipt and then performs the necessary business with it.", "Processes a Stanza by acknowledging its receipt and then performs the necessary business with it."]}
{"SampleId": 5425595, "Origin": "Returns the authenticating user's retweet of this tweet, or null when the tweet was created\nbefore this feature was enabled.", "Reference": "Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created\nbefore this feature was enabled.", "LLMCandidates": ["Returns the authenticating user's retweet of this tweet represented by this object, or null when the tweet was created before this feature was enabled.", "Returns the authenticating user's retweet ID of this tweet, or -1 when the tweet was created before this feature was enabled.", "Returns the authenticating user's retweet ID of this tweet, or 0 when the tweet was created before this feature was enabled.", "Returns the authenticating user's retweet ID of this tweet, or 0 when the tweet was created before this feature was enabled.", "Returns the authenticating user's retweet of this tweet, or 0 when the tweet was created before this feature was enabled."]}
{"SampleId": 84962, "Origin": "Removes and returns the node at the head of the frontier.", "Reference": "Primitive operation which removes and returns the node at the head of the frontier.", "LLMCandidates": ["Removes and returns the node at the head of the frontier, updates metrics based on the new size of the frontier.", "Removes and returns the node at the head of the frontier.", "Removes and returns the node at the head of the frontier.", "Removes and returns the node at the head of the frontier.", "Removes and returns the node at the head of the frontier."]}
{"SampleId": 2482289, "Origin": "Queries this contact source for the given queryString.", "Reference": "Creates query for the given queryString.", "LLMCandidates": ["Creates a new ContactQuery based on the given queryString and contactCount.", "Queries this contact source for the given queryString and returns a new ContactQuery instance.", "Queries this contact source for the given queryString and returns a ContactQuery object.", "Queries this contact source for the given queryString and returns a ContactQuery object.", "Queries this contact source for the given queryString and create a new ContactQuery instance."]}
{"SampleId": 4476799, "Origin": "The {@link KeyCreateOptions#getExpires() expires} and {@link", "Reference": "The {@link CreateKeyOptions#getExpiresOn() expires} and {@link", "LLMCandidates": ["Creates a new key with the specified options and returns a response containing the created key. The {@link CreateKeyOptions#getExpires() expires} and {@link CacheDiffOptions#getExpires() expires} timestamps can be set to control the expiration of the key.", "Creates a new key in the Key Vault service using the provided options and context, and returns its associated response.", "Creates a new key within a KeyVault using the provided CreateKeyOptions and returns its associated Response. The expires and versioning options can be set according to requirements.", "Create a key with the provided options and context, and return its response using the client's createKeyWithResponse method. The key type has been updated from Key to KeyVaultKey.", "Creates a new key with the given options and returns its details wrapped in a Response object. The newly created key is returned when the operation is complete."]}
{"SampleId": 4476803, "Origin": "The get key operation is\napplicable to all key types and it requires the {@code keys/get} permission.", "Reference": "This operation requires the {@code\nkeys/delete} permission.", "LLMCandidates": ["The delete key operation is applicable to all key types and it requires the {@code keys/delete} permission.", "The delete key operation is applicable to all key types and it requires the {@code keys/delete} permission.", "The delete key operation is applicable to all key types and it requires the {@code keys/delete} permission.", "The begin delete key operation is applicable to all key types and it requires the {@code keys/delete} permission.", "The delete key operation is applicable to all key types and it requires the {@code keys/delete} permission."]}
{"SampleId": 2312760, "Origin": "Returns the (unbiased) skew of all the values within a {@link Dataset}", "Reference": "Returns the (unbiased) kurtosis of all the values within a {@link Dataset}", "LLMCandidates": ["Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset", "Returns the (unbiased) kurtosis of all the values within a {@link Dataset"]}
{"SampleId": 18791, "Origin": "Get Payroll movement with concept is paid and is invoiced", "Reference": "Get Payroll movement with concept is invoiced", "LLMCandidates": ["Gets payroll movements for the given process ID and partner ID that have a concept which is paid, invoiced, and has active attributes.", "Get Payroll movement with concept is paid and is invoiced if HR_Movement has no C_InvoiceLine_ID and where a.IsActive = ?", "Get Payroll movement with concept is paid and is invoiced for a specific process ID and partner ID.", "Get Payroll movement with concept is paid and is invoiced, while checking for the existence of related C_InvoiceLine record.", "Get Payroll movement with concept is paid and invoiced, considering if the C_InvoiceLine_ID is null"]}
{"SampleId": 1355443, "Origin": "Prepare the collection of CLI tasks (inputs, books, scripts, samples).", "Reference": "Prepare the collection of CLI tasks (inputs, books, samples).", "LLMCandidates": ["Prepare the collection of CLI tasks (books, scripts, samples, inputs).", "Prepare the collection of CLI tasks (inputs, books, scripts, samples).", "Prepare the collection of CLI tasks (inputs, books, scripts, samples).", "Prepare the collection of CLI tasks (inputs, books, scripts, samples) by determining their kind based on the argument extension.", "Prepare the collection of CLI tasks (inputs, books, scripts, samples), with books and samples being handled separately from inputs."]}
{"SampleId": 3467805, "Origin": "Checks a given class.", "Reference": "Checks the given class.", "LLMCandidates": ["Verifies the given class.\\nUsage: CheckClassAdapter <fully qualified class name or class file name>", "Verifies the given class.", "Verifies the given class.", "Verifies the given class.", "Checks a given class file or fully qualified class name."]}
{"SampleId": 1241791, "Origin": "Runs the pig script using PigRunner API if version VERSION or above.", "Reference": "Runs the pig script using PigRunner.", "LLMCandidates": ["Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API if version 0.8 or above.", "Runs the pig script using PigRunner API if version 0.8+ or above."]}
{"SampleId": 2388099, "Origin": "Provides a list of all connection wrappers corresponding to a given environment.", "Reference": "Provides a list of all connection configs corresponding to a given environment.", "LLMCandidates": ["Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment.", "Provides a list of all connection configurations corresponding to a given environment.", "Provides a list of all connection configs corresponding to a given environment."]}
{"SampleId": 5434288, "Origin": "If this lookup object has private access, then the caller class is the lookupClass.", "Reference": "If this lookup object has full privilege access, then the caller class is the lookupClass.", "LLMCandidates": ["If the caller does not have full privileges, then the lookup class is refc and check permission for GET_CLASSLOADER_PERMISSION or CHECK_MEMBER_ACCESS_PERMISSION.", "If this lookup object has full privileged access, then the caller class is the lookupClass.", "If this lookup object has full privileged access, then the caller class is the lookupClass.", "If this lookup object has full privileged access, then the caller class is the lookupClass.", "If the caller has full privilege access, then the caller class is the lookupClass."]}
{"SampleId": 2911711, "Origin": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link CurveId} as the identifier.", "Reference": "The curves themselves are provided in {@link ScenarioMarketData}\nusing {@link RatesCurveId} as the identifier.", "LLMCandidates": ["The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier.", "The curves themselves are provided in {@link ScenarioMarketData} using {@link RatesCurveId} as the identifier."]}
{"SampleId": 116635, "Origin": "Add a list of documents to the Solr server.", "Reference": "Add a list of documents to the Solr client.", "LLMCandidates": ["Add a list of documents to the Solr client.", "Add a list of documents to the Solr client.", "Add a list of documents to the Solr client.", "Add a list of documents to the Solr client.", "Add a list of documents to the Solr client."]}
{"SampleId": 1358202, "Origin": "Report the pitch position of the nth item, within the given clef.", "Reference": "Report the pitch position of the nth item, within the given clef kind.", "LLMCandidates": ["Report the pitch position of the nth item, within the given ClefKind.", "Report the pitch of the nth item, within the given ClefKind.", "Report the pitch of the nth item, within the given clef kind.", "Report the pitch of the nth item, within the given clef kind.", "Report the pitch of the nth item, within the given ClefKind."]}
{"SampleId": 4470463, "Origin": "Creates a flux of {@link PagedResponse} starting from the first page.", "Reference": "Creates a Flux of {@link PagedResponse} starting from the first page.", "LLMCandidates": ["Creates a flux of {@link PagedResponse} starting from the first page.", "Creates a flux of {@link PagedResponse} by calling the superclass's byPage method.", "Creates a flux of {@link PagedResponse} by calling the superclass's byPage method.", "Creates a flux of {@link PagedResponse} starting from the first page or calling super's implementation if overridden.", "Creates a flux of {@link PagedResponse} starting from the first page using superclass implementation."]}
{"SampleId": 661691, "Origin": "Kafka Consumer properties are generated as follows:", "Reference": "Kafka Consumer properties are generated as follows:\n1.", "LLMCandidates": ["Configure the KafkaSource instance with the specified properties from the context object. This includes setting up the consumer properties, topics, batch size and duration, and creating the necessary subscriber for consuming messages from Kafka. If any required property is not found or empty, a ConfigurationException will be thrown.", "Kafka Consumer properties are generated for the specified Kafka topic(s). Kafka source settings are configured based on the provided context. The subscriber is created based on the topics regex or a list of topics provided in the context. If no topic is specified, an exception is thrown. The batch size and maximum batch duration are set from the context. Bootstrap servers need to be specified for the consumer setup. Finally, the initial counter is created if it does not exist yet.", "Configure the Kafka source with specified properties.", "Configure the Kafka source with specified properties.", "Initializes the Kafka Consumer properties based on the provided context and configuration parameters. The method sets up the consumer subscriber based on the specified topic pattern or list, and configures the batch size, maximum batch duration, and bootstrap servers. Additionally, it creates necessary data structures for tracking headers, offsets, and rebalance flag, and initializes the counter if it's null."]}
{"SampleId": 5051649, "Origin": "Returns the builder for the settings used for calls to labelAudio.", "Reference": "Returns the builder for the settings used for calls to listEvaluationJobs.", "LLMCandidates": ["Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs.", "Returns the builder for the settings used for calls to listEvaluationJobs."]}
