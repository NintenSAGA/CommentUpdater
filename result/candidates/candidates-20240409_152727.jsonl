{"SampleId": 5075805, "Origin": "Save basic clusters.", "Reference": "Save cluster basic configuration.", "LLMCandidates": ["Save cluster basic configuration.", "Save basic cluster configurations.", "Save basic cluster configurations.", "Save basic cluster configurations.", "Save basic cluster configuration."]}
{"SampleId": 668963, "Origin": "Configure a sslConfig for the server using the legacy configuration", "Reference": "Configure a SSLConfig.Builder for the server using the legacy configuration", "LLMCandidates": ["Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a sslConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration", "Configure a SSLConfig.Builder for the server using the legacy configuration"]}
{"SampleId": 5425047, "Origin": "If the wrapping fails,\nthen null is returned.", "Reference": "If wrapping fails, returns null.", "LLMCandidates": ["Wraps a given object into appropriate JSON representation. If the wrapping fails, then null is returned.", "Wraps an object if it is a JSONArray or JSONObject. If wrapping fails, returns null.", "Wraps an object into a JSONArray or JSONObject if it's either of those types. Returns the input if it is null or of a basic type (Boolean, Byte, Character, Double, Float, Integer, Long, Short, String). Returns the input as a string if it's from the java package or its class package starts with \"java.\" or \"javax.\" and the class loader is null. If wrapping fails for any other reason, returns null.", "Wraps the given object into a JSON format or returns it as is if it's already a JSONArray or JSONObject. If wrapping fails or object is null, null is returned.", "If wrapping fails, then null is returned."]}
{"SampleId": 2217833, "Origin": "Test of npara method, of class GeometricDistribution.", "Reference": "Test of length method, of class GeometricDistribution.", "LLMCandidates": ["Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution.", "Test of length method, of class GeometricDistribution."]}
{"SampleId": 4708521, "Origin": "Bui (2015) \"Cachediff: Fast Random Sampling\" URL", "Reference": "Bui (2015) \"CacheDiff: Fast Random Sampling\" URL", "LLMCandidates": ["This method generates a sparse sample of size n from an array of size N using Fisher-Yates shuffle algorithm. It takes three parameters - an integer n (1 <= n <= N), an integer N (n < N), and a Random object r, and returns an int array vals of size n containing the indices of the selected points from the original array. If any argument is invalid, IllegalArgumentException will be thrown.", "This implementation performs a partial Fisher-Yates shuffle on an array of N elements and returns an array of n randomly selected indices from the original array. The method takes three arguments: n (the number of selected indices), N (the total number of elements in the input array), and a Random instance to generate random numbers. If n is greater than N or n or N are negative, IllegalArgumentException will be thrown.", "Generates a sparse sample of n points from a population of N points using the Fisher-Yates shuffle algorithm and stores them in an array. This method takes an integer n representing the number of points to be selected from the population, an integer N representing the total number of points in the population, and a Random object r. It throws an IllegalArgumentException if n or N is negative or n > N.", "Draws n random points from a set of N points using partial Fisher-Yates shuffle and keeps track of what has been moved using a HashMap.", "Draws n random points from an array of N points using Fisher-Yates shuffle algorithm, ensuring that no index is selected more than once."]}
{"SampleId": 339279, "Origin": "If it's successfully completed, {@link BrowserResult#getMediaItems()} will return the search\nresult.", "Reference": "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search\nresult.", "LLMCandidates": ["If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result.", "If it's successfully completed, {@link LibraryResult#getMediaItems()} will return the search result."]}
{"SampleId": 5629914, "Origin": "Sets the options.", "Reference": "Set the options.", "LLMCandidates": ["Sets the options for builder.", "Sets the options for the builder and returns this instance.", "Sets the options for the builder.", "Sets the options for the builder.", "Sets the options for the builder."]}
{"SampleId": 2996629, "Origin": "Convenience method to get custom install file", "Reference": "Convenience method to get custom installation script", "LLMCandidates": ["Gets the installation script properties based on whether the file exists or not, loading it from either an absolute file path or the classpath.", "Retrieves installation properties based on the existence of the file, either from classpath or absolute path.", "Retrieves the installation script file based on the system property or classpath resource.", "Retrieves the installation script file based on the system property or classpath resource.", "Retrieves installation script properties based on whether it exists as an absolute path or a classpath resource"]}
{"SampleId": 5629994, "Origin": "Sets the confidence.", "Reference": "Set the confidence.", "LLMCandidates": ["Sets the confidence using a builder pattern.", "Sets the confidence within a Builder pattern.", "Sets the confidence value for Builder.", "Sets the confidence value for Builder.", "Sets the confidence value for Builder."]}
{"SampleId": 3992375, "Origin": "Request an update of the current cluster metadata info, return the current version before the update", "Reference": "Request an update of the current cluster metadata info, return the current updateVersion before the update", "LLMCandidates": ["Request an update of the current cluster metadata info, return the updated version number", "Request an update of the current cluster metadata info, return the updated version after the update", "Request an update of the current cluster metadata info, return the updated version after the update", "Request an update of the current cluster metadata info, return the updated version after the update", "Request an update of the current cluster metadata info, return the updated version after the update"]}
